!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	tools/trackgen/easymesh.cpp	55;"	d	file:
ABS	drivers/human/human.h	/^	tdble	ABS;$/;"	m	struct:HumanContext
ABS_MINSPEED	drivers/bt/driver.cpp	/^const float Driver::ABS_MINSPEED = 3.0f;					\/\/ [m\/s] Below this speed the ABS is disabled (numeric, division by small numbers).$/;"	m	class:Driver	file:
ABS_MINSPEED	drivers/bt/driver.h	/^		static const float ABS_MINSPEED;$/;"	m	class:Driver
ABS_MINSPEED	drivers/damned/driver.cpp	/^const float Driver::ABS_MINSPEED = 3.0f;					\/\/ [m\/s] Below this speed the ABS is disabled (numeric, division by small numbers).$/;"	m	class:Driver	file:
ABS_MINSPEED	drivers/damned/driver.h	/^		static const float ABS_MINSPEED;$/;"	m	class:Driver
ABS_MINSPEED	drivers/olethros/driver.cpp	/^    const float Driver::ABS_MINSPEED = 3.0f;						\/\/\/< [m\/s] Below this speed the ABS is disabled (numeric, division by small numbers).$/;"	m	class:olethros::Driver	file:
ABS_MINSPEED	drivers/olethros/driver.h	/^	static const float ABS_MINSPEED;$/;"	m	class:olethros::Driver
ABS_MINSPEED	drivers/sparkle/driver.cpp	/^const float Driver::ABS_MINSPEED = 3.0;						\/* [m\/s] *\/$/;"	m	class:Driver	file:
ABS_MINSPEED	drivers/sparkle/driver.h	/^		static const float ABS_MINSPEED;$/;"	m	class:Driver
ABS_RANGE	drivers/bt/driver.cpp	/^const float Driver::ABS_RANGE = 5.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
ABS_RANGE	drivers/bt/driver.h	/^		static const float ABS_RANGE ;$/;"	m	class:Driver
ABS_RANGE	drivers/damned/driver.cpp	/^const float Driver::ABS_RANGE = 5.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
ABS_RANGE	drivers/damned/driver.h	/^		static const float ABS_RANGE ;$/;"	m	class:Driver
ABS_RANGE	drivers/olethros/driver.cpp	/^    const float Driver::ABS_RANGE = 5.0f;						\/\/\/< [m\/s] range [0..10]$/;"	m	class:olethros::Driver	file:
ABS_RANGE	drivers/olethros/driver.h	/^	static const float ABS_RANGE ;$/;"	m	class:olethros::Driver
ABS_SLIP	drivers/bt/driver.cpp	/^const float Driver::ABS_SLIP = 2.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
ABS_SLIP	drivers/bt/driver.h	/^		static const float ABS_SLIP;$/;"	m	class:Driver
ABS_SLIP	drivers/damned/driver.cpp	/^const float Driver::ABS_SLIP = 2.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
ABS_SLIP	drivers/damned/driver.h	/^		static const float ABS_SLIP;$/;"	m	class:Driver
ABS_SLIP	drivers/olethros/driver.cpp	/^    const float Driver::ABS_SLIP = 2.0f;							\/\/\/< [m\/s] range [0..10]$/;"	m	class:olethros::Driver	file:
ABS_SLIP	drivers/olethros/driver.h	/^	static const float ABS_SLIP;$/;"	m	class:olethros::Driver
ABS_SLIP	drivers/sparkle/driver.cpp	/^const float Driver::ABS_SLIP = 0.9;							\/* [-] range [0.95..0.3] *\/$/;"	m	class:Driver	file:
ABS_SLIP	drivers/sparkle/driver.h	/^		static const float ABS_SLIP;$/;"	m	class:Driver
AC3D	tools/accc/ac3dload.cpp	38;"	d	file:
ACC	yunseok/tcp_client.cpp	/^	ACC, LKAS, TARGET_SPEED$/;"	e	enum:data	file:
ACC	yunseok/tcp_client_2.cpp	/^	ACC, LKAS, TARGET_SPEED$/;"	e	enum:data	file:
ACCEL	drivers/data_list.h	/^enum actuating_data_name{ACCEL, BRAKE, LEFT_STEER, RIGHT_STEER, STEER_MODE, NUM_DUMMY};$/;"	e	enum:actuating_data_name
ACCELERATOR_LETGO_TIME	drivers/olethros/driver.cpp	/^    const float Driver::ACCELERATOR_LETGO_TIME = 0.1f;           \/\/\/< [s] Time to let go of accelerator before braking.$/;"	m	class:olethros::Driver	file:
ACCELERATOR_LETGO_TIME	drivers/olethros/driver.h	/^	static const float ACCELERATOR_LETGO_TIME;$/;"	m	class:olethros::Driver
ACCELINC	drivers/berniw/mycar.h	/^		double ACCELINC;								\/* increment\/decrement for acceleration [-] *\/$/;"	m	class:MyCar
ACCELINC	drivers/berniw2/mycar.h	/^		double ACCELINC;								\/* increment\/decrement for acceleration [-] *\/$/;"	m	class:MyCar
ACCELINC	drivers/berniw3/mycar.h	/^		double ACCELINC;								\/* increment\/decrement for acceleration [-] *\/$/;"	m	class:MyCar
ACCELINC	drivers/human/mycar.h	/^		double ACCELINC;								\/* increment\/decrement for acceleration [-] *\/$/;"	m	class:MyCar
ACCELINC	drivers/inferno/mycar.h	/^		double ACCELINC;								\/\/ Increment\/decrement for acceleration [-].$/;"	m	class:MyCar
ACCELINC	drivers/lliaw/mycar.h	/^		double ACCELINC;								\/\/ Increment\/decrement for acceleration [-].$/;"	m	class:MyCar
ACCELINC	drivers/tita/mycar.h	/^		double ACCELINC;								\/\/ Increment\/decrement for acceleration [-].$/;"	m	class:MyCar
ACCELLIMIT	drivers/berniw/mycar.h	/^		double ACCELLIMIT;								\/* maximal allowed acceleration *\/$/;"	m	class:MyCar
ACCELLIMIT	drivers/berniw2/mycar.h	/^		double ACCELLIMIT;								\/* maximal allowed acceleration *\/$/;"	m	class:MyCar
ACCELLIMIT	drivers/berniw3/mycar.h	/^		double ACCELLIMIT;								\/* maximal allowed acceleration *\/$/;"	m	class:MyCar
ACCELLIMIT	drivers/human/mycar.h	/^		double ACCELLIMIT;								\/* maximal allowed acceleration *\/$/;"	m	class:MyCar
ACCELLIMIT	drivers/inferno/mycar.h	/^		double ACCELLIMIT;								\/\/ Maximal allowed acceleration.$/;"	m	class:MyCar
ACCELLIMIT	drivers/lliaw/mycar.h	/^		double ACCELLIMIT;								\/\/ Maximal allowed acceleration.$/;"	m	class:MyCar
ACCELLIMIT	drivers/tita/mycar.h	/^		double ACCELLIMIT;								\/\/ Maximal allowed acceleration.$/;"	m	class:MyCar
ACCEL_VALUE	drivers/data_list.h	/^enum sensing_data_name{CC_TRIGGER, 	LKAS_TRIGGER, 		SPEED, 		TARGET_SPEED, 		ACCEL_VALUE, $/;"	e	enum:sensing_data_name
ACTIVE_BP_FILTER	modules/graphic/ssggraph/sound_defines.h	18;"	d
ACTIVE_DISTORT_FILTER	modules/graphic/ssggraph/sound_defines.h	19;"	d
ACTIVE_HP_FILTER	modules/graphic/ssggraph/sound_defines.h	17;"	d
ACTIVE_LP_FILTER	modules/graphic/ssggraph/sound_defines.h	16;"	d
ACTIVE_PITCH	modules/graphic/ssggraph/sound_defines.h	15;"	d
ACTIVE_VOLUME	modules/graphic/ssggraph/sound_defines.h	14;"	d
ADD_POINT	tools/trackgen/easymesh.cpp	1912;"	d	file:
ADVANCE	drivers/inferno2/inferno2.cpp	225;"	d	file:
ADVANCE2	drivers/inferno2/inferno2.cpp	226;"	d	file:
ADVSTEP	drivers/inferno2/inferno2.cpp	227;"	d	file:
AEROMAGIC	drivers/berniw/mycar.h	/^		double AEROMAGIC;								\/* aerodynamic lift factor [-] *\/$/;"	m	class:MyCar
AEROMAGIC	drivers/berniw2/mycar.h	/^		double AEROMAGIC;								\/* aerodynamic lift factor [-] *\/$/;"	m	class:MyCar
AEROMAGIC	drivers/berniw3/mycar.h	/^		double AEROMAGIC;								\/* aerodynamic lift factor [-] *\/$/;"	m	class:MyCar
AEROMAGIC	drivers/human/mycar.h	/^		double AEROMAGIC;								\/* aerodynamic lift factor [-] *\/$/;"	m	class:MyCar
AEROMAGIC	drivers/inferno/mycar.h	/^		double AEROMAGIC;								\/\/ Aerodynamic lift factor [-].$/;"	m	class:MyCar
AEROMAGIC	drivers/lliaw/mycar.h	/^		double AEROMAGIC;								\/\/ Aerodynamic lift factor [-].$/;"	m	class:MyCar
AEROMAGIC	drivers/tita/mycar.h	/^		double AEROMAGIC;								\/\/ Aerodynamic lift factor [-].$/;"	m	class:MyCar
AFFINE	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    AFFINE = TRANSLATION | LINEAR$/;"	e	enum:Transform::__anon14
AGAIN	drivers/inferno2/inferno2.cpp	223;"	d	file:
AGain	drivers/inferno2/inferno2.cpp	/^static tdble AGain[10]     = {0.008f};$/;"	v	file:
AHEAD	drivers/berniw/pathfinder.h	48;"	d
AHEAD	drivers/berniw2/pathfinder.h	48;"	d
AHEAD	drivers/berniw3/pathfinder.h	48;"	d
AHEAD	drivers/human/pathfinder.h	48;"	d
AHEAD	drivers/inferno/pathfinder.h	46;"	d
AHEAD	drivers/lliaw/pathfinder.h	46;"	d
AHEAD	drivers/tita/pathfinder.h	46;"	d
AIR_DENSITY	modules/simu/simuv3/aero.h	24;"	d
ALAPI	windows/include/AL/al.h	33;"	d
ALAPI	windows/include/AL/al.h	35;"	d
ALAPI	windows/include/AL/al.h	49;"	d
ALAPIENTRY	windows/include/AL/al.h	37;"	d
ALAPIENTRY	windows/include/AL/al.h	53;"	d
ALCAPI	windows/include/AL/alc.h	18;"	d
ALCAPI	windows/include/AL/alc.h	20;"	d
ALCAPI	windows/include/AL/alc.h	33;"	d
ALCAPIENTRY	windows/include/AL/alc.h	22;"	d
ALCAPIENTRY	windows/include/AL/alc.h	37;"	d
ALC_ALL_ATTRIBUTES	windows/include/AL/alctypes.h	132;"	d
ALC_ATTRIBUTES_SIZE	windows/include/AL/alctypes.h	131;"	d
ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER	windows/include/AL/alctypes.h	138;"	d
ALC_CAPTURE_DEVICE_SPECIFIER	windows/include/AL/alctypes.h	137;"	d
ALC_CAPTURE_SAMPLES	windows/include/AL/alctypes.h	139;"	d
ALC_CONTEXT_H_	windows/include/AL/alc.h	2;"	d
ALC_DEFAULT_DEVICE_SPECIFIER	windows/include/AL/alctypes.h	124;"	d
ALC_DEVICE_SPECIFIER	windows/include/AL/alctypes.h	125;"	d
ALC_EXTENSIONS	windows/include/AL/alctypes.h	126;"	d
ALC_FALSE	windows/include/AL/alctypes.h	55;"	d
ALC_FREQUENCY	windows/include/AL/alctypes.h	63;"	d
ALC_INVALID	windows/include/AL/alctypes.h	52;"	d
ALC_INVALID_CONTEXT	windows/include/AL/alctypes.h	102;"	d
ALC_INVALID_DEVICE	windows/include/AL/alctypes.h	97;"	d
ALC_INVALID_ENUM	windows/include/AL/alctypes.h	107;"	d
ALC_INVALID_VALUE	windows/include/AL/alctypes.h	112;"	d
ALC_MAJOR_VERSION	windows/include/AL/alctypes.h	128;"	d
ALC_MINOR_VERSION	windows/include/AL/alctypes.h	129;"	d
ALC_MONO_SOURCES	windows/include/AL/alctypes.h	78;"	d
ALC_NO_ERROR	windows/include/AL/alctypes.h	92;"	d
ALC_OUT_OF_MEMORY	windows/include/AL/alctypes.h	117;"	d
ALC_REFRESH	windows/include/AL/alctypes.h	68;"	d
ALC_STEREO_SOURCES	windows/include/AL/alctypes.h	83;"	d
ALC_SYNC	windows/include/AL/alctypes.h	73;"	d
ALC_TRUE	windows/include/AL/alctypes.h	58;"	d
ALC_VERSION_0_1	windows/include/AL/alc.h	11;"	d
ALCboolean	windows/include/AL/alctypes.h	/^typedef char ALCboolean;$/;"	t
ALCbyte	windows/include/AL/alctypes.h	/^typedef char ALCbyte;$/;"	t
ALCchar	windows/include/AL/alctypes.h	/^typedef char ALCchar;$/;"	t
ALCcontext	windows/include/AL/alc.h	/^ typedef struct ALCcontext_struct ALCcontext;$/;"	t	typeref:struct:ALCcontext_struct
ALCcontext	windows/include/AL/alctypes.h	/^typedef void ALCcontext;$/;"	t
ALCdevice	windows/include/AL/alc.h	/^ typedef struct ALCdevice_struct ALCdevice;$/;"	t	typeref:struct:ALCdevice_struct
ALCdevice	windows/include/AL/alctypes.h	/^typedef struct _AL_device ALCdevice;$/;"	t	typeref:struct:_AL_device
ALCdouble	windows/include/AL/alctypes.h	/^typedef double ALCdouble;$/;"	t
ALCenum	windows/include/AL/alctypes.h	/^typedef int ALCenum;$/;"	t
ALCfloat	windows/include/AL/alctypes.h	/^typedef float ALCfloat;$/;"	t
ALCint	windows/include/AL/alctypes.h	/^typedef int ALCint;$/;"	t
ALCshort	windows/include/AL/alctypes.h	/^typedef short ALCshort;$/;"	t
ALCsizei	windows/include/AL/alctypes.h	/^typedef unsigned int ALCsizei;$/;"	t
ALCubyte	windows/include/AL/alctypes.h	/^typedef unsigned char ALCubyte;$/;"	t
ALCuint	windows/include/AL/alctypes.h	/^typedef unsigned ALCuint;$/;"	t
ALCushort	windows/include/AL/alctypes.h	/^typedef unsigned short ALCushort;$/;"	t
ALCvoid	windows/include/AL/alctypes.h	/^typedef void ALCvoid;$/;"	t
ALIGN_CENTER	modules/graphic/ssggraph/grboard.cpp	497;"	d	file:
ALIGN_LEFT	modules/graphic/ssggraph/grboard.cpp	498;"	d	file:
ALIGN_RIGHT	modules/graphic/ssggraph/grboard.cpp	499;"	d	file:
ALUTAPI	windows/include/AL/alut.h	20;"	d
ALUTAPI	windows/include/AL/alut.h	32;"	d
ALUTAPIENTRY	windows/include/AL/alut.h	21;"	d
ALUTAPIENTRY	windows/include/AL/alut.h	36;"	d
AL_BITS	windows/include/AL/altypes.h	267;"	d
AL_BUFFER	windows/include/AL/altypes.h	136;"	d
AL_BUFFERS_PROCESSED	windows/include/AL/altypes.h	197;"	d
AL_BUFFERS_QUEUED	windows/include/AL/altypes.h	196;"	d
AL_BYTE_OFFSET	windows/include/AL/altypes.h	204;"	d
AL_CALLBACK	windows/include/AL/al.h	38;"	d
AL_CALLBACK	windows/include/AL/al.h	57;"	d
AL_CALLBACK	windows/include/AL/alut.h	22;"	d
AL_CALLBACK	windows/include/AL/alut.h	40;"	d
AL_CHANNELS	windows/include/AL/altypes.h	268;"	d
AL_CHANNEL_MASK	windows/include/AL/altypes.h	181;"	d
AL_CONE_INNER_ANGLE	windows/include/AL/altypes.h	88;"	d
AL_CONE_OUTER_ANGLE	windows/include/AL/altypes.h	95;"	d
AL_CONE_OUTER_GAIN	windows/include/AL/altypes.h	248;"	d
AL_DATA	windows/include/AL/altypes.h	270;"	d
AL_DIRECTION	windows/include/AL/altypes.h	118;"	d
AL_DISTANCE_MODEL	windows/include/AL/altypes.h	344;"	d
AL_DOPPLER_FACTOR	windows/include/AL/altypes.h	325;"	d
AL_DOPPLER_VELOCITY	windows/include/AL/altypes.h	330;"	d
AL_EXPONENT_DISTANCE	windows/include/AL/altypes.h	349;"	d
AL_EXPONENT_DISTANCE_CLAMPED	windows/include/AL/altypes.h	350;"	d
AL_EXTENSIONS	windows/include/AL/altypes.h	318;"	d
AL_FALSE	windows/include/AL/altypes.h	73;"	d
AL_FORMAT_MONO16	windows/include/AL/altypes.h	219;"	d
AL_FORMAT_MONO8	windows/include/AL/altypes.h	218;"	d
AL_FORMAT_STEREO16	windows/include/AL/altypes.h	221;"	d
AL_FORMAT_STEREO8	windows/include/AL/altypes.h	220;"	d
AL_FREQUENCY	windows/include/AL/altypes.h	266;"	d
AL_GAIN	windows/include/AL/altypes.h	149;"	d
AL_ILLEGAL_COMMAND	windows/include/AL/altypes.h	304;"	d
AL_ILLEGAL_ENUM	windows/include/AL/altypes.h	293;"	d
AL_INITIAL	windows/include/AL/altypes.h	188;"	d
AL_INVALID	windows/include/AL/altypes.h	68;"	d
AL_INVALID_ENUM	windows/include/AL/altypes.h	294;"	d
AL_INVALID_NAME	windows/include/AL/altypes.h	288;"	d
AL_INVALID_OPERATION	windows/include/AL/altypes.h	305;"	d
AL_INVALID_VALUE	windows/include/AL/altypes.h	299;"	d
AL_INVERSE_DISTANCE	windows/include/AL/altypes.h	345;"	d
AL_INVERSE_DISTANCE_CLAMPED	windows/include/AL/altypes.h	346;"	d
AL_LINEAR_DISTANCE	windows/include/AL/altypes.h	347;"	d
AL_LINEAR_DISTANCE_CLAMPED	windows/include/AL/altypes.h	348;"	d
AL_LOOPING	windows/include/AL/altypes.h	129;"	d
AL_MAX_DISTANCE	windows/include/AL/altypes.h	258;"	d
AL_MAX_GAIN	windows/include/AL/altypes.h	167;"	d
AL_MIN_GAIN	windows/include/AL/altypes.h	158;"	d
AL_NONE	windows/include/AL/altypes.h	70;"	d
AL_NO_ERROR	windows/include/AL/altypes.h	283;"	d
AL_ORIENTATION	windows/include/AL/altypes.h	174;"	d
AL_OUT_OF_MEMORY	windows/include/AL/altypes.h	311;"	d
AL_PAUSED	windows/include/AL/altypes.h	190;"	d
AL_PENDING	windows/include/AL/altypes.h	278;"	d
AL_PITCH	windows/include/AL/altypes.h	103;"	d
AL_PLAYING	windows/include/AL/altypes.h	189;"	d
AL_POSITION	windows/include/AL/altypes.h	115;"	d
AL_PROCESSED	windows/include/AL/altypes.h	279;"	d
AL_REFERENCE_DISTANCE	windows/include/AL/altypes.h	231;"	d
AL_RENDERER	windows/include/AL/altypes.h	317;"	d
AL_ROLLOFF_FACTOR	windows/include/AL/altypes.h	239;"	d
AL_SAMPLE_OFFSET	windows/include/AL/altypes.h	203;"	d
AL_SEC_OFFSET	windows/include/AL/altypes.h	202;"	d
AL_SIZE	windows/include/AL/altypes.h	269;"	d
AL_SOURCE_RELATIVE	windows/include/AL/altypes.h	79;"	d
AL_SOURCE_STATE	windows/include/AL/altypes.h	187;"	d
AL_SOURCE_TYPE	windows/include/AL/altypes.h	212;"	d
AL_SPEED_OF_SOUND	windows/include/AL/altypes.h	335;"	d
AL_STATIC	windows/include/AL/altypes.h	213;"	d
AL_STOPPED	windows/include/AL/altypes.h	191;"	d
AL_STREAMING	windows/include/AL/altypes.h	214;"	d
AL_TRUE	windows/include/AL/altypes.h	76;"	d
AL_UNDETERMINED	windows/include/AL/altypes.h	215;"	d
AL_UNUSED	windows/include/AL/altypes.h	277;"	d
AL_VELOCITY	windows/include/AL/altypes.h	121;"	d
AL_VENDOR	windows/include/AL/altypes.h	315;"	d
AL_VERSION	windows/include/AL/altypes.h	316;"	d
ALbitfield	windows/include/AL/altypes.h	/^typedef unsigned int ALbitfield;$/;"	t
ALboolean	windows/include/AL/altypes.h	/^typedef char ALboolean;$/;"	t
ALbyte	windows/include/AL/altypes.h	/^typedef char ALbyte;$/;"	t
ALchar	windows/include/AL/altypes.h	/^typedef char ALchar;$/;"	t
ALclampd	windows/include/AL/altypes.h	/^typedef ALdouble ALclampd;$/;"	t
ALclampf	windows/include/AL/altypes.h	/^typedef ALfloat ALclampf;$/;"	t
ALdouble	windows/include/AL/altypes.h	/^typedef double ALdouble;$/;"	t
ALenum	windows/include/AL/altypes.h	/^typedef int ALenum;$/;"	t
ALfloat	windows/include/AL/altypes.h	/^typedef float ALfloat;$/;"	t
ALint	windows/include/AL/altypes.h	/^typedef int ALint;$/;"	t
ALshort	windows/include/AL/altypes.h	/^typedef short ALshort;$/;"	t
ALsizei	windows/include/AL/altypes.h	/^typedef unsigned int ALsizei;$/;"	t
ALubyte	windows/include/AL/altypes.h	/^typedef unsigned char ALubyte;$/;"	t
ALuint	windows/include/AL/altypes.h	/^typedef unsigned int ALuint;$/;"	t
ALushort	windows/include/AL/altypes.h	/^typedef unsigned short ALushort;$/;"	t
ALvoid	windows/include/AL/altypes.h	/^typedef void ALvoid;$/;"	t
AMARG	drivers/inferno2/inferno2.cpp	506;"	d	file:
ANN	libs/learning/ANN.h	/^} ANN;$/;"	t	typeref:struct:ANN_
ANN_	libs/learning/ANN.h	/^typedef struct ANN_ {$/;"	s
ANN_AddHiddenLayer	libs/learning/ANN.cpp	/^int ANN_AddHiddenLayer(ANN * ann, int n_nodes)$/;"	f
ANN_AddLayer	libs/learning/ANN.cpp	/^Layer *ANN_AddLayer(ANN * ann, int n_inputs, int n_outputs, real * x)$/;"	f
ANN_AddRBFHiddenLayer	libs/learning/ANN.cpp	/^int ANN_AddRBFHiddenLayer(ANN * ann, int n_nodes)$/;"	f
ANN_AddRBFLayer	libs/learning/ANN.cpp	/^Layer *ANN_AddRBFLayer(ANN * ann, int n_inputs, int n_outputs, real * x)$/;"	f
ANN_Backpropagate	libs/learning/ANN.cpp	/^real ANN_Backpropagate(LISTITEM * p, real * d, bool use_eligibility, real TD)$/;"	f
ANN_BatchAdapt	libs/learning/ANN.cpp	/^void ANN_BatchAdapt(ANN * ann)$/;"	f
ANN_CalculateLayerOutputs	libs/learning/ANN.cpp	/^void ANN_CalculateLayerOutputs(Layer * current_layer, bool stochastic)$/;"	f
ANN_DBUG	libs/learning/ANN.cpp	19;"	d	file:
ANN_Delta_Train	libs/learning/ANN.cpp	/^real ANN_Delta_Train(ANN * ann, real* delta, real TD)$/;"	f
ANN_FreeLayer	libs/learning/ANN.cpp	/^void ANN_FreeLayer(Layer * l)$/;"	f
ANN_FreeLayer	libs/learning/ANN.cpp	/^void ANN_FreeLayer(void *l)$/;"	f
ANN_GetError	libs/learning/ANN.cpp	/^real ANN_GetError(ANN * ann)$/;"	f
ANN_GetErrorVector	libs/learning/ANN.cpp	/^real* ANN_GetErrorVector(ANN * ann)$/;"	f
ANN_GetOutput	libs/learning/ANN.cpp	/^real *ANN_GetOutput(ANN * ann)$/;"	f
ANN_H	libs/learning/ANN.h	14;"	d
ANN_Init	libs/learning/ANN.cpp	/^int ANN_Init(ANN * ann)$/;"	f
ANN_Input	libs/learning/ANN.cpp	/^real ANN_Input(ANN * ann, real * x)$/;"	f
ANN_LayerBatchAdapt	libs/learning/ANN.cpp	/^void ANN_LayerBatchAdapt(Layer * l)$/;"	f
ANN_LayerShowInputs	libs/learning/ANN.cpp	/^real ANN_LayerShowInputs(Layer * l)$/;"	f
ANN_LayerShowWeights	libs/learning/ANN.cpp	/^real ANN_LayerShowWeights(Layer * l)$/;"	f
ANN_POLICY_H	libs/learning/ann_policy.h	16;"	d
ANN_Policy	libs/learning/ann_policy.cpp	/^ANN_Policy::ANN_Policy (int n_states, int n_actions, int n_hidden, real alpha, real gamma, real lambda, bool eligibility, bool softmax, real randomness, real init_eval, bool separate_actions) : DiscretePolicy (n_states, n_actions, alpha, gamma, lambda, softmax, randomness, init_eval)$/;"	f	class:ANN_Policy
ANN_Policy	libs/learning/ann_policy.h	/^class ANN_Policy : public DiscretePolicy$/;"	c
ANN_RBFBackpropagate	libs/learning/ANN.cpp	/^real ANN_RBFBackpropagate(LISTITEM * p, real * d, bool use_eligibility, real TD)$/;"	f
ANN_RBFCalculateLayerOutputs	libs/learning/ANN.cpp	/^void ANN_RBFCalculateLayerOutputs(Layer * current_layer, bool stochastic)$/;"	f
ANN_Reset	libs/learning/ANN.cpp	/^void ANN_Reset(ANN * ann)$/;"	f
ANN_SetBatchMode	libs/learning/ANN.cpp	/^void ANN_SetBatchMode(ANN * ann, bool batch)$/;"	f
ANN_SetLambda	libs/learning/ANN.cpp	/^void ANN_SetLambda(ANN * ann, real lambda)$/;"	f
ANN_SetLearningRate	libs/learning/ANN.cpp	/^void ANN_SetLearningRate(ANN * ann, real a)$/;"	f
ANN_SetOutputsToLinear	libs/learning/ANN.cpp	/^void ANN_SetOutputsToLinear(ANN * ann)$/;"	f
ANN_SetOutputsToTanH	libs/learning/ANN.cpp	/^void ANN_SetOutputsToTanH(ANN * ann)$/;"	f
ANN_SetZeta	libs/learning/ANN.cpp	/^void ANN_SetZeta(ANN * ann, real zeta)$/;"	f
ANN_ShowInputs	libs/learning/ANN.cpp	/^real ANN_ShowInputs(ANN * ann)$/;"	f
ANN_ShowOutputs	libs/learning/ANN.cpp	/^void ANN_ShowOutputs(ANN * ann)$/;"	f
ANN_ShowWeights	libs/learning/ANN.cpp	/^real ANN_ShowWeights(ANN * ann)$/;"	f
ANN_StochasticInput	libs/learning/ANN.cpp	/^real ANN_StochasticInput(ANN * ann, real * x)$/;"	f
ANN_Test	libs/learning/ANN.cpp	/^real ANN_Test(ANN * ann, real * x, real * t)$/;"	f
ANN_Train	libs/learning/ANN.cpp	/^real ANN_Train(ANN * ann, real * x, real * t)$/;"	f
ANTICLOCKWISE	tools/trackgen/trackgen.h	30;"	d
APIENTRY	windows/include/GL/glext.h	43;"	d
APIENTRY	windows/include/GL/glut.h	23;"	d
APIENTRY	windows/include/GL/glut.h	25;"	d
APIENTRY	windows/include/GL/glut.h	588;"	d
APIENTRY	windows/include/GL/glut.h	63;"	d
APIENTRY	windows/include/GL/wglext.h	43;"	d
APIENTRY	windows/osspec.h	44;"	d
APIENTRY	windows/osspec.h	45;"	d
APIENTRYP	windows/include/GL/glext.h	46;"	d
APIENTRYP	windows/include/GL/wglext.h	46;"	d
APPROACHING	drivers/olethros/pit.h	/^	NONE=0x0, APPROACHING, IN_LANE, PIT_EXIT$/;"	e	enum:olethros::PitState
ARRAY	modules/graphic/ssggraph/grvtxtable.h	68;"	d
ARR_DATAPTS	interfaces/car.h	569;"	d
ARR_GEARS	interfaces/car.h	581;"	d
ATTRIBUTE	libs/txml/xmltok.h	/^} ATTRIBUTE;$/;"	t	typeref:struct:__anon118
ATTRIBUTE_ID	libs/txml/xmlparse.c	/^} ATTRIBUTE_ID;$/;"	t	typeref:struct:__anon113	file:
AbandonRaceHookActivate	libs/raceengineclient/racemain.cpp	/^AbandonRaceHookActivate(void * \/* vforce *\/)$/;"	f	file:
AbandonRaceHookHandle	libs/raceengineclient/racemain.cpp	/^static void *AbandonRaceHookHandle = 0;$/;"	v	file:
AbandonRaceHookInit	libs/raceengineclient/racemain.cpp	/^AbandonRaceHookInit(void)$/;"	f	file:
AbortRaceHookActivate	libs/raceengineclient/racemain.cpp	/^AbortRaceHookActivate(void * \/* dummy *\/)$/;"	f	file:
AbortRaceHookHandle	libs/raceengineclient/racemain.cpp	/^static void *AbortRaceHookHandle = 0;$/;"	v	file:
AbortRaceHookInit	libs/raceengineclient/racemain.cpp	/^AbortRaceHookInit(void)$/;"	f	file:
AbstractCar	drivers/berniw/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	drivers/berniw/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	drivers/berniw2/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	drivers/berniw2/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	drivers/berniw3/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	drivers/berniw3/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	drivers/human/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	drivers/human/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	drivers/inferno/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	drivers/inferno/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	drivers/lliaw/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	drivers/lliaw/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	drivers/tita/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	drivers/tita/mycar.h	/^class AbstractCar$/;"	c
AbstractOption	modules/simu/simuv3/Options.h	/^class AbstractOption {$/;"	c
AbstractStrategy	drivers/bt/strategy.h	/^class AbstractStrategy {$/;"	c
AbstractStrategy	drivers/damned/strategy.h	/^class AbstractStrategy {$/;"	c
AbstractStrategy	drivers/olethros/strategy.h	/^class AbstractStrategy {$/;"	c	namespace:olethros
Ac3dClose	tools/trackgen/ac3d.cpp	/^Ac3dClose(FILE *save_fd)$/;"	f
Ac3dGroup	tools/trackgen/ac3d.cpp	/^Ac3dGroup(FILE *save_fd, const char *name, int nbObjects)$/;"	f
Ac3dOpen	tools/trackgen/ac3d.cpp	/^Ac3dOpen(char *filename, int nbObjects)$/;"	f
ActiveGroups	tools/trackgen/easymesh.cpp	/^static int		ActiveGroups;$/;"	v	file:
ActiveGroups	tools/trackgen/track.cpp	/^static int ActiveGroups;$/;"	v	file:
Add	drivers/olethros/TrackData.h	/^    void Add(Segment segment)$/;"	f	class:SegmentList
AddCurve	drivers/olethros/TrackData.cpp	/^void TrackData::AddCurve (SegmentList& segments, float arc, float radius, float end_width_l, float end_width_r)$/;"	f	class:TrackData
AddObject	tools/trackgen/objects.cpp	/^AddObject(unsigned int clr, tdble x, tdble y)$/;"	f	file:
AddOption	modules/simu/simuv3/Options.h	/^    void AddOption (const char* name, T* handle, T value)$/;"	f	class:OptionList
AddSides	modules/track/track3.cpp	/^AddSides(tTrackSeg *curSeg, void *TrackHandle, tTrack *theTrack, int curStep, int steps)$/;"	f	file:
AddStraight	drivers/olethros/TrackData.cpp	/^void TrackData::AddStraight (SegmentList& segments, float length, float end_width_l, float end_width_r)$/;"	f	class:TrackData
AddToRoot	tools/trackgen/objects.cpp	/^AddToRoot(ssgEntity *node)$/;"	f	file:
AddTrackSurface	modules/track/track3.cpp	/^AddTrackSurface(void *TrackHandle, tTrack *theTrack, const char *material)$/;"	f	file:
AdjustFriction	drivers/olethros/learn.cpp	/^void SegLearn::AdjustFriction (tTrackSeg* s, float G, float mass_, float CA_, float CW_, float u_, float brake_, float learning_rate)$/;"	f	class:SegLearn
AdjustRadi	drivers/olethros/driver.cpp	/^    void Driver::AdjustRadi(tTrackSeg* cs, tTrackSeg* ce, float* radi)$/;"	f	class:olethros::Driver
AdjustRadius	tools/trackgen/raceline.cpp	/^static void AdjustRadius(int prev, int i, int next, double TargetRInverse, double Security = 0.0)$/;"	f	file:
AdvStep	drivers/inferno2/inferno2.cpp	/^static tdble AdvStep[10]   = {1.0f};$/;"	v	file:
Advance	drivers/inferno2/inferno2.cpp	/^static tdble Advance[10]   = {3.5f};$/;"	v	file:
Advance2	drivers/inferno2/inferno2.cpp	/^static tdble Advance2[10]  = {10.0f};$/;"	v	file:
AeroFlowModel	modules/simu/simuv3/SimulationOptions.h	/^enum AeroFlowModel {$/;"	g
AlgoTable	modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^class AlgoTable {$/;"	c
AllocM	libs/learning/learn_debug.h	30;"	d
AntiSlip	drivers/human/human.h	/^	tdble	AntiSlip;$/;"	m	struct:HumanContext
ApplyTransform	tools/trackgen/objects.cpp	/^ApplyTransform(sgMat4 m, ssgBase *node)$/;"	f	file:
ArgMax	libs/learning/MathFunctions.cpp	/^int ArgMax (int n, real* x)$/;"	f
ArgMin	libs/learning/MathFunctions.cpp	/^int ArgMin (int n, real* x)$/;"	f
AuthorId	libs/racescreens/trackselect.cpp	/^static int AuthorId;$/;"	v	file:
AutoReverse	drivers/human/human.h	/^	int		AutoReverse;$/;"	m	struct:HumanContext
AutoReverseEngaged	drivers/human/human.h	/^	int 	AutoReverseEngaged;$/;"	m	struct:HumanContext
AutoReverseId	libs/confscreens/driverconfig.cpp	/^static int AutoReverseId;$/;"	v	file:
Averages	drivers/olethros/learn.h	/^		Averages ()$/;"	f	class:olethros::SegLearn::Averages
Averages	drivers/olethros/learn.h	/^	class Averages {$/;"	c	class:olethros::SegLearn
AxleSect	modules/simu/simuv2/axle.cpp	/^static const char *AxleSect[2] = {SECT_FRNTAXLE, SECT_REARAXLE};$/;"	v	file:
AxleSect	modules/simu/simuv3/axle.cpp	/^static const char *AxleSect[2] = {SECT_FRNTAXLE, SECT_REARAXLE};$/;"	v	file:
BACK	drivers/inferno/pathfinder.h	47;"	d
BACK	drivers/lliaw/pathfinder.h	47;"	d
BACK	drivers/tita/pathfinder.h	47;"	d
BACKCOLLDIST	drivers/bt/opponent.cpp	/^const float Opponent::BACKCOLLDIST = 70.0f;				\/\/ [m] distance on the track to check other cars.$/;"	m	class:Opponent	file:
BACKCOLLDIST	drivers/bt/opponent.h	/^		static const float BACKCOLLDIST;$/;"	m	class:Opponent
BACKCOLLDIST	drivers/damned/opponent.cpp	/^const float Opponent::BACKCOLLDIST = 70.0f;				\/\/ [m] distance on the track to check other cars.$/;"	m	class:Opponent	file:
BACKCOLLDIST	drivers/damned/opponent.h	/^		static const float BACKCOLLDIST;$/;"	m	class:Opponent
BACKCOLLDIST	drivers/olethros/opponent.cpp	/^const float Opponent::BACKCOLLDIST = 70.0;				\/\/ [m] distance on the track to check other cars.$/;"	m	class:olethros::Opponent	file:
BACKCOLLDIST	drivers/olethros/opponent.h	/^		static const float BACKCOLLDIST;$/;"	m	class:olethros::Opponent
BACKCOLLDIST	drivers/sparkle/opponent.cpp	/^float Opponent::BACKCOLLDIST = 50.0;	\/* [m] distance on the track to check other cars *\/$/;"	m	class:Opponent	file:
BACKCOLLDIST	drivers/sparkle/opponent.h	/^		static float BACKCOLLDIST;$/;"	m	class:Opponent
BACKUP1	libs/robottools/robottools.h	/^	BACKUP1 = 3,$/;"	e	enum:rtCarPitSetupType
BACKUP2	libs/robottools/robottools.h	/^	BACKUP2 = 4,$/;"	e	enum:rtCarPitSetupType
BACKUP3	libs/robottools/robottools.h	/^	BACKUP3 = 5$/;"	e	enum:rtCarPitSetupType
BBox	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  BBox() {} $/;"	f	class:BBox
BBox	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  BBox(const Point& min, const Point& max) { setValue(min, max); }$/;"	f	class:BBox
BBox	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^class BBox {$/;"	c
BBoxCompAxis	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^  BBoxCompAxis(int a) : axis(a) {}$/;"	f	class:BBoxCompAxis
BBoxCompAxis	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^class BBoxCompAxis {$/;"	c	file:
BBoxInternal	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^BBoxInternal::BBoxInternal(int n, BBoxLeaf *l) {$/;"	f	class:BBoxInternal
BBoxInternal	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxInternal() {}$/;"	f	class:BBoxInternal
BBoxInternal	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^class BBoxInternal : public BBoxNode {$/;"	c
BBoxLeaf	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxLeaf() {}$/;"	f	class:BBoxLeaf
BBoxLeaf	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxLeaf(const Polytope *p) : poly(p) { $/;"	f	class:BBoxLeaf
BBoxLeaf	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^class BBoxLeaf : public BBoxNode {$/;"	c
BBoxNode	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^class BBoxNode {$/;"	c
BERNIW_ATT_AMAGIC	drivers/berniw/berniw.h	48;"	d
BERNIW_ATT_AMAGIC	drivers/berniw2/berniw.h	48;"	d
BERNIW_ATT_AMAGIC	drivers/berniw3/berniw.h	48;"	d
BERNIW_ATT_AMAGIC	drivers/inferno/berniw.h	52;"	d
BERNIW_ATT_AMAGIC	drivers/lliaw/berniw.h	52;"	d
BERNIW_ATT_AMAGIC	drivers/tita/berniw.h	52;"	d
BERNIW_ATT_FMAGIC	drivers/berniw/berniw.h	49;"	d
BERNIW_ATT_FMAGIC	drivers/berniw2/berniw.h	49;"	d
BERNIW_ATT_FMAGIC	drivers/berniw3/berniw.h	49;"	d
BERNIW_ATT_FMAGIC	drivers/inferno/berniw.h	53;"	d
BERNIW_ATT_FMAGIC	drivers/lliaw/berniw.h	53;"	d
BERNIW_ATT_FMAGIC	drivers/tita/berniw.h	53;"	d
BERNIW_ATT_FUELPERLAP	drivers/berniw/berniw.h	50;"	d
BERNIW_ATT_FUELPERLAP	drivers/berniw2/berniw.h	50;"	d
BERNIW_ATT_FUELPERLAP	drivers/berniw3/berniw.h	50;"	d
BERNIW_ATT_FUELPERLAP	drivers/inferno/berniw.h	54;"	d
BERNIW_ATT_FUELPERLAP	drivers/lliaw/berniw.h	54;"	d
BERNIW_ATT_FUELPERLAP	drivers/tita/berniw.h	54;"	d
BERNIW_ATT_PITENTRY	drivers/berniw/berniw.h	46;"	d
BERNIW_ATT_PITENTRY	drivers/berniw2/berniw.h	46;"	d
BERNIW_ATT_PITENTRY	drivers/berniw3/berniw.h	46;"	d
BERNIW_ATT_PITENTRY	drivers/inferno/berniw.h	50;"	d
BERNIW_ATT_PITENTRY	drivers/lliaw/berniw.h	50;"	d
BERNIW_ATT_PITENTRY	drivers/tita/berniw.h	50;"	d
BERNIW_ATT_PITEXIT	drivers/berniw/berniw.h	47;"	d
BERNIW_ATT_PITEXIT	drivers/berniw2/berniw.h	47;"	d
BERNIW_ATT_PITEXIT	drivers/berniw3/berniw.h	47;"	d
BERNIW_ATT_PITEXIT	drivers/inferno/berniw.h	51;"	d
BERNIW_ATT_PITEXIT	drivers/lliaw/berniw.h	51;"	d
BERNIW_ATT_PITEXIT	drivers/tita/berniw.h	51;"	d
BERNIW_ATT_STEERPGAIN	drivers/inferno/berniw.h	55;"	d
BERNIW_ATT_STEERPGAIN	drivers/lliaw/berniw.h	55;"	d
BERNIW_ATT_STEERPGAIN	drivers/tita/berniw.h	55;"	d
BERNIW_ATT_STEERPGAIN_MAX	drivers/inferno/berniw.h	56;"	d
BERNIW_ATT_STEERPGAIN_MAX	drivers/lliaw/berniw.h	56;"	d
BERNIW_ATT_STEERPGAIN_MAX	drivers/tita/berniw.h	56;"	d
BERNIW_ATT_TEAMMATE	drivers/inferno/berniw.h	57;"	d
BERNIW_ATT_TEAMMATE	drivers/lliaw/berniw.h	57;"	d
BERNIW_ATT_TEAMMATE	drivers/tita/berniw.h	57;"	d
BERNIW_SECT_PRIV	drivers/berniw/berniw.h	45;"	d
BERNIW_SECT_PRIV	drivers/berniw2/berniw.h	45;"	d
BERNIW_SECT_PRIV	drivers/berniw3/berniw.h	45;"	d
BERNIW_SECT_PRIV	drivers/inferno/berniw.h	49;"	d
BERNIW_SECT_PRIV	drivers/lliaw/berniw.h	49;"	d
BERNIW_SECT_PRIV	drivers/tita/berniw.h	49;"	d
BG_DIST	modules/graphic/ssggraph/grscene.cpp	64;"	d	file:
BIG_ENDIAN	libs/tgfclient/guifont.cpp	30;"	d	file:
BLOCK	libs/txml/xmlparse.c	/^} BLOCK;$/;"	t	typeref:struct:block	file:
BORDER_OVERTAKE_MARGIN	drivers/bt/driver.cpp	/^const float Driver::BORDER_OVERTAKE_MARGIN = 0.5f;			\/\/ [m]$/;"	m	class:Driver	file:
BORDER_OVERTAKE_MARGIN	drivers/bt/driver.h	/^		static const float BORDER_OVERTAKE_MARGIN;$/;"	m	class:Driver
BORDER_OVERTAKE_MARGIN	drivers/damned/driver.cpp	/^const float Driver::BORDER_OVERTAKE_MARGIN = 0.5f;			\/\/ [m]$/;"	m	class:Driver	file:
BORDER_OVERTAKE_MARGIN	drivers/damned/driver.h	/^		static const float BORDER_OVERTAKE_MARGIN;$/;"	m	class:Driver
BORDER_OVERTAKE_MARGIN	drivers/olethros/driver.cpp	/^    const float Driver::BORDER_OVERTAKE_MARGIN = 0.5f;			\/\/\/< [m]$/;"	m	class:olethros::Driver	file:
BORDER_OVERTAKE_MARGIN	drivers/olethros/driver.h	/^	static const float BORDER_OVERTAKE_MARGIN;$/;"	m	class:olethros::Driver
BORDER_OVERTAKE_MARGIN	drivers/sparkle/driver.cpp	/^const float Driver::BORDER_OVERTAKE_MARGIN = 0.5;			\/* [m] *\/$/;"	m	class:Driver	file:
BORDER_OVERTAKE_MARGIN	drivers/sparkle/driver.h	/^		static const float BORDER_OVERTAKE_MARGIN;$/;"	m	class:Driver
BOTS	drivers/berniw/berniw.h	42;"	d
BOTS	drivers/berniw2/berniw.h	42;"	d
BOTS	drivers/berniw3/berniw.h	42;"	d
BOTS	drivers/human/human.cpp	77;"	d	file:
BOTS	drivers/inferno/berniw.h	46;"	d
BOTS	drivers/lliaw/berniw.h	46;"	d
BOTS	drivers/tita/berniw.h	46;"	d
BOUNDED	libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
BRAKE	drivers/data_list.h	/^enum actuating_data_name{ACCEL, BRAKE, LEFT_STEER, RIGHT_STEER, STEER_MODE, NUM_DUMMY};$/;"	e	enum:actuating_data_name
BRK_ANGLE	modules/graphic/ssggraph/grcar.cpp	98;"	d	file:
BRK_BRANCH	modules/graphic/ssggraph/grcar.cpp	97;"	d	file:
BRK_OFFSET	modules/graphic/ssggraph/grcar.cpp	99;"	d	file:
BR_HEIGHT_1	tools/trackgen/track.cpp	2447;"	d	file:
BR_HEIGHT_2	tools/trackgen/track.cpp	2448;"	d	file:
BR_WIDTH_0	tools/trackgen/track.cpp	2449;"	d	file:
BR_WIDTH_1	tools/trackgen/track.cpp	2450;"	d	file:
BT_AMP	libs/txml/xmltok_impl.h	/^  BT_AMP,$/;"	e	enum:__anon109
BT_APOS	libs/txml/xmltok_impl.h	/^  BT_APOS,$/;"	e	enum:__anon109
BT_AST	libs/txml/xmltok_impl.h	/^  BT_AST,$/;"	e	enum:__anon109
BT_ATT_BESTLAP	drivers/bt/driver.h	46;"	d
BT_ATT_BESTLAP	drivers/damned/driver.h	46;"	d
BT_ATT_FUELPERLAP	drivers/bt/driver.h	43;"	d
BT_ATT_FUELPERLAP	drivers/damned/driver.h	43;"	d
BT_ATT_FUELPERLAP	drivers/sparkle/driver.cpp	23;"	d	file:
BT_ATT_MUFACTOR	drivers/bt/driver.h	44;"	d
BT_ATT_MUFACTOR	drivers/damned/driver.h	44;"	d
BT_ATT_MUFACTOR	drivers/sparkle/driver.cpp	24;"	d	file:
BT_ATT_PITTIME	drivers/bt/driver.h	45;"	d
BT_ATT_PITTIME	drivers/damned/driver.h	45;"	d
BT_ATT_TEAMMATE	drivers/bt/driver.h	48;"	d
BT_ATT_TEAMMATE	drivers/damned/driver.h	48;"	d
BT_ATT_WORSTLAP	drivers/bt/driver.h	47;"	d
BT_ATT_WORSTLAP	drivers/damned/driver.h	47;"	d
BT_COMMA	libs/txml/xmltok_impl.h	/^  BT_COMMA,$/;"	e	enum:__anon109
BT_CR	libs/txml/xmltok_impl.h	/^  BT_CR,$/;"	e	enum:__anon109
BT_DIGIT	libs/txml/xmltok_impl.h	/^  BT_DIGIT,$/;"	e	enum:__anon109
BT_EQUALS	libs/txml/xmltok_impl.h	/^  BT_EQUALS,$/;"	e	enum:__anon109
BT_EXCL	libs/txml/xmltok_impl.h	/^  BT_EXCL,$/;"	e	enum:__anon109
BT_GT	libs/txml/xmltok_impl.h	/^  BT_GT,$/;"	e	enum:__anon109
BT_HEX	libs/txml/xmltok_impl.h	/^  BT_HEX,$/;"	e	enum:__anon109
BT_LEAD2	libs/txml/xmltok_impl.h	/^  BT_LEAD2,$/;"	e	enum:__anon109
BT_LEAD3	libs/txml/xmltok_impl.h	/^  BT_LEAD3,$/;"	e	enum:__anon109
BT_LEAD4	libs/txml/xmltok_impl.h	/^  BT_LEAD4,$/;"	e	enum:__anon109
BT_LF	libs/txml/xmltok_impl.h	/^  BT_LF,$/;"	e	enum:__anon109
BT_LPAR	libs/txml/xmltok_impl.h	/^  BT_LPAR,$/;"	e	enum:__anon109
BT_LSQB	libs/txml/xmltok_impl.h	/^  BT_LSQB,$/;"	e	enum:__anon109
BT_LT	libs/txml/xmltok_impl.h	/^  BT_LT,$/;"	e	enum:__anon109
BT_MALFORM	libs/txml/xmltok_impl.h	/^  BT_MALFORM,$/;"	e	enum:__anon109
BT_MINUS	libs/txml/xmltok_impl.h	/^  BT_MINUS,$/;"	e	enum:__anon109
BT_NAME	libs/txml/xmltok_impl.h	/^  BT_NAME,$/;"	e	enum:__anon109
BT_NMSTRT	libs/txml/xmltok_impl.h	/^  BT_NMSTRT,$/;"	e	enum:__anon109
BT_NONASCII	libs/txml/xmltok_impl.h	/^  BT_NONASCII, \/* might be a name or name start character *\/$/;"	e	enum:__anon109
BT_NONXML	libs/txml/xmltok_impl.h	/^  BT_NONXML,$/;"	e	enum:__anon109
BT_NUM	libs/txml/xmltok_impl.h	/^  BT_NUM,$/;"	e	enum:__anon109
BT_OTHER	libs/txml/xmltok_impl.h	/^  BT_OTHER, \/* known not to be a name or name start character *\/$/;"	e	enum:__anon109
BT_PERCNT	libs/txml/xmltok_impl.h	/^  BT_PERCNT,$/;"	e	enum:__anon109
BT_PLUS	libs/txml/xmltok_impl.h	/^  BT_PLUS,$/;"	e	enum:__anon109
BT_QUEST	libs/txml/xmltok_impl.h	/^  BT_QUEST,$/;"	e	enum:__anon109
BT_QUOT	libs/txml/xmltok_impl.h	/^  BT_QUOT,$/;"	e	enum:__anon109
BT_RPAR	libs/txml/xmltok_impl.h	/^  BT_RPAR,$/;"	e	enum:__anon109
BT_RSQB	libs/txml/xmltok_impl.h	/^  BT_RSQB,$/;"	e	enum:__anon109
BT_S	libs/txml/xmltok_impl.h	/^  BT_S,$/;"	e	enum:__anon109
BT_SECT_PRIV	drivers/bt/driver.h	42;"	d
BT_SECT_PRIV	drivers/damned/driver.h	42;"	d
BT_SECT_PRIV	drivers/sparkle/driver.cpp	22;"	d	file:
BT_SEMI	libs/txml/xmltok_impl.h	/^  BT_SEMI,$/;"	e	enum:__anon109
BT_SOL	libs/txml/xmltok_impl.h	/^  BT_SOL,$/;"	e	enum:__anon109
BT_TRAIL	libs/txml/xmltok_impl.h	/^  BT_TRAIL,$/;"	e	enum:__anon109
BT_VERBAR	libs/txml/xmltok_impl.h	/^  BT_VERBAR$/;"	e	enum:__anon109
BUFFERSIZE	libs/musicplayer/OpenALMusicPlayer.cpp	/^const int OpenALMusicPlayer::BUFFERSIZE = 4096*64;$/;"	m	class:OpenALMusicPlayer	file:
BUFFERSIZE	libs/musicplayer/OpenALMusicPlayer.h	/^		static const int BUFFERSIZE;$/;"	m	class:OpenALMusicPlayer
BUFFER_COUNT	windows/include/plib/sl.h	139;"	d
BUFFER_SIZE	predictor/talker.py	/^BUFFER_SIZE = 1024$/;"	v
BUFFER_SIZE	windows/include/plib/sl.h	140;"	d
BUFFER_SIZE	windows/include/plib/sl.h	95;"	d
BUFMAX	libs/txml/xml.cpp	33;"	d	file:
BUFSIZE	drivers/berniw/berniw.h	43;"	d
BUFSIZE	drivers/berniw2/berniw.h	43;"	d
BUFSIZE	drivers/berniw3/berniw.h	43;"	d
BUFSIZE	drivers/bt/learn.h	/^		static const int BUFSIZE;$/;"	m	class:SegLearn
BUFSIZE	drivers/damned/learn.h	/^		static const int BUFSIZE;$/;"	m	class:SegLearn
BUFSIZE	drivers/inferno/berniw.h	47;"	d
BUFSIZE	drivers/lliaw/berniw.h	47;"	d
BUFSIZE	drivers/olethros/olethros.cpp	51;"	d	file:
BUFSIZE	drivers/sparkle/sparkle.cpp	37;"	d	file:
BUFSIZE	drivers/tita/berniw.h	47;"	d
BYTE_ORDER	libs/tgfclient/guifont.cpp	32;"	d	file:
BYTE_TO_ASCII	libs/txml/xmltok.c	163;"	d	file:
BYTE_TO_ASCII	libs/txml/xmltok.c	183;"	d	file:
BYTE_TO_ASCII	libs/txml/xmltok.c	436;"	d	file:
BYTE_TO_ASCII	libs/txml/xmltok.c	460;"	d	file:
BYTE_TO_ASCII	libs/txml/xmltok.c	503;"	d	file:
BYTE_TO_ASCII	libs/txml/xmltok.c	527;"	d	file:
BYTE_TYPE	libs/txml/xmltok.c	161;"	d	file:
BYTE_TYPE	libs/txml/xmltok.c	182;"	d	file:
BYTE_TYPE	libs/txml/xmltok.c	432;"	d	file:
BYTE_TYPE	libs/txml/xmltok.c	459;"	d	file:
BYTE_TYPE	libs/txml/xmltok.c	499;"	d	file:
BYTE_TYPE	libs/txml/xmltok.c	526;"	d	file:
B_BASE	libs/racescreens/driverselect.cpp	266;"	d	file:
B_HT	libs/racescreens/driverselect.cpp	267;"	d	file:
BackToRaceHookActivate	libs/raceengineclient/racemain.cpp	/^static void BackToRaceHookActivate(void * \/* dummy *\/)$/;"	f	file:
BackToRaceHookHandle	libs/raceengineclient/racemain.cpp	/^static void	*BackToRaceHookHandle = 0;$/;"	v	file:
BackToRaceHookInit	libs/raceengineclient/racemain.cpp	/^static void* BackToRaceHookInit(void)$/;"	f	file:
BorderFriction	modules/simu/simuv2/collide.cpp	/^const tdble BorderFriction = 0.0f;$/;"	v
BorderFriction	modules/simu/simuv3/collide.cpp	/^const tdble BorderFriction = 0.00;$/;"	v
BoundsCheckingStatus	drivers/olethros/geometry.h	/^	enum BoundsCheckingStatus {NO_CHECK_BOUNDS=0, CHECK_BOUNDS=1};$/;"	g	class:Vector
Box	modules/simu/simuv2/SOLID-2.0/src/Box.h	/^  Box(Scalar x, Scalar y, Scalar z) : extent(x \/ 2, y \/ 2, z \/ 2) {}$/;"	f	class:Box
Box	modules/simu/simuv2/SOLID-2.0/src/Box.h	/^class Box : public Convex {$/;"	c
BrNb	tools/texmapper/maintexmapper.cpp	/^int BrNb = 0;$/;"	v
BrkSect	modules/simu/simuv2/wheel.cpp	/^static const char *BrkSect[4] = {SECT_FRNTRGTBRAKE, SECT_FRNTLFTBRAKE, SECT_REARRGTBRAKE, SECT_REARLFTBRAKE};$/;"	v	file:
BrkSect	modules/simu/simuv3/wheel.cpp	/^static const char *BrkSect[4] = {SECT_FRNTRGTBRAKE, SECT_FRNTLFTBRAKE, SECT_REARRGTBRAKE, SECT_REARLFTBRAKE};$/;"	v	file:
Byte	windows/include/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Byte	windows/include/zconf.h	109;"	d
Bytef	windows/include/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	windows/include/zconf.h	110;"	d
Bytef	windows/include/zconf.h	340;"	d
C	drivers/olethros/geometry.h	/^	Vector* C; \/\/center$/;"	m	class:ParametricSphere
C1	modules/simu/simuv2/susp.h	/^    tdble C1, v1;	\/* coefs for slow *\/$/;"	m	struct:__anon20
C1	modules/simu/simuv3/susp.h	/^    tdble C1, b1, v1; \/* coefs for slow *\/$/;"	m	struct:__anon39
C2	modules/simu/simuv2/susp.h	/^    tdble C2, b2;	\/* coefs for fast *\/$/;"	m	struct:__anon20
C2	modules/simu/simuv3/susp.h	/^    tdble C2, b2;     \/* coefs for fast *\/$/;"	m	struct:__anon39
CA	drivers/bt/driver.h	/^		float CA;			\/\/ Aerodynamic downforce coefficient.$/;"	m	class:Driver
CA	drivers/damned/driver.h	/^		float CA;			\/\/ Aerodynamic downforce coefficient.$/;"	m	class:Driver
CA	drivers/olethros/driver.h	/^	float CA;			\/\/\/< Aerodynamic downforce coefficient.$/;"	m	class:olethros::Driver
CA	drivers/olethros/learn.h	/^	float CA; \/\/\/< downforce constant$/;"	m	class:olethros::SegLearn
CA	drivers/sparkle/driver.h	/^		float CA;			\/* aerodynamic downforce coefficient *\/$/;"	m	class:Driver
CALLBACK	windows/include/GL/glut.h	31;"	d
CALLBACK	windows/include/GL/glut.h	33;"	d
CALLBACK	windows/include/GL/glut.h	65;"	d
CALLBACK	windows/osspec.h	46;"	d
CALLBACK	windows/osspec.h	47;"	d
CAREFUL	drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon151
CAREFUL	drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon195
CAREFUL	drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon174
CAREFUL	drivers/human/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon186
CAREFUL	drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon160
CAREFUL	drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon206
CAREFUL	drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon167
CARLEN	drivers/berniw/mycar.h	/^		double CARLEN;									\/* length of the car [m] *\/$/;"	m	class:MyCar
CARLEN	drivers/berniw2/mycar.h	/^		double CARLEN;									\/* length of the car [m] *\/$/;"	m	class:MyCar
CARLEN	drivers/berniw3/mycar.h	/^		double CARLEN;									\/* length of the car [m] *\/$/;"	m	class:MyCar
CARLEN	drivers/human/mycar.h	/^		double CARLEN;									\/* length of the car [m] *\/$/;"	m	class:MyCar
CARLEN	drivers/inferno/mycar.h	/^		double CARLEN;									\/\/ Length of the car [m].$/;"	m	class:MyCar
CARLEN	drivers/lliaw/mycar.h	/^		double CARLEN;									\/\/ Length of the car [m].$/;"	m	class:MyCar
CARLEN	drivers/tita/mycar.h	/^		double CARLEN;									\/\/ Length of the car [m].$/;"	m	class:MyCar
CARMASS	drivers/bt/driver.h	/^		float CARMASS;		\/\/ Mass of the car only [kg].$/;"	m	class:Driver
CARMASS	drivers/damned/driver.h	/^		float CARMASS;		\/\/ Mass of the car only [kg].$/;"	m	class:Driver
CARMASS	drivers/olethros/driver.h	/^	float CARMASS;		\/\/\/< Mass of the car only [kg].$/;"	m	class:olethros::Driver
CARMASS	drivers/sparkle/driver.h	/^		float CARMASS;		\/* mass of the car only *\/$/;"	m	class:Driver
CARWIDTH	drivers/berniw/mycar.h	/^		double CARWIDTH;								\/* width of the car [m] *\/$/;"	m	class:MyCar
CARWIDTH	drivers/berniw2/mycar.h	/^		double CARWIDTH;								\/* width of the car [m] *\/$/;"	m	class:MyCar
CARWIDTH	drivers/berniw3/mycar.h	/^		double CARWIDTH;								\/* width of the car [m] *\/$/;"	m	class:MyCar
CARWIDTH	drivers/human/mycar.h	/^		double CARWIDTH;								\/* width of the car [m] *\/$/;"	m	class:MyCar
CARWIDTH	drivers/inferno/mycar.h	/^		double CARWIDTH;								\/\/ Width of the car [m].$/;"	m	class:MyCar
CARWIDTH	drivers/lliaw/mycar.h	/^		double CARWIDTH;								\/\/ Width of the car [m].$/;"	m	class:MyCar
CARWIDTH	drivers/tita/mycar.h	/^		double CARWIDTH;								\/\/ Width of the car [m].$/;"	m	class:MyCar
CAR_DAMMAGE	modules/simu/simuv2/collide.cpp	22;"	d	file:
CAR_DAMMAGE	modules/simu/simuv3/collide.cpp	23;"	d	file:
CAR_IDENT	interfaces/car.h	34;"	d
CAR_SOUND_DATA_H	modules/graphic/ssggraph/CarSoundData.h	12;"	d
CASE	predictor/predict.py	/^CASE = 1500$/;"	v
CASE	predictor/train.py	/^CASE = 1500$/;"	v
CASE	predictor/train2.py	/^CASE = 4400$/;"	v
CATCH_FACTOR	drivers/bt/driver.cpp	/^const float Driver::CATCH_FACTOR = 10.0f;					\/\/ [-] select MIN(catchdist, dist*CATCH_FACTOR) to overtake.$/;"	m	class:Driver	file:
CATCH_FACTOR	drivers/bt/driver.h	/^		static const float CATCH_FACTOR;$/;"	m	class:Driver
CATCH_FACTOR	drivers/damned/driver.cpp	/^const float Driver::CATCH_FACTOR = 10.0f;					\/\/ [-] select MIN(catchdist, dist*CATCH_FACTOR) to overtake.$/;"	m	class:Driver	file:
CATCH_FACTOR	drivers/damned/driver.h	/^		static const float CATCH_FACTOR;$/;"	m	class:Driver
CATCH_FACTOR	drivers/olethros/driver.cpp	/^    const float Driver::CATCH_FACTOR = 10.0f;					\/\/\/< [-] select MIN(catchdist, dist*CATCH_FACTOR) to overtake.$/;"	m	class:olethros::Driver	file:
CATCH_FACTOR	drivers/olethros/driver.h	/^	static const float CATCH_FACTOR;$/;"	m	class:olethros::Driver
CC	drivers/data_list.h	/^enum flag_data_name{CC,LKAS};$/;"	e	enum:flag_data_name
CC_TRIGGER	drivers/data_list.h	/^enum sensing_data_name{CC_TRIGGER, 	LKAS_TRIGGER, 		SPEED, 		TARGET_SPEED, 		ACCEL_VALUE, $/;"	e	enum:sensing_data_name
CENTERDIV	drivers/bt/driver.cpp	/^const float Driver::CENTERDIV = 0.1f;						\/\/ [-] (factor) [0.01..0.6].$/;"	m	class:Driver	file:
CENTERDIV	drivers/bt/driver.h	/^		static const float CENTERDIV;$/;"	m	class:Driver
CENTERDIV	drivers/damned/driver.cpp	/^const float Driver::CENTERDIV = 0.1f;						\/\/ [-] (factor) [0.01..0.6].$/;"	m	class:Driver	file:
CENTERDIV	drivers/damned/driver.h	/^		static const float CENTERDIV;$/;"	m	class:Driver
CENTERDIV	drivers/olethros/driver.cpp	/^    const float Driver::CENTERDIV = 0.1f;						\/\/\/< [-] (factor) [0.01..0.6].$/;"	m	class:olethros::Driver	file:
CENTERDIV	drivers/olethros/driver.h	/^	static const float CENTERDIV;$/;"	m	class:olethros::Driver
CFG_FILE	tools/trackgen/trackgen.h	32;"	d
CFRICTION	drivers/berniw/mycar.h	/^		double CFRICTION;								\/* friction "magic" coefficient [-] *\/$/;"	m	class:MyCar
CFRICTION	drivers/berniw2/mycar.h	/^		double CFRICTION;								\/* friction "magic" coefficient [-] *\/$/;"	m	class:MyCar
CFRICTION	drivers/berniw3/mycar.h	/^		double CFRICTION;								\/* friction "magic" coefficient [-] *\/$/;"	m	class:MyCar
CFRICTION	drivers/human/mycar.h	/^		double CFRICTION;								\/* friction "magic" coefficient [-] *\/$/;"	m	class:MyCar
CFRICTION	drivers/inferno/mycar.h	/^		double CFRICTION;								\/\/ Friction "magic" coefficient [-].$/;"	m	class:MyCar
CFRICTION	drivers/lliaw/mycar.h	/^		double CFRICTION;								\/\/ Friction "magic" coefficient [-].$/;"	m	class:MyCar
CFRICTION	drivers/tita/mycar.h	/^		double CFRICTION;								\/\/ Friction "magic" coefficient [-].$/;"	m	class:MyCar
CHAR_MATCHES	libs/txml/xmltok.c	176;"	d	file:
CHAR_MATCHES	libs/txml/xmltok.c	184;"	d	file:
CHAR_MATCHES	libs/txml/xmltok.c	437;"	d	file:
CHAR_MATCHES	libs/txml/xmltok.c	461;"	d	file:
CHAR_MATCHES	libs/txml/xmltok.c	504;"	d	file:
CHAR_MATCHES	libs/txml/xmltok.c	528;"	d	file:
CHECK	modules/simu/simuv2/carstruct.h	142;"	d
CHECK	modules/simu/simuv3/carstruct.h	153;"	d
CHECK_BOUNDS	drivers/olethros/geometry.h	/^	enum BoundsCheckingStatus {NO_CHECK_BOUNDS=0, CHECK_BOUNDS=1};$/;"	e	enum:Vector::BoundsCheckingStatus
CHECK_NAME_CASE	libs/txml/xmltok_impl.c	1649;"	d	file:
CHECK_NAME_CASE	libs/txml/xmltok_impl.c	47;"	d	file:
CHECK_NAME_CASES	libs/txml/xmltok_impl.c	1650;"	d	file:
CHECK_NAME_CASES	libs/txml/xmltok_impl.c	58;"	d	file:
CHECK_NMSTRT_CASE	libs/txml/xmltok_impl.c	1651;"	d	file:
CHECK_NMSTRT_CASE	libs/txml/xmltok_impl.c	75;"	d	file:
CHECK_NMSTRT_CASES	libs/txml/xmltok_impl.c	1652;"	d	file:
CHECK_NMSTRT_CASES	libs/txml/xmltok_impl.c	86;"	d	file:
CHECK_VAR	modules/simu/simuv2/carstruct.h	141;"	d
CHECK_VAR	modules/simu/simuv3/carstruct.h	152;"	d
CLOCKWISE	tools/trackgen/trackgen.h	29;"	d
CLOSED	tools/trackgen/easymesh.cpp	64;"	d	file:
CLOSEDISPLIST	tools/trackgen/track.cpp	576;"	d	file:
CLUTCH_APPLIED	modules/simu/simuv2/transmission.h	39;"	d
CLUTCH_APPLIED	modules/simu/simuv3/transmission.h	39;"	d
CLUTCH_AUTO	modules/simu/simuv2/transmission.h	43;"	d
CLUTCH_AUTO	modules/simu/simuv3/transmission.h	43;"	d
CLUTCH_FULL_MAX_TIME	drivers/bt/driver.cpp	/^const float Driver::CLUTCH_FULL_MAX_TIME = 2.0f;			\/\/ [s] Time to apply full clutch.$/;"	m	class:Driver	file:
CLUTCH_FULL_MAX_TIME	drivers/bt/driver.h	/^		static const float CLUTCH_FULL_MAX_TIME;$/;"	m	class:Driver
CLUTCH_FULL_MAX_TIME	drivers/damned/driver.cpp	/^const float Driver::CLUTCH_FULL_MAX_TIME = 2.0f;			\/\/ [s] Time to apply full clutch.$/;"	m	class:Driver	file:
CLUTCH_FULL_MAX_TIME	drivers/damned/driver.h	/^		static const float CLUTCH_FULL_MAX_TIME;$/;"	m	class:Driver
CLUTCH_FULL_MAX_TIME	drivers/inferno/mycar.cpp	/^const float MyCar::CLUTCH_FULL_MAX_TIME = 2.0f;		\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar	file:
CLUTCH_FULL_MAX_TIME	drivers/inferno/mycar.h	/^		static const float CLUTCH_FULL_MAX_TIME;	\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar
CLUTCH_FULL_MAX_TIME	drivers/lliaw/mycar.cpp	/^const float MyCar::CLUTCH_FULL_MAX_TIME = 2.0f;		\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar	file:
CLUTCH_FULL_MAX_TIME	drivers/lliaw/mycar.h	/^		static const float CLUTCH_FULL_MAX_TIME;	\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar
CLUTCH_FULL_MAX_TIME	drivers/olethros/driver.cpp	/^    const float Driver::CLUTCH_FULL_MAX_TIME = 1.0f;				\/\/\/< [s] Time to apply full clutch.$/;"	m	class:olethros::Driver	file:
CLUTCH_FULL_MAX_TIME	drivers/olethros/driver.h	/^	static const float CLUTCH_FULL_MAX_TIME;$/;"	m	class:olethros::Driver
CLUTCH_FULL_MAX_TIME	drivers/tita/mycar.cpp	/^const float MyCar::CLUTCH_FULL_MAX_TIME = 2.0f;		\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar	file:
CLUTCH_FULL_MAX_TIME	drivers/tita/mycar.h	/^		static const float CLUTCH_FULL_MAX_TIME;	\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar
CLUTCH_MANUAL	modules/simu/simuv2/transmission.h	44;"	d
CLUTCH_MANUAL	modules/simu/simuv3/transmission.h	44;"	d
CLUTCH_RELEASED	modules/simu/simuv2/transmission.h	40;"	d
CLUTCH_RELEASED	modules/simu/simuv3/transmission.h	40;"	d
CLUTCH_RELEASING	modules/simu/simuv2/transmission.h	41;"	d
CLUTCH_RELEASING	modules/simu/simuv3/transmission.h	41;"	d
CLUTCH_SPEED	drivers/bt/driver.cpp	/^const float Driver::CLUTCH_SPEED = 5.0f;					\/\/ [m\/s]$/;"	m	class:Driver	file:
CLUTCH_SPEED	drivers/bt/driver.h	/^		static const float CLUTCH_SPEED;$/;"	m	class:Driver
CLUTCH_SPEED	drivers/damned/driver.cpp	/^const float Driver::CLUTCH_SPEED = 5.0f;					\/\/ [m\/s]$/;"	m	class:Driver	file:
CLUTCH_SPEED	drivers/damned/driver.h	/^		static const float CLUTCH_SPEED;$/;"	m	class:Driver
CLUTCH_SPEED	drivers/inferno/mycar.cpp	/^const float MyCar::CLUTCH_SPEED = 5.0f;				\/\/ [m\/s]$/;"	m	class:MyCar	file:
CLUTCH_SPEED	drivers/inferno/mycar.h	/^		static const float CLUTCH_SPEED;			\/\/ [m\/s]$/;"	m	class:MyCar
CLUTCH_SPEED	drivers/lliaw/mycar.cpp	/^const float MyCar::CLUTCH_SPEED = 5.0f;				\/\/ [m\/s]$/;"	m	class:MyCar	file:
CLUTCH_SPEED	drivers/lliaw/mycar.h	/^		static const float CLUTCH_SPEED;			\/\/ [m\/s]$/;"	m	class:MyCar
CLUTCH_SPEED	drivers/olethros/driver.cpp	/^    const float Driver::CLUTCH_SPEED = 5.0f;						\/\/\/< [m\/s]$/;"	m	class:olethros::Driver	file:
CLUTCH_SPEED	drivers/olethros/driver.h	/^	static const float CLUTCH_SPEED;$/;"	m	class:olethros::Driver
CLUTCH_SPEED	drivers/tita/mycar.cpp	/^const float MyCar::CLUTCH_SPEED = 5.0f;				\/\/ [m\/s]$/;"	m	class:MyCar	file:
CLUTCH_SPEED	drivers/tita/mycar.h	/^		static const float CLUTCH_SPEED;			\/\/ [m\/s]$/;"	m	class:MyCar
CMD_ABS	drivers/human/pref.h	57;"	d
CMD_ASR	drivers/human/pref.h	56;"	d
CMD_BRAKE	drivers/human/pref.h	67;"	d
CMD_CC	drivers/human/pref.h	75;"	d
CMD_CLUTCH	drivers/human/pref.h	71;"	d
CMD_DN_SHFT	drivers/human/pref.h	55;"	d
CMD_GEAR_1	drivers/human/pref.h	60;"	d
CMD_GEAR_2	drivers/human/pref.h	61;"	d
CMD_GEAR_3	drivers/human/pref.h	62;"	d
CMD_GEAR_4	drivers/human/pref.h	63;"	d
CMD_GEAR_5	drivers/human/pref.h	64;"	d
CMD_GEAR_6	drivers/human/pref.h	65;"	d
CMD_GEAR_N	drivers/human/pref.h	59;"	d
CMD_GEAR_R	drivers/human/pref.h	58;"	d
CMD_LEFTSTEER	drivers/human/pref.h	68;"	d
CMD_LIGHT1	drivers/human/pref.h	70;"	d
CMD_LKAS	drivers/human/pref.h	76;"	d
CMD_OFFSET	libs/confscreens/mouseconfig.cpp	42;"	d	file:
CMD_RIGHTSTEER	drivers/human/pref.h	69;"	d
CMD_SPDLIM	drivers/human/pref.h	72;"	d
CMD_THROTTLE	drivers/human/pref.h	66;"	d
CMD_UP_SHFT	drivers/human/pref.h	54;"	d
COLLDIST	drivers/berniw/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 200.0;$/;"	m	class:Pathfinder	file:
COLLDIST	drivers/berniw/pathfinder.h	/^		static const double COLLDIST;	\/* up to this distance do we consider other cars as dangerous *\/$/;"	m	class:Pathfinder
COLLDIST	drivers/berniw2/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 200.0;$/;"	m	class:Pathfinder	file:
COLLDIST	drivers/berniw2/pathfinder.h	/^		static const double COLLDIST;	\/* up to this distance do we consider other cars as dangerous *\/$/;"	m	class:Pathfinder
COLLDIST	drivers/berniw3/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 200.0;$/;"	m	class:Pathfinder	file:
COLLDIST	drivers/berniw3/pathfinder.h	/^		static const double COLLDIST;	\/* up to this distance do we consider other cars as dangerous *\/$/;"	m	class:Pathfinder
COLLDIST	drivers/human/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 200.0;$/;"	m	class:Pathfinder	file:
COLLDIST	drivers/human/pathfinder.h	/^		static const double COLLDIST;	\/* up to this distance do we consider other cars as dangerous *\/$/;"	m	class:Pathfinder
COLLDIST	drivers/inferno/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 150.0;$/;"	m	class:Pathfinder	file:
COLLDIST	drivers/inferno/pathfinder.h	/^		static const double COLLDIST;	\/\/ up to this distance do we consider other cars as dangerous.$/;"	m	class:Pathfinder
COLLDIST	drivers/lliaw/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 150.0;$/;"	m	class:Pathfinder	file:
COLLDIST	drivers/lliaw/pathfinder.h	/^		static const double COLLDIST;	\/\/ up to this distance do we consider other cars as dangerous.$/;"	m	class:Pathfinder
COLLDIST	drivers/tita/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 150.0;$/;"	m	class:Pathfinder	file:
COLLDIST	drivers/tita/pathfinder.h	/^		static const double COLLDIST;	\/\/ up to this distance do we consider other cars as dangerous.$/;"	m	class:Pathfinder
COMPILFLAGS	modules/simu/simuv2/SOLID-2.0/src/Makefile	/^COMPILFLAGS  =	-DNDEBUG -Wno-deprecated$/;"	m
COMPLEX	modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^  COMPLEX,$/;"	e	enum:ShapeType
CONFIG	drivers/human/Makefile	/^CONFIG    = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
CONFIG	libs/raceengineclient/Makefile	/^CONFIG    = $(SHIP)$/;"	m
CONFIG	libs/tgfclient/Makefile	/^CONFIG    = screen.xml$/;"	m
CONFIG	modules/graphic/ssggraph/Makefile	/^CONFIG    = $(SHIP)$/;"	m
CONFIG	raceman/Makefile	/^CONFIG = ${SHIP}$/;"	m
CONFIGCREATEDIRS	drivers/human/Makefile	/^CONFIGCREATEDIRS = ${SHIPDIR}$/;"	m
CONFIGCREATEDIRS	libs/raceengineclient/Makefile	/^CONFIGCREATEDIRS = ${SHIPDIR}$/;"	m
CONFIGCREATEDIRS	libs/tgfclient/Makefile	/^CONFIGCREATEDIRS = config$/;"	m
CONFIGCREATEDIRS	modules/graphic/ssggraph/Makefile	/^CONFIGCREATEDIRS = ${SHIPDIR}$/;"	m
CONFIGCREATEDIRS	raceman/Makefile	/^CONFIGCREATEDIRS = ${SHIPCREATEDIRS} ${SHIPDIR}$/;"	m
CONST_MOVE_CAR_X	modules/simu/simuv2/car.cpp	298;"	d	file:
CONST_MOVE_CAR_Y	modules/simu/simuv2/car.cpp	299;"	d	file:
CONVEX	modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^  CONVEX$/;"	e	enum:ShapeType
CORNER_CUTTING_TIME_INVALIDATE	interfaces/raceman.h	/^		CORNER_CUTTING_TIME_INVALIDATE = 1,$/;"	e	enum:RmRaceRules::RmRuleFlags
CORNER_CUTTING_TIME_PENALTY	interfaces/raceman.h	/^		CORNER_CUTTING_TIME_PENALTY = 4$/;"	e	enum:RmRaceRules::RmRuleFlags
CORRLEN	drivers/berniw/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;				\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar	file:
CORRLEN	drivers/berniw/mycar.h	/^		static const double CORRLEN;			\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar
CORRLEN	drivers/berniw2/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;				\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar	file:
CORRLEN	drivers/berniw2/mycar.h	/^		static const double CORRLEN;			\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar
CORRLEN	drivers/berniw3/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;				\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar	file:
CORRLEN	drivers/berniw3/mycar.h	/^		static const double CORRLEN;			\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar
CORRLEN	drivers/human/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;				\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar	file:
CORRLEN	drivers/human/mycar.h	/^		static const double CORRLEN;			\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar
CORRLEN	drivers/inferno/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;					\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar	file:
CORRLEN	drivers/inferno/mycar.h	/^		static const double CORRLEN;				\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar
CORRLEN	drivers/lliaw/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;					\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar	file:
CORRLEN	drivers/lliaw/mycar.h	/^		static const double CORRLEN;				\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar
CORRLEN	drivers/tita/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;					\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar	file:
CORRLEN	drivers/tita/mycar.h	/^		static const double CORRLEN;				\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar
CREASE	tools/accc/ac3dload.cpp	52;"	d	file:
CURRENTSECTIONSIZE	libs/confscreens/controlconfig.cpp	/^static const int CURRENTSECTIONSIZE = 256;$/;"	v	file:
CW	drivers/bt/driver.h	/^		float CW;			\/\/ Aerodynamic drag coefficient.$/;"	m	class:Driver
CW	drivers/damned/driver.h	/^		float CW;			\/\/ Aerodynamic drag coefficient.$/;"	m	class:Driver
CW	drivers/olethros/driver.h	/^	float CW;			\/\/\/< Aerodynamic drag coefficient.$/;"	m	class:olethros::Driver
CW	drivers/olethros/learn.h	/^	float CW; \/\/\/< drag constant$/;"	m	class:olethros::SegLearn
CW	drivers/sparkle/driver.h	/^		float CW;			\/* aerodynamic drag coefficient *\/$/;"	m	class:Driver
Ca	modules/simu/simuv3/wheel.h	/^    tdble   Ca;         \/* Adherence coefficient *\/$/;"	m	struct:__anon33
CalState	libs/confscreens/joystickconfig.cpp	/^static int CalState;$/;"	v	file:
CalState	libs/confscreens/mouseconfig.cpp	/^static int	CalState;$/;"	v	file:
CalculateRadiusPoints	drivers/olethros/geometry.cpp	/^float CalculateRadiusPoints (std::vector<Vector> P)$/;"	f
CalculateTorque	modules/simu/simuv3/engine.cpp	/^tdble CalculateTorque (tEngine* engine, tdble rads)$/;"	f
CalculateTrack	tools/trackgen/track.cpp	/^void CalculateTrack(tTrack *Track, void *TrackHandle)$/;"	f
Camera	topview/Camera.hpp	/^	Camera() {$/;"	f	class:kmuvcl::Camera
Camera	topview/Camera.hpp	/^	Camera(float eyex, float eyey, float eyez, float viewx, float viewy,$/;"	f	class:kmuvcl::Camera
Camera	topview/Camera.hpp	/^class Camera {$/;"	c	namespace:kmuvcl
CarEditId	libs/confscreens/driverconfig.cpp	/^static int CarEditId;$/;"	v	file:
CarElt	interfaces/car.h	/^typedef struct CarElt {$/;"	s
CarPenalty	interfaces/car.h	/^typedef struct CarPenalty {$/;"	s
CarPitSetupFilenames	libs/robottools/rttrack.cpp	/^static const char* CarPitSetupFilenames[6] = { "practice", "qualifying", "race", "backup1", "backup2", "backup3" };$/;"	v	file:
CarSoundData	modules/graphic/ssggraph/CarSoundData.cpp	/^CarSoundData::CarSoundData(int id, SoundInterface* sound_interface)$/;"	f	class:CarSoundData
CarSoundData	modules/graphic/ssggraph/CarSoundData.h	/^class CarSoundData {$/;"	c
Cardata	drivers/bt/cardata.cpp	/^Cardata::Cardata(tSituation *s)$/;"	f	class:Cardata
Cardata	drivers/bt/cardata.h	/^class Cardata {$/;"	c
Cardata	drivers/damned/cardata.cpp	/^Cardata::Cardata(tSituation *s)$/;"	f	class:Cardata
Cardata	drivers/damned/cardata.h	/^class Cardata {$/;"	c
Cardata	drivers/olethros/cardata.cpp	/^Cardata::Cardata(tSituation* s)$/;"	f	class:olethros::Cardata
Cardata	drivers/olethros/cardata.h	/^class Cardata {$/;"	c	namespace:olethros
CarlightAnchor	modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *CarlightAnchor = 0;$/;"	v
CarsAnchor	modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *CarsAnchor = 0;$/;"	v
CarsAnchorTmp	modules/graphic/ssggraph/grcar.cpp	/^ssgBranch *CarsAnchorTmp = 0;$/;"	v
CarsInfoList	libs/confscreens/driverconfig.cpp	/^    tCarsInfoHead	CarsInfoList;$/;"	m	struct:tCatInfo	file:
CatEditId	libs/confscreens/driverconfig.cpp	/^static int CatEditId;$/;"	v	file:
CatLabelId	libs/racescreens/trackselect.cpp	/^static int CatLabelId;$/;"	v	file:
CategoryList	libs/racescreens/trackselect.cpp	/^static tFList *CategoryList;$/;"	v	file:
CatsInfoList	libs/confscreens/driverconfig.cpp	/^static tCatsInfoHead CatsInfoList;$/;"	v	file:
Cd	modules/simu/simuv2/aero.h	/^    tdble	Cd;		\/* for aspiration *\/$/;"	m	struct:__anon27
Cd	modules/simu/simuv3/aero.h	/^    tdble	Cd;		\/* for aspiration *\/$/;"	m	struct:__anon46
CfgHandle	tools/trackgen/maintrackgen.cpp	/^void *CfgHandle;$/;"	v
ChangeCar	libs/confscreens/driverconfig.cpp	/^ChangeCar(void *vp)$/;"	f	file:
ChangeCat	libs/confscreens/driverconfig.cpp	/^ChangeCat(void *vp)$/;"	f	file:
ChangeFov	libs/confscreens/graphconfig.cpp	/^static void ChangeFov(void * \/* dummy *\/)$/;"	f	file:
ChangeLevel	libs/confscreens/driverconfig.cpp	/^ChangeLevel(void *vp)$/;"	f	file:
ChangeLodFactor	libs/confscreens/graphconfig.cpp	/^static void ChangeLodFactor(void * \/* dummy *\/)$/;"	f	file:
ChangeMaxFreq	libs/tgfclient/screen.cpp	/^ChangeMaxFreq(void * \/* dummy *\/)$/;"	f	file:
ChangeName	libs/confscreens/driverconfig.cpp	/^ChangeName(void * \/* dummy *\/)$/;"	f	file:
ChangeNum	libs/confscreens/driverconfig.cpp	/^ChangeNum(void * \/* dummy *\/)$/;"	f	file:
ChangePits	libs/confscreens/driverconfig.cpp	/^ChangePits(void * \/* dummy *\/)$/;"	f	file:
ChangeReverse	libs/confscreens/driverconfig.cpp	/^ChangeReverse(void *vdelta)$/;"	f	file:
ChangeSimuVersion	libs/confscreens/simuconfig.cpp	/^ChangeSimuVersion(void *vp)$/;"	f	file:
ChangeSkid	libs/confscreens/graphconfig.cpp	/^static void ChangeSkid(void * \/* dummy *\/)$/;"	f	file:
ChangeSmoke	libs/confscreens/graphconfig.cpp	/^static void ChangeSmoke(void * \/* dummy *\/)$/;"	f	file:
ChangeTrans	libs/confscreens/driverconfig.cpp	/^ChangeTrans(void * \/* dummy *\/)$/;"	f	file:
Channel	modules/telemetry/telemetry.cpp	/^typedef struct Channel $/;"	s	file:
Char	libs/tgfclient/guifont.h	/^    GLFONTCHAR *Char;$/;"	m	struct:__anon137
CharacterData	libs/txml/xml.cpp	/^CharacterData(void *userData, const char *s, int len)$/;"	f	file:
CheckMatchingToken	drivers/olethros/learn.cpp	/^inline bool CheckMatchingToken (const char* tag, StringBuffer* buf, FILE* f)$/;"	f
CheckMatchingToken	libs/learning/ANN.cpp	/^static inline bool CheckMatchingToken (const char* tag, StringBuffer* buf, FILE* f)$/;"	f	file:
ClearList	libs/learning/List.cpp	/^int ClearList(LIST* list)$/;"	f
Cleared	modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
Clift	modules/simu/simuv2/aero.h	/^    tdble	Clift[2];	\/* front & rear lift due to body not wings *\/$/;"	m	struct:__anon27
Clift	modules/simu/simuv3/aero.h	/^    tdble	Clift[2];	\/* front & rear lift due to body not wings *\/$/;"	m	struct:__anon46
CloseFile	libs/learning/learn_debug.h	28;"	d
Cmd	libs/confscreens/controlconfig.cpp	/^static tCmdInfo Cmd[] = {$/;"	v	file:
Cmd	libs/confscreens/joystickconfig.cpp	/^static tCmdInfo *Cmd;$/;"	v	file:
Cmd	libs/confscreens/mouseconfig.cpp	/^static tCmdInfo *Cmd;$/;"	v	file:
CmdControl	drivers/human/human.h	/^	tControlCmd	*CmdControl;$/;"	m	struct:HumanContext
CmdControlRef	drivers/human/pref.cpp	/^tControlCmd CmdControlRef[] = { { HM_ATT_UP_SHFT, GFCTRL_TYPE_JOY_BUT, 0, NULL,$/;"	v
ColWidth	tools/texmapper/maintexmapper.cpp	/^float	*ColWidth;$/;"	v
CollDet	drivers/inferno2/common.cpp	/^CollDet(tCarElt* car, int idx, tSituation *s, tdble Curtime, tdble dny)$/;"	f
Color	topview/topview.cpp	/^struct Color {$/;"	s	file:
Common_point	modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^typedef bool (*Common_point)(const Shape&, const Shape&, $/;"	t
Common_pointTable	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^typedef AlgoTable<Common_point> Common_pointTable;$/;"	t	file:
Complex	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  Complex() {}$/;"	f	class:Complex
Complex	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^class Complex : public Shape {$/;"	c
ComplexList	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef vector<Complex *> ComplexList;$/;"	t	file:
Cone	modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^  Cone(Scalar r, Scalar h) : $/;"	f	class:Cone
Cone	modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^class Cone : public Convex {$/;"	c
ConfControls	libs/confscreens/driverconfig.cpp	/^ConfControls(void * \/* dummy *\/ )$/;"	f	file:
ConfidenceDistribution	libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	g
ConfigBackHookActivate	libs/raceengineclient/racemanmenu.cpp	/^ConfigBackHookActivate(void * \/* dummy *\/)$/;"	f	file:
ConfigBackHookHandle	libs/raceengineclient/racemanmenu.cpp	/^static void	*ConfigBackHookHandle = 0;$/;"	v	file:
Connection	libs/learning/ANN.h	/^} Connection;$/;"	t	typeref:struct:Connection_
Connection_	libs/learning/ANN.h	/^typedef struct Connection_ {$/;"	s
ConsFactor	drivers/inferno2/inferno2.cpp	/^tdble ConsFactor[10]     = {0.0007f};$/;"	v
ConstantFriction	modules/simu/simuv3/collide.cpp	/^extern tdble ConstantFriction (tdble u, tdble a, tdble dt)$/;"	f
ConstantFriction	modules/simu/simuv3/collide.cpp	/^extern tdble ConstantFriction (tdble u, tdble du)$/;"	f
Convex	modules/simu/simuv2/SOLID-2.0/src/Convex.h	/^class Convex : public Shape {$/;"	c
Cosz	modules/simu/simuv2/carstruct.h	/^    tdble	Cosz;$/;"	m	struct:__anon23
Cosz	modules/simu/simuv3/carstruct.h	/^    tdble	Cosz;$/;"	m	struct:__anon42
CountRelief	tools/trackgen/relief.cpp	/^CountRelief(int interior, int *nb_vert, int *nb_seg)$/;"	f
CounterList	modules/graphic/ssggraph/grcar.h	/^    GLuint		CounterList;$/;"	m	struct:__anon4
CreateSegRing	modules/track/track4.cpp	/^static void CreateSegRing(void *TrackHandle, tTrack *theTrack, int ext)$/;"	f	file:
CreateSegRing3	modules/track/track3.cpp	/^CreateSegRing3(void *TrackHandle, tTrack *theTrack, tTrackSeg *start, tTrackSeg *end, int ext)$/;"	f	file:
CurrentCmd	libs/confscreens/controlconfig.cpp	/^static tCmdInfo* CurrentCmd;$/;"	v	file:
CurrentSection	libs/confscreens/controlconfig.cpp	/^static char	CurrentSection[CURRENTSECTIONSIZE];$/;"	v	file:
Cylinder	modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	/^  Cylinder(Scalar r, Scalar h) : $/;"	f	class:Cylinder
Cylinder	modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	/^class Cylinder : public Convex {$/;"	c
D	tools/trackgen/easymesh.cpp	56;"	d	file:
D4WD	drivers/berniw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon152
D4WD	drivers/berniw2/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon196
D4WD	drivers/berniw3/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon175
D4WD	drivers/human/human.cpp	82;"	d	file:
D4WD	drivers/human/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon187
D4WD	drivers/inferno/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon161
D4WD	drivers/lliaw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon207
D4WD	drivers/tita/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon168
DATA	tools/accc/ac3dload.cpp	44;"	d	file:
DATA	tools/trackgen/Makefile	/^DATA         	= trackgen.xml$/;"	m
DATADIR	tools/accc/Makefile	/^DATADIR		= tools\/accc$/;"	m
DATADIR	tools/trackgen/Makefile	/^DATADIR      	= tools\/trackgen$/;"	m
DATASUBDIRS	modules/simu/Makefile	/^DATASUBDIRS	= $(SUBDIRS)$/;"	m
DATA_SIZE	predictor/predict.py	/^DATA_SIZE = 30*3$/;"	v
DATA_SIZE	predictor/train.py	/^DATA_SIZE = 30*3$/;"	v
DATA_SIZE	predictor/train2.py	/^DATA_SIZE = 30*3$/;"	v
DBG_OPTIMISE	drivers/olethros/Trajectory.cpp	32;"	d	file:
DBG_SET_NAME	modules/graphic/ssggraph/grutil.h	34;"	d
DBG_SET_NAME	modules/graphic/ssggraph/grutil.h	45;"	d
DBL_EPSILON	windows/include/plib/ul.h	170;"	d
DD	modules/graphic/ssggraph/grboard.cpp	569;"	d	file:
DEBUG_H	libs/learning/learn_debug.h	2;"	d
DEC_ARG_CORRUPT	libs/learning/learn_debug.h	41;"	d
DEC_ARG_INVALID	libs/learning/learn_debug.h	40;"	d
DEC_MASK	libs/learning/learn_debug.h	44;"	d
DEC_MEM_ERROR	libs/learning/learn_debug.h	37;"	d
DEC_RES_INVALID	libs/learning/learn_debug.h	38;"	d
DEC_SANITY_ERROR	libs/learning/learn_debug.h	39;"	d
DEFAULT_ATTRIBUTE	libs/txml/xmlparse.c	/^} DEFAULT_ATTRIBUTE;$/;"	t	typeref:struct:__anon114	file:
DEFAULT_SIZE	libs/tgf/hash.cpp	51;"	d	file:
DEFINE_UTF16_TO_UTF16	libs/txml/xmltok.c	416;"	d	file:
DEFINE_UTF16_TO_UTF8	libs/txml/xmltok.c	353;"	d	file:
DEG2RAD	libs/tgf/tgf.h	77;"	d
DEGPRAD	modules/track/track.cpp	/^const tdble DEGPRAD = 180.0 \/ PI;   \/* degrees per radian *\/$/;"	v
DEGS_PER_RAD	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar DEGS_PER_RAD = 57.29577951308232286465;$/;"	v
DELTAT	modules/graphic/ssggraph/grsmoke.h	7;"	d
DELTATSTRIP	modules/graphic/ssggraph/grskidmarks.h	3;"	d
DETAILED	modules/graphic/ssggraph/grmain.h	/^enum EWheelDetail { DETAILED, SIMPLE };$/;"	e	enum:EWheelDetail
DFWD	drivers/berniw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon152
DFWD	drivers/berniw2/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon196
DFWD	drivers/berniw3/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon175
DFWD	drivers/human/human.cpp	81;"	d	file:
DFWD	drivers/human/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon187
DFWD	drivers/inferno/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon161
DFWD	drivers/lliaw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon207
DFWD	drivers/tita/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon168
DIFF_FREE	modules/simu/simuv2/differential.h	37;"	d
DIFF_FREE	modules/simu/simuv3/differential.h	37;"	d
DIFF_LIMITED_SLIP	modules/simu/simuv2/differential.h	38;"	d
DIFF_LIMITED_SLIP	modules/simu/simuv3/differential.h	38;"	d
DIFF_LOCKING	modules/simu/simuv3/differential.h	40;"	d
DIFF_NONE	modules/simu/simuv2/differential.h	35;"	d
DIFF_NONE	modules/simu/simuv3/differential.h	35;"	d
DIFF_SPOOL	modules/simu/simuv2/differential.h	36;"	d
DIFF_SPOOL	modules/simu/simuv3/differential.h	36;"	d
DIFF_VISCOUS_COUPLER	modules/simu/simuv2/differential.h	39;"	d
DIFF_VISCOUS_COUPLER	modules/simu/simuv3/differential.h	39;"	d
DISABLED	modules/graphic/ssggraph/grsound.cpp	/^enum SoundMode {DISABLED, OPENAL_MODE, PLIB_MODE};$/;"	e	enum:SoundMode	file:
DIST	drivers/berniw/mycar.h	/^		double DIST;									\/* minimal distance to other cars [m] *\/$/;"	m	class:MyCar
DIST	drivers/berniw2/mycar.h	/^		double DIST;									\/* minimal distance to other cars [m] *\/$/;"	m	class:MyCar
DIST	drivers/berniw3/mycar.h	/^		double DIST;									\/* minimal distance to other cars [m] *\/$/;"	m	class:MyCar
DIST	drivers/human/mycar.h	/^		double DIST;									\/* minimal distance to other cars [m] *\/$/;"	m	class:MyCar
DIST	drivers/inferno/mycar.h	/^		double DIST;									\/\/ Minimal distance to other cars [m].$/;"	m	class:MyCar
DIST	drivers/lliaw/mycar.h	/^		double DIST;									\/\/ Minimal distance to other cars [m].$/;"	m	class:MyCar
DIST	drivers/tita/mycar.h	/^		double DIST;									\/\/ Minimal distance to other cars [m].$/;"	m	class:MyCar
DIST	libs/tgf/tgf.h	98;"	d
DISTANCE	drivers/data_list.h	/^			PITCH, 		ROLL, 			YAW_RATE, 	DISTANCE, 		POS_X, 		$/;"	e	enum:sensing_data_name
DISTCUTOFF	drivers/bt/driver.cpp	/^const float Driver::DISTCUTOFF = 200.0f;					\/\/ [m] How far to look, terminate while loops.$/;"	m	class:Driver	file:
DISTCUTOFF	drivers/bt/driver.h	/^		static const float DISTCUTOFF;$/;"	m	class:Driver
DISTCUTOFF	drivers/damned/driver.cpp	/^const float Driver::DISTCUTOFF = 200.0f;					\/\/ [m] How far to look, terminate while loops.$/;"	m	class:Driver	file:
DISTCUTOFF	drivers/damned/driver.h	/^		static const float DISTCUTOFF;$/;"	m	class:Driver
DISTCUTOFF	drivers/olethros/driver.cpp	/^    const float Driver::DISTCUTOFF = 200.0f;						\/\/\/< [m] How far to look, terminate while loops.$/;"	m	class:olethros::Driver	file:
DISTCUTOFF	drivers/olethros/driver.h	/^	static const float DISTCUTOFF;$/;"	m	class:olethros::Driver
DISTRIBUTION_H	libs/learning/Distribution.h	14;"	d
DIST_INTERVAL	modules/graphic/ssggraph/grskidmarks.h	6;"	d
DLLEXT	linux/osspec.h	25;"	d
DLLEXT	windows/osspec.h	26;"	d
DOC	modules/simu/simuv2/SOLID-2.0/doc/Makefile	/^DOC = solid2$/;"	m
DO_LEAD_CASE	libs/txml/xmltok_impl.c	1646;"	d	file:
DRWD	drivers/berniw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon152
DRWD	drivers/berniw2/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon196
DRWD	drivers/berniw3/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon175
DRWD	drivers/human/human.cpp	80;"	d	file:
DRWD	drivers/human/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon187
DRWD	drivers/inferno/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon161
DRWD	drivers/lliaw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon207
DRWD	drivers/tita/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon168
DTD	libs/txml/xmlparse.c	/^} DTD;$/;"	t	typeref:struct:__anon116	file:
DT_NO_RESPONSE	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_NO_RESPONSE,$/;"	e	enum:DtResponseType
DT_POLYGON	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_POLYGON,$/;"	e	enum:DtPolyType
DT_POLYHEDRON	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_POLYHEDRON$/;"	e	enum:DtPolyType
DT_SIMPLEX	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_SIMPLEX,$/;"	e	enum:DtPolyType
DT_SIMPLE_RESPONSE	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_SIMPLE_RESPONSE,$/;"	e	enum:DtResponseType
DT_SMART_RESPONSE	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_SMART_RESPONSE,$/;"	e	enum:DtResponseType
DT_WITNESSED_RESPONSE	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_WITNESSED_RESPONSE$/;"	e	enum:DtResponseType
DelayRepeat	libs/tgfclient/gui.cpp	/^static tdble DelayRepeat;$/;"	v	file:
DeleteANN	libs/learning/ANN.cpp	/^int DeleteANN(ANN * ann)$/;"	f
DeletePlayer	libs/confscreens/driverconfig.cpp	/^DeletePlayer(void * \/* dummy *\/)$/;"	f	file:
DepthLabelId	libs/tgfclient/screen.cpp	/^static int	DepthLabelId;$/;"	v	file:
DepthPrevNext	libs/tgfclient/screen.cpp	/^DepthPrevNext(void *vdelta)$/;"	f	file:
Depthlist	libs/tgfclient/screen.cpp	/^static const char *Depthlist[] = {"24", "32", "16"};$/;"	v	file:
DescId	libs/racescreens/trackselect.cpp	/^static int DescId;$/;"	v	file:
Det	tools/trackgen/easymesh.cpp	/^	double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
DevCalibrate	libs/confscreens/controlconfig.cpp	/^static void DevCalibrate(void *menu)$/;"	f	file:
DiscreteDistribution	libs/learning/Distribution.cpp	/^DiscreteDistribution::DiscreteDistribution() {$/;"	f	class:DiscreteDistribution
DiscreteDistribution	libs/learning/Distribution.cpp	/^DiscreteDistribution::DiscreteDistribution(int N) {$/;"	f	class:DiscreteDistribution
DiscreteDistribution	libs/learning/Distribution.h	/^class DiscreteDistribution : public Distribution {$/;"	c
DiscretePolicy	libs/learning/policy.cpp	/^DiscretePolicy::DiscretePolicy (int n_states, int n_actions, real alpha,$/;"	f	class:DiscretePolicy
DiscretePolicy	libs/learning/policy.h	/^class DiscretePolicy$/;"	c
Display	tools/texmapper/maintexmapper.cpp	/^Display(void)$/;"	f
DisplayCount	tools/texmapper/maintexmapper.cpp	/^int DisplayCount = 0;$/;"	v
DisplayMode	libs/tgfclient/fg_gm.cpp	/^	XF86VidModeModeLine DisplayMode;		\/\/ Current screen's display settings.$/;"	m	struct:tagSFG_Display	file:
DisplayModeClock	libs/tgfclient/fg_gm.cpp	/^	int					DisplayModeClock;   \/\/ The display mode's refresh rate.$/;"	m	struct:tagSFG_Display	file:
DistanceOfViewHashing	modules/graphic/ssggraph/grscene.h	/^typedef  struct DistanceOfViewHashing$/;"	s
DistanceOfViewHashing_t	modules/graphic/ssggraph/grscene.h	/^} DistanceOfViewHashing_t;$/;"	t	typeref:struct:DistanceOfViewHashing
Distribution	libs/learning/Distribution.h	/^	Distribution() {}$/;"	f	class:Distribution
Distribution	libs/learning/Distribution.h	/^class Distribution {$/;"	c
DllEntryPoint	drivers/human/human.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllEntryPoint	drivers/inferno2/inferno2.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllEntryPoint	modules/simu/simuv2/simuitf.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllEntryPoint	modules/simu/simuv3/simuitf.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllEntryPoint	modules/telemetry/telemetryitf.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllEntryPoint	modules/track/trackitf.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllMain	libs/txml/dllmain.c	/^BOOL WINAPI DllMain(HANDLE hInst, ULONG ul_reason_for_call, LPVOID lpReserved)$/;"	f
DmTrack	drivers/inferno2/inferno2.cpp	/^tTrack *DmTrack;$/;"	v
DoV	modules/graphic/ssggraph/grscene.h	/^typedef struct DoV $/;"	s
DoV_t	modules/graphic/ssggraph/grscene.h	/^} DoV_t;$/;"	t	typeref:struct:DoV
DoVfactor	interfaces/track.h	/^    tdble DoVfactor;            \/* the factor to use in calculating DoV for this Seg *\/$/;"	m	struct:trackSeg
DoVfactor	modules/track/track4.cpp	/^static tdble DoVfactor=1.0;$/;"	v	file:
DotProd	drivers/olethros/geometry.cpp	/^float DotProd(Vector* A, Vector* B)$/;"	f
Driver	drivers/bt/driver.cpp	/^Driver::Driver(int index)$/;"	f	class:Driver
Driver	drivers/bt/driver.h	/^class Driver {$/;"	c
Driver	drivers/damned/driver.cpp	/^Driver::Driver(int index)$/;"	f	class:Driver
Driver	drivers/damned/driver.h	/^class Driver {$/;"	c
Driver	drivers/olethros/driver.cpp	/^    Driver::Driver(int index)$/;"	f	class:olethros::Driver
Driver	drivers/olethros/driver.h	/^class Driver {$/;"	c	namespace:olethros
Driver	drivers/sparkle/driver.cpp	/^Driver::Driver(int index)$/;"	f	class:Driver
Driver	drivers/sparkle/driver.h	/^class Driver {$/;"	c
DrvElt	libs/racescreens/driverselect.cpp	/^typedef struct DrvElt$/;"	s	file:
DrvList	libs/racescreens/driverselect.cpp	/^tDrvListHead DrvList;$/;"	v
DtCollData	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef struct DtCollData {$/;"	s
DtCollData	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^} DtCollData;$/;"	t	typeref:struct:DtCollData
DtCount	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef unsigned int DtCount;$/;"	t
DtIndex	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef unsigned int DtIndex;$/;"	t
DtObjectRef	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef void *DtObjectRef;$/;"	t
DtPolyType	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef enum DtPolyType {$/;"	g
DtPolyType	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^} DtPolyType;$/;"	t	typeref:enum:DtPolyType
DtResponse	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef void (*DtResponse)($/;"	t
DtResponseType	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef enum DtResponseType { $/;"	g
DtResponseType	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^} DtResponseType;$/;"	t	typeref:enum:DtResponseType
DtScalar	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef double DtScalar;$/;"	t
DtShapeRef	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef void *DtShapeRef;$/;"	t
DtVector	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef DtScalar DtVector[3];$/;"	t
DynGC	interfaces/car.h	/^	tDynPt DynGC; \/**< GC data (car axis) *\/$/;"	m	struct:__anon78
DynGC	modules/simu/simuv2/carstruct.h	/^    tDynPt	DynGC;		\/* GC local data except position *\/$/;"	m	struct:__anon23
DynGC	modules/simu/simuv3/carstruct.h	/^    tDynPt	DynGC;		\/* GC local data except position *\/$/;"	m	struct:__anon42
DynGCg	interfaces/car.h	/^	tDynPt DynGCg; \/**< GC data (world axis) *\/$/;"	m	struct:__anon78
DynGCg	modules/simu/simuv2/carstruct.h	/^    tDynPt	DynGCg;		\/* GC global data *\/$/;"	m	struct:__anon23
DynGCg	modules/simu/simuv3/carstruct.h	/^    tDynPt	DynGCg;		\/* GC global data *\/$/;"	m	struct:__anon42
DynOffset	drivers/inferno2/inferno2.cpp	/^tdble DynOffset[10] = {0.0};$/;"	v
ELEMENT_TYPE	libs/txml/xmlparse.c	/^} ELEMENT_TYPE;$/;"	t	typeref:struct:__anon115	file:
ELearning	libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
ENCODING	libs/txml/xmltok.h	/^typedef struct encoding ENCODING;$/;"	t	typeref:struct:encoding
ENCODING_MAX	libs/txml/xmltok.c	797;"	d	file:
ENDPOINT_H	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	28;"	d
ENGINE_RPM	drivers/data_list.h	/^			WIDTH, 		FUEL,			ENGINE_RPM, 	GEAR_RATIO, 		GEAR, 		$/;"	e	enum:sensing_data_name
ENTITY	libs/txml/xmlparse.c	/^} ENTITY;$/;"	t	typeref:struct:__anon111	file:
EPSILON	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar EPSILON =       1.0e-10;$/;"	v
EPSILON2	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar EPSILON2 =      1.0e-20;$/;"	v
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	windows/include/GL/wglext.h	128;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	windows/include/GL/wglext.h	127;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	windows/include/GL/wglext.h	183;"	d
EWheelDetail	modules/graphic/ssggraph/grmain.h	/^enum EWheelDetail { DETAILED, SIMPLE };$/;"	g
EXACT_DIST	drivers/bt/opponent.cpp	/^const float Opponent::EXACT_DIST = 12.0f;				\/\/ [m] if the estimated distance is smaller, compute it more accurate$/;"	m	class:Opponent	file:
EXACT_DIST	drivers/bt/opponent.h	/^		static const float EXACT_DIST;$/;"	m	class:Opponent
EXACT_DIST	drivers/damned/opponent.cpp	/^const float Opponent::EXACT_DIST = 12.0f;				\/\/ [m] if the estimated distance is smaller, compute it more accurate$/;"	m	class:Opponent	file:
EXACT_DIST	drivers/damned/opponent.h	/^		static const float EXACT_DIST;$/;"	m	class:Opponent
EXACT_DIST	drivers/olethros/opponent.cpp	/^const float Opponent::EXACT_DIST = 12.0;				\/\/ [m] if the estimated distance is smaller, compute it more accurate$/;"	m	class:olethros::Opponent	file:
EXACT_DIST	drivers/olethros/opponent.h	/^		static const float EXACT_DIST;$/;"	m	class:olethros::Opponent
EXPDIR	interfaces/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	libs/client/Makefile	/^EXPDIR    = include$/;"	m
EXPDIR	libs/confscreens/Makefile	/^EXPDIR    = include$/;"	m
EXPDIR	libs/learning/Makefile	/^EXPDIR       = include\/learning$/;"	m
EXPDIR	libs/math/Makefile	/^EXPDIR       = include\/tmath$/;"	m
EXPDIR	libs/musicplayer/Makefile	/^EXPDIR  = include\/musicplayer$/;"	m
EXPDIR	libs/portability/Makefile	/^EXPDIR       = include$/;"	m
EXPDIR	libs/raceengineclient/Makefile	/^EXPDIR       = include$/;"	m
EXPDIR	libs/racescreens/Makefile	/^EXPDIR    = include$/;"	m
EXPDIR	libs/robottools/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	libs/tgf/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	libs/tgfclient/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	libs/txml/Makefile	/^EXPDIR      = include$/;"	m
EXPDIR	linux/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	modules/simu/simuv2/SOLID-2.0/include/3D/Makefile	/^EXPDIR       = include\/3D$/;"	m
EXPDIR	modules/simu/simuv2/SOLID-2.0/include/SOLID/Makefile	/^EXPDIR       = include\/SOLID$/;"	m
EXPINCDIRS	Makefile	/^EXPINCDIRS	= interfaces libs linux modules$/;"	m
EXPINCDIRS	libs/Makefile	/^EXPINCDIRS	= txml tgf tgfclient client confscreens racescreens robottools raceengineclient learning \\$/;"	m
EXPINCDIRS	modules/Makefile	/^EXPINCDIRS      = simu$/;"	m
EXPINCDIRS	modules/simu/Makefile	/^EXPINCDIRS	= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
EXPINCDIRS	modules/simu/simuv2/Makefile	/^EXPINCDIRS	= SOLID-2.0$/;"	m
EXPINCDIRS	modules/simu/simuv2/SOLID-2.0/Makefile	/^EXPINCDIRS	= include$/;"	m
EXPINCDIRS	modules/simu/simuv2/SOLID-2.0/include/Makefile	/^EXPINCDIRS	= 3D SOLID$/;"	m
EXPORTS	interfaces/Makefile	/^EXPORTS = $(shell find * -maxdepth 0 -name '*.h' -print)$/;"	m
EXPORTS	libs/client/Makefile	/^EXPORTS   = client.h exitmenu.h$/;"	m
EXPORTS	libs/confscreens/Makefile	/^EXPORTS   = driverconfig.h joystickconfig.h mouseconfig.h controlconfig.h graphconfig.h\\$/;"	m
EXPORTS	libs/learning/Makefile	/^EXPORTS      = policy.h ann_policy.h ANN.h learn_debug.h real.h string_utils.h List.h MathFunctions.h Distribution.h$/;"	m
EXPORTS	libs/math/Makefile	/^EXPORTS      = linalg_t.h  v2_t.h  v3_t.h  v4_t.h straight2_t.h$/;"	m
EXPORTS	libs/musicplayer/Makefile	/^EXPORTS = musicplayer.h SoundStream.h OggSoundStream.h OpenALMusicPlayer.h$/;"	m
EXPORTS	libs/portability/Makefile	/^EXPORTS      = portability.h$/;"	m
EXPORTS	libs/raceengineclient/Makefile	/^EXPORTS      = singleplayer.h raceinit.h$/;"	m
EXPORTS	libs/racescreens/Makefile	/^EXPORTS   = racescreens.h$/;"	m
EXPORTS	libs/robottools/Makefile	/^EXPORTS = robottools.h$/;"	m
EXPORTS	libs/tgf/Makefile	/^EXPORTS = tgf.h os.h$/;"	m
EXPORTS	libs/tgfclient/Makefile	/^EXPORTS = tgfclient.h screen_properties.h glfeatures.h$/;"	m
EXPORTS	libs/txml/Makefile	/^EXPORTS     = xml.h xmlparse.h$/;"	m
EXPORTS	linux/Makefile	/^EXPORTS = osspec.h$/;"	m
EXPORTS	modules/simu/simuv2/SOLID-2.0/include/3D/Makefile	/^EXPORTS      = Basic.h  Matrix.h  Point.h  Quaternion.h  Tuple3.h  Tuple4.h  Vector.h$/;"	m
EXPORTS	modules/simu/simuv2/SOLID-2.0/include/SOLID/Makefile	/^EXPORTS      = solid.h$/;"	m
EXP_COST	drivers/olethros/Trajectory.cpp	31;"	d	file:
EX_PI	modules/graphic/ssggraph/sound_defines.h	4;"	d
EX_PI	modules/graphic/ssggraph/sound_defines.h	6;"	d
EditboxValue	libs/confscreens/controlconfig.cpp	/^} EditboxValue;$/;"	t	typeref:struct:__anon123	file:
ElevationFile	tools/trackgen/maintrackgen.cpp	/^char *ElevationFile;$/;"	v
ElvImage	tools/trackgen/elevation.cpp	/^static unsigned char	*ElvImage;$/;"	v	file:
ElvOk	tools/trackgen/elevation.cpp	/^static int	ElvOk = 0;$/;"	v	file:
Em	modules/simu/simuv3/wheel.h	/^	tdble   Em; \/\/ estimate of mass$/;"	m	struct:__anon33
Encounter	modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^  Encounter(ObjectPtr o1, ObjectPtr o2) {$/;"	f	class:Encounter
Encounter	modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^class Encounter {$/;"	c
Endpoint	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^Endpoint::Endpoint(int axis, Side s, const Object *obj) : $/;"	f	class:Endpoint
Endpoint	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Endpoint() : objPtr(0) {}$/;"	f	class:Endpoint
Endpoint	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^class Endpoint {$/;"	c
EndpointList	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^  EndpointList() {$/;"	f	class:EndpointList
EndpointList	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^class EndpointList {$/;"	c	file:
EstimateRadius	drivers/olethros/driver.cpp	/^    float Driver::EstimateRadius (tTrackSeg* seg, tTrackSeg* prev_seg, tTrackSeg* next_seg) $/;"	f	class:olethros::Driver
EstimateRadius2	drivers/olethros/driver.cpp	/^    float Driver::EstimateRadius2 (tTrackSeg* seg) $/;"	f	class:olethros::Driver
EstimateSphere	drivers/olethros/geometry.cpp	/^void EstimateSphere (std::vector<Vector> P, ParametricSphere* sphere)$/;"	f
EstimateTorque	drivers/olethros/driver.cpp	/^    float Driver::EstimateTorque (float rpm)$/;"	f	class:olethros::Driver
EuclideanNorm	libs/learning/MathFunctions.cpp	/^real EuclideanNorm (real* a, real* b, int n)$/;"	f
EulerToQuat	modules/simu/simuv3/car.cpp	/^void EulerToQuat (sgQuat quat, tdble h, tdble p, tdble r)$/;"	f
Exists	modules/simu/simuv3/Options.h	/^    bool Exists(char* name) $/;"	f	class:OptionList
ExitGraphicOptions	libs/confscreens/graphconfig.cpp	/^static void ExitGraphicOptions(void *prevMenu)$/;"	f	file:
Exp	libs/learning/ANN.cpp	/^real Exp(real x)$/;"	f
Exp_d	libs/learning/ANN.cpp	/^real Exp_d(real x)$/;"	f
ExponentialDistribution	libs/learning/Distribution.h	/^	ExponentialDistribution() {m=0.0; l=1.0;}$/;"	f	class:ExponentialDistribution
ExponentialDistribution	libs/learning/Distribution.h	/^	ExponentialDistribution(real lambda)$/;"	f	class:ExponentialDistribution
ExponentialDistribution	libs/learning/Distribution.h	/^	ExponentialDistribution(real mean, real var)$/;"	f	class:ExponentialDistribution
ExponentialDistribution	libs/learning/Distribution.h	/^class ExponentialDistribution : public ParametricDistribution {$/;"	c
ExtHeight	tools/trackgen/easymesh.cpp	/^static tdble 	ExtHeight;$/;"	v	file:
ExtHeight	tools/trackgen/maintrackgen.cpp	/^float ExtHeight = 5.0;$/;"	v
ExteriorList	tools/trackgen/relief.cpp	/^tRingListHead	ExteriorList;$/;"	v
F	libs/tgf/tgf.h	/^    t3Dd F; \/**< Forces *\/$/;"	m	struct:__anon98
F	tools/trackgen/easymesh.h	/^    double x, y, z, F;$/;"	m	struct:nod
F0	modules/simu/simuv2/susp.h	/^    tdble F0;         \/* initial force *\/$/;"	m	struct:__anon22
F0	modules/simu/simuv3/susp.h	/^    tdble F0;         \/* initial force *\/$/;"	m	struct:__anon41
FALSE	tools/accc/accc.h	28;"	d
FALSE	windows/include/plib/ul.h	175;"	d
FAR	windows/include/pngconf.h	481;"	d
FAR	windows/include/pngconf.h	510;"	d
FAR	windows/include/zconf.h	257;"	d
FAR	windows/include/zconf.h	259;"	d
FAR	windows/include/zconf.h	266;"	d
FAR	windows/include/zconf.h	268;"	d
FAR	windows/include/zconf.h	292;"	d
FAR	windows/include/zconf.h	329;"	d
FARDATA	windows/include/pngconf.h	503;"	d
FARDATA	windows/include/pngconf.h	515;"	d
FCLOSE	modules/graphic/ssggraph/grloadac.cpp	38;"	d	file:
FEET2M	libs/tgf/tgf.h	78;"	d
FGETC	modules/graphic/ssggraph/grloadac.cpp	36;"	d	file:
FGETS	modules/graphic/ssggraph/grloadac.cpp	35;"	d	file:
FILE_PATH	predictor/train.py	/^FILE_PATH = "data5.txt"$/;"	v
FILE_PATH	predictor/train2.py	/^FILE_PATH = "data5.txt"$/;"	v
FILTER_PREDICT_FEEDBACK	drivers/olethros/driver.cpp	/^    const float Driver::FILTER_PREDICT_FEEDBACK = 0.0f;        \/\/\/< [-] Feedback from prediction error to steer filter.$/;"	m	class:olethros::Driver	file:
FILTER_PREDICT_FEEDBACK	drivers/olethros/driver.h	/^	static const float FILTER_PREDICT_FEEDBACK;$/;"	m	class:olethros::Driver
FILTER_SLOT	modules/graphic/ssggraph/TorcsSound.h	25;"	d
FILTER_STEER_FEEDBACK	drivers/olethros/driver.cpp	/^    const float Driver::FILTER_STEER_FEEDBACK = 0.8f;        \/\/\/< [-] Feedback from steering to steer filter.$/;"	m	class:olethros::Driver	file:
FILTER_STEER_FEEDBACK	drivers/olethros/driver.h	/^	static const float FILTER_STEER_FEEDBACK;$/;"	m	class:olethros::Driver
FILTER_TARGET_FEEDBACK	drivers/olethros/driver.cpp	/^    const float Driver::FILTER_TARGET_FEEDBACK = 0.2f;        \/\/\/< [-] Feedback from target error to steer filter.$/;"	m	class:olethros::Driver	file:
FILTER_TARGET_FEEDBACK	drivers/olethros/driver.h	/^	static const float FILTER_TARGET_FEEDBACK;$/;"	m	class:olethros::Driver
FLT_EPSILON	windows/include/plib/ul.h	166;"	d
FLYSPEED	drivers/berniw/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;			\/* above this speed anti fly system is activated [m\/s] *\/$/;"	m	class:MyCar	file:
FLYSPEED	drivers/berniw/mycar.h	/^		static const double FLYSPEED;			\/* speed where antifly checking gets activated [m\/s] *\/$/;"	m	class:MyCar
FLYSPEED	drivers/berniw2/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;			\/* above this speed anti fly system is activated [m\/s] *\/$/;"	m	class:MyCar	file:
FLYSPEED	drivers/berniw2/mycar.h	/^		static const double FLYSPEED;			\/* speed where antifly checking gets activated [m\/s] *\/$/;"	m	class:MyCar
FLYSPEED	drivers/berniw3/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;			\/* above this speed anti fly system is activated [m\/s] *\/$/;"	m	class:MyCar	file:
FLYSPEED	drivers/berniw3/mycar.h	/^		static const double FLYSPEED;			\/* speed where antifly checking gets activated [m\/s] *\/$/;"	m	class:MyCar
FLYSPEED	drivers/human/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;			\/* above this speed anti fly system is activated [m\/s] *\/$/;"	m	class:MyCar	file:
FLYSPEED	drivers/human/mycar.h	/^		static const double FLYSPEED;			\/* speed where antifly checking gets activated [m\/s] *\/$/;"	m	class:MyCar
FLYSPEED	drivers/inferno/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;				\/\/ Above this speed anti flying system is activated [m\/s].$/;"	m	class:MyCar	file:
FLYSPEED	drivers/inferno/mycar.h	/^		static const double FLYSPEED;				\/\/ Speed where antifly checking gets activated [m\/s].$/;"	m	class:MyCar
FLYSPEED	drivers/lliaw/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;				\/\/ Above this speed anti flying system is activated [m\/s].$/;"	m	class:MyCar	file:
FLYSPEED	drivers/lliaw/mycar.h	/^		static const double FLYSPEED;				\/\/ Speed where antifly checking gets activated [m\/s].$/;"	m	class:MyCar
FLYSPEED	drivers/tita/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;				\/\/ Above this speed anti flying system is activated [m\/s].$/;"	m	class:MyCar	file:
FLYSPEED	drivers/tita/mycar.h	/^		static const double FLYSPEED;				\/\/ Speed where antifly checking gets activated [m\/s].$/;"	m	class:MyCar
FList	libs/tgf/tgf.h	/^typedef struct FList $/;"	s
FNIC	drivers/berniw/pathfinder.h	45;"	d
FNIC	drivers/berniw2/pathfinder.h	45;"	d
FNIC	drivers/berniw3/pathfinder.h	45;"	d
FNIC	drivers/human/pathfinder.h	45;"	d
FNIS	drivers/berniw/pathfinder.h	44;"	d
FNIS	drivers/berniw2/pathfinder.h	44;"	d
FNIS	drivers/berniw3/pathfinder.h	44;"	d
FNIS	drivers/human/pathfinder.h	44;"	d
FNPF	drivers/berniw/pathfinder.h	43;"	d
FNPF	drivers/berniw2/pathfinder.h	43;"	d
FNPF	drivers/berniw3/pathfinder.h	43;"	d
FNPF	drivers/human/pathfinder.h	43;"	d
FONT_NB	libs/tgfclient/guifont.cpp	42;"	d	file:
FOPEN	modules/graphic/ssggraph/grloadac.cpp	37;"	d	file:
FORMAT_INVALID	libs/musicplayer/SoundStream.h	/^			FORMAT_INVALID,$/;"	e	enum:SoundStream::SoundFormat
FORMAT_MONO16	libs/musicplayer/SoundStream.h	/^			FORMAT_MONO16,$/;"	e	enum:SoundStream::SoundFormat
FORMAT_STEREO16	libs/musicplayer/SoundStream.h	/^			FORMAT_STEREO16$/;"	e	enum:SoundStream::SoundFormat
FREE	interfaces/car.h	/^		NONE = 0, SPOOL = 1, FREE = 2, LIMITED_SLIP = 3, VISCOUS_COUPLER = 4$/;"	e	enum:__anon83::TDiffType
FREEZ	libs/tgf/tgf.h	61;"	d
FRNT	interfaces/car.h	43;"	d
FRNT_LFT	interfaces/car.h	40;"	d
FRNT_RGT	interfaces/car.h	39;"	d
FRONTCOLLDIST	drivers/bt/opponent.cpp	/^const float Opponent::FRONTCOLLDIST = 200.0f;			\/\/ [m] distance on the track to check other cars.$/;"	m	class:Opponent	file:
FRONTCOLLDIST	drivers/bt/opponent.h	/^		static const float FRONTCOLLDIST;$/;"	m	class:Opponent
FRONTCOLLDIST	drivers/damned/opponent.cpp	/^const float Opponent::FRONTCOLLDIST = 200.0f;			\/\/ [m] distance on the track to check other cars.$/;"	m	class:Opponent	file:
FRONTCOLLDIST	drivers/damned/opponent.h	/^		static const float FRONTCOLLDIST;$/;"	m	class:Opponent
FRONTCOLLDIST	drivers/olethros/opponent.cpp	/^const float Opponent::FRONTCOLLDIST = 200.0;			\/\/ [m] distance on the track to check other cars.$/;"	m	class:olethros::Opponent	file:
FRONTCOLLDIST	drivers/olethros/opponent.h	/^		static const float FRONTCOLLDIST;$/;"	m	class:olethros::Opponent
FRONTCOLLDIST	drivers/sparkle/opponent.cpp	/^float Opponent::FRONTCOLLDIST = 200.0;	\/* [m] distance on the track to check other cars *\/$/;"	m	class:Opponent	file:
FRONTCOLLDIST	drivers/sparkle/opponent.h	/^		static float FRONTCOLLDIST;$/;"	m	class:Opponent
FUEL	drivers/data_list.h	/^			WIDTH, 		FUEL,			ENGINE_RPM, 	GEAR_RATIO, 		GEAR, 		$/;"	e	enum:sensing_data_name
FUEL_SAFETY_MARGIN	drivers/inferno/mycar.cpp	/^const float MyCar::FUEL_SAFETY_MARGIN = 0.15f;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar	file:
FUEL_SAFETY_MARGIN	drivers/inferno/mycar.h	/^		static const float FUEL_SAFETY_MARGIN;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar
FUEL_SAFETY_MARGIN	drivers/lliaw/mycar.cpp	/^const float MyCar::FUEL_SAFETY_MARGIN = 0.15f;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar	file:
FUEL_SAFETY_MARGIN	drivers/lliaw/mycar.h	/^		static const float FUEL_SAFETY_MARGIN;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar
FUEL_SAFETY_MARGIN	drivers/tita/mycar.cpp	/^const float MyCar::FUEL_SAFETY_MARGIN = 0.15f;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar	file:
FUEL_SAFETY_MARGIN	drivers/tita/mycar.h	/^		static const float FUEL_SAFETY_MARGIN;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar
FULL_ACCEL_MARGIN	drivers/bt/driver.cpp	/^const float Driver::FULL_ACCEL_MARGIN = 1.0f;				\/\/ [m\/s] Margin reduce oscillation of brake\/acceleration.$/;"	m	class:Driver	file:
FULL_ACCEL_MARGIN	drivers/bt/driver.h	/^		static const float FULL_ACCEL_MARGIN;$/;"	m	class:Driver
FULL_ACCEL_MARGIN	drivers/damned/driver.cpp	/^const float Driver::FULL_ACCEL_MARGIN = 1.0f;				\/\/ [m\/s] Margin reduce oscillation of brake\/acceleration.$/;"	m	class:Driver	file:
FULL_ACCEL_MARGIN	drivers/damned/driver.h	/^		static const float FULL_ACCEL_MARGIN;$/;"	m	class:Driver
FULL_ACCEL_MARGIN	drivers/olethros/driver.cpp	/^    const float Driver::FULL_ACCEL_MARGIN = 3.0f;				\/\/\/< [m\/s] Margin reduce oscillation of brake\/acceleration.$/;"	m	class:olethros::Driver	file:
FULL_ACCEL_MARGIN	drivers/olethros/driver.h	/^	static const float FULL_ACCEL_MARGIN;$/;"	m	class:olethros::Driver
FULL_ACCEL_MARGIN	drivers/sparkle/driver.cpp	/^const float Driver::FULL_ACCEL_MARGIN = 1.0;				\/* [m\/s] *\/$/;"	m	class:Driver	file:
FULL_ACCEL_MARGIN	drivers/sparkle/driver.h	/^		static const float FULL_ACCEL_MARGIN;$/;"	m	class:Driver
F_old	modules/simu/simuv3/wheel.h	/^	tdble   F_old;$/;"	m	struct:__anon33
Face	tools/texmapper/maintexmapper.cpp	/^typedef struct Face$/;"	s	file:
FileList	libs/racescreens/fileselect.cpp	/^static tFList *FileList = NULL;$/;"	v	file:
FileSelected	libs/racescreens/fileselect.cpp	/^static tFList *FileSelected;$/;"	v	file:
FindCurveTarget	drivers/olethros/driver.cpp	/^    float Driver::FindCurveTarget(tTrackSeg* seg, Vector* C, float rmax)$/;"	f	class:olethros::Driver
FindItem	libs/learning/List.cpp	/^LISTITEM* FindItem (LIST* list, void* ptr)$/;"	f
FindStraightTarget	drivers/olethros/driver.cpp	/^    float Driver::FindStraightTarget(tTrackSeg* curve, tTrackSeg* seg, Vector* C, float rmax, bool& flag)$/;"	f	class:olethros::Driver
FirstListItem	libs/learning/List.cpp	/^LISTITEM* FirstListItem(LIST* list)$/;"	f
Fl	tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
FocDrvLabelId	libs/racescreens/driverselect.cpp	/^static int FocDrvLabelId;$/;"	v	file:
ForcedLearning	libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
ForeGroundColor	libs/tgfclient/gui.h	/^class ForeGroundColor {	$/;"	c
Format	windows/include/plib/sl.h	/^   WAVEFORMATEX   Format;        \/\/ open needs this$/;"	m	class:slDSP
FovEditId	libs/confscreens/graphconfig.cpp	/^static int	FovEditId;$/;"	v	file:
FovFactorValue	libs/confscreens/graphconfig.cpp	/^static int	FovFactorValue = 100;$/;"	v	file:
FreeListItem	libs/learning/List.cpp	/^int FreeListItem(LIST* list, LISTITEM* ptr)$/;"	f
FreeM	libs/learning/learn_debug.h	31;"	d
FreeStringBuffer	libs/learning/string_utils.cpp	/^void FreeStringBuffer (StringBuffer** s)$/;"	f
FrontLevelGroup1	modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelGroup1;      \/* the distance for the end of the front scene for group type 1*\/$/;"	m	struct:DoV
FrontLevelGroup2	modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelGroup2;      \/* the distance for the end of the front scene for group type 2*\/$/;"	m	struct:DoV
FrontLevelGroup3	modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelGroup3;      \/* the distance for the end of the front scene for group type 3*\/$/;"	m	struct:DoV
FrontLevelGroupGlobal	modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelGroupGlobal; \/* the distance for the end of the front scene *\/$/;"	m	struct:DoV
FrontLevelMap1	modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelMap1;      \/* the distance for the end of the front scene with only one mapping*\/$/;"	m	struct:DoV
FrontLevelMap2	modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelMap2;      \/* the distance for the end of the front scene with two mapping*\/$/;"	m	struct:DoV
FrontLevelMap3	modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelMap3;      \/* the distance for the end of the front scene with three mapping*\/$/;"	m	struct:DoV
Fx	interfaces/car.h	/^	tdble Fx;$/;"	m	struct:__anon79
Fy	interfaces/car.h	/^	tdble Fy;$/;"	m	struct:__anon79
Fz	interfaces/car.h	/^	tdble Fz;$/;"	m	struct:__anon79
G	drivers/bt/driver.cpp	/^const float Driver::G = 9.81f;								\/\/ [m\/(s*s)] Welcome on Earth.$/;"	m	class:Driver	file:
G	drivers/bt/driver.h	/^		static const float G;$/;"	m	class:Driver
G	drivers/damned/driver.cpp	/^const float Driver::G = 9.81f;								\/\/ [m\/(s*s)] Welcome on Earth.$/;"	m	class:Driver	file:
G	drivers/damned/driver.h	/^		static const float G;$/;"	m	class:Driver
G	drivers/olethros/driver.cpp	/^    const float Driver::G = 9.81f;								\/\/\/< [m\/(s*s)] Welcome on Earth.$/;"	m	class:olethros::Driver	file:
G	drivers/olethros/driver.h	/^	static const float G;$/;"	m	class:olethros::Driver
G	drivers/sparkle/driver.cpp	/^const float Driver::G = 9.81;								\/* [m\/(s*s)] *\/$/;"	m	class:Driver	file:
G	drivers/sparkle/driver.h	/^		static const float G;$/;"	m	class:Driver
G	libs/tgf/tgf.h	/^const tdble G = 9.80665f; \/**< m\/s\/s *\/$/;"	v
GARBAGE	tools/package/specfiles/Makefile	/^GARBAGE = $(SPECFILES)$/;"	m
GAUSSIAN	libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
GCTIME	drivers/berniw/mycar.h	/^		double GCTIME;									\/* minimal time between gear changes *\/$/;"	m	class:MyCar
GCTIME	drivers/berniw2/mycar.h	/^		double GCTIME;									\/* minimal time between gear changes *\/$/;"	m	class:MyCar
GCTIME	drivers/berniw3/mycar.h	/^		double GCTIME;									\/* minimal time between gear changes *\/$/;"	m	class:MyCar
GCTIME	drivers/human/mycar.h	/^		double GCTIME;									\/* minimal time between gear changes *\/$/;"	m	class:MyCar
GCTIME	drivers/inferno/mycar.h	/^		double GCTIME;									\/\/ Minimal time between gear changes.$/;"	m	class:MyCar
GCTIME	drivers/lliaw/mycar.h	/^		double GCTIME;									\/\/ Minimal time between gear changes.$/;"	m	class:MyCar
GCTIME	drivers/tita/mycar.h	/^		double GCTIME;									\/\/ Minimal time between gear changes.$/;"	m	class:MyCar
GEAR	drivers/data_list.h	/^			WIDTH, 		FUEL,			ENGINE_RPM, 	GEAR_RATIO, 		GEAR, 		$/;"	e	enum:sensing_data_name
GEAR_RATIO	drivers/data_list.h	/^			WIDTH, 		FUEL,			ENGINE_RPM, 	GEAR_RATIO, 		GEAR, 		$/;"	e	enum:sensing_data_name
GEOMETRY_H	drivers/olethros/geometry.h	22;"	d
GET_DRIVEN_WHEEL_SPEED	drivers/bt/driver.h	/^		float (Driver::*GET_DRIVEN_WHEEL_SPEED)();$/;"	m	class:Driver
GET_DRIVEN_WHEEL_SPEED	drivers/damned/driver.h	/^		float (Driver::*GET_DRIVEN_WHEEL_SPEED)();$/;"	m	class:Driver
GET_DRIVEN_WHEEL_SPEED	drivers/olethros/driver.h	/^	float (Driver::*GET_DRIVEN_WHEEL_SPEED)();$/;"	m	class:olethros::Driver
GET_DRIVEN_WHEEL_SPEED	drivers/sparkle/driver.h	/^		float (Driver::*GET_DRIVEN_WHEEL_SPEED)();$/;"	m	class:Driver
GET_HI	libs/txml/xmltok.c	450;"	d	file:
GET_HI	libs/txml/xmltok.c	457;"	d	file:
GET_HI	libs/txml/xmltok.c	517;"	d	file:
GET_HI	libs/txml/xmltok.c	524;"	d	file:
GET_LO	libs/txml/xmltok.c	449;"	d	file:
GET_LO	libs/txml/xmltok.c	456;"	d	file:
GET_LO	libs/txml/xmltok.c	516;"	d	file:
GET_LO	libs/txml/xmltok.c	523;"	d	file:
GFCTRL_JOY_MAXBUTTON	libs/tgfclient/tgfclient.h	275;"	d
GFCTRL_JOY_NONE	libs/tgfclient/tgfclient.h	272;"	d
GFCTRL_JOY_PRESENT	libs/tgfclient/tgfclient.h	273;"	d
GFCTRL_JOY_UNTESTED	libs/tgfclient/tgfclient.h	271;"	d
GFCTRL_TYPE_JOY_AXIS	libs/tgfclient/tgfclient.h	/^	GFCTRL_TYPE_JOY_AXIS = 1,$/;"	e	enum:__anon132
GFCTRL_TYPE_JOY_BUT	libs/tgfclient/tgfclient.h	/^	GFCTRL_TYPE_JOY_BUT = 2,$/;"	e	enum:__anon132
GFCTRL_TYPE_KEYBOARD	libs/tgfclient/tgfclient.h	/^	GFCTRL_TYPE_KEYBOARD = 3,$/;"	e	enum:__anon132
GFCTRL_TYPE_MOUSE_AXIS	libs/tgfclient/tgfclient.h	/^	GFCTRL_TYPE_MOUSE_AXIS = 5,$/;"	e	enum:__anon132
GFCTRL_TYPE_MOUSE_BUT	libs/tgfclient/tgfclient.h	/^	GFCTRL_TYPE_MOUSE_BUT = 4,$/;"	e	enum:__anon132
GFCTRL_TYPE_NOT_AFFECTED	libs/tgfclient/tgfclient.h	/^	GFCTRL_TYPE_NOT_AFFECTED = 0,$/;"	e	enum:__anon132
GFCTRL_TYPE_SKEYBOARD	libs/tgfclient/tgfclient.h	/^	GFCTRL_TYPE_SKEYBOARD = 6$/;"	e	enum:__anon132
GFPARM_MMODE_DST	libs/tgf/tgf.h	318;"	d
GFPARM_MMODE_RELDST	libs/tgf/tgf.h	320;"	d
GFPARM_MMODE_RELSRC	libs/tgf/tgf.h	319;"	d
GFPARM_MMODE_SRC	libs/tgf/tgf.h	317;"	d
GFPARM_MODIFIABLE	libs/tgf/tgf.h	265;"	d
GFPARM_PARAMETER	libs/tgf/tgf.h	259;"	d
GFPARM_PARAM_STR	libs/tgf/tgf.h	261;"	d
GFPARM_RMODE_CREAT	libs/tgf/tgf.h	271;"	d
GFPARM_RMODE_PRIVATE	libs/tgf/tgf.h	272;"	d
GFPARM_RMODE_REREAD	libs/tgf/tgf.h	270;"	d
GFPARM_RMODE_STD	libs/tgf/tgf.h	269;"	d
GFPARM_TEMPLATE	libs/tgf/tgf.h	260;"	d
GFPARM_TEMPL_STR	libs/tgf/tgf.h	262;"	d
GFPARM_WRITABLE	libs/tgf/tgf.h	266;"	d
GFSCR_ATTR_ALPHA	libs/tgfclient/screen_properties.h	78;"	d
GFSCR_ATTR_BLUE	libs/tgfclient/screen_properties.h	77;"	d
GFSCR_ATTR_GREEN	libs/tgfclient/screen_properties.h	76;"	d
GFSCR_ATTR_RED	libs/tgfclient/screen_properties.h	75;"	d
GFSCR_ATT_BPP	libs/tgfclient/screen_properties.h	35;"	d
GFSCR_ATT_FSCR	libs/tgfclient/screen_properties.h	39;"	d
GFSCR_ATT_GAMMA	libs/tgfclient/screen_properties.h	42;"	d
GFSCR_ATT_MAXREFRESH	libs/tgfclient/screen_properties.h	38;"	d
GFSCR_ATT_VINIT	libs/tgfclient/screen_properties.h	44;"	d
GFSCR_ATT_WIN_X	libs/tgfclient/screen_properties.h	36;"	d
GFSCR_ATT_WIN_Y	libs/tgfclient/screen_properties.h	37;"	d
GFSCR_ATT_X	libs/tgfclient/screen_properties.h	33;"	d
GFSCR_ATT_Y	libs/tgfclient/screen_properties.h	34;"	d
GFSCR_CONF_FILE	libs/tgfclient/screen_properties.h	29;"	d
GFSCR_ELT_BGBTNCLICK	libs/tgfclient/screen_properties.h	56;"	d
GFSCR_ELT_BGBTNDISABLED	libs/tgfclient/screen_properties.h	58;"	d
GFSCR_ELT_BGBTNENABLED	libs/tgfclient/screen_properties.h	57;"	d
GFSCR_ELT_BGBTNFOCUS	libs/tgfclient/screen_properties.h	55;"	d
GFSCR_ELT_BGCOLOR	libs/tgfclient/screen_properties.h	53;"	d
GFSCR_ELT_BGSCROLLIST	libs/tgfclient/screen_properties.h	69;"	d
GFSCR_ELT_BGSELSCROLLIST	libs/tgfclient/screen_properties.h	71;"	d
GFSCR_ELT_BTNCLICK	libs/tgfclient/screen_properties.h	60;"	d
GFSCR_ELT_BTNDISABLED	libs/tgfclient/screen_properties.h	62;"	d
GFSCR_ELT_BTNENABLED	libs/tgfclient/screen_properties.h	61;"	d
GFSCR_ELT_BTNFOCUS	libs/tgfclient/screen_properties.h	59;"	d
GFSCR_ELT_EDITCURSORCLR	libs/tgfclient/screen_properties.h	73;"	d
GFSCR_ELT_HELPCOLOR1	libs/tgfclient/screen_properties.h	67;"	d
GFSCR_ELT_HELPCOLOR2	libs/tgfclient/screen_properties.h	68;"	d
GFSCR_ELT_LABELCOLOR	libs/tgfclient/screen_properties.h	63;"	d
GFSCR_ELT_MOUSECOLOR1	libs/tgfclient/screen_properties.h	65;"	d
GFSCR_ELT_MOUSECOLOR2	libs/tgfclient/screen_properties.h	66;"	d
GFSCR_ELT_SCROLLIST	libs/tgfclient/screen_properties.h	70;"	d
GFSCR_ELT_SELSCROLLIST	libs/tgfclient/screen_properties.h	72;"	d
GFSCR_ELT_TIPCOLOR	libs/tgfclient/screen_properties.h	64;"	d
GFSCR_ELT_TITLECOLOR	libs/tgfclient/screen_properties.h	54;"	d
GFSCR_LIST_COLORS	libs/tgfclient/screen_properties.h	51;"	d
GFSCR_SECT_MENUCOL	libs/tgfclient/screen_properties.h	49;"	d
GFSCR_SECT_PROP	libs/tgfclient/screen_properties.h	31;"	d
GFSCR_VAL_NO	libs/tgfclient/screen_properties.h	41;"	d
GFSCR_VAL_VINIT_BEST	libs/tgfclient/screen_properties.h	46;"	d
GFSCR_VAL_VINIT_COMPATIBLE	libs/tgfclient/screen_properties.h	45;"	d
GFSCR_VAL_YES	libs/tgfclient/screen_properties.h	40;"	d
GFUI_ALIGN_HC_VB	libs/tgfclient/tgfclient.h	72;"	d
GFUI_ALIGN_HC_VC	libs/tgfclient/tgfclient.h	73;"	d
GFUI_ALIGN_HC_VT	libs/tgfclient/tgfclient.h	74;"	d
GFUI_ALIGN_HL_VB	libs/tgfclient/tgfclient.h	69;"	d
GFUI_ALIGN_HL_VC	libs/tgfclient/tgfclient.h	70;"	d
GFUI_ALIGN_HL_VT	libs/tgfclient/tgfclient.h	71;"	d
GFUI_ALIGN_HR_VB	libs/tgfclient/tgfclient.h	75;"	d
GFUI_ALIGN_HR_VC	libs/tgfclient/tgfclient.h	76;"	d
GFUI_ALIGN_HR_VT	libs/tgfclient/tgfclient.h	77;"	d
GFUI_BGBTNCLICK	libs/tgfclient/gui.h	30;"	d
GFUI_BGBTNDISABLED	libs/tgfclient/gui.h	32;"	d
GFUI_BGBTNENABLED	libs/tgfclient/gui.h	31;"	d
GFUI_BGBTNFOCUS	libs/tgfclient/gui.h	29;"	d
GFUI_BGCOLOR	libs/tgfclient/gui.h	27;"	d
GFUI_BGSCROLLIST	libs/tgfclient/gui.h	43;"	d
GFUI_BGSELSCROLLIST	libs/tgfclient/gui.h	45;"	d
GFUI_BTNCLICK	libs/tgfclient/gui.h	34;"	d
GFUI_BTNDISABLED	libs/tgfclient/gui.h	36;"	d
GFUI_BTNENABLED	libs/tgfclient/gui.h	35;"	d
GFUI_BTNFOCUS	libs/tgfclient/gui.h	33;"	d
GFUI_BTNSZ	libs/tgfclient/tgfclient.h	192;"	d
GFUI_BTN_DISABLE	libs/tgfclient/gui.h	90;"	d
GFUI_BTN_PUSH	libs/tgfclient/gui.h	95;"	d
GFUI_BTN_PUSHED	libs/tgfclient/gui.h	92;"	d
GFUI_BTN_RELEASED	libs/tgfclient/gui.h	91;"	d
GFUI_BTN_STATE	libs/tgfclient/gui.h	96;"	d
GFUI_BUTTON	libs/tgfclient/tgfclient.h	62;"	d
GFUI_COLORNB	libs/tgfclient/gui.h	24;"	d
GFUI_DISABLE	libs/tgfclient/tgfclient.h	161;"	d
GFUI_EDITBOX	libs/tgfclient/tgfclient.h	66;"	d
GFUI_EDITCURSORCLR	libs/tgfclient/gui.h	47;"	d
GFUI_ENABLE	libs/tgfclient/tgfclient.h	162;"	d
GFUI_FGSCROLLIST	libs/tgfclient/gui.h	44;"	d
GFUI_FGSELSCROLLIST	libs/tgfclient/gui.h	46;"	d
GFUI_FOCUS_MOUSE_CLICK	libs/tgfclient/gui.h	134;"	d
GFUI_FOCUS_MOUSE_MOVE	libs/tgfclient/gui.h	133;"	d
GFUI_FOCUS_NONE	libs/tgfclient/gui.h	132;"	d
GFUI_FONT_BIG	libs/tgfclient/tgfclient.h	167;"	d
GFUI_FONT_BIG_C	libs/tgfclient/tgfclient.h	171;"	d
GFUI_FONT_DIGIT	libs/tgfclient/tgfclient.h	175;"	d
GFUI_FONT_LARGE	libs/tgfclient/tgfclient.h	168;"	d
GFUI_FONT_LARGE_C	libs/tgfclient/tgfclient.h	172;"	d
GFUI_FONT_MEDIUM	libs/tgfclient/tgfclient.h	169;"	d
GFUI_FONT_MEDIUM_C	libs/tgfclient/tgfclient.h	173;"	d
GFUI_FONT_SMALL	libs/tgfclient/tgfclient.h	170;"	d
GFUI_FONT_SMALL_C	libs/tgfclient/tgfclient.h	174;"	d
GFUI_GRBUTTON	libs/tgfclient/tgfclient.h	63;"	d
GFUI_HELPCOLOR1	libs/tgfclient/gui.h	41;"	d
GFUI_HELPCOLOR2	libs/tgfclient/gui.h	42;"	d
GFUI_HORI_SCROLLBAR	libs/tgfclient/tgfclient.h	95;"	d
GFUI_IMAGE	libs/tgfclient/gui.h	48;"	d
GFUI_INVISIBLE	libs/tgfclient/tgfclient.h	159;"	d
GFUI_KEY_DOWN	libs/tgfclient/tgfclient.h	85;"	d
GFUI_KEY_UP	libs/tgfclient/tgfclient.h	84;"	d
GFUI_LABEL	libs/tgfclient/tgfclient.h	61;"	d
GFUI_LABELCOLOR	libs/tgfclient/gui.h	37;"	d
GFUI_MOUSECOLOR1	libs/tgfclient/gui.h	39;"	d
GFUI_MOUSECOLOR2	libs/tgfclient/gui.h	40;"	d
GFUI_MOUSE_DOWN	libs/tgfclient/tgfclient.h	81;"	d
GFUI_MOUSE_UP	libs/tgfclient/tgfclient.h	80;"	d
GFUI_SB_BOTTOM	libs/tgfclient/tgfclient.h	92;"	d
GFUI_SB_LEFT	libs/tgfclient/tgfclient.h	90;"	d
GFUI_SB_NONE	libs/tgfclient/tgfclient.h	88;"	d
GFUI_SB_RIGHT	libs/tgfclient/tgfclient.h	89;"	d
GFUI_SB_TOP	libs/tgfclient/tgfclient.h	91;"	d
GFUI_SCROLLBAR	libs/tgfclient/tgfclient.h	65;"	d
GFUI_SCROLLIST	libs/tgfclient/tgfclient.h	64;"	d
GFUI_TIPCOLOR	libs/tgfclient/gui.h	38;"	d
GFUI_TITLECOLOR	libs/tgfclient/gui.h	28;"	d
GFUI_VERT_SCROLLBAR	libs/tgfclient/tgfclient.h	96;"	d
GFUI_VISIBLE	libs/tgfclient/tgfclient.h	158;"	d
GF_DIR_CREATED	libs/tgf/tgf.h	627;"	d
GF_DIR_CREATION_FAILED	libs/tgf/tgf.h	626;"	d
GF_HASH_TYPE_BUF	libs/tgf/tgf.h	611;"	d
GF_HASH_TYPE_STR	libs/tgf/tgf.h	610;"	d
GF_MEAN_MAX_VAL	libs/tgf/tgf.h	387;"	d
GF_TAILQ_END	libs/tgf/tgf.h	474;"	d
GF_TAILQ_ENTRY	libs/tgf/tgf.h	460;"	d
GF_TAILQ_FIRST	libs/tgf/tgf.h	468;"	d
GF_TAILQ_HEAD	libs/tgf/tgf.h	452;"	d
GF_TAILQ_INIT	libs/tgf/tgf.h	489;"	d
GF_TAILQ_INIT_ENTRY	libs/tgf/tgf.h	496;"	d
GF_TAILQ_INSERT_AFTER	libs/tgf/tgf.h	524;"	d
GF_TAILQ_INSERT_BEFORE	libs/tgf/tgf.h	536;"	d
GF_TAILQ_INSERT_HEAD	libs/tgf/tgf.h	503;"	d
GF_TAILQ_INSERT_TAIL	libs/tgf/tgf.h	515;"	d
GF_TAILQ_LAST	libs/tgf/tgf.h	477;"	d
GF_TAILQ_NEXT	libs/tgf/tgf.h	471;"	d
GF_TAILQ_PREV	libs/tgf/tgf.h	481;"	d
GF_TAILQ_REMOVE	libs/tgf/tgf.h	545;"	d
GFlag	modules/graphic/ssggraph/grboard.h	/^    int GFlag;$/;"	m	class:cGrBoard
GLAPI	windows/include/GL/glext.h	49;"	d
GLAPI	windows/include/GL/wglext.h	49;"	d
GLFONT	libs/tgfclient/guifont.h	/^} GLFONT;$/;"	t	typeref:struct:__anon137
GLFONTCHAR	libs/tgfclient/guifont.h	/^} GLFONTCHAR;$/;"	t	typeref:struct:__anon136
GLUT_ACCUM	windows/include/GL/glut.h	139;"	d
GLUT_ACTIVE_ALT	windows/include/GL/glut.h	357;"	d
GLUT_ACTIVE_CTRL	windows/include/GL/glut.h	356;"	d
GLUT_ACTIVE_SHIFT	windows/include/GL/glut.h	355;"	d
GLUT_ALPHA	windows/include/GL/glut.h	140;"	d
GLUT_APIENTRY_DEFINED	windows/include/GL/glut.h	21;"	d
GLUT_APIENTRY_DEFINED	windows/include/GL/glut.h	587;"	d
GLUT_APIENTRY_DEFINED	windows/include/GL/glut.h	64;"	d
GLUT_API_VERSION	windows/include/GL/glut.h	94;"	d
GLUT_BITMAP_8_BY_13	windows/include/GL/glut.h	220;"	d
GLUT_BITMAP_8_BY_13	windows/include/GL/glut.h	248;"	d
GLUT_BITMAP_9_BY_15	windows/include/GL/glut.h	219;"	d
GLUT_BITMAP_9_BY_15	windows/include/GL/glut.h	247;"	d
GLUT_BITMAP_HELVETICA_10	windows/include/GL/glut.h	224;"	d
GLUT_BITMAP_HELVETICA_10	windows/include/GL/glut.h	252;"	d
GLUT_BITMAP_HELVETICA_12	windows/include/GL/glut.h	225;"	d
GLUT_BITMAP_HELVETICA_12	windows/include/GL/glut.h	253;"	d
GLUT_BITMAP_HELVETICA_18	windows/include/GL/glut.h	226;"	d
GLUT_BITMAP_HELVETICA_18	windows/include/GL/glut.h	254;"	d
GLUT_BITMAP_TIMES_ROMAN_10	windows/include/GL/glut.h	221;"	d
GLUT_BITMAP_TIMES_ROMAN_10	windows/include/GL/glut.h	249;"	d
GLUT_BITMAP_TIMES_ROMAN_24	windows/include/GL/glut.h	222;"	d
GLUT_BITMAP_TIMES_ROMAN_24	windows/include/GL/glut.h	250;"	d
GLUT_BLUE	windows/include/GL/glut.h	207;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	windows/include/GL/glut.h	383;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	windows/include/GL/glut.h	382;"	d
GLUT_CURSOR_BOTTOM_SIDE	windows/include/GL/glut.h	377;"	d
GLUT_CURSOR_CROSSHAIR	windows/include/GL/glut.h	371;"	d
GLUT_CURSOR_CYCLE	windows/include/GL/glut.h	367;"	d
GLUT_CURSOR_DESTROY	windows/include/GL/glut.h	365;"	d
GLUT_CURSOR_FULL_CROSSHAIR	windows/include/GL/glut.h	389;"	d
GLUT_CURSOR_HELP	windows/include/GL/glut.h	366;"	d
GLUT_CURSOR_INFO	windows/include/GL/glut.h	364;"	d
GLUT_CURSOR_INHERIT	windows/include/GL/glut.h	385;"	d
GLUT_CURSOR_LEFT_ARROW	windows/include/GL/glut.h	362;"	d
GLUT_CURSOR_LEFT_RIGHT	windows/include/GL/glut.h	374;"	d
GLUT_CURSOR_LEFT_SIDE	windows/include/GL/glut.h	378;"	d
GLUT_CURSOR_NONE	windows/include/GL/glut.h	387;"	d
GLUT_CURSOR_RIGHT_ARROW	windows/include/GL/glut.h	361;"	d
GLUT_CURSOR_RIGHT_SIDE	windows/include/GL/glut.h	379;"	d
GLUT_CURSOR_SPRAY	windows/include/GL/glut.h	368;"	d
GLUT_CURSOR_TEXT	windows/include/GL/glut.h	370;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	windows/include/GL/glut.h	380;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	windows/include/GL/glut.h	381;"	d
GLUT_CURSOR_TOP_SIDE	windows/include/GL/glut.h	376;"	d
GLUT_CURSOR_UP_DOWN	windows/include/GL/glut.h	373;"	d
GLUT_CURSOR_WAIT	windows/include/GL/glut.h	369;"	d
GLUT_DEPTH	windows/include/GL/glut.h	141;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	windows/include/GL/glut.h	318;"	d
GLUT_DEVICE_KEY_REPEAT	windows/include/GL/glut.h	319;"	d
GLUT_DISPLAY_MODE_POSSIBLE	windows/include/GL/glut.h	291;"	d
GLUT_DOUBLE	windows/include/GL/glut.h	138;"	d
GLUT_DOWN	windows/include/GL/glut.h	157;"	d
GLUT_ELAPSED_TIME	windows/include/GL/glut.h	298;"	d
GLUT_ENTERED	windows/include/GL/glut.h	188;"	d
GLUT_FULLY_COVERED	windows/include/GL/glut.h	202;"	d
GLUT_FULLY_RETAINED	windows/include/GL/glut.h	200;"	d
GLUT_GAME_MODE_ACTIVE	windows/include/GL/glut.h	567;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	windows/include/GL/glut.h	573;"	d
GLUT_GAME_MODE_HEIGHT	windows/include/GL/glut.h	570;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	windows/include/GL/glut.h	571;"	d
GLUT_GAME_MODE_POSSIBLE	windows/include/GL/glut.h	568;"	d
GLUT_GAME_MODE_REFRESH_RATE	windows/include/GL/glut.h	572;"	d
GLUT_GAME_MODE_WIDTH	windows/include/GL/glut.h	569;"	d
GLUT_GREEN	windows/include/GL/glut.h	206;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	windows/include/GL/glut.h	309;"	d
GLUT_HAS_JOYSTICK	windows/include/GL/glut.h	320;"	d
GLUT_HAS_KEYBOARD	windows/include/GL/glut.h	306;"	d
GLUT_HAS_MOUSE	windows/include/GL/glut.h	307;"	d
GLUT_HAS_OVERLAY	windows/include/GL/glut.h	331;"	d
GLUT_HAS_SPACEBALL	windows/include/GL/glut.h	308;"	d
GLUT_HAS_TABLET	windows/include/GL/glut.h	310;"	d
GLUT_HIDDEN	windows/include/GL/glut.h	199;"	d
GLUT_INDEX	windows/include/GL/glut.h	136;"	d
GLUT_INIT_DISPLAY_MODE	windows/include/GL/glut.h	296;"	d
GLUT_INIT_WINDOW_HEIGHT	windows/include/GL/glut.h	295;"	d
GLUT_INIT_WINDOW_WIDTH	windows/include/GL/glut.h	294;"	d
GLUT_INIT_WINDOW_X	windows/include/GL/glut.h	292;"	d
GLUT_INIT_WINDOW_Y	windows/include/GL/glut.h	293;"	d
GLUT_JOYSTICK_AXES	windows/include/GL/glut.h	323;"	d
GLUT_JOYSTICK_BUTTONS	windows/include/GL/glut.h	322;"	d
GLUT_JOYSTICK_BUTTON_A	windows/include/GL/glut.h	556;"	d
GLUT_JOYSTICK_BUTTON_B	windows/include/GL/glut.h	557;"	d
GLUT_JOYSTICK_BUTTON_C	windows/include/GL/glut.h	558;"	d
GLUT_JOYSTICK_BUTTON_D	windows/include/GL/glut.h	559;"	d
GLUT_JOYSTICK_POLL_RATE	windows/include/GL/glut.h	324;"	d
GLUT_KEY_DOWN	windows/include/GL/glut.h	178;"	d
GLUT_KEY_END	windows/include/GL/glut.h	182;"	d
GLUT_KEY_F1	windows/include/GL/glut.h	162;"	d
GLUT_KEY_F10	windows/include/GL/glut.h	171;"	d
GLUT_KEY_F11	windows/include/GL/glut.h	172;"	d
GLUT_KEY_F12	windows/include/GL/glut.h	173;"	d
GLUT_KEY_F2	windows/include/GL/glut.h	163;"	d
GLUT_KEY_F3	windows/include/GL/glut.h	164;"	d
GLUT_KEY_F4	windows/include/GL/glut.h	165;"	d
GLUT_KEY_F5	windows/include/GL/glut.h	166;"	d
GLUT_KEY_F6	windows/include/GL/glut.h	167;"	d
GLUT_KEY_F7	windows/include/GL/glut.h	168;"	d
GLUT_KEY_F8	windows/include/GL/glut.h	169;"	d
GLUT_KEY_F9	windows/include/GL/glut.h	170;"	d
GLUT_KEY_HOME	windows/include/GL/glut.h	181;"	d
GLUT_KEY_INSERT	windows/include/GL/glut.h	183;"	d
GLUT_KEY_LEFT	windows/include/GL/glut.h	175;"	d
GLUT_KEY_PAGE_DOWN	windows/include/GL/glut.h	180;"	d
GLUT_KEY_PAGE_UP	windows/include/GL/glut.h	179;"	d
GLUT_KEY_REPEAT_DEFAULT	windows/include/GL/glut.h	553;"	d
GLUT_KEY_REPEAT_OFF	windows/include/GL/glut.h	551;"	d
GLUT_KEY_REPEAT_ON	windows/include/GL/glut.h	552;"	d
GLUT_KEY_RIGHT	windows/include/GL/glut.h	177;"	d
GLUT_KEY_UP	windows/include/GL/glut.h	176;"	d
GLUT_LAYER_IN_USE	windows/include/GL/glut.h	330;"	d
GLUT_LEFT	windows/include/GL/glut.h	187;"	d
GLUT_LEFT_BUTTON	windows/include/GL/glut.h	152;"	d
GLUT_LUMINANCE	windows/include/GL/glut.h	148;"	d
GLUT_MENU_IN_USE	windows/include/GL/glut.h	192;"	d
GLUT_MENU_NOT_IN_USE	windows/include/GL/glut.h	191;"	d
GLUT_MENU_NUM_ITEMS	windows/include/GL/glut.h	290;"	d
GLUT_MIDDLE_BUTTON	windows/include/GL/glut.h	153;"	d
GLUT_MULTISAMPLE	windows/include/GL/glut.h	144;"	d
GLUT_NORMAL	windows/include/GL/glut.h	210;"	d
GLUT_NORMAL	windows/include/GL/glut.h	351;"	d
GLUT_NORMAL_DAMAGED	windows/include/GL/glut.h	333;"	d
GLUT_NOT_VISIBLE	windows/include/GL/glut.h	195;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	windows/include/GL/glut.h	313;"	d
GLUT_NUM_DIALS	windows/include/GL/glut.h	314;"	d
GLUT_NUM_MOUSE_BUTTONS	windows/include/GL/glut.h	311;"	d
GLUT_NUM_SPACEBALL_BUTTONS	windows/include/GL/glut.h	312;"	d
GLUT_NUM_TABLET_BUTTONS	windows/include/GL/glut.h	315;"	d
GLUT_OVERLAY	windows/include/GL/glut.h	211;"	d
GLUT_OVERLAY	windows/include/GL/glut.h	352;"	d
GLUT_OVERLAY_DAMAGED	windows/include/GL/glut.h	334;"	d
GLUT_OVERLAY_POSSIBLE	windows/include/GL/glut.h	329;"	d
GLUT_OWNS_JOYSTICK	windows/include/GL/glut.h	321;"	d
GLUT_PARTIALLY_RETAINED	windows/include/GL/glut.h	201;"	d
GLUT_RED	windows/include/GL/glut.h	205;"	d
GLUT_RGB	windows/include/GL/glut.h	134;"	d
GLUT_RGBA	windows/include/GL/glut.h	135;"	d
GLUT_RIGHT_BUTTON	windows/include/GL/glut.h	154;"	d
GLUT_SCREEN_HEIGHT	windows/include/GL/glut.h	287;"	d
GLUT_SCREEN_HEIGHT_MM	windows/include/GL/glut.h	289;"	d
GLUT_SCREEN_WIDTH	windows/include/GL/glut.h	286;"	d
GLUT_SCREEN_WIDTH_MM	windows/include/GL/glut.h	288;"	d
GLUT_SINGLE	windows/include/GL/glut.h	137;"	d
GLUT_STENCIL	windows/include/GL/glut.h	142;"	d
GLUT_STEREO	windows/include/GL/glut.h	145;"	d
GLUT_STROKE_MONO_ROMAN	windows/include/GL/glut.h	216;"	d
GLUT_STROKE_MONO_ROMAN	windows/include/GL/glut.h	235;"	d
GLUT_STROKE_ROMAN	windows/include/GL/glut.h	215;"	d
GLUT_STROKE_ROMAN	windows/include/GL/glut.h	234;"	d
GLUT_TRANSPARENT_INDEX	windows/include/GL/glut.h	332;"	d
GLUT_UP	windows/include/GL/glut.h	158;"	d
GLUT_VIDEO_RESIZE_HEIGHT	windows/include/GL/glut.h	347;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	windows/include/GL/glut.h	343;"	d
GLUT_VIDEO_RESIZE_IN_USE	windows/include/GL/glut.h	339;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	windows/include/GL/glut.h	338;"	d
GLUT_VIDEO_RESIZE_WIDTH	windows/include/GL/glut.h	346;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	windows/include/GL/glut.h	342;"	d
GLUT_VIDEO_RESIZE_X	windows/include/GL/glut.h	344;"	d
GLUT_VIDEO_RESIZE_X_DELTA	windows/include/GL/glut.h	340;"	d
GLUT_VIDEO_RESIZE_Y	windows/include/GL/glut.h	345;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	windows/include/GL/glut.h	341;"	d
GLUT_VISIBLE	windows/include/GL/glut.h	196;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	windows/include/GL/glut.h	273;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	windows/include/GL/glut.h	272;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	windows/include/GL/glut.h	271;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	windows/include/GL/glut.h	270;"	d
GLUT_WINDOW_ALPHA_SIZE	windows/include/GL/glut.h	269;"	d
GLUT_WINDOW_BLUE_SIZE	windows/include/GL/glut.h	268;"	d
GLUT_WINDOW_BUFFER_SIZE	windows/include/GL/glut.h	263;"	d
GLUT_WINDOW_COLORMAP_SIZE	windows/include/GL/glut.h	278;"	d
GLUT_WINDOW_CURSOR	windows/include/GL/glut.h	284;"	d
GLUT_WINDOW_DEPTH_SIZE	windows/include/GL/glut.h	265;"	d
GLUT_WINDOW_DOUBLEBUFFER	windows/include/GL/glut.h	274;"	d
GLUT_WINDOW_FORMAT_ID	windows/include/GL/glut.h	301;"	d
GLUT_WINDOW_GREEN_SIZE	windows/include/GL/glut.h	267;"	d
GLUT_WINDOW_HEIGHT	windows/include/GL/glut.h	262;"	d
GLUT_WINDOW_NUM_CHILDREN	windows/include/GL/glut.h	277;"	d
GLUT_WINDOW_NUM_SAMPLES	windows/include/GL/glut.h	280;"	d
GLUT_WINDOW_PARENT	windows/include/GL/glut.h	276;"	d
GLUT_WINDOW_RED_SIZE	windows/include/GL/glut.h	266;"	d
GLUT_WINDOW_RGBA	windows/include/GL/glut.h	275;"	d
GLUT_WINDOW_STENCIL_SIZE	windows/include/GL/glut.h	264;"	d
GLUT_WINDOW_STEREO	windows/include/GL/glut.h	281;"	d
GLUT_WINDOW_WIDTH	windows/include/GL/glut.h	261;"	d
GLUT_WINDOW_X	windows/include/GL/glut.h	259;"	d
GLUT_WINDOW_Y	windows/include/GL/glut.h	260;"	d
GLUT_WINGDIAPI_DEFINED	windows/include/GL/glut.h	38;"	d
GLUT_WINGDIAPI_DEFINED	windows/include/GL/glut.h	592;"	d
GLUT_XLIB_IMPLEMENTATION	windows/include/GL/glut.h	130;"	d
GL_1PASS_EXT	windows/include/GL/glext.h	2118;"	d
GL_1PASS_SGIS	windows/include/GL/glext.h	1200;"	d
GL_2PASS_0_EXT	windows/include/GL/glext.h	2119;"	d
GL_2PASS_0_SGIS	windows/include/GL/glext.h	1201;"	d
GL_2PASS_1_EXT	windows/include/GL/glext.h	2120;"	d
GL_2PASS_1_SGIS	windows/include/GL/glext.h	1202;"	d
GL_2X_BIT_ATI	windows/include/GL/glext.h	2541;"	d
GL_3DFX_multisample	windows/include/GL/glext.h	5453;"	d
GL_3DFX_tbuffer	windows/include/GL/glext.h	5457;"	d
GL_3DFX_texture_compression_FXT1	windows/include/GL/glext.h	5449;"	d
GL_422_AVERAGE_EXT	windows/include/GL/glext.h	1883;"	d
GL_422_EXT	windows/include/GL/glext.h	1881;"	d
GL_422_REV_AVERAGE_EXT	windows/include/GL/glext.h	1884;"	d
GL_422_REV_EXT	windows/include/GL/glext.h	1882;"	d
GL_4PASS_0_EXT	windows/include/GL/glext.h	2121;"	d
GL_4PASS_0_SGIS	windows/include/GL/glext.h	1203;"	d
GL_4PASS_1_EXT	windows/include/GL/glext.h	2122;"	d
GL_4PASS_1_SGIS	windows/include/GL/glext.h	1204;"	d
GL_4PASS_2_EXT	windows/include/GL/glext.h	2123;"	d
GL_4PASS_2_SGIS	windows/include/GL/glext.h	1205;"	d
GL_4PASS_3_EXT	windows/include/GL/glext.h	2124;"	d
GL_4PASS_3_SGIS	windows/include/GL/glext.h	1206;"	d
GL_4X_BIT_ATI	windows/include/GL/glext.h	2542;"	d
GL_8X_BIT_ATI	windows/include/GL/glext.h	2543;"	d
GL_ABGR_EXT	windows/include/GL/glext.h	958;"	d
GL_ACTIVE_ATTRIBUTES	windows/include/GL/glext.h	449;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	windows/include/GL/glext.h	450;"	d
GL_ACTIVE_STENCIL_FACE_EXT	windows/include/GL/glext.h	2766;"	d
GL_ACTIVE_TEXTURE	windows/include/GL/glext.h	214;"	d
GL_ACTIVE_TEXTURE_ARB	windows/include/GL/glext.h	495;"	d
GL_ACTIVE_UNIFORMS	windows/include/GL/glext.h	446;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	windows/include/GL/glext.h	447;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	windows/include/GL/glext.h	564;"	d
GL_ADD_ATI	windows/include/GL/glext.h	2513;"	d
GL_ADD_SIGNED	windows/include/GL/glext.h	270;"	d
GL_ADD_SIGNED_ARB	windows/include/GL/glext.h	637;"	d
GL_ADD_SIGNED_EXT	windows/include/GL/glext.h	1788;"	d
GL_ALIASED_LINE_WIDTH_RANGE	windows/include/GL/glext.h	100;"	d
GL_ALIASED_POINT_SIZE_RANGE	windows/include/GL/glext.h	99;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	windows/include/GL/glext.h	1503;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	windows/include/GL/glext.h	1504;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	windows/include/GL/glext.h	1501;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	windows/include/GL/glext.h	1502;"	d
GL_ALL_COMPLETED_NV	windows/include/GL/glext.h	2176;"	d
GL_ALPHA12_EXT	windows/include/GL/glext.h	978;"	d
GL_ALPHA16F_ARB	windows/include/GL/glext.h	944;"	d
GL_ALPHA16_EXT	windows/include/GL/glext.h	979;"	d
GL_ALPHA32F_ARB	windows/include/GL/glext.h	938;"	d
GL_ALPHA4_EXT	windows/include/GL/glext.h	976;"	d
GL_ALPHA8_EXT	windows/include/GL/glext.h	977;"	d
GL_ALPHA_FLOAT16_ATI	windows/include/GL/glext.h	2854;"	d
GL_ALPHA_FLOAT32_ATI	windows/include/GL/glext.h	2848;"	d
GL_ALPHA_MAX_CLAMP_INGR	windows/include/GL/glext.h	1868;"	d
GL_ALPHA_MAX_SGIX	windows/include/GL/glext.h	1655;"	d
GL_ALPHA_MIN_CLAMP_INGR	windows/include/GL/glext.h	1864;"	d
GL_ALPHA_MIN_SGIX	windows/include/GL/glext.h	1654;"	d
GL_ALWAYS_FAST_HINT_PGI	windows/include/GL/glext.h	1499;"	d
GL_ALWAYS_SOFT_HINT_PGI	windows/include/GL/glext.h	1500;"	d
GL_APPLE_client_storage	windows/include/GL/glext.h	6111;"	d
GL_APPLE_element_array	windows/include/GL/glext.h	6115;"	d
GL_APPLE_fence	windows/include/GL/glext.h	6131;"	d
GL_APPLE_specular_vector	windows/include/GL/glext.h	5061;"	d
GL_APPLE_transform_hint	windows/include/GL/glext.h	5065;"	d
GL_APPLE_vertex_array_object	windows/include/GL/glext.h	6153;"	d
GL_APPLE_vertex_array_range	windows/include/GL/glext.h	6167;"	d
GL_APPLE_ycbcr_422	windows/include/GL/glext.h	6179;"	d
GL_ARB_color_buffer_float	windows/include/GL/glext.h	4149;"	d
GL_ARB_depth_texture	windows/include/GL/glext.h	3786;"	d
GL_ARB_draw_buffers	windows/include/GL/glext.h	4137;"	d
GL_ARB_fragment_program	windows/include/GL/glext.h	3966;"	d
GL_ARB_fragment_program_shadow	windows/include/GL/glext.h	4133;"	d
GL_ARB_fragment_shader	windows/include/GL/glext.h	4117;"	d
GL_ARB_half_float_pixel	windows/include/GL/glext.h	4157;"	d
GL_ARB_matrix_palette	windows/include/GL/glext.h	3754;"	d
GL_ARB_multisample	windows/include/GL/glext.h	3678;"	d
GL_ARB_multitexture	windows/include/GL/glext.h	3590;"	d
GL_ARB_occlusion_query	windows/include/GL/glext.h	3999;"	d
GL_ARB_pixel_buffer_object	windows/include/GL/glext.h	4165;"	d
GL_ARB_point_parameters	windows/include/GL/glext.h	3718;"	d
GL_ARB_point_sprite	windows/include/GL/glext.h	4129;"	d
GL_ARB_shader_objects	windows/include/GL/glext.h	4021;"	d
GL_ARB_shading_language_100	windows/include/GL/glext.h	4121;"	d
GL_ARB_shadow	windows/include/GL/glext.h	3790;"	d
GL_ARB_shadow_ambient	windows/include/GL/glext.h	3794;"	d
GL_ARB_texture_border_clamp	windows/include/GL/glext.h	3714;"	d
GL_ARB_texture_compression	windows/include/GL/glext.h	3694;"	d
GL_ARB_texture_cube_map	windows/include/GL/glext.h	3690;"	d
GL_ARB_texture_env_add	windows/include/GL/glext.h	3686;"	d
GL_ARB_texture_env_combine	windows/include/GL/glext.h	3770;"	d
GL_ARB_texture_env_crossbar	windows/include/GL/glext.h	3774;"	d
GL_ARB_texture_env_dot3	windows/include/GL/glext.h	3778;"	d
GL_ARB_texture_float	windows/include/GL/glext.h	4161;"	d
GL_ARB_texture_mirrored_repeat	windows/include/GL/glext.h	3782;"	d
GL_ARB_texture_non_power_of_two	windows/include/GL/glext.h	4125;"	d
GL_ARB_texture_rectangle	windows/include/GL/glext.h	4145;"	d
GL_ARB_transpose_matrix	windows/include/GL/glext.h	3664;"	d
GL_ARB_vertex_blend	windows/include/GL/glext.h	3728;"	d
GL_ARB_vertex_buffer_object	windows/include/GL/glext.h	3971;"	d
GL_ARB_vertex_program	windows/include/GL/glext.h	3836;"	d
GL_ARB_vertex_shader	windows/include/GL/glext.h	4105;"	d
GL_ARB_window_pos	windows/include/GL/glext.h	3798;"	d
GL_ARRAY_BUFFER	windows/include/GL/glext.h	329;"	d
GL_ARRAY_BUFFER_ARB	windows/include/GL/glext.h	781;"	d
GL_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	331;"	d
GL_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	783;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	windows/include/GL/glext.h	1579;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	windows/include/GL/glext.h	1578;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	windows/include/GL/glext.h	2572;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	windows/include/GL/glext.h	2573;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	windows/include/GL/glext.h	1679;"	d
GL_ASYNC_HISTOGRAM_SGIX	windows/include/GL/glext.h	1687;"	d
GL_ASYNC_MARKER_SGIX	windows/include/GL/glext.h	1674;"	d
GL_ASYNC_READ_PIXELS_SGIX	windows/include/GL/glext.h	1680;"	d
GL_ASYNC_TEX_IMAGE_SGIX	windows/include/GL/glext.h	1678;"	d
GL_ATI_draw_buffers	windows/include/GL/glext.h	6187;"	d
GL_ATI_element_array	windows/include/GL/glext.h	6025;"	d
GL_ATI_envmap_bumpmap	windows/include/GL/glext.h	5751;"	d
GL_ATI_fragment_shader	windows/include/GL/glext.h	5765;"	d
GL_ATI_map_object_buffer	windows/include/GL/glext.h	6359;"	d
GL_ATI_pixel_format_float	windows/include/GL/glext.h	6195;"	d
GL_ATI_pn_triangles	windows/include/GL/glext.h	5799;"	d
GL_ATI_separate_stencil	windows/include/GL/glext.h	6369;"	d
GL_ATI_text_fragment_shader	windows/include/GL/glext.h	6107;"	d
GL_ATI_texture_env_combine3	windows/include/GL/glext.h	6202;"	d
GL_ATI_texture_float	windows/include/GL/glext.h	6206;"	d
GL_ATI_texture_mirror_once	windows/include/GL/glext.h	5511;"	d
GL_ATI_vertex_array_object	windows/include/GL/glext.h	5809;"	d
GL_ATI_vertex_attrib_array_object	windows/include/GL/glext.h	6379;"	d
GL_ATI_vertex_streams	windows/include/GL/glext.h	5929;"	d
GL_ATTACHED_SHADERS	windows/include/GL/glext.h	445;"	d
GL_ATTENUATION_EXT	windows/include/GL/glext.h	1644;"	d
GL_ATTRIB_ARRAY_POINTER_NV	windows/include/GL/glext.h	2344;"	d
GL_ATTRIB_ARRAY_SIZE_NV	windows/include/GL/glext.h	2318;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	windows/include/GL/glext.h	2319;"	d
GL_ATTRIB_ARRAY_TYPE_NV	windows/include/GL/glext.h	2320;"	d
GL_AVERAGE_EXT	windows/include/GL/glext.h	1713;"	d
GL_AVERAGE_HP	windows/include/GL/glext.h	1444;"	d
GL_BACK_NORMALS_HINT_PGI	windows/include/GL/glext.h	1512;"	d
GL_BGR	windows/include/GL/glext.h	83;"	d
GL_BGRA	windows/include/GL/glext.h	84;"	d
GL_BGRA_EXT	windows/include/GL/glext.h	1670;"	d
GL_BGR_EXT	windows/include/GL/glext.h	1669;"	d
GL_BIAS_BIT_ATI	windows/include/GL/glext.h	2550;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	windows/include/GL/glext.h	1983;"	d
GL_BINORMAL_ARRAY_EXT	windows/include/GL/glext.h	1768;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1776;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1774;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1773;"	d
GL_BLEND_COLOR	windows/include/GL/glext.h	108;"	d
GL_BLEND_COLOR_EXT	windows/include/GL/glext.h	966;"	d
GL_BLEND_DST_ALPHA	windows/include/GL/glext.h	283;"	d
GL_BLEND_DST_ALPHA_EXT	windows/include/GL/glext.h	1856;"	d
GL_BLEND_DST_RGB	windows/include/GL/glext.h	281;"	d
GL_BLEND_DST_RGB_EXT	windows/include/GL/glext.h	1854;"	d
GL_BLEND_EQUATION	windows/include/GL/glext.h	112;"	d
GL_BLEND_EQUATION_ALPHA	windows/include/GL/glext.h	406;"	d
GL_BLEND_EQUATION_ALPHA_EXT	windows/include/GL/glext.h	2943;"	d
GL_BLEND_EQUATION_EXT	windows/include/GL/glext.h	1295;"	d
GL_BLEND_EQUATION_RGB	windows/include/GL/glext.h	376;"	d
GL_BLEND_EQUATION_RGB_EXT	windows/include/GL/glext.h	2942;"	d
GL_BLEND_SRC_ALPHA	windows/include/GL/glext.h	284;"	d
GL_BLEND_SRC_ALPHA_EXT	windows/include/GL/glext.h	1857;"	d
GL_BLEND_SRC_RGB	windows/include/GL/glext.h	282;"	d
GL_BLEND_SRC_RGB_EXT	windows/include/GL/glext.h	1855;"	d
GL_BLUE_BIT_ATI	windows/include/GL/glext.h	2540;"	d
GL_BLUE_MAX_CLAMP_INGR	windows/include/GL/glext.h	1867;"	d
GL_BLUE_MIN_CLAMP_INGR	windows/include/GL/glext.h	1863;"	d
GL_BOOL	windows/include/GL/glext.h	427;"	d
GL_BOOL_ARB	windows/include/GL/glext.h	831;"	d
GL_BOOL_VEC2	windows/include/GL/glext.h	428;"	d
GL_BOOL_VEC2_ARB	windows/include/GL/glext.h	832;"	d
GL_BOOL_VEC3	windows/include/GL/glext.h	429;"	d
GL_BOOL_VEC3_ARB	windows/include/GL/glext.h	833;"	d
GL_BOOL_VEC4	windows/include/GL/glext.h	430;"	d
GL_BOOL_VEC4_ARB	windows/include/GL/glext.h	834;"	d
GL_BUFFER_ACCESS	windows/include/GL/glext.h	346;"	d
GL_BUFFER_ACCESS_ARB	windows/include/GL/glext.h	798;"	d
GL_BUFFER_MAPPED	windows/include/GL/glext.h	347;"	d
GL_BUFFER_MAPPED_ARB	windows/include/GL/glext.h	799;"	d
GL_BUFFER_MAP_POINTER	windows/include/GL/glext.h	348;"	d
GL_BUFFER_MAP_POINTER_ARB	windows/include/GL/glext.h	800;"	d
GL_BUFFER_SIZE	windows/include/GL/glext.h	323;"	d
GL_BUFFER_SIZE_ARB	windows/include/GL/glext.h	779;"	d
GL_BUFFER_USAGE	windows/include/GL/glext.h	324;"	d
GL_BUFFER_USAGE_ARB	windows/include/GL/glext.h	780;"	d
GL_BUMP_ENVMAP_ATI	windows/include/GL/glext.h	2442;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	windows/include/GL/glext.h	2438;"	d
GL_BUMP_ROT_MATRIX_ATI	windows/include/GL/glext.h	2436;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	windows/include/GL/glext.h	2437;"	d
GL_BUMP_TARGET_ATI	windows/include/GL/glext.h	2443;"	d
GL_BUMP_TEX_UNITS_ATI	windows/include/GL/glext.h	2439;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	windows/include/GL/glext.h	1538;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	windows/include/GL/glext.h	918;"	d
GL_CLAMP_READ_COLOR_ARB	windows/include/GL/glext.h	919;"	d
GL_CLAMP_TO_BORDER	windows/include/GL/glext.h	253;"	d
GL_CLAMP_TO_BORDER_ARB	windows/include/GL/glext.h	552;"	d
GL_CLAMP_TO_BORDER_SGIS	windows/include/GL/glext.h	1288;"	d
GL_CLAMP_TO_EDGE	windows/include/GL/glext.h	87;"	d
GL_CLAMP_TO_EDGE_SGIS	windows/include/GL/glext.h	1284;"	d
GL_CLAMP_VERTEX_COLOR_ARB	windows/include/GL/glext.h	917;"	d
GL_CLIENT_ACTIVE_TEXTURE	windows/include/GL/glext.h	215;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	windows/include/GL/glext.h	496;"	d
GL_CLIP_FAR_HINT_PGI	windows/include/GL/glext.h	1510;"	d
GL_CLIP_NEAR_HINT_PGI	windows/include/GL/glext.h	1509;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	windows/include/GL/glext.h	1526;"	d
GL_CMYKA_EXT	windows/include/GL/glext.h	1149;"	d
GL_CMYK_EXT	windows/include/GL/glext.h	1148;"	d
GL_CND0_ATI	windows/include/GL/glext.h	2521;"	d
GL_CND_ATI	windows/include/GL/glext.h	2520;"	d
GL_COLOR3_BIT_PGI	windows/include/GL/glext.h	1472;"	d
GL_COLOR4_BIT_PGI	windows/include/GL/glext.h	1473;"	d
GL_COLOR_ALPHA_PAIRING_ATI	windows/include/GL/glext.h	2531;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	335;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	787;"	d
GL_COLOR_ARRAY_COUNT_EXT	windows/include/GL/glext.h	1235;"	d
GL_COLOR_ARRAY_EXT	windows/include/GL/glext.h	1221;"	d
GL_COLOR_ARRAY_LIST_IBM	windows/include/GL/glext.h	2060;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	windows/include/GL/glext.h	2068;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	windows/include/GL/glext.h	1698;"	d
GL_COLOR_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1247;"	d
GL_COLOR_ARRAY_SIZE_EXT	windows/include/GL/glext.h	1232;"	d
GL_COLOR_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1234;"	d
GL_COLOR_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1233;"	d
GL_COLOR_ATTACHMENT0_EXT	windows/include/GL/glext.h	3003;"	d
GL_COLOR_ATTACHMENT10_EXT	windows/include/GL/glext.h	3013;"	d
GL_COLOR_ATTACHMENT11_EXT	windows/include/GL/glext.h	3014;"	d
GL_COLOR_ATTACHMENT12_EXT	windows/include/GL/glext.h	3015;"	d
GL_COLOR_ATTACHMENT13_EXT	windows/include/GL/glext.h	3016;"	d
GL_COLOR_ATTACHMENT14_EXT	windows/include/GL/glext.h	3017;"	d
GL_COLOR_ATTACHMENT15_EXT	windows/include/GL/glext.h	3018;"	d
GL_COLOR_ATTACHMENT1_EXT	windows/include/GL/glext.h	3004;"	d
GL_COLOR_ATTACHMENT2_EXT	windows/include/GL/glext.h	3005;"	d
GL_COLOR_ATTACHMENT3_EXT	windows/include/GL/glext.h	3006;"	d
GL_COLOR_ATTACHMENT4_EXT	windows/include/GL/glext.h	3007;"	d
GL_COLOR_ATTACHMENT5_EXT	windows/include/GL/glext.h	3008;"	d
GL_COLOR_ATTACHMENT6_EXT	windows/include/GL/glext.h	3009;"	d
GL_COLOR_ATTACHMENT7_EXT	windows/include/GL/glext.h	3010;"	d
GL_COLOR_ATTACHMENT8_EXT	windows/include/GL/glext.h	3011;"	d
GL_COLOR_ATTACHMENT9_EXT	windows/include/GL/glext.h	3012;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	windows/include/GL/glext.h	2836;"	d
GL_COLOR_INDEX12_EXT	windows/include/GL/glext.h	1520;"	d
GL_COLOR_INDEX16_EXT	windows/include/GL/glext.h	1521;"	d
GL_COLOR_INDEX1_EXT	windows/include/GL/glext.h	1516;"	d
GL_COLOR_INDEX2_EXT	windows/include/GL/glext.h	1517;"	d
GL_COLOR_INDEX4_EXT	windows/include/GL/glext.h	1518;"	d
GL_COLOR_INDEX8_EXT	windows/include/GL/glext.h	1519;"	d
GL_COLOR_MATRIX	windows/include/GL/glext.h	149;"	d
GL_COLOR_MATRIX_SGI	windows/include/GL/glext.h	1085;"	d
GL_COLOR_MATRIX_STACK_DEPTH	windows/include/GL/glext.h	150;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	windows/include/GL/glext.h	1086;"	d
GL_COLOR_SUM	windows/include/GL/glext.h	303;"	d
GL_COLOR_SUM_ARB	windows/include/GL/glext.h	679;"	d
GL_COLOR_SUM_CLAMP_NV	windows/include/GL/glext.h	1997;"	d
GL_COLOR_SUM_EXT	windows/include/GL/glext.h	1733;"	d
GL_COLOR_TABLE	windows/include/GL/glext.h	160;"	d
GL_COLOR_TABLE_ALPHA_SIZE	windows/include/GL/glext.h	173;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	windows/include/GL/glext.h	1112;"	d
GL_COLOR_TABLE_BIAS	windows/include/GL/glext.h	167;"	d
GL_COLOR_TABLE_BIAS_SGI	windows/include/GL/glext.h	1106;"	d
GL_COLOR_TABLE_BLUE_SIZE	windows/include/GL/glext.h	172;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	windows/include/GL/glext.h	1111;"	d
GL_COLOR_TABLE_FORMAT	windows/include/GL/glext.h	168;"	d
GL_COLOR_TABLE_FORMAT_SGI	windows/include/GL/glext.h	1107;"	d
GL_COLOR_TABLE_GREEN_SIZE	windows/include/GL/glext.h	171;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	windows/include/GL/glext.h	1110;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	windows/include/GL/glext.h	175;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	windows/include/GL/glext.h	1114;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	windows/include/GL/glext.h	174;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	windows/include/GL/glext.h	1113;"	d
GL_COLOR_TABLE_RED_SIZE	windows/include/GL/glext.h	170;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	windows/include/GL/glext.h	1109;"	d
GL_COLOR_TABLE_SCALE	windows/include/GL/glext.h	166;"	d
GL_COLOR_TABLE_SCALE_SGI	windows/include/GL/glext.h	1105;"	d
GL_COLOR_TABLE_SGI	windows/include/GL/glext.h	1099;"	d
GL_COLOR_TABLE_WIDTH	windows/include/GL/glext.h	169;"	d
GL_COLOR_TABLE_WIDTH_SGI	windows/include/GL/glext.h	1108;"	d
GL_COMBINE	windows/include/GL/glext.h	254;"	d
GL_COMBINE4_NV	windows/include/GL/glext.h	2030;"	d
GL_COMBINER0_NV	windows/include/GL/glext.h	1998;"	d
GL_COMBINER1_NV	windows/include/GL/glext.h	1999;"	d
GL_COMBINER2_NV	windows/include/GL/glext.h	2000;"	d
GL_COMBINER3_NV	windows/include/GL/glext.h	2001;"	d
GL_COMBINER4_NV	windows/include/GL/glext.h	2002;"	d
GL_COMBINER5_NV	windows/include/GL/glext.h	2003;"	d
GL_COMBINER6_NV	windows/include/GL/glext.h	2004;"	d
GL_COMBINER7_NV	windows/include/GL/glext.h	2005;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	windows/include/GL/glext.h	1987;"	d
GL_COMBINER_AB_OUTPUT_NV	windows/include/GL/glext.h	1992;"	d
GL_COMBINER_BIAS_NV	windows/include/GL/glext.h	1991;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	windows/include/GL/glext.h	1988;"	d
GL_COMBINER_CD_OUTPUT_NV	windows/include/GL/glext.h	1993;"	d
GL_COMBINER_COMPONENT_USAGE_NV	windows/include/GL/glext.h	1986;"	d
GL_COMBINER_INPUT_NV	windows/include/GL/glext.h	1984;"	d
GL_COMBINER_MAPPING_NV	windows/include/GL/glext.h	1985;"	d
GL_COMBINER_MUX_SUM_NV	windows/include/GL/glext.h	1989;"	d
GL_COMBINER_SCALE_NV	windows/include/GL/glext.h	1990;"	d
GL_COMBINER_SUM_OUTPUT_NV	windows/include/GL/glext.h	1994;"	d
GL_COMBINE_ALPHA	windows/include/GL/glext.h	256;"	d
GL_COMBINE_ALPHA_ARB	windows/include/GL/glext.h	623;"	d
GL_COMBINE_ALPHA_EXT	windows/include/GL/glext.h	1786;"	d
GL_COMBINE_ARB	windows/include/GL/glext.h	621;"	d
GL_COMBINE_EXT	windows/include/GL/glext.h	1784;"	d
GL_COMBINE_RGB	windows/include/GL/glext.h	255;"	d
GL_COMBINE_RGB_ARB	windows/include/GL/glext.h	622;"	d
GL_COMBINE_RGB_EXT	windows/include/GL/glext.h	1785;"	d
GL_COMPARE_R_TO_TEXTURE	windows/include/GL/glext.h	319;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	windows/include/GL/glext.h	668;"	d
GL_COMPILE_STATUS	windows/include/GL/glext.h	441;"	d
GL_COMPRESSED_ALPHA	windows/include/GL/glext.h	242;"	d
GL_COMPRESSED_ALPHA_ARB	windows/include/GL/glext.h	538;"	d
GL_COMPRESSED_INTENSITY	windows/include/GL/glext.h	245;"	d
GL_COMPRESSED_INTENSITY_ARB	windows/include/GL/glext.h	541;"	d
GL_COMPRESSED_LUMINANCE	windows/include/GL/glext.h	243;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	windows/include/GL/glext.h	244;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	windows/include/GL/glext.h	540;"	d
GL_COMPRESSED_LUMINANCE_ARB	windows/include/GL/glext.h	539;"	d
GL_COMPRESSED_RGB	windows/include/GL/glext.h	246;"	d
GL_COMPRESSED_RGBA	windows/include/GL/glext.h	247;"	d
GL_COMPRESSED_RGBA_ARB	windows/include/GL/glext.h	543;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	windows/include/GL/glext.h	2100;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	windows/include/GL/glext.h	2045;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	windows/include/GL/glext.h	2046;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	windows/include/GL/glext.h	2047;"	d
GL_COMPRESSED_RGB_ARB	windows/include/GL/glext.h	542;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	windows/include/GL/glext.h	2099;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	windows/include/GL/glext.h	2044;"	d
GL_COMPRESSED_TEXTURE_FORMATS	windows/include/GL/glext.h	252;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	windows/include/GL/glext.h	548;"	d
GL_COMP_BIT_ATI	windows/include/GL/glext.h	2548;"	d
GL_CONSERVE_MEMORY_HINT_PGI	windows/include/GL/glext.h	1494;"	d
GL_CONSTANT	windows/include/GL/glext.h	273;"	d
GL_CONSTANT_ALPHA	windows/include/GL/glext.h	106;"	d
GL_CONSTANT_ALPHA_EXT	windows/include/GL/glext.h	964;"	d
GL_CONSTANT_ARB	windows/include/GL/glext.h	640;"	d
GL_CONSTANT_BORDER	windows/include/GL/glext.h	176;"	d
GL_CONSTANT_BORDER_HP	windows/include/GL/glext.h	1452;"	d
GL_CONSTANT_COLOR	windows/include/GL/glext.h	104;"	d
GL_CONSTANT_COLOR0_NV	windows/include/GL/glext.h	1963;"	d
GL_CONSTANT_COLOR1_NV	windows/include/GL/glext.h	1964;"	d
GL_CONSTANT_COLOR_EXT	windows/include/GL/glext.h	962;"	d
GL_CONSTANT_EXT	windows/include/GL/glext.h	1790;"	d
GL_CONST_EYE_NV	windows/include/GL/glext.h	2250;"	d
GL_CONVOLUTION_1D	windows/include/GL/glext.h	115;"	d
GL_CONVOLUTION_1D_EXT	windows/include/GL/glext.h	1062;"	d
GL_CONVOLUTION_2D	windows/include/GL/glext.h	116;"	d
GL_CONVOLUTION_2D_EXT	windows/include/GL/glext.h	1063;"	d
GL_CONVOLUTION_BORDER_COLOR	windows/include/GL/glext.h	178;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	windows/include/GL/glext.h	1454;"	d
GL_CONVOLUTION_BORDER_MODE	windows/include/GL/glext.h	118;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	windows/include/GL/glext.h	1065;"	d
GL_CONVOLUTION_FILTER_BIAS	windows/include/GL/glext.h	120;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	windows/include/GL/glext.h	1067;"	d
GL_CONVOLUTION_FILTER_SCALE	windows/include/GL/glext.h	119;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	windows/include/GL/glext.h	1066;"	d
GL_CONVOLUTION_FORMAT	windows/include/GL/glext.h	122;"	d
GL_CONVOLUTION_FORMAT_EXT	windows/include/GL/glext.h	1069;"	d
GL_CONVOLUTION_HEIGHT	windows/include/GL/glext.h	124;"	d
GL_CONVOLUTION_HEIGHT_EXT	windows/include/GL/glext.h	1071;"	d
GL_CONVOLUTION_HINT_SGIX	windows/include/GL/glext.h	2139;"	d
GL_CONVOLUTION_WIDTH	windows/include/GL/glext.h	123;"	d
GL_CONVOLUTION_WIDTH_EXT	windows/include/GL/glext.h	1070;"	d
GL_CON_0_ATI	windows/include/GL/glext.h	2480;"	d
GL_CON_10_ATI	windows/include/GL/glext.h	2490;"	d
GL_CON_11_ATI	windows/include/GL/glext.h	2491;"	d
GL_CON_12_ATI	windows/include/GL/glext.h	2492;"	d
GL_CON_13_ATI	windows/include/GL/glext.h	2493;"	d
GL_CON_14_ATI	windows/include/GL/glext.h	2494;"	d
GL_CON_15_ATI	windows/include/GL/glext.h	2495;"	d
GL_CON_16_ATI	windows/include/GL/glext.h	2496;"	d
GL_CON_17_ATI	windows/include/GL/glext.h	2497;"	d
GL_CON_18_ATI	windows/include/GL/glext.h	2498;"	d
GL_CON_19_ATI	windows/include/GL/glext.h	2499;"	d
GL_CON_1_ATI	windows/include/GL/glext.h	2481;"	d
GL_CON_20_ATI	windows/include/GL/glext.h	2500;"	d
GL_CON_21_ATI	windows/include/GL/glext.h	2501;"	d
GL_CON_22_ATI	windows/include/GL/glext.h	2502;"	d
GL_CON_23_ATI	windows/include/GL/glext.h	2503;"	d
GL_CON_24_ATI	windows/include/GL/glext.h	2504;"	d
GL_CON_25_ATI	windows/include/GL/glext.h	2505;"	d
GL_CON_26_ATI	windows/include/GL/glext.h	2506;"	d
GL_CON_27_ATI	windows/include/GL/glext.h	2507;"	d
GL_CON_28_ATI	windows/include/GL/glext.h	2508;"	d
GL_CON_29_ATI	windows/include/GL/glext.h	2509;"	d
GL_CON_2_ATI	windows/include/GL/glext.h	2482;"	d
GL_CON_30_ATI	windows/include/GL/glext.h	2510;"	d
GL_CON_31_ATI	windows/include/GL/glext.h	2511;"	d
GL_CON_3_ATI	windows/include/GL/glext.h	2483;"	d
GL_CON_4_ATI	windows/include/GL/glext.h	2484;"	d
GL_CON_5_ATI	windows/include/GL/glext.h	2485;"	d
GL_CON_6_ATI	windows/include/GL/glext.h	2486;"	d
GL_CON_7_ATI	windows/include/GL/glext.h	2487;"	d
GL_CON_8_ATI	windows/include/GL/glext.h	2488;"	d
GL_CON_9_ATI	windows/include/GL/glext.h	2489;"	d
GL_COORD_REPLACE	windows/include/GL/glext.h	408;"	d
GL_COORD_REPLACE_ARB	windows/include/GL/glext.h	882;"	d
GL_COORD_REPLACE_NV	windows/include/GL/glext.h	2734;"	d
GL_CUBIC_EXT	windows/include/GL/glext.h	1712;"	d
GL_CUBIC_HP	windows/include/GL/glext.h	1443;"	d
GL_CULL_FRAGMENT_NV	windows/include/GL/glext.h	2252;"	d
GL_CULL_MODES_NV	windows/include/GL/glext.h	2242;"	d
GL_CULL_VERTEX_EXT	windows/include/GL/glext.h	1583;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	windows/include/GL/glext.h	1584;"	d
GL_CULL_VERTEX_IBM	windows/include/GL/glext.h	2051;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	windows/include/GL/glext.h	1585;"	d
GL_CURRENT_ATTRIB_NV	windows/include/GL/glext.h	2321;"	d
GL_CURRENT_BINORMAL_EXT	windows/include/GL/glext.h	1770;"	d
GL_CURRENT_FOG_COORD	windows/include/GL/glext.h	361;"	d
GL_CURRENT_FOG_COORDINATE	windows/include/GL/glext.h	298;"	d
GL_CURRENT_FOG_COORDINATE_EXT	windows/include/GL/glext.h	1754;"	d
GL_CURRENT_MATRIX_ARB	windows/include/GL/glext.h	691;"	d
GL_CURRENT_MATRIX_INDEX_ARB	windows/include/GL/glext.h	613;"	d
GL_CURRENT_MATRIX_NV	windows/include/GL/glext.h	2340;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	windows/include/GL/glext.h	690;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	windows/include/GL/glext.h	2339;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	windows/include/GL/glext.h	2727;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	windows/include/GL/glext.h	611;"	d
GL_CURRENT_PROGRAM	windows/include/GL/glext.h	453;"	d
GL_CURRENT_QUERY	windows/include/GL/glext.h	326;"	d
GL_CURRENT_QUERY_ARB	windows/include/GL/glext.h	814;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	windows/include/GL/glext.h	1600;"	d
GL_CURRENT_SECONDARY_COLOR	windows/include/GL/glext.h	304;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	windows/include/GL/glext.h	1734;"	d
GL_CURRENT_TANGENT_EXT	windows/include/GL/glext.h	1769;"	d
GL_CURRENT_VERTEX_ATTRIB	windows/include/GL/glext.h	381;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	windows/include/GL/glext.h	685;"	d
GL_CURRENT_VERTEX_EXT	windows/include/GL/glext.h	2675;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	windows/include/GL/glext.h	1933;"	d
GL_CURRENT_WEIGHT_ARB	windows/include/GL/glext.h	567;"	d
GL_DECR_WRAP	windows/include/GL/glext.h	314;"	d
GL_DECR_WRAP_EXT	windows/include/GL/glext.h	1877;"	d
GL_DEFORMATIONS_MASK_SGIX	windows/include/GL/glext.h	1403;"	d
GL_DELETE_STATUS	windows/include/GL/glext.h	440;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	windows/include/GL/glext.h	2254;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	windows/include/GL/glext.h	2255;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	windows/include/GL/glext.h	2747;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	windows/include/GL/glext.h	2748;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	windows/include/GL/glext.h	2749;"	d
GL_DEPTH_ATTACHMENT_EXT	windows/include/GL/glext.h	3019;"	d
GL_DEPTH_BOUNDS_EXT	windows/include/GL/glext.h	2932;"	d
GL_DEPTH_BOUNDS_TEST_EXT	windows/include/GL/glext.h	2931;"	d
GL_DEPTH_CLAMP_NV	windows/include/GL/glext.h	2722;"	d
GL_DEPTH_COMPONENT16	windows/include/GL/glext.h	291;"	d
GL_DEPTH_COMPONENT16_ARB	windows/include/GL/glext.h	658;"	d
GL_DEPTH_COMPONENT16_SGIX	windows/include/GL/glext.h	1416;"	d
GL_DEPTH_COMPONENT24	windows/include/GL/glext.h	292;"	d
GL_DEPTH_COMPONENT24_ARB	windows/include/GL/glext.h	659;"	d
GL_DEPTH_COMPONENT24_SGIX	windows/include/GL/glext.h	1417;"	d
GL_DEPTH_COMPONENT32	windows/include/GL/glext.h	293;"	d
GL_DEPTH_COMPONENT32_ARB	windows/include/GL/glext.h	660;"	d
GL_DEPTH_COMPONENT32_SGIX	windows/include/GL/glext.h	1418;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	windows/include/GL/glext.h	2094;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	windows/include/GL/glext.h	2095;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	windows/include/GL/glext.h	2093;"	d
GL_DEPTH_STENCIL_NV	windows/include/GL/glext.h	2213;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	windows/include/GL/glext.h	2432;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	windows/include/GL/glext.h	2431;"	d
GL_DEPTH_TEXTURE_MODE	windows/include/GL/glext.h	316;"	d
GL_DEPTH_TEXTURE_MODE_ARB	windows/include/GL/glext.h	662;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	windows/include/GL/glext.h	1164;"	d
GL_DETAIL_TEXTURE_2D_SGIS	windows/include/GL/glext.h	1163;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	windows/include/GL/glext.h	1170;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	windows/include/GL/glext.h	1168;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	windows/include/GL/glext.h	1169;"	d
GL_DISCARD_ATI	windows/include/GL/glext.h	2569;"	d
GL_DISCARD_NV	windows/include/GL/glext.h	1969;"	d
GL_DISTANCE_ATTENUATION_EXT	windows/include/GL/glext.h	1364;"	d
GL_DISTANCE_ATTENUATION_SGIS	windows/include/GL/glext.h	1371;"	d
GL_DOT2_ADD_ATI	windows/include/GL/glext.h	2522;"	d
GL_DOT3_ATI	windows/include/GL/glext.h	2516;"	d
GL_DOT3_RGB	windows/include/GL/glext.h	276;"	d
GL_DOT3_RGBA	windows/include/GL/glext.h	277;"	d
GL_DOT3_RGBA_ARB	windows/include/GL/glext.h	650;"	d
GL_DOT3_RGBA_EXT	windows/include/GL/glext.h	2167;"	d
GL_DOT3_RGB_ARB	windows/include/GL/glext.h	649;"	d
GL_DOT3_RGB_EXT	windows/include/GL/glext.h	2166;"	d
GL_DOT4_ATI	windows/include/GL/glext.h	2517;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	windows/include/GL/glext.h	2752;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	windows/include/GL/glext.h	2262;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	windows/include/GL/glext.h	2257;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	windows/include/GL/glext.h	2260;"	d
GL_DOT_PRODUCT_NV	windows/include/GL/glext.h	2256;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	windows/include/GL/glext.h	2750;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	windows/include/GL/glext.h	2261;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	windows/include/GL/glext.h	2751;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	windows/include/GL/glext.h	2258;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	windows/include/GL/glext.h	2308;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	windows/include/GL/glext.h	2259;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	windows/include/GL/glext.h	2234;"	d
GL_DRAW_BUFFER0	windows/include/GL/glext.h	390;"	d
GL_DRAW_BUFFER0_ARB	windows/include/GL/glext.h	890;"	d
GL_DRAW_BUFFER0_ATI	windows/include/GL/glext.h	2816;"	d
GL_DRAW_BUFFER1	windows/include/GL/glext.h	391;"	d
GL_DRAW_BUFFER10	windows/include/GL/glext.h	400;"	d
GL_DRAW_BUFFER10_ARB	windows/include/GL/glext.h	900;"	d
GL_DRAW_BUFFER10_ATI	windows/include/GL/glext.h	2826;"	d
GL_DRAW_BUFFER11	windows/include/GL/glext.h	401;"	d
GL_DRAW_BUFFER11_ARB	windows/include/GL/glext.h	901;"	d
GL_DRAW_BUFFER11_ATI	windows/include/GL/glext.h	2827;"	d
GL_DRAW_BUFFER12	windows/include/GL/glext.h	402;"	d
GL_DRAW_BUFFER12_ARB	windows/include/GL/glext.h	902;"	d
GL_DRAW_BUFFER12_ATI	windows/include/GL/glext.h	2828;"	d
GL_DRAW_BUFFER13	windows/include/GL/glext.h	403;"	d
GL_DRAW_BUFFER13_ARB	windows/include/GL/glext.h	903;"	d
GL_DRAW_BUFFER13_ATI	windows/include/GL/glext.h	2829;"	d
GL_DRAW_BUFFER14	windows/include/GL/glext.h	404;"	d
GL_DRAW_BUFFER14_ARB	windows/include/GL/glext.h	904;"	d
GL_DRAW_BUFFER14_ATI	windows/include/GL/glext.h	2830;"	d
GL_DRAW_BUFFER15	windows/include/GL/glext.h	405;"	d
GL_DRAW_BUFFER15_ARB	windows/include/GL/glext.h	905;"	d
GL_DRAW_BUFFER15_ATI	windows/include/GL/glext.h	2831;"	d
GL_DRAW_BUFFER1_ARB	windows/include/GL/glext.h	891;"	d
GL_DRAW_BUFFER1_ATI	windows/include/GL/glext.h	2817;"	d
GL_DRAW_BUFFER2	windows/include/GL/glext.h	392;"	d
GL_DRAW_BUFFER2_ARB	windows/include/GL/glext.h	892;"	d
GL_DRAW_BUFFER2_ATI	windows/include/GL/glext.h	2818;"	d
GL_DRAW_BUFFER3	windows/include/GL/glext.h	393;"	d
GL_DRAW_BUFFER3_ARB	windows/include/GL/glext.h	893;"	d
GL_DRAW_BUFFER3_ATI	windows/include/GL/glext.h	2819;"	d
GL_DRAW_BUFFER4	windows/include/GL/glext.h	394;"	d
GL_DRAW_BUFFER4_ARB	windows/include/GL/glext.h	894;"	d
GL_DRAW_BUFFER4_ATI	windows/include/GL/glext.h	2820;"	d
GL_DRAW_BUFFER5	windows/include/GL/glext.h	395;"	d
GL_DRAW_BUFFER5_ARB	windows/include/GL/glext.h	895;"	d
GL_DRAW_BUFFER5_ATI	windows/include/GL/glext.h	2821;"	d
GL_DRAW_BUFFER6	windows/include/GL/glext.h	396;"	d
GL_DRAW_BUFFER6_ARB	windows/include/GL/glext.h	896;"	d
GL_DRAW_BUFFER6_ATI	windows/include/GL/glext.h	2822;"	d
GL_DRAW_BUFFER7	windows/include/GL/glext.h	397;"	d
GL_DRAW_BUFFER7_ARB	windows/include/GL/glext.h	897;"	d
GL_DRAW_BUFFER7_ATI	windows/include/GL/glext.h	2823;"	d
GL_DRAW_BUFFER8	windows/include/GL/glext.h	398;"	d
GL_DRAW_BUFFER8_ARB	windows/include/GL/glext.h	898;"	d
GL_DRAW_BUFFER8_ATI	windows/include/GL/glext.h	2824;"	d
GL_DRAW_BUFFER9	windows/include/GL/glext.h	399;"	d
GL_DRAW_BUFFER9_ARB	windows/include/GL/glext.h	899;"	d
GL_DRAW_BUFFER9_ATI	windows/include/GL/glext.h	2825;"	d
GL_DRAW_PIXELS_APPLE	windows/include/GL/glext.h	2784;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	windows/include/GL/glext.h	2284;"	d
GL_DSDT8_MAG8_NV	windows/include/GL/glext.h	2283;"	d
GL_DSDT8_NV	windows/include/GL/glext.h	2282;"	d
GL_DSDT_MAG_INTENSITY_NV	windows/include/GL/glext.h	2238;"	d
GL_DSDT_MAG_NV	windows/include/GL/glext.h	2265;"	d
GL_DSDT_MAG_VIB_NV	windows/include/GL/glext.h	2266;"	d
GL_DSDT_NV	windows/include/GL/glext.h	2264;"	d
GL_DS_BIAS_NV	windows/include/GL/glext.h	2295;"	d
GL_DS_SCALE_NV	windows/include/GL/glext.h	2289;"	d
GL_DT_BIAS_NV	windows/include/GL/glext.h	2296;"	d
GL_DT_SCALE_NV	windows/include/GL/glext.h	2290;"	d
GL_DU8DV8_ATI	windows/include/GL/glext.h	2441;"	d
GL_DUAL_ALPHA12_SGIS	windows/include/GL/glext.h	1324;"	d
GL_DUAL_ALPHA16_SGIS	windows/include/GL/glext.h	1325;"	d
GL_DUAL_ALPHA4_SGIS	windows/include/GL/glext.h	1322;"	d
GL_DUAL_ALPHA8_SGIS	windows/include/GL/glext.h	1323;"	d
GL_DUAL_INTENSITY12_SGIS	windows/include/GL/glext.h	1332;"	d
GL_DUAL_INTENSITY16_SGIS	windows/include/GL/glext.h	1333;"	d
GL_DUAL_INTENSITY4_SGIS	windows/include/GL/glext.h	1330;"	d
GL_DUAL_INTENSITY8_SGIS	windows/include/GL/glext.h	1331;"	d
GL_DUAL_LUMINANCE12_SGIS	windows/include/GL/glext.h	1328;"	d
GL_DUAL_LUMINANCE16_SGIS	windows/include/GL/glext.h	1329;"	d
GL_DUAL_LUMINANCE4_SGIS	windows/include/GL/glext.h	1326;"	d
GL_DUAL_LUMINANCE8_SGIS	windows/include/GL/glext.h	1327;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	windows/include/GL/glext.h	1334;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	windows/include/GL/glext.h	1335;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	windows/include/GL/glext.h	1342;"	d
GL_DUDV_ATI	windows/include/GL/glext.h	2440;"	d
GL_DYNAMIC_ATI	windows/include/GL/glext.h	2567;"	d
GL_DYNAMIC_COPY	windows/include/GL/glext.h	357;"	d
GL_DYNAMIC_COPY_ARB	windows/include/GL/glext.h	809;"	d
GL_DYNAMIC_DRAW	windows/include/GL/glext.h	355;"	d
GL_DYNAMIC_DRAW_ARB	windows/include/GL/glext.h	807;"	d
GL_DYNAMIC_READ	windows/include/GL/glext.h	356;"	d
GL_DYNAMIC_READ_ARB	windows/include/GL/glext.h	808;"	d
GL_EDGEFLAG_BIT_PGI	windows/include/GL/glext.h	1474;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	338;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	790;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	windows/include/GL/glext.h	1244;"	d
GL_EDGE_FLAG_ARRAY_EXT	windows/include/GL/glext.h	1224;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	windows/include/GL/glext.h	2063;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	windows/include/GL/glext.h	2071;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1250;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1243;"	d
GL_EIGHTH_BIT_ATI	windows/include/GL/glext.h	2546;"	d
GL_ELEMENT_ARRAY_APPLE	windows/include/GL/glext.h	2778;"	d
GL_ELEMENT_ARRAY_ATI	windows/include/GL/glext.h	2703;"	d
GL_ELEMENT_ARRAY_BUFFER	windows/include/GL/glext.h	330;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	windows/include/GL/glext.h	782;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	332;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	784;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	windows/include/GL/glext.h	2780;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	windows/include/GL/glext.h	2705;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	windows/include/GL/glext.h	2779;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	windows/include/GL/glext.h	2704;"	d
GL_EMBOSS_CONSTANT_NV	windows/include/GL/glext.h	2022;"	d
GL_EMBOSS_LIGHT_NV	windows/include/GL/glext.h	2021;"	d
GL_EMBOSS_MAP_NV	windows/include/GL/glext.h	2023;"	d
GL_EVAL_2D_NV	windows/include/GL/glext.h	2186;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	windows/include/GL/glext.h	2191;"	d
GL_EVAL_TRIANGULAR_2D_NV	windows/include/GL/glext.h	2187;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	windows/include/GL/glext.h	2192;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	windows/include/GL/glext.h	2202;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	windows/include/GL/glext.h	2203;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	windows/include/GL/glext.h	2204;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	windows/include/GL/glext.h	2205;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	windows/include/GL/glext.h	2206;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	windows/include/GL/glext.h	2207;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	windows/include/GL/glext.h	2193;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	windows/include/GL/glext.h	2194;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	windows/include/GL/glext.h	2195;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	windows/include/GL/glext.h	2196;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	windows/include/GL/glext.h	2197;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	windows/include/GL/glext.h	2198;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	windows/include/GL/glext.h	2199;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	windows/include/GL/glext.h	2200;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	windows/include/GL/glext.h	2201;"	d
GL_EXPAND_NEGATE_NV	windows/include/GL/glext.h	1975;"	d
GL_EXPAND_NORMAL_NV	windows/include/GL/glext.h	1974;"	d
GL_EXT_422_pixels	windows/include/GL/glext.h	5237;"	d
GL_EXT_abgr	windows/include/GL/glext.h	4169;"	d
GL_EXT_bgra	windows/include/GL/glext.h	4855;"	d
GL_EXT_blend_color	windows/include/GL/glext.h	4173;"	d
GL_EXT_blend_equation_separate	windows/include/GL/glext.h	6407;"	d
GL_EXT_blend_func_separate	windows/include/GL/glext.h	5209;"	d
GL_EXT_blend_logic_op	windows/include/GL/glext.h	4485;"	d
GL_EXT_blend_minmax	windows/include/GL/glext.h	4473;"	d
GL_EXT_blend_subtract	windows/include/GL/glext.h	4481;"	d
GL_EXT_clip_volume_hint	windows/include/GL/glext.h	4687;"	d
GL_EXT_cmyka	windows/include/GL/glext.h	4361;"	d
GL_EXT_color_matrix	windows/include/GL/glext.h	4297;"	d
GL_EXT_color_subtable	windows/include/GL/glext.h	4651;"	d
GL_EXT_compiled_vertex_array	windows/include/GL/glext.h	4749;"	d
GL_EXT_convolution	windows/include/GL/glext.h	4265;"	d
GL_EXT_coordinate_frame	windows/include/GL/glext.h	5007;"	d
GL_EXT_copy_texture	windows/include/GL/glext.h	4223;"	d
GL_EXT_cull_vertex	windows/include/GL/glext.h	4759;"	d
GL_EXT_depth_bounds_test	windows/include/GL/glext.h	6395;"	d
GL_EXT_draw_range_elements	windows/include/GL/glext.h	4823;"	d
GL_EXT_fog_coord	windows/include/GL/glext.h	4987;"	d
GL_EXT_framebuffer_object	windows/include/GL/glext.h	6443;"	d
GL_EXT_histogram	windows/include/GL/glext.h	4239;"	d
GL_EXT_index_array_formats	windows/include/GL/glext.h	4745;"	d
GL_EXT_index_func	windows/include/GL/glext.h	4737;"	d
GL_EXT_index_material	windows/include/GL/glext.h	4729;"	d
GL_EXT_index_texture	windows/include/GL/glext.h	4725;"	d
GL_EXT_light_texture	windows/include/GL/glext.h	4839;"	d
GL_EXT_misc_attribute	windows/include/GL/glext.h	4449;"	d
GL_EXT_multi_draw_arrays	windows/include/GL/glext.h	4977;"	d
GL_EXT_multisample	windows/include/GL/glext.h	5465;"	d
GL_EXT_packed_pixels	windows/include/GL/glext.h	4403;"	d
GL_EXT_paletted_texture	windows/include/GL/glext.h	4673;"	d
GL_EXT_pixel_buffer_object	windows/include/GL/glext.h	6423;"	d
GL_EXT_pixel_transform	windows/include/GL/glext.h	4903;"	d
GL_EXT_pixel_transform_color_table	windows/include/GL/glext.h	4917;"	d
GL_EXT_point_parameters	windows/include/GL/glext.h	4519;"	d
GL_EXT_polygon_offset	windows/include/GL/glext.h	4181;"	d
GL_EXT_rescale_normal	windows/include/GL/glext.h	4421;"	d
GL_EXT_secondary_color	windows/include/GL/glext.h	4929;"	d
GL_EXT_separate_specular_color	windows/include/GL/glext.h	4925;"	d
GL_EXT_shadow_funcs	windows/include/GL/glext.h	6095;"	d
GL_EXT_shared_texture_palette	windows/include/GL/glext.h	4921;"	d
GL_EXT_stencil_two_side	windows/include/GL/glext.h	6099;"	d
GL_EXT_stencil_wrap	windows/include/GL/glext.h	5233;"	d
GL_EXT_subtexture	windows/include/GL/glext.h	4213;"	d
GL_EXT_texture	windows/include/GL/glext.h	4189;"	d
GL_EXT_texture3D	windows/include/GL/glext.h	4193;"	d
GL_EXT_texture_env_add	windows/include/GL/glext.h	5249;"	d
GL_EXT_texture_env_combine	windows/include/GL/glext.h	5057;"	d
GL_EXT_texture_env_dot3	windows/include/GL/glext.h	5507;"	d
GL_EXT_texture_filter_anisotropic	windows/include/GL/glext.h	5257;"	d
GL_EXT_texture_lod_bias	windows/include/GL/glext.h	5253;"	d
GL_EXT_texture_mirror_clamp	windows/include/GL/glext.h	6403;"	d
GL_EXT_texture_object	windows/include/GL/glext.h	4365;"	d
GL_EXT_texture_perturb_normal	windows/include/GL/glext.h	4969;"	d
GL_EXT_vertex_array	windows/include/GL/glext.h	4425;"	d
GL_EXT_vertex_shader	windows/include/GL/glext.h	5839;"	d
GL_EXT_vertex_weighting	windows/include/GL/glext.h	5261;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	windows/include/GL/glext.h	2153;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	windows/include/GL/glext.h	2151;"	d
GL_EYE_LINE_SGIS	windows/include/GL/glext.h	2157;"	d
GL_EYE_PLANE_ABSOLUTE_NV	windows/include/GL/glext.h	2016;"	d
GL_EYE_POINT_SGIS	windows/include/GL/glext.h	2155;"	d
GL_EYE_RADIAL_NV	windows/include/GL/glext.h	2015;"	d
GL_E_TIMES_F_NV	windows/include/GL/glext.h	1970;"	d
GL_FENCE_APPLE	windows/include/GL/glext.h	2785;"	d
GL_FENCE_CONDITION_NV	windows/include/GL/glext.h	2178;"	d
GL_FENCE_STATUS_NV	windows/include/GL/glext.h	2177;"	d
GL_FILTER4_SGIS	windows/include/GL/glext.h	1034;"	d
GL_FIXED_ONLY_ARB	windows/include/GL/glext.h	920;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	windows/include/GL/glext.h	2874;"	d
GL_FLOAT_MAT2	windows/include/GL/glext.h	431;"	d
GL_FLOAT_MAT2_ARB	windows/include/GL/glext.h	835;"	d
GL_FLOAT_MAT3	windows/include/GL/glext.h	432;"	d
GL_FLOAT_MAT3_ARB	windows/include/GL/glext.h	836;"	d
GL_FLOAT_MAT4	windows/include/GL/glext.h	433;"	d
GL_FLOAT_MAT4_ARB	windows/include/GL/glext.h	837;"	d
GL_FLOAT_R16_NV	windows/include/GL/glext.h	2865;"	d
GL_FLOAT_R32_NV	windows/include/GL/glext.h	2866;"	d
GL_FLOAT_RG16_NV	windows/include/GL/glext.h	2867;"	d
GL_FLOAT_RG32_NV	windows/include/GL/glext.h	2868;"	d
GL_FLOAT_RGB16_NV	windows/include/GL/glext.h	2869;"	d
GL_FLOAT_RGB32_NV	windows/include/GL/glext.h	2870;"	d
GL_FLOAT_RGBA16_NV	windows/include/GL/glext.h	2871;"	d
GL_FLOAT_RGBA32_NV	windows/include/GL/glext.h	2872;"	d
GL_FLOAT_RGBA_MODE_NV	windows/include/GL/glext.h	2875;"	d
GL_FLOAT_RGBA_NV	windows/include/GL/glext.h	2864;"	d
GL_FLOAT_RGB_NV	windows/include/GL/glext.h	2863;"	d
GL_FLOAT_RG_NV	windows/include/GL/glext.h	2862;"	d
GL_FLOAT_R_NV	windows/include/GL/glext.h	2861;"	d
GL_FLOAT_VEC2	windows/include/GL/glext.h	421;"	d
GL_FLOAT_VEC2_ARB	windows/include/GL/glext.h	825;"	d
GL_FLOAT_VEC3	windows/include/GL/glext.h	422;"	d
GL_FLOAT_VEC3_ARB	windows/include/GL/glext.h	826;"	d
GL_FLOAT_VEC4	windows/include/GL/glext.h	423;"	d
GL_FLOAT_VEC4_ARB	windows/include/GL/glext.h	827;"	d
GL_FOG_COORD	windows/include/GL/glext.h	360;"	d
GL_FOG_COORDINATE	windows/include/GL/glext.h	296;"	d
GL_FOG_COORDINATE_ARRAY	windows/include/GL/glext.h	302;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	340;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	792;"	d
GL_FOG_COORDINATE_ARRAY_EXT	windows/include/GL/glext.h	1758;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	windows/include/GL/glext.h	2064;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	windows/include/GL/glext.h	2072;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	windows/include/GL/glext.h	301;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1757;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	windows/include/GL/glext.h	300;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1756;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	windows/include/GL/glext.h	299;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1755;"	d
GL_FOG_COORDINATE_EXT	windows/include/GL/glext.h	1752;"	d
GL_FOG_COORDINATE_SOURCE	windows/include/GL/glext.h	295;"	d
GL_FOG_COORDINATE_SOURCE_EXT	windows/include/GL/glext.h	1751;"	d
GL_FOG_COORD_ARRAY	windows/include/GL/glext.h	365;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	366;"	d
GL_FOG_COORD_ARRAY_POINTER	windows/include/GL/glext.h	364;"	d
GL_FOG_COORD_ARRAY_STRIDE	windows/include/GL/glext.h	363;"	d
GL_FOG_COORD_ARRAY_TYPE	windows/include/GL/glext.h	362;"	d
GL_FOG_COORD_SRC	windows/include/GL/glext.h	359;"	d
GL_FOG_DISTANCE_MODE_NV	windows/include/GL/glext.h	2014;"	d
GL_FOG_FUNC_POINTS_SGIS	windows/include/GL/glext.h	1423;"	d
GL_FOG_FUNC_SGIS	windows/include/GL/glext.h	1422;"	d
GL_FOG_OFFSET_SGIX	windows/include/GL/glext.h	1428;"	d
GL_FOG_OFFSET_VALUE_SGIX	windows/include/GL/glext.h	1429;"	d
GL_FOG_SCALE_SGIX	windows/include/GL/glext.h	1816;"	d
GL_FOG_SCALE_VALUE_SGIX	windows/include/GL/glext.h	1817;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	windows/include/GL/glext.h	1637;"	d
GL_FORCE_BLUE_TO_ONE_NV	windows/include/GL/glext.h	2755;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	windows/include/GL/glext.h	2418;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	windows/include/GL/glext.h	2417;"	d
GL_FRAGMENT_COLOR_EXT	windows/include/GL/glext.h	1643;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	windows/include/GL/glext.h	1596;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	windows/include/GL/glext.h	1597;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	windows/include/GL/glext.h	1595;"	d
GL_FRAGMENT_DEPTH	windows/include/GL/glext.h	297;"	d
GL_FRAGMENT_DEPTH_EXT	windows/include/GL/glext.h	1753;"	d
GL_FRAGMENT_LIGHT0_SGIX	windows/include/GL/glext.h	1606;"	d
GL_FRAGMENT_LIGHT1_SGIX	windows/include/GL/glext.h	1607;"	d
GL_FRAGMENT_LIGHT2_SGIX	windows/include/GL/glext.h	1608;"	d
GL_FRAGMENT_LIGHT3_SGIX	windows/include/GL/glext.h	1609;"	d
GL_FRAGMENT_LIGHT4_SGIX	windows/include/GL/glext.h	1610;"	d
GL_FRAGMENT_LIGHT5_SGIX	windows/include/GL/glext.h	1611;"	d
GL_FRAGMENT_LIGHT6_SGIX	windows/include/GL/glext.h	1612;"	d
GL_FRAGMENT_LIGHT7_SGIX	windows/include/GL/glext.h	1613;"	d
GL_FRAGMENT_LIGHTING_SGIX	windows/include/GL/glext.h	1594;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	windows/include/GL/glext.h	1604;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	windows/include/GL/glext.h	1602;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	windows/include/GL/glext.h	1605;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	windows/include/GL/glext.h	1603;"	d
GL_FRAGMENT_MATERIAL_EXT	windows/include/GL/glext.h	1641;"	d
GL_FRAGMENT_NORMAL_EXT	windows/include/GL/glext.h	1642;"	d
GL_FRAGMENT_PROGRAM_ARB	windows/include/GL/glext.h	761;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	windows/include/GL/glext.h	2883;"	d
GL_FRAGMENT_PROGRAM_NV	windows/include/GL/glext.h	2880;"	d
GL_FRAGMENT_SHADER	windows/include/GL/glext.h	413;"	d
GL_FRAGMENT_SHADER_ARB	windows/include/GL/glext.h	868;"	d
GL_FRAGMENT_SHADER_ATI	windows/include/GL/glext.h	2447;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	windows/include/GL/glext.h	451;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	windows/include/GL/glext.h	870;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	windows/include/GL/glext.h	2989;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	windows/include/GL/glext.h	2988;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	windows/include/GL/glext.h	2992;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	windows/include/GL/glext.h	2991;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	windows/include/GL/glext.h	2990;"	d
GL_FRAMEBUFFER_BINDING_EXT	windows/include/GL/glext.h	2986;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	windows/include/GL/glext.h	2993;"	d
GL_FRAMEBUFFER_EXT	windows/include/GL/glext.h	3021;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	windows/include/GL/glext.h	2994;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	windows/include/GL/glext.h	2997;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	windows/include/GL/glext.h	2999;"	d
GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT	windows/include/GL/glext.h	2996;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	windows/include/GL/glext.h	2998;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	windows/include/GL/glext.h	2995;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	windows/include/GL/glext.h	3000;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	windows/include/GL/glext.h	3001;"	d
GL_FRAMEZOOM_FACTOR_SGIX	windows/include/GL/glext.h	1388;"	d
GL_FRAMEZOOM_SGIX	windows/include/GL/glext.h	1387;"	d
GL_FULL_RANGE_EXT	windows/include/GL/glext.h	2674;"	d
GL_FULL_STIPPLE_HINT_PGI	windows/include/GL/glext.h	1508;"	d
GL_FUNC_ADD	windows/include/GL/glext.h	109;"	d
GL_FUNC_ADD_EXT	windows/include/GL/glext.h	1292;"	d
GL_FUNC_REVERSE_SUBTRACT	windows/include/GL/glext.h	114;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	windows/include/GL/glext.h	1300;"	d
GL_FUNC_SUBTRACT	windows/include/GL/glext.h	113;"	d
GL_FUNC_SUBTRACT_EXT	windows/include/GL/glext.h	1299;"	d
GL_GENERATE_MIPMAP	windows/include/GL/glext.h	289;"	d
GL_GENERATE_MIPMAP_HINT	windows/include/GL/glext.h	290;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	windows/include/GL/glext.h	1258;"	d
GL_GENERATE_MIPMAP_SGIS	windows/include/GL/glext.h	1257;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	windows/include/GL/glext.h	1397;"	d
GL_GEOMETRY_DEFORMATION_SGIX	windows/include/GL/glext.h	1401;"	d
GL_GLEXT_VERSION	windows/include/GL/glext.h	57;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	windows/include/GL/glext.h	1827;"	d
GL_GLOBAL_ALPHA_SUN	windows/include/GL/glext.h	1826;"	d
GL_GREEN_BIT_ATI	windows/include/GL/glext.h	2539;"	d
GL_GREEN_MAX_CLAMP_INGR	windows/include/GL/glext.h	1866;"	d
GL_GREEN_MIN_CLAMP_INGR	windows/include/GL/glext.h	1862;"	d
GL_GREMEDY_string_marker	windows/include/GL/glext.h	6483;"	d
GL_HALF_BIAS_NEGATE_NV	windows/include/GL/glext.h	1977;"	d
GL_HALF_BIAS_NORMAL_NV	windows/include/GL/glext.h	1976;"	d
GL_HALF_BIT_ATI	windows/include/GL/glext.h	2544;"	d
GL_HALF_FLOAT_ARB	windows/include/GL/glext.h	924;"	d
GL_HALF_FLOAT_NV	windows/include/GL/glext.h	2888;"	d
GL_HILO16_NV	windows/include/GL/glext.h	2267;"	d
GL_HILO8_NV	windows/include/GL/glext.h	2753;"	d
GL_HILO_NV	windows/include/GL/glext.h	2263;"	d
GL_HISTOGRAM	windows/include/GL/glext.h	135;"	d
GL_HISTOGRAM_ALPHA_SIZE	windows/include/GL/glext.h	142;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	windows/include/GL/glext.h	1052;"	d
GL_HISTOGRAM_BLUE_SIZE	windows/include/GL/glext.h	141;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	windows/include/GL/glext.h	1051;"	d
GL_HISTOGRAM_EXT	windows/include/GL/glext.h	1045;"	d
GL_HISTOGRAM_FORMAT	windows/include/GL/glext.h	138;"	d
GL_HISTOGRAM_FORMAT_EXT	windows/include/GL/glext.h	1048;"	d
GL_HISTOGRAM_GREEN_SIZE	windows/include/GL/glext.h	140;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	windows/include/GL/glext.h	1050;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	windows/include/GL/glext.h	143;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	windows/include/GL/glext.h	1053;"	d
GL_HISTOGRAM_RED_SIZE	windows/include/GL/glext.h	139;"	d
GL_HISTOGRAM_RED_SIZE_EXT	windows/include/GL/glext.h	1049;"	d
GL_HISTOGRAM_SINK	windows/include/GL/glext.h	144;"	d
GL_HISTOGRAM_SINK_EXT	windows/include/GL/glext.h	1054;"	d
GL_HISTOGRAM_WIDTH	windows/include/GL/glext.h	137;"	d
GL_HISTOGRAM_WIDTH_EXT	windows/include/GL/glext.h	1047;"	d
GL_HI_BIAS_NV	windows/include/GL/glext.h	2293;"	d
GL_HI_SCALE_NV	windows/include/GL/glext.h	2287;"	d
GL_HP_convolution_border_modes	windows/include/GL/glext.h	4643;"	d
GL_HP_image_transform	windows/include/GL/glext.h	4625;"	d
GL_HP_occlusion_test	windows/include/GL/glext.h	4899;"	d
GL_HP_texture_lighting	windows/include/GL/glext.h	4819;"	d
GL_IBM_cull_vertex	windows/include/GL/glext.h	5397;"	d
GL_IBM_multimode_draw_arrays	windows/include/GL/glext.h	5401;"	d
GL_IBM_rasterpos_clip	windows/include/GL/glext.h	4815;"	d
GL_IBM_vertex_array_lists	windows/include/GL/glext.h	5411;"	d
GL_IDENTITY_NV	windows/include/GL/glext.h	2325;"	d
GL_IGNORE_BORDER_HP	windows/include/GL/glext.h	1451;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	windows/include/GL/glext.h	1442;"	d
GL_IMAGE_MAG_FILTER_HP	windows/include/GL/glext.h	1440;"	d
GL_IMAGE_MIN_FILTER_HP	windows/include/GL/glext.h	1441;"	d
GL_IMAGE_ROTATE_ANGLE_HP	windows/include/GL/glext.h	1437;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	windows/include/GL/glext.h	1438;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	windows/include/GL/glext.h	1439;"	d
GL_IMAGE_SCALE_X_HP	windows/include/GL/glext.h	1433;"	d
GL_IMAGE_SCALE_Y_HP	windows/include/GL/glext.h	1434;"	d
GL_IMAGE_TRANSFORM_2D_HP	windows/include/GL/glext.h	1445;"	d
GL_IMAGE_TRANSLATE_X_HP	windows/include/GL/glext.h	1435;"	d
GL_IMAGE_TRANSLATE_Y_HP	windows/include/GL/glext.h	1436;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	windows/include/GL/glext.h	2927;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	windows/include/GL/glext.h	2926;"	d
GL_INCR_WRAP	windows/include/GL/glext.h	313;"	d
GL_INCR_WRAP_EXT	windows/include/GL/glext.h	1876;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	336;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	788;"	d
GL_INDEX_ARRAY_COUNT_EXT	windows/include/GL/glext.h	1238;"	d
GL_INDEX_ARRAY_EXT	windows/include/GL/glext.h	1222;"	d
GL_INDEX_ARRAY_LIST_IBM	windows/include/GL/glext.h	2061;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	windows/include/GL/glext.h	2069;"	d
GL_INDEX_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1248;"	d
GL_INDEX_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1237;"	d
GL_INDEX_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1236;"	d
GL_INDEX_BIT_PGI	windows/include/GL/glext.h	1475;"	d
GL_INDEX_MATERIAL_EXT	windows/include/GL/glext.h	1555;"	d
GL_INDEX_MATERIAL_FACE_EXT	windows/include/GL/glext.h	1557;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	windows/include/GL/glext.h	1556;"	d
GL_INDEX_TEST_EXT	windows/include/GL/glext.h	1561;"	d
GL_INDEX_TEST_FUNC_EXT	windows/include/GL/glext.h	1562;"	d
GL_INDEX_TEST_REF_EXT	windows/include/GL/glext.h	1563;"	d
GL_INFO_LOG_LENGTH	windows/include/GL/glext.h	444;"	d
GL_INGR_blend_func_separate	windows/include/GL/glext.h	5217;"	d
GL_INGR_color_clamp	windows/include/GL/glext.h	5225;"	d
GL_INGR_interlace_read	windows/include/GL/glext.h	5229;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	windows/include/GL/glext.h	1375;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	windows/include/GL/glext.h	1376;"	d
GL_INTEL_parallel_arrays	windows/include/GL/glext.h	4885;"	d
GL_INTENSITY12_EXT	windows/include/GL/glext.h	993;"	d
GL_INTENSITY16F_ARB	windows/include/GL/glext.h	945;"	d
GL_INTENSITY16_EXT	windows/include/GL/glext.h	994;"	d
GL_INTENSITY32F_ARB	windows/include/GL/glext.h	939;"	d
GL_INTENSITY4_EXT	windows/include/GL/glext.h	991;"	d
GL_INTENSITY8_EXT	windows/include/GL/glext.h	992;"	d
GL_INTENSITY_EXT	windows/include/GL/glext.h	990;"	d
GL_INTENSITY_FLOAT16_ATI	windows/include/GL/glext.h	2855;"	d
GL_INTENSITY_FLOAT32_ATI	windows/include/GL/glext.h	2849;"	d
GL_INTERLACE_OML	windows/include/GL/glext.h	2412;"	d
GL_INTERLACE_READ_INGR	windows/include/GL/glext.h	1872;"	d
GL_INTERLACE_READ_OML	windows/include/GL/glext.h	2413;"	d
GL_INTERLACE_SGIX	windows/include/GL/glext.h	1307;"	d
GL_INTERPOLATE	windows/include/GL/glext.h	271;"	d
GL_INTERPOLATE_ARB	windows/include/GL/glext.h	638;"	d
GL_INTERPOLATE_EXT	windows/include/GL/glext.h	1789;"	d
GL_INT_VEC2	windows/include/GL/glext.h	424;"	d
GL_INT_VEC2_ARB	windows/include/GL/glext.h	828;"	d
GL_INT_VEC3	windows/include/GL/glext.h	425;"	d
GL_INT_VEC3_ARB	windows/include/GL/glext.h	829;"	d
GL_INT_VEC4	windows/include/GL/glext.h	426;"	d
GL_INT_VEC4_ARB	windows/include/GL/glext.h	830;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	windows/include/GL/glext.h	2984;"	d
GL_INVARIANT_DATATYPE_EXT	windows/include/GL/glext.h	2684;"	d
GL_INVARIANT_EXT	windows/include/GL/glext.h	2643;"	d
GL_INVARIANT_VALUE_EXT	windows/include/GL/glext.h	2683;"	d
GL_INVERSE_NV	windows/include/GL/glext.h	2326;"	d
GL_INVERSE_TRANSPOSE_NV	windows/include/GL/glext.h	2328;"	d
GL_INVERTED_SCREEN_W_REND	windows/include/GL/glext.h	1763;"	d
GL_IR_INSTRUMENT1_SGIX	windows/include/GL/glext.h	1534;"	d
GL_IUI_N3F_V2F_EXT	windows/include/GL/glext.h	1569;"	d
GL_IUI_N3F_V3F_EXT	windows/include/GL/glext.h	1570;"	d
GL_IUI_V2F_EXT	windows/include/GL/glext.h	1567;"	d
GL_IUI_V3F_EXT	windows/include/GL/glext.h	1568;"	d
GL_LERP_ATI	windows/include/GL/glext.h	2519;"	d
GL_LIGHT_ENV_MODE_SGIX	windows/include/GL/glext.h	1601;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	windows/include/GL/glext.h	92;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	windows/include/GL/glext.h	1727;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	windows/include/GL/glext.h	1808;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	windows/include/GL/glext.h	1262;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	windows/include/GL/glext.h	1273;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	windows/include/GL/glext.h	1166;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	windows/include/GL/glext.h	1167;"	d
GL_LINEAR_DETAIL_SGIS	windows/include/GL/glext.h	1165;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	windows/include/GL/glext.h	1175;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	windows/include/GL/glext.h	1176;"	d
GL_LINEAR_SHARPEN_SGIS	windows/include/GL/glext.h	1174;"	d
GL_LINK_STATUS	windows/include/GL/glext.h	442;"	d
GL_LIST_PRIORITY_SGIX	windows/include/GL/glext.h	1530;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	windows/include/GL/glext.h	2686;"	d
GL_LOCAL_CONSTANT_EXT	windows/include/GL/glext.h	2644;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	windows/include/GL/glext.h	2685;"	d
GL_LOCAL_EXT	windows/include/GL/glext.h	2645;"	d
GL_LOWER_LEFT	windows/include/GL/glext.h	455;"	d
GL_LO_BIAS_NV	windows/include/GL/glext.h	2294;"	d
GL_LO_SCALE_NV	windows/include/GL/glext.h	2288;"	d
GL_LUMINANCE12_ALPHA12_EXT	windows/include/GL/glext.h	988;"	d
GL_LUMINANCE12_ALPHA4_EXT	windows/include/GL/glext.h	987;"	d
GL_LUMINANCE12_EXT	windows/include/GL/glext.h	982;"	d
GL_LUMINANCE16F_ARB	windows/include/GL/glext.h	946;"	d
GL_LUMINANCE16_ALPHA16_EXT	windows/include/GL/glext.h	989;"	d
GL_LUMINANCE16_EXT	windows/include/GL/glext.h	983;"	d
GL_LUMINANCE32F_ARB	windows/include/GL/glext.h	940;"	d
GL_LUMINANCE4_ALPHA4_EXT	windows/include/GL/glext.h	984;"	d
GL_LUMINANCE4_EXT	windows/include/GL/glext.h	980;"	d
GL_LUMINANCE6_ALPHA2_EXT	windows/include/GL/glext.h	985;"	d
GL_LUMINANCE8_ALPHA8_EXT	windows/include/GL/glext.h	986;"	d
GL_LUMINANCE8_EXT	windows/include/GL/glext.h	981;"	d
GL_LUMINANCE_ALPHA16F_ARB	windows/include/GL/glext.h	947;"	d
GL_LUMINANCE_ALPHA32F_ARB	windows/include/GL/glext.h	941;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	windows/include/GL/glext.h	2857;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	windows/include/GL/glext.h	2851;"	d
GL_LUMINANCE_FLOAT16_ATI	windows/include/GL/glext.h	2856;"	d
GL_LUMINANCE_FLOAT32_ATI	windows/include/GL/glext.h	2850;"	d
GL_MAD_ATI	windows/include/GL/glext.h	2518;"	d
GL_MAGNITUDE_BIAS_NV	windows/include/GL/glext.h	2297;"	d
GL_MAGNITUDE_SCALE_NV	windows/include/GL/glext.h	2291;"	d
GL_MAP1_BINORMAL_EXT	windows/include/GL/glext.h	1779;"	d
GL_MAP1_TANGENT_EXT	windows/include/GL/glext.h	1777;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	windows/include/GL/glext.h	2367;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	windows/include/GL/glext.h	2377;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	windows/include/GL/glext.h	2378;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	windows/include/GL/glext.h	2379;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	windows/include/GL/glext.h	2380;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	windows/include/GL/glext.h	2381;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	windows/include/GL/glext.h	2382;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	windows/include/GL/glext.h	2368;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	windows/include/GL/glext.h	2369;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	windows/include/GL/glext.h	2370;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	windows/include/GL/glext.h	2371;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	windows/include/GL/glext.h	2372;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	windows/include/GL/glext.h	2373;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	windows/include/GL/glext.h	2374;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	windows/include/GL/glext.h	2375;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	windows/include/GL/glext.h	2376;"	d
GL_MAP2_BINORMAL_EXT	windows/include/GL/glext.h	1780;"	d
GL_MAP2_TANGENT_EXT	windows/include/GL/glext.h	1778;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	windows/include/GL/glext.h	2383;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	windows/include/GL/glext.h	2393;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	windows/include/GL/glext.h	2394;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	windows/include/GL/glext.h	2395;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	windows/include/GL/glext.h	2396;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	windows/include/GL/glext.h	2397;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	windows/include/GL/glext.h	2398;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	windows/include/GL/glext.h	2384;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	windows/include/GL/glext.h	2385;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	windows/include/GL/glext.h	2386;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	windows/include/GL/glext.h	2387;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	windows/include/GL/glext.h	2388;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	windows/include/GL/glext.h	2389;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	windows/include/GL/glext.h	2390;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	windows/include/GL/glext.h	2391;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	windows/include/GL/glext.h	2392;"	d
GL_MAP_ATTRIB_U_ORDER_NV	windows/include/GL/glext.h	2189;"	d
GL_MAP_ATTRIB_V_ORDER_NV	windows/include/GL/glext.h	2190;"	d
GL_MAP_TESSELLATION_NV	windows/include/GL/glext.h	2188;"	d
GL_MATERIAL_SIDE_HINT_PGI	windows/include/GL/glext.h	1470;"	d
GL_MATRIX0_ARB	windows/include/GL/glext.h	726;"	d
GL_MATRIX0_NV	windows/include/GL/glext.h	2331;"	d
GL_MATRIX10_ARB	windows/include/GL/glext.h	736;"	d
GL_MATRIX11_ARB	windows/include/GL/glext.h	737;"	d
GL_MATRIX12_ARB	windows/include/GL/glext.h	738;"	d
GL_MATRIX13_ARB	windows/include/GL/glext.h	739;"	d
GL_MATRIX14_ARB	windows/include/GL/glext.h	740;"	d
GL_MATRIX15_ARB	windows/include/GL/glext.h	741;"	d
GL_MATRIX16_ARB	windows/include/GL/glext.h	742;"	d
GL_MATRIX17_ARB	windows/include/GL/glext.h	743;"	d
GL_MATRIX18_ARB	windows/include/GL/glext.h	744;"	d
GL_MATRIX19_ARB	windows/include/GL/glext.h	745;"	d
GL_MATRIX1_ARB	windows/include/GL/glext.h	727;"	d
GL_MATRIX1_NV	windows/include/GL/glext.h	2332;"	d
GL_MATRIX20_ARB	windows/include/GL/glext.h	746;"	d
GL_MATRIX21_ARB	windows/include/GL/glext.h	747;"	d
GL_MATRIX22_ARB	windows/include/GL/glext.h	748;"	d
GL_MATRIX23_ARB	windows/include/GL/glext.h	749;"	d
GL_MATRIX24_ARB	windows/include/GL/glext.h	750;"	d
GL_MATRIX25_ARB	windows/include/GL/glext.h	751;"	d
GL_MATRIX26_ARB	windows/include/GL/glext.h	752;"	d
GL_MATRIX27_ARB	windows/include/GL/glext.h	753;"	d
GL_MATRIX28_ARB	windows/include/GL/glext.h	754;"	d
GL_MATRIX29_ARB	windows/include/GL/glext.h	755;"	d
GL_MATRIX2_ARB	windows/include/GL/glext.h	728;"	d
GL_MATRIX2_NV	windows/include/GL/glext.h	2333;"	d
GL_MATRIX30_ARB	windows/include/GL/glext.h	756;"	d
GL_MATRIX31_ARB	windows/include/GL/glext.h	757;"	d
GL_MATRIX3_ARB	windows/include/GL/glext.h	729;"	d
GL_MATRIX3_NV	windows/include/GL/glext.h	2334;"	d
GL_MATRIX4_ARB	windows/include/GL/glext.h	730;"	d
GL_MATRIX4_NV	windows/include/GL/glext.h	2335;"	d
GL_MATRIX5_ARB	windows/include/GL/glext.h	731;"	d
GL_MATRIX5_NV	windows/include/GL/glext.h	2336;"	d
GL_MATRIX6_ARB	windows/include/GL/glext.h	732;"	d
GL_MATRIX6_NV	windows/include/GL/glext.h	2337;"	d
GL_MATRIX7_ARB	windows/include/GL/glext.h	733;"	d
GL_MATRIX7_NV	windows/include/GL/glext.h	2338;"	d
GL_MATRIX8_ARB	windows/include/GL/glext.h	734;"	d
GL_MATRIX9_ARB	windows/include/GL/glext.h	735;"	d
GL_MATRIX_EXT	windows/include/GL/glext.h	2641;"	d
GL_MATRIX_INDEX_ARRAY_ARB	windows/include/GL/glext.h	612;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	windows/include/GL/glext.h	617;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	windows/include/GL/glext.h	614;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	windows/include/GL/glext.h	616;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	windows/include/GL/glext.h	615;"	d
GL_MATRIX_PALETTE_ARB	windows/include/GL/glext.h	608;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	windows/include/GL/glext.h	1477;"	d
GL_MAT_AMBIENT_BIT_PGI	windows/include/GL/glext.h	1476;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	windows/include/GL/glext.h	1480;"	d
GL_MAT_DIFFUSE_BIT_PGI	windows/include/GL/glext.h	1478;"	d
GL_MAT_EMISSION_BIT_PGI	windows/include/GL/glext.h	1479;"	d
GL_MAT_SHININESS_BIT_PGI	windows/include/GL/glext.h	1481;"	d
GL_MAT_SPECULAR_BIT_PGI	windows/include/GL/glext.h	1482;"	d
GL_MAX	windows/include/GL/glext.h	111;"	d
GL_MAX_3D_TEXTURE_SIZE	windows/include/GL/glext.h	75;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	windows/include/GL/glext.h	1030;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	windows/include/GL/glext.h	1138;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	windows/include/GL/glext.h	1599;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	windows/include/GL/glext.h	1682;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	windows/include/GL/glext.h	1688;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	windows/include/GL/glext.h	1683;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	windows/include/GL/glext.h	1681;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	windows/include/GL/glext.h	1269;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	windows/include/GL/glext.h	1270;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	windows/include/GL/glext.h	3002;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	windows/include/GL/glext.h	151;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	windows/include/GL/glext.h	1087;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	windows/include/GL/glext.h	419;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	windows/include/GL/glext.h	862;"	d
GL_MAX_CONVOLUTION_HEIGHT	windows/include/GL/glext.h	126;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	windows/include/GL/glext.h	1073;"	d
GL_MAX_CONVOLUTION_WIDTH	windows/include/GL/glext.h	125;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	windows/include/GL/glext.h	1072;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	windows/include/GL/glext.h	241;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	windows/include/GL/glext.h	534;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	windows/include/GL/glext.h	1904;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	windows/include/GL/glext.h	1404;"	d
GL_MAX_DRAW_BUFFERS	windows/include/GL/glext.h	389;"	d
GL_MAX_DRAW_BUFFERS_ARB	windows/include/GL/glext.h	889;"	d
GL_MAX_DRAW_BUFFERS_ATI	windows/include/GL/glext.h	2815;"	d
GL_MAX_ELEMENTS_INDICES	windows/include/GL/glext.h	86;"	d
GL_MAX_ELEMENTS_INDICES_EXT	windows/include/GL/glext.h	1628;"	d
GL_MAX_ELEMENTS_VERTICES	windows/include/GL/glext.h	85;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	windows/include/GL/glext.h	1627;"	d
GL_MAX_EXT	windows/include/GL/glext.h	1294;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	windows/include/GL/glext.h	1424;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	windows/include/GL/glext.h	1598;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	windows/include/GL/glext.h	2879;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	windows/include/GL/glext.h	415;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	windows/include/GL/glext.h	869;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	windows/include/GL/glext.h	1389;"	d
GL_MAX_GENERAL_COMBINERS_NV	windows/include/GL/glext.h	1995;"	d
GL_MAX_MAP_TESSELLATION_NV	windows/include/GL/glext.h	2208;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	windows/include/GL/glext.h	609;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	windows/include/GL/glext.h	2651;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	windows/include/GL/glext.h	2654;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	windows/include/GL/glext.h	2655;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	windows/include/GL/glext.h	2653;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	windows/include/GL/glext.h	2652;"	d
GL_MAX_PALETTE_MATRICES_ARB	windows/include/GL/glext.h	610;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	windows/include/GL/glext.h	1715;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	windows/include/GL/glext.h	2555;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	windows/include/GL/glext.h	719;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	windows/include/GL/glext.h	768;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	windows/include/GL/glext.h	715;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	windows/include/GL/glext.h	2968;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	windows/include/GL/glext.h	723;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	windows/include/GL/glext.h	2967;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	windows/include/GL/glext.h	2969;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	windows/include/GL/glext.h	703;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	windows/include/GL/glext.h	722;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	windows/include/GL/glext.h	2971;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	windows/include/GL/glext.h	2970;"	d
GL_MAX_PROGRAM_MATRICES_ARB	windows/include/GL/glext.h	689;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	windows/include/GL/glext.h	688;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	windows/include/GL/glext.h	721;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	windows/include/GL/glext.h	771;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	windows/include/GL/glext.h	717;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	windows/include/GL/glext.h	705;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	windows/include/GL/glext.h	713;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	windows/include/GL/glext.h	709;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	windows/include/GL/glext.h	773;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	windows/include/GL/glext.h	772;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	windows/include/GL/glext.h	711;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	windows/include/GL/glext.h	707;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	windows/include/GL/glext.h	770;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	windows/include/GL/glext.h	769;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	windows/include/GL/glext.h	2209;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	windows/include/GL/glext.h	912;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	windows/include/GL/glext.h	2228;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	windows/include/GL/glext.h	2985;"	d
GL_MAX_SHININESS_NV	windows/include/GL/glext.h	1942;"	d
GL_MAX_SPOT_EXPONENT_NV	windows/include/GL/glext.h	1943;"	d
GL_MAX_TEXTURE_COORDS	windows/include/GL/glext.h	411;"	d
GL_MAX_TEXTURE_COORDS_ARB	windows/include/GL/glext.h	774;"	d
GL_MAX_TEXTURE_COORDS_NV	windows/include/GL/glext.h	2881;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	windows/include/GL/glext.h	412;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	windows/include/GL/glext.h	775;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	windows/include/GL/glext.h	2882;"	d
GL_MAX_TEXTURE_LOD_BIAS	windows/include/GL/glext.h	310;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	windows/include/GL/glext.h	1915;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	windows/include/GL/glext.h	1922;"	d
GL_MAX_TEXTURE_UNITS	windows/include/GL/glext.h	216;"	d
GL_MAX_TEXTURE_UNITS_ARB	windows/include/GL/glext.h	497;"	d
GL_MAX_TRACK_MATRICES_NV	windows/include/GL/glext.h	2330;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	windows/include/GL/glext.h	2329;"	d
GL_MAX_VARYING_FLOATS	windows/include/GL/glext.h	417;"	d
GL_MAX_VARYING_FLOATS_ARB	windows/include/GL/glext.h	860;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	windows/include/GL/glext.h	1950;"	d
GL_MAX_VERTEX_ATTRIBS	windows/include/GL/glext.h	409;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	windows/include/GL/glext.h	697;"	d
GL_MAX_VERTEX_HINT_PGI	windows/include/GL/glext.h	1471;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	windows/include/GL/glext.h	2646;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	windows/include/GL/glext.h	2648;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	windows/include/GL/glext.h	2650;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	windows/include/GL/glext.h	2649;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	windows/include/GL/glext.h	2647;"	d
GL_MAX_VERTEX_STREAMS_ATI	windows/include/GL/glext.h	2690;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	windows/include/GL/glext.h	418;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	windows/include/GL/glext.h	861;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	windows/include/GL/glext.h	416;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	windows/include/GL/glext.h	859;"	d
GL_MAX_VERTEX_UNITS_ARB	windows/include/GL/glext.h	563;"	d
GL_MESA_pack_invert	windows/include/GL/glext.h	6415;"	d
GL_MESA_resize_buffers	windows/include/GL/glext.h	5335;"	d
GL_MESA_window_pos	windows/include/GL/glext.h	5343;"	d
GL_MESA_ycbcr_texture	windows/include/GL/glext.h	6419;"	d
GL_MIN	windows/include/GL/glext.h	110;"	d
GL_MINMAX	windows/include/GL/glext.h	145;"	d
GL_MINMAX_EXT	windows/include/GL/glext.h	1055;"	d
GL_MINMAX_FORMAT	windows/include/GL/glext.h	146;"	d
GL_MINMAX_FORMAT_EXT	windows/include/GL/glext.h	1056;"	d
GL_MINMAX_SINK	windows/include/GL/glext.h	147;"	d
GL_MINMAX_SINK_EXT	windows/include/GL/glext.h	1057;"	d
GL_MIN_EXT	windows/include/GL/glext.h	1293;"	d
GL_MIRRORED_REPEAT	windows/include/GL/glext.h	294;"	d
GL_MIRRORED_REPEAT_ARB	windows/include/GL/glext.h	654;"	d
GL_MIRRORED_REPEAT_IBM	windows/include/GL/glext.h	2182;"	d
GL_MIRROR_CLAMP_ATI	windows/include/GL/glext.h	2171;"	d
GL_MIRROR_CLAMP_EXT	windows/include/GL/glext.h	2936;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	windows/include/GL/glext.h	2938;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	windows/include/GL/glext.h	2172;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	windows/include/GL/glext.h	2937;"	d
GL_MODELVIEW0_ARB	windows/include/GL/glext.h	573;"	d
GL_MODELVIEW0_EXT	windows/include/GL/glext.h	1931;"	d
GL_MODELVIEW0_MATRIX_EXT	windows/include/GL/glext.h	1928;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	windows/include/GL/glext.h	1926;"	d
GL_MODELVIEW10_ARB	windows/include/GL/glext.h	583;"	d
GL_MODELVIEW11_ARB	windows/include/GL/glext.h	584;"	d
GL_MODELVIEW12_ARB	windows/include/GL/glext.h	585;"	d
GL_MODELVIEW13_ARB	windows/include/GL/glext.h	586;"	d
GL_MODELVIEW14_ARB	windows/include/GL/glext.h	587;"	d
GL_MODELVIEW15_ARB	windows/include/GL/glext.h	588;"	d
GL_MODELVIEW16_ARB	windows/include/GL/glext.h	589;"	d
GL_MODELVIEW17_ARB	windows/include/GL/glext.h	590;"	d
GL_MODELVIEW18_ARB	windows/include/GL/glext.h	591;"	d
GL_MODELVIEW19_ARB	windows/include/GL/glext.h	592;"	d
GL_MODELVIEW1_ARB	windows/include/GL/glext.h	574;"	d
GL_MODELVIEW1_EXT	windows/include/GL/glext.h	1932;"	d
GL_MODELVIEW1_MATRIX_EXT	windows/include/GL/glext.h	1929;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	windows/include/GL/glext.h	1927;"	d
GL_MODELVIEW20_ARB	windows/include/GL/glext.h	593;"	d
GL_MODELVIEW21_ARB	windows/include/GL/glext.h	594;"	d
GL_MODELVIEW22_ARB	windows/include/GL/glext.h	595;"	d
GL_MODELVIEW23_ARB	windows/include/GL/glext.h	596;"	d
GL_MODELVIEW24_ARB	windows/include/GL/glext.h	597;"	d
GL_MODELVIEW25_ARB	windows/include/GL/glext.h	598;"	d
GL_MODELVIEW26_ARB	windows/include/GL/glext.h	599;"	d
GL_MODELVIEW27_ARB	windows/include/GL/glext.h	600;"	d
GL_MODELVIEW28_ARB	windows/include/GL/glext.h	601;"	d
GL_MODELVIEW29_ARB	windows/include/GL/glext.h	602;"	d
GL_MODELVIEW2_ARB	windows/include/GL/glext.h	575;"	d
GL_MODELVIEW30_ARB	windows/include/GL/glext.h	603;"	d
GL_MODELVIEW31_ARB	windows/include/GL/glext.h	604;"	d
GL_MODELVIEW3_ARB	windows/include/GL/glext.h	576;"	d
GL_MODELVIEW4_ARB	windows/include/GL/glext.h	577;"	d
GL_MODELVIEW5_ARB	windows/include/GL/glext.h	578;"	d
GL_MODELVIEW6_ARB	windows/include/GL/glext.h	579;"	d
GL_MODELVIEW7_ARB	windows/include/GL/glext.h	580;"	d
GL_MODELVIEW8_ARB	windows/include/GL/glext.h	581;"	d
GL_MODELVIEW9_ARB	windows/include/GL/glext.h	582;"	d
GL_MODELVIEW_PROJECTION_NV	windows/include/GL/glext.h	2324;"	d
GL_MODULATE_ADD_ATI	windows/include/GL/glext.h	2840;"	d
GL_MODULATE_SIGNED_ADD_ATI	windows/include/GL/glext.h	2841;"	d
GL_MODULATE_SUBTRACT_ATI	windows/include/GL/glext.h	2842;"	d
GL_MOV_ATI	windows/include/GL/glext.h	2512;"	d
GL_MULTISAMPLE	windows/include/GL/glext.h	221;"	d
GL_MULTISAMPLE_3DFX	windows/include/GL/glext.h	2104;"	d
GL_MULTISAMPLE_ARB	windows/include/GL/glext.h	508;"	d
GL_MULTISAMPLE_BIT	windows/include/GL/glext.h	229;"	d
GL_MULTISAMPLE_BIT_3DFX	windows/include/GL/glext.h	2107;"	d
GL_MULTISAMPLE_BIT_ARB	windows/include/GL/glext.h	516;"	d
GL_MULTISAMPLE_BIT_EXT	windows/include/GL/glext.h	2130;"	d
GL_MULTISAMPLE_EXT	windows/include/GL/glext.h	2114;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	windows/include/GL/glext.h	2718;"	d
GL_MULTISAMPLE_SGIS	windows/include/GL/glext.h	1196;"	d
GL_MUL_ATI	windows/include/GL/glext.h	2514;"	d
GL_MVP_MATRIX_EXT	windows/include/GL/glext.h	2676;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	windows/include/GL/glext.h	1497;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	windows/include/GL/glext.h	1498;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	windows/include/GL/glext.h	1496;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	windows/include/GL/glext.h	1272;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	windows/include/GL/glext.h	1271;"	d
GL_NEGATE_BIT_ATI	windows/include/GL/glext.h	2549;"	d
GL_NEGATIVE_ONE_EXT	windows/include/GL/glext.h	2672;"	d
GL_NEGATIVE_W_EXT	windows/include/GL/glext.h	2669;"	d
GL_NEGATIVE_X_EXT	windows/include/GL/glext.h	2666;"	d
GL_NEGATIVE_Y_EXT	windows/include/GL/glext.h	2667;"	d
GL_NEGATIVE_Z_EXT	windows/include/GL/glext.h	2668;"	d
GL_NORMALIZED_RANGE_EXT	windows/include/GL/glext.h	2673;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	334;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	786;"	d
GL_NORMAL_ARRAY_COUNT_EXT	windows/include/GL/glext.h	1231;"	d
GL_NORMAL_ARRAY_EXT	windows/include/GL/glext.h	1220;"	d
GL_NORMAL_ARRAY_LIST_IBM	windows/include/GL/glext.h	2059;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	windows/include/GL/glext.h	2067;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	windows/include/GL/glext.h	1697;"	d
GL_NORMAL_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1246;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1230;"	d
GL_NORMAL_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1229;"	d
GL_NORMAL_BIT_PGI	windows/include/GL/glext.h	1483;"	d
GL_NORMAL_MAP	windows/include/GL/glext.h	230;"	d
GL_NORMAL_MAP_ARB	windows/include/GL/glext.h	523;"	d
GL_NORMAL_MAP_EXT	windows/include/GL/glext.h	1893;"	d
GL_NORMAL_MAP_NV	windows/include/GL/glext.h	1888;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	windows/include/GL/glext.h	251;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	windows/include/GL/glext.h	547;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	windows/include/GL/glext.h	2525;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	windows/include/GL/glext.h	2524;"	d
GL_NUM_GENERAL_COMBINERS_NV	windows/include/GL/glext.h	1996;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	windows/include/GL/glext.h	2529;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	windows/include/GL/glext.h	2527;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	windows/include/GL/glext.h	2528;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	windows/include/GL/glext.h	2530;"	d
GL_NUM_PASSES_ATI	windows/include/GL/glext.h	2526;"	d
GL_NV_blend_square	windows/include/GL/glext.h	5327;"	d
GL_NV_copy_depth_to_color	windows/include/GL/glext.h	5747;"	d
GL_NV_depth_clamp	windows/include/GL/glext.h	6053;"	d
GL_NV_evaluators	windows/include/GL/glext.h	5535;"	d
GL_NV_fence	windows/include/GL/glext.h	5515;"	d
GL_NV_float_buffer	windows/include/GL/glext.h	6210;"	d
GL_NV_fog_distance	windows/include/GL/glext.h	5319;"	d
GL_NV_fragment_program	windows/include/GL/glext.h	6214;"	d
GL_NV_fragment_program2	windows/include/GL/glext.h	6431;"	d
GL_NV_fragment_program_option	windows/include/GL/glext.h	6427;"	d
GL_NV_half_float	windows/include/GL/glext.h	6233;"	d
GL_NV_light_max_exponent	windows/include/GL/glext.h	5273;"	d
GL_NV_multisample_filter_hint	windows/include/GL/glext.h	6049;"	d
GL_NV_occlusion_query	windows/include/GL/glext.h	6057;"	d
GL_NV_packed_depth_stencil	windows/include/GL/glext.h	5559;"	d
GL_NV_pixel_data_range	windows/include/GL/glext.h	6331;"	d
GL_NV_point_sprite	windows/include/GL/glext.h	6077;"	d
GL_NV_primitive_restart	windows/include/GL/glext.h	6341;"	d
GL_NV_register_combiners	windows/include/GL/glext.h	5287;"	d
GL_NV_register_combiners2	windows/include/GL/glext.h	5563;"	d
GL_NV_texgen_emboss	windows/include/GL/glext.h	5323;"	d
GL_NV_texgen_reflection	windows/include/GL/glext.h	5241;"	d
GL_NV_texture_compression_vtc	windows/include/GL/glext.h	5573;"	d
GL_NV_texture_env_combine4	windows/include/GL/glext.h	5331;"	d
GL_NV_texture_expand_normal	windows/include/GL/glext.h	6351;"	d
GL_NV_texture_rectangle	windows/include/GL/glext.h	5577;"	d
GL_NV_texture_shader	windows/include/GL/glext.h	5581;"	d
GL_NV_texture_shader2	windows/include/GL/glext.h	5585;"	d
GL_NV_texture_shader3	windows/include/GL/glext.h	6087;"	d
GL_NV_vertex_array_range	windows/include/GL/glext.h	5277;"	d
GL_NV_vertex_array_range2	windows/include/GL/glext.h	5589;"	d
GL_NV_vertex_program	windows/include/GL/glext.h	5593;"	d
GL_NV_vertex_program1_1	windows/include/GL/glext.h	6091;"	d
GL_NV_vertex_program2	windows/include/GL/glext.h	6355;"	d
GL_NV_vertex_program2_option	windows/include/GL/glext.h	6435;"	d
GL_NV_vertex_program3	windows/include/GL/glext.h	6439;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	windows/include/GL/glext.h	863;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	windows/include/GL/glext.h	864;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	windows/include/GL/glext.h	852;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	windows/include/GL/glext.h	853;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	windows/include/GL/glext.h	851;"	d
GL_OBJECT_BUFFER_SIZE_ATI	windows/include/GL/glext.h	2570;"	d
GL_OBJECT_BUFFER_USAGE_ATI	windows/include/GL/glext.h	2571;"	d
GL_OBJECT_COMPILE_STATUS_ARB	windows/include/GL/glext.h	847;"	d
GL_OBJECT_DELETE_STATUS_ARB	windows/include/GL/glext.h	846;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	windows/include/GL/glext.h	2154;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	windows/include/GL/glext.h	2152;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	windows/include/GL/glext.h	850;"	d
GL_OBJECT_LINE_SGIS	windows/include/GL/glext.h	2158;"	d
GL_OBJECT_LINK_STATUS_ARB	windows/include/GL/glext.h	848;"	d
GL_OBJECT_POINT_SGIS	windows/include/GL/glext.h	2156;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	windows/include/GL/glext.h	854;"	d
GL_OBJECT_SUBTYPE_ARB	windows/include/GL/glext.h	824;"	d
GL_OBJECT_TYPE_ARB	windows/include/GL/glext.h	823;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	windows/include/GL/glext.h	849;"	d
GL_OCCLUSION_TEST_HP	windows/include/GL/glext.h	1703;"	d
GL_OCCLUSION_TEST_RESULT_HP	windows/include/GL/glext.h	1704;"	d
GL_OES_read_format	windows/include/GL/glext.h	6391;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	windows/include/GL/glext.h	2745;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	windows/include/GL/glext.h	2746;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	windows/include/GL/glext.h	2743;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	windows/include/GL/glext.h	2744;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	windows/include/GL/glext.h	2739;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	windows/include/GL/glext.h	2740;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	windows/include/GL/glext.h	2741;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	windows/include/GL/glext.h	2742;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	windows/include/GL/glext.h	2248;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	windows/include/GL/glext.h	2246;"	d
GL_OFFSET_TEXTURE_2D_NV	windows/include/GL/glext.h	2253;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	windows/include/GL/glext.h	2247;"	d
GL_OFFSET_TEXTURE_BIAS_NV	windows/include/GL/glext.h	2245;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	windows/include/GL/glext.h	2243;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	windows/include/GL/glext.h	2232;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	windows/include/GL/glext.h	2233;"	d
GL_OFFSET_TEXTURE_SCALE_NV	windows/include/GL/glext.h	2244;"	d
GL_OML_interlace	windows/include/GL/glext.h	5735;"	d
GL_OML_resample	windows/include/GL/glext.h	5743;"	d
GL_OML_subsample	windows/include/GL/glext.h	5739;"	d
GL_ONE_EXT	windows/include/GL/glext.h	2671;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	windows/include/GL/glext.h	107;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	windows/include/GL/glext.h	965;"	d
GL_ONE_MINUS_CONSTANT_COLOR	windows/include/GL/glext.h	105;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	windows/include/GL/glext.h	963;"	d
GL_OPERAND0_ALPHA	windows/include/GL/glext.h	266;"	d
GL_OPERAND0_ALPHA_ARB	windows/include/GL/glext.h	633;"	d
GL_OPERAND0_ALPHA_EXT	windows/include/GL/glext.h	1802;"	d
GL_OPERAND0_RGB	windows/include/GL/glext.h	263;"	d
GL_OPERAND0_RGB_ARB	windows/include/GL/glext.h	630;"	d
GL_OPERAND0_RGB_EXT	windows/include/GL/glext.h	1799;"	d
GL_OPERAND1_ALPHA	windows/include/GL/glext.h	267;"	d
GL_OPERAND1_ALPHA_ARB	windows/include/GL/glext.h	634;"	d
GL_OPERAND1_ALPHA_EXT	windows/include/GL/glext.h	1803;"	d
GL_OPERAND1_RGB	windows/include/GL/glext.h	264;"	d
GL_OPERAND1_RGB_ARB	windows/include/GL/glext.h	631;"	d
GL_OPERAND1_RGB_EXT	windows/include/GL/glext.h	1800;"	d
GL_OPERAND2_ALPHA	windows/include/GL/glext.h	268;"	d
GL_OPERAND2_ALPHA_ARB	windows/include/GL/glext.h	635;"	d
GL_OPERAND2_ALPHA_EXT	windows/include/GL/glext.h	1804;"	d
GL_OPERAND2_RGB	windows/include/GL/glext.h	265;"	d
GL_OPERAND2_RGB_ARB	windows/include/GL/glext.h	632;"	d
GL_OPERAND2_RGB_EXT	windows/include/GL/glext.h	1801;"	d
GL_OPERAND3_ALPHA_NV	windows/include/GL/glext.h	2034;"	d
GL_OPERAND3_RGB_NV	windows/include/GL/glext.h	2033;"	d
GL_OP_ADD_EXT	windows/include/GL/glext.h	2584;"	d
GL_OP_CLAMP_EXT	windows/include/GL/glext.h	2591;"	d
GL_OP_CROSS_PRODUCT_EXT	windows/include/GL/glext.h	2600;"	d
GL_OP_DOT3_EXT	windows/include/GL/glext.h	2581;"	d
GL_OP_DOT4_EXT	windows/include/GL/glext.h	2582;"	d
GL_OP_EXP_BASE_2_EXT	windows/include/GL/glext.h	2594;"	d
GL_OP_FLOOR_EXT	windows/include/GL/glext.h	2592;"	d
GL_OP_FRAC_EXT	windows/include/GL/glext.h	2586;"	d
GL_OP_INDEX_EXT	windows/include/GL/glext.h	2579;"	d
GL_OP_LOG_BASE_2_EXT	windows/include/GL/glext.h	2595;"	d
GL_OP_MADD_EXT	windows/include/GL/glext.h	2585;"	d
GL_OP_MAX_EXT	windows/include/GL/glext.h	2587;"	d
GL_OP_MIN_EXT	windows/include/GL/glext.h	2588;"	d
GL_OP_MOV_EXT	windows/include/GL/glext.h	2602;"	d
GL_OP_MULTIPLY_MATRIX_EXT	windows/include/GL/glext.h	2601;"	d
GL_OP_MUL_EXT	windows/include/GL/glext.h	2583;"	d
GL_OP_NEGATE_EXT	windows/include/GL/glext.h	2580;"	d
GL_OP_POWER_EXT	windows/include/GL/glext.h	2596;"	d
GL_OP_RECIP_EXT	windows/include/GL/glext.h	2597;"	d
GL_OP_RECIP_SQRT_EXT	windows/include/GL/glext.h	2598;"	d
GL_OP_ROUND_EXT	windows/include/GL/glext.h	2593;"	d
GL_OP_SET_GE_EXT	windows/include/GL/glext.h	2589;"	d
GL_OP_SET_LT_EXT	windows/include/GL/glext.h	2590;"	d
GL_OP_SUB_EXT	windows/include/GL/glext.h	2599;"	d
GL_OUTPUT_COLOR0_EXT	windows/include/GL/glext.h	2604;"	d
GL_OUTPUT_COLOR1_EXT	windows/include/GL/glext.h	2605;"	d
GL_OUTPUT_FOG_EXT	windows/include/GL/glext.h	2638;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	windows/include/GL/glext.h	2606;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	windows/include/GL/glext.h	2616;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	windows/include/GL/glext.h	2617;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	windows/include/GL/glext.h	2618;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	windows/include/GL/glext.h	2619;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	windows/include/GL/glext.h	2620;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	windows/include/GL/glext.h	2621;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	windows/include/GL/glext.h	2622;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	windows/include/GL/glext.h	2623;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	windows/include/GL/glext.h	2624;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	windows/include/GL/glext.h	2625;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	windows/include/GL/glext.h	2607;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	windows/include/GL/glext.h	2626;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	windows/include/GL/glext.h	2627;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	windows/include/GL/glext.h	2628;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	windows/include/GL/glext.h	2629;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	windows/include/GL/glext.h	2630;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	windows/include/GL/glext.h	2631;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	windows/include/GL/glext.h	2632;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	windows/include/GL/glext.h	2633;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	windows/include/GL/glext.h	2634;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	windows/include/GL/glext.h	2635;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	windows/include/GL/glext.h	2608;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	windows/include/GL/glext.h	2636;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	windows/include/GL/glext.h	2637;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	windows/include/GL/glext.h	2609;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	windows/include/GL/glext.h	2610;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	windows/include/GL/glext.h	2611;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	windows/include/GL/glext.h	2612;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	windows/include/GL/glext.h	2613;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	windows/include/GL/glext.h	2614;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	windows/include/GL/glext.h	2615;"	d
GL_OUTPUT_VERTEX_EXT	windows/include/GL/glext.h	2603;"	d
GL_PACK_CMYK_HINT_EXT	windows/include/GL/glext.h	1150;"	d
GL_PACK_IMAGE_DEPTH_SGIS	windows/include/GL/glext.h	1131;"	d
GL_PACK_IMAGE_HEIGHT	windows/include/GL/glext.h	68;"	d
GL_PACK_IMAGE_HEIGHT_EXT	windows/include/GL/glext.h	1023;"	d
GL_PACK_INVERT_MESA	windows/include/GL/glext.h	2947;"	d
GL_PACK_RESAMPLE_OML	windows/include/GL/glext.h	2422;"	d
GL_PACK_RESAMPLE_SGIX	windows/include/GL/glext.h	2143;"	d
GL_PACK_SKIP_IMAGES	windows/include/GL/glext.h	67;"	d
GL_PACK_SKIP_IMAGES_EXT	windows/include/GL/glext.h	1022;"	d
GL_PACK_SKIP_VOLUMES_SGIS	windows/include/GL/glext.h	1130;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	windows/include/GL/glext.h	2077;"	d
GL_PARALLEL_ARRAYS_INTEL	windows/include/GL/glext.h	1695;"	d
GL_PASS_THROUGH_NV	windows/include/GL/glext.h	2251;"	d
GL_PERTURB_EXT	windows/include/GL/glext.h	1743;"	d
GL_PER_STAGE_CONSTANTS_NV	windows/include/GL/glext.h	2218;"	d
GL_PGI_misc_hints	windows/include/GL/glext.h	4665;"	d
GL_PGI_vertex_hints	windows/include/GL/glext.h	4661;"	d
GL_PHONG_HINT_WIN	windows/include/GL/glext.h	1633;"	d
GL_PHONG_WIN	windows/include/GL/glext.h	1632;"	d
GL_PIXEL_COUNTER_BITS_NV	windows/include/GL/glext.h	2726;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	windows/include/GL/glext.h	2729;"	d
GL_PIXEL_COUNT_NV	windows/include/GL/glext.h	2728;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	windows/include/GL/glext.h	1711;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	windows/include/GL/glext.h	1120;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	windows/include/GL/glext.h	1119;"	d
GL_PIXEL_GROUP_COLOR_SGIS	windows/include/GL/glext.h	1121;"	d
GL_PIXEL_MAG_FILTER_EXT	windows/include/GL/glext.h	1709;"	d
GL_PIXEL_MIN_FILTER_EXT	windows/include/GL/glext.h	1710;"	d
GL_PIXEL_PACK_BUFFER_ARB	windows/include/GL/glext.h	951;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	windows/include/GL/glext.h	953;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	windows/include/GL/glext.h	2959;"	d
GL_PIXEL_PACK_BUFFER_EXT	windows/include/GL/glext.h	2957;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	windows/include/GL/glext.h	2080;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	windows/include/GL/glext.h	2081;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	windows/include/GL/glext.h	2079;"	d
GL_PIXEL_TEXTURE_SGIS	windows/include/GL/glext.h	1118;"	d
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX	windows/include/GL/glext.h	1664;"	d
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX	windows/include/GL/glext.h	1665;"	d
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX	windows/include/GL/glext.h	1663;"	d
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX	windows/include/GL/glext.h	1662;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	windows/include/GL/glext.h	1126;"	d
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX	windows/include/GL/glext.h	1659;"	d
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX	windows/include/GL/glext.h	1661;"	d
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX	windows/include/GL/glext.h	1660;"	d
GL_PIXEL_TEX_GEN_SGIX	windows/include/GL/glext.h	1125;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	windows/include/GL/glext.h	1311;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	windows/include/GL/glext.h	1312;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	windows/include/GL/glext.h	1318;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	windows/include/GL/glext.h	1317;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	windows/include/GL/glext.h	1316;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	windows/include/GL/glext.h	1315;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	windows/include/GL/glext.h	1314;"	d
GL_PIXEL_TILE_WIDTH_SGIX	windows/include/GL/glext.h	1313;"	d
GL_PIXEL_TRANSFORM_2D_EXT	windows/include/GL/glext.h	1708;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	windows/include/GL/glext.h	1716;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	windows/include/GL/glext.h	1714;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	windows/include/GL/glext.h	952;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	windows/include/GL/glext.h	954;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	windows/include/GL/glext.h	2960;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	windows/include/GL/glext.h	2958;"	d
GL_PN_TRIANGLES_ATI	windows/include/GL/glext.h	2554;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	windows/include/GL/glext.h	2557;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	windows/include/GL/glext.h	2561;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	windows/include/GL/glext.h	2562;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	windows/include/GL/glext.h	2556;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	windows/include/GL/glext.h	2560;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	windows/include/GL/glext.h	2559;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	windows/include/GL/glext.h	2558;"	d
GL_POINT_DISTANCE_ATTENUATION	windows/include/GL/glext.h	288;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	windows/include/GL/glext.h	559;"	d
GL_POINT_FADE_THRESHOLD_SIZE	windows/include/GL/glext.h	287;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	windows/include/GL/glext.h	558;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	windows/include/GL/glext.h	1363;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	windows/include/GL/glext.h	1370;"	d
GL_POINT_SIZE_MAX	windows/include/GL/glext.h	286;"	d
GL_POINT_SIZE_MAX_ARB	windows/include/GL/glext.h	557;"	d
GL_POINT_SIZE_MAX_EXT	windows/include/GL/glext.h	1362;"	d
GL_POINT_SIZE_MAX_SGIS	windows/include/GL/glext.h	1369;"	d
GL_POINT_SIZE_MIN	windows/include/GL/glext.h	285;"	d
GL_POINT_SIZE_MIN_ARB	windows/include/GL/glext.h	556;"	d
GL_POINT_SIZE_MIN_EXT	windows/include/GL/glext.h	1361;"	d
GL_POINT_SIZE_MIN_SGIS	windows/include/GL/glext.h	1368;"	d
GL_POINT_SPRITE	windows/include/GL/glext.h	407;"	d
GL_POINT_SPRITE_ARB	windows/include/GL/glext.h	881;"	d
GL_POINT_SPRITE_COORD_ORIGIN	windows/include/GL/glext.h	454;"	d
GL_POINT_SPRITE_NV	windows/include/GL/glext.h	2733;"	d
GL_POINT_SPRITE_R_MODE_NV	windows/include/GL/glext.h	2735;"	d
GL_POLYGON_OFFSET_BIAS_EXT	windows/include/GL/glext.h	972;"	d
GL_POLYGON_OFFSET_EXT	windows/include/GL/glext.h	970;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	windows/include/GL/glext.h	971;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	windows/include/GL/glext.h	159;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	windows/include/GL/glext.h	1095;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	windows/include/GL/glext.h	155;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	windows/include/GL/glext.h	1091;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	windows/include/GL/glext.h	158;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	windows/include/GL/glext.h	1094;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	windows/include/GL/glext.h	154;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	windows/include/GL/glext.h	1090;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	windows/include/GL/glext.h	162;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	windows/include/GL/glext.h	1101;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	windows/include/GL/glext.h	157;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	windows/include/GL/glext.h	1093;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	windows/include/GL/glext.h	153;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	windows/include/GL/glext.h	1089;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	windows/include/GL/glext.h	156;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	windows/include/GL/glext.h	1092;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	windows/include/GL/glext.h	152;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	windows/include/GL/glext.h	1088;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	windows/include/GL/glext.h	134;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	windows/include/GL/glext.h	1081;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	windows/include/GL/glext.h	130;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	windows/include/GL/glext.h	1077;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	windows/include/GL/glext.h	133;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	windows/include/GL/glext.h	1080;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	windows/include/GL/glext.h	129;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	windows/include/GL/glext.h	1076;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	windows/include/GL/glext.h	161;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	windows/include/GL/glext.h	1100;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	windows/include/GL/glext.h	132;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	windows/include/GL/glext.h	1079;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	windows/include/GL/glext.h	128;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	windows/include/GL/glext.h	1075;"	d
GL_POST_CONVOLUTION_RED_BIAS	windows/include/GL/glext.h	131;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	windows/include/GL/glext.h	1078;"	d
GL_POST_CONVOLUTION_RED_SCALE	windows/include/GL/glext.h	127;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	windows/include/GL/glext.h	1074;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	windows/include/GL/glext.h	1446;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	windows/include/GL/glext.h	1382;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	windows/include/GL/glext.h	1380;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	windows/include/GL/glext.h	1383;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	windows/include/GL/glext.h	1381;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	windows/include/GL/glext.h	1493;"	d
GL_PRESERVE_ATI	windows/include/GL/glext.h	2568;"	d
GL_PREVIOUS	windows/include/GL/glext.h	275;"	d
GL_PREVIOUS_ARB	windows/include/GL/glext.h	642;"	d
GL_PREVIOUS_EXT	windows/include/GL/glext.h	1792;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	windows/include/GL/glext.h	2249;"	d
GL_PRIMARY_COLOR	windows/include/GL/glext.h	274;"	d
GL_PRIMARY_COLOR_ARB	windows/include/GL/glext.h	641;"	d
GL_PRIMARY_COLOR_EXT	windows/include/GL/glext.h	1791;"	d
GL_PRIMARY_COLOR_NV	windows/include/GL/glext.h	1965;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	windows/include/GL/glext.h	2902;"	d
GL_PRIMITIVE_RESTART_NV	windows/include/GL/glext.h	2901;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	windows/include/GL/glext.h	718;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	windows/include/GL/glext.h	762;"	d
GL_PROGRAM_ATTRIBS_ARB	windows/include/GL/glext.h	714;"	d
GL_PROGRAM_BINDING_ARB	windows/include/GL/glext.h	696;"	d
GL_PROGRAM_ERROR_POSITION_ARB	windows/include/GL/glext.h	695;"	d
GL_PROGRAM_ERROR_POSITION_NV	windows/include/GL/glext.h	2350;"	d
GL_PROGRAM_ERROR_STRING_ARB	windows/include/GL/glext.h	699;"	d
GL_PROGRAM_ERROR_STRING_NV	windows/include/GL/glext.h	2884;"	d
GL_PROGRAM_FORMAT_ARB	windows/include/GL/glext.h	701;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	windows/include/GL/glext.h	700;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	windows/include/GL/glext.h	702;"	d
GL_PROGRAM_LENGTH_ARB	windows/include/GL/glext.h	686;"	d
GL_PROGRAM_LENGTH_NV	windows/include/GL/glext.h	2322;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	windows/include/GL/glext.h	720;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	windows/include/GL/glext.h	765;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	windows/include/GL/glext.h	716;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	windows/include/GL/glext.h	704;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	windows/include/GL/glext.h	712;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	windows/include/GL/glext.h	708;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	windows/include/GL/glext.h	767;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	windows/include/GL/glext.h	766;"	d
GL_PROGRAM_OBJECT_ARB	windows/include/GL/glext.h	821;"	d
GL_PROGRAM_PARAMETERS_ARB	windows/include/GL/glext.h	710;"	d
GL_PROGRAM_PARAMETER_NV	windows/include/GL/glext.h	2343;"	d
GL_PROGRAM_RESIDENT_NV	windows/include/GL/glext.h	2346;"	d
GL_PROGRAM_STRING_ARB	windows/include/GL/glext.h	687;"	d
GL_PROGRAM_STRING_NV	windows/include/GL/glext.h	2323;"	d
GL_PROGRAM_TARGET_NV	windows/include/GL/glext.h	2345;"	d
GL_PROGRAM_TEMPORARIES_ARB	windows/include/GL/glext.h	706;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	windows/include/GL/glext.h	764;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	windows/include/GL/glext.h	763;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	windows/include/GL/glext.h	724;"	d
GL_PROXY_COLOR_TABLE	windows/include/GL/glext.h	163;"	d
GL_PROXY_COLOR_TABLE_SGI	windows/include/GL/glext.h	1102;"	d
GL_PROXY_HISTOGRAM	windows/include/GL/glext.h	136;"	d
GL_PROXY_HISTOGRAM_EXT	windows/include/GL/glext.h	1046;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	windows/include/GL/glext.h	165;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	windows/include/GL/glext.h	1104;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	windows/include/GL/glext.h	164;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	windows/include/GL/glext.h	1103;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	windows/include/GL/glext.h	1447;"	d
GL_PROXY_TEXTURE_1D_EXT	windows/include/GL/glext.h	1016;"	d
GL_PROXY_TEXTURE_2D_EXT	windows/include/GL/glext.h	1017;"	d
GL_PROXY_TEXTURE_3D	windows/include/GL/glext.h	72;"	d
GL_PROXY_TEXTURE_3D_EXT	windows/include/GL/glext.h	1027;"	d
GL_PROXY_TEXTURE_4D_SGIS	windows/include/GL/glext.h	1135;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	windows/include/GL/glext.h	1144;"	d
GL_PROXY_TEXTURE_CUBE_MAP	windows/include/GL/glext.h	240;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	windows/include/GL/glext.h	533;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	windows/include/GL/glext.h	1903;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	windows/include/GL/glext.h	911;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	windows/include/GL/glext.h	2227;"	d
GL_QUAD_ALPHA4_SGIS	windows/include/GL/glext.h	1336;"	d
GL_QUAD_ALPHA8_SGIS	windows/include/GL/glext.h	1337;"	d
GL_QUAD_INTENSITY4_SGIS	windows/include/GL/glext.h	1340;"	d
GL_QUAD_INTENSITY8_SGIS	windows/include/GL/glext.h	1341;"	d
GL_QUAD_LUMINANCE4_SGIS	windows/include/GL/glext.h	1338;"	d
GL_QUAD_LUMINANCE8_SGIS	windows/include/GL/glext.h	1339;"	d
GL_QUAD_MESH_SUN	windows/include/GL/glext.h	2709;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	windows/include/GL/glext.h	1343;"	d
GL_QUARTER_BIT_ATI	windows/include/GL/glext.h	2545;"	d
GL_QUERY_COUNTER_BITS	windows/include/GL/glext.h	325;"	d
GL_QUERY_COUNTER_BITS_ARB	windows/include/GL/glext.h	813;"	d
GL_QUERY_RESULT	windows/include/GL/glext.h	327;"	d
GL_QUERY_RESULT_ARB	windows/include/GL/glext.h	815;"	d
GL_QUERY_RESULT_AVAILABLE	windows/include/GL/glext.h	328;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	windows/include/GL/glext.h	816;"	d
GL_R1UI_C3F_V3F_SUN	windows/include/GL/glext.h	1842;"	d
GL_R1UI_C4F_N3F_V3F_SUN	windows/include/GL/glext.h	1844;"	d
GL_R1UI_C4UB_V3F_SUN	windows/include/GL/glext.h	1841;"	d
GL_R1UI_N3F_V3F_SUN	windows/include/GL/glext.h	1843;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	windows/include/GL/glext.h	1847;"	d
GL_R1UI_T2F_N3F_V3F_SUN	windows/include/GL/glext.h	1846;"	d
GL_R1UI_T2F_V3F_SUN	windows/include/GL/glext.h	1845;"	d
GL_R1UI_V3F_SUN	windows/include/GL/glext.h	1840;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	windows/include/GL/glext.h	1617;"	d
GL_READ_ONLY	windows/include/GL/glext.h	343;"	d
GL_READ_ONLY_ARB	windows/include/GL/glext.h	795;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	windows/include/GL/glext.h	2895;"	d
GL_READ_PIXEL_DATA_RANGE_NV	windows/include/GL/glext.h	2893;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	windows/include/GL/glext.h	2897;"	d
GL_READ_WRITE	windows/include/GL/glext.h	345;"	d
GL_READ_WRITE_ARB	windows/include/GL/glext.h	797;"	d
GL_RECLAIM_MEMORY_HINT_PGI	windows/include/GL/glext.h	1495;"	d
GL_REDUCE	windows/include/GL/glext.h	121;"	d
GL_REDUCE_EXT	windows/include/GL/glext.h	1068;"	d
GL_RED_BIT_ATI	windows/include/GL/glext.h	2538;"	d
GL_RED_MAX_CLAMP_INGR	windows/include/GL/glext.h	1865;"	d
GL_RED_MIN_CLAMP_INGR	windows/include/GL/glext.h	1861;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	windows/include/GL/glext.h	1409;"	d
GL_REFERENCE_PLANE_SGIX	windows/include/GL/glext.h	1408;"	d
GL_REFLECTION_MAP	windows/include/GL/glext.h	231;"	d
GL_REFLECTION_MAP_ARB	windows/include/GL/glext.h	524;"	d
GL_REFLECTION_MAP_EXT	windows/include/GL/glext.h	1894;"	d
GL_REFLECTION_MAP_NV	windows/include/GL/glext.h	1889;"	d
GL_REGISTER_COMBINERS_NV	windows/include/GL/glext.h	1955;"	d
GL_REG_0_ATI	windows/include/GL/glext.h	2448;"	d
GL_REG_10_ATI	windows/include/GL/glext.h	2458;"	d
GL_REG_11_ATI	windows/include/GL/glext.h	2459;"	d
GL_REG_12_ATI	windows/include/GL/glext.h	2460;"	d
GL_REG_13_ATI	windows/include/GL/glext.h	2461;"	d
GL_REG_14_ATI	windows/include/GL/glext.h	2462;"	d
GL_REG_15_ATI	windows/include/GL/glext.h	2463;"	d
GL_REG_16_ATI	windows/include/GL/glext.h	2464;"	d
GL_REG_17_ATI	windows/include/GL/glext.h	2465;"	d
GL_REG_18_ATI	windows/include/GL/glext.h	2466;"	d
GL_REG_19_ATI	windows/include/GL/glext.h	2467;"	d
GL_REG_1_ATI	windows/include/GL/glext.h	2449;"	d
GL_REG_20_ATI	windows/include/GL/glext.h	2468;"	d
GL_REG_21_ATI	windows/include/GL/glext.h	2469;"	d
GL_REG_22_ATI	windows/include/GL/glext.h	2470;"	d
GL_REG_23_ATI	windows/include/GL/glext.h	2471;"	d
GL_REG_24_ATI	windows/include/GL/glext.h	2472;"	d
GL_REG_25_ATI	windows/include/GL/glext.h	2473;"	d
GL_REG_26_ATI	windows/include/GL/glext.h	2474;"	d
GL_REG_27_ATI	windows/include/GL/glext.h	2475;"	d
GL_REG_28_ATI	windows/include/GL/glext.h	2476;"	d
GL_REG_29_ATI	windows/include/GL/glext.h	2477;"	d
GL_REG_2_ATI	windows/include/GL/glext.h	2450;"	d
GL_REG_30_ATI	windows/include/GL/glext.h	2478;"	d
GL_REG_31_ATI	windows/include/GL/glext.h	2479;"	d
GL_REG_3_ATI	windows/include/GL/glext.h	2451;"	d
GL_REG_4_ATI	windows/include/GL/glext.h	2452;"	d
GL_REG_5_ATI	windows/include/GL/glext.h	2453;"	d
GL_REG_6_ATI	windows/include/GL/glext.h	2454;"	d
GL_REG_7_ATI	windows/include/GL/glext.h	2455;"	d
GL_REG_8_ATI	windows/include/GL/glext.h	2456;"	d
GL_REG_9_ATI	windows/include/GL/glext.h	2457;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	windows/include/GL/glext.h	3033;"	d
GL_RENDERBUFFER_BINDING_EXT	windows/include/GL/glext.h	2987;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	windows/include/GL/glext.h	3032;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	windows/include/GL/glext.h	3034;"	d
GL_RENDERBUFFER_EXT	windows/include/GL/glext.h	3022;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	windows/include/GL/glext.h	3031;"	d
GL_RENDERBUFFER_HEIGHT_EXT	windows/include/GL/glext.h	3024;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	windows/include/GL/glext.h	3025;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	windows/include/GL/glext.h	3030;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	windows/include/GL/glext.h	3035;"	d
GL_RENDERBUFFER_WIDTH_EXT	windows/include/GL/glext.h	3023;"	d
GL_REND_screen_coordinates	windows/include/GL/glext.h	5003;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	windows/include/GL/glext.h	1839;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	windows/include/GL/glext.h	1838;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	windows/include/GL/glext.h	1836;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	windows/include/GL/glext.h	1837;"	d
GL_REPLACEMENT_CODE_SUN	windows/include/GL/glext.h	1835;"	d
GL_REPLACE_EXT	windows/include/GL/glext.h	1015;"	d
GL_REPLACE_MIDDLE_SUN	windows/include/GL/glext.h	1832;"	d
GL_REPLACE_OLDEST_SUN	windows/include/GL/glext.h	1833;"	d
GL_REPLICATE_BORDER	windows/include/GL/glext.h	177;"	d
GL_REPLICATE_BORDER_HP	windows/include/GL/glext.h	1453;"	d
GL_RESAMPLE_AVERAGE_OML	windows/include/GL/glext.h	2426;"	d
GL_RESAMPLE_DECIMATE_OML	windows/include/GL/glext.h	2427;"	d
GL_RESAMPLE_DECIMATE_SGIX	windows/include/GL/glext.h	2147;"	d
GL_RESAMPLE_REPLICATE_OML	windows/include/GL/glext.h	2424;"	d
GL_RESAMPLE_REPLICATE_SGIX	windows/include/GL/glext.h	2145;"	d
GL_RESAMPLE_ZERO_FILL_OML	windows/include/GL/glext.h	2425;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	windows/include/GL/glext.h	2146;"	d
GL_RESCALE_NORMAL	windows/include/GL/glext.h	65;"	d
GL_RESCALE_NORMAL_EXT	windows/include/GL/glext.h	1215;"	d
GL_RESTART_SUN	windows/include/GL/glext.h	1831;"	d
GL_RGB10_A2_EXT	windows/include/GL/glext.h	1006;"	d
GL_RGB10_EXT	windows/include/GL/glext.h	999;"	d
GL_RGB12_EXT	windows/include/GL/glext.h	1000;"	d
GL_RGB16F_ARB	windows/include/GL/glext.h	943;"	d
GL_RGB16_EXT	windows/include/GL/glext.h	1001;"	d
GL_RGB2_EXT	windows/include/GL/glext.h	995;"	d
GL_RGB32F_ARB	windows/include/GL/glext.h	937;"	d
GL_RGB4_EXT	windows/include/GL/glext.h	996;"	d
GL_RGB4_S3TC	windows/include/GL/glext.h	2809;"	d
GL_RGB5_A1_EXT	windows/include/GL/glext.h	1004;"	d
GL_RGB5_EXT	windows/include/GL/glext.h	997;"	d
GL_RGB8_EXT	windows/include/GL/glext.h	998;"	d
GL_RGBA12_EXT	windows/include/GL/glext.h	1007;"	d
GL_RGBA16F_ARB	windows/include/GL/glext.h	942;"	d
GL_RGBA16_EXT	windows/include/GL/glext.h	1008;"	d
GL_RGBA2_EXT	windows/include/GL/glext.h	1002;"	d
GL_RGBA32F_ARB	windows/include/GL/glext.h	936;"	d
GL_RGBA4_EXT	windows/include/GL/glext.h	1003;"	d
GL_RGBA4_S3TC	windows/include/GL/glext.h	2811;"	d
GL_RGBA8_EXT	windows/include/GL/glext.h	1005;"	d
GL_RGBA_FLOAT16_ATI	windows/include/GL/glext.h	2852;"	d
GL_RGBA_FLOAT32_ATI	windows/include/GL/glext.h	2846;"	d
GL_RGBA_FLOAT_MODE_ARB	windows/include/GL/glext.h	916;"	d
GL_RGBA_S3TC	windows/include/GL/glext.h	2810;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	windows/include/GL/glext.h	2235;"	d
GL_RGB_FLOAT16_ATI	windows/include/GL/glext.h	2853;"	d
GL_RGB_FLOAT32_ATI	windows/include/GL/glext.h	2847;"	d
GL_RGB_S3TC	windows/include/GL/glext.h	2808;"	d
GL_RGB_SCALE	windows/include/GL/glext.h	269;"	d
GL_RGB_SCALE_ARB	windows/include/GL/glext.h	636;"	d
GL_RGB_SCALE_EXT	windows/include/GL/glext.h	1787;"	d
GL_S3_s3tc	windows/include/GL/glext.h	6183;"	d
GL_SAMPLER_1D	windows/include/GL/glext.h	434;"	d
GL_SAMPLER_1D_ARB	windows/include/GL/glext.h	838;"	d
GL_SAMPLER_1D_SHADOW	windows/include/GL/glext.h	438;"	d
GL_SAMPLER_1D_SHADOW_ARB	windows/include/GL/glext.h	842;"	d
GL_SAMPLER_2D	windows/include/GL/glext.h	435;"	d
GL_SAMPLER_2D_ARB	windows/include/GL/glext.h	839;"	d
GL_SAMPLER_2D_RECT_ARB	windows/include/GL/glext.h	844;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	windows/include/GL/glext.h	845;"	d
GL_SAMPLER_2D_SHADOW	windows/include/GL/glext.h	439;"	d
GL_SAMPLER_2D_SHADOW_ARB	windows/include/GL/glext.h	843;"	d
GL_SAMPLER_3D	windows/include/GL/glext.h	436;"	d
GL_SAMPLER_3D_ARB	windows/include/GL/glext.h	840;"	d
GL_SAMPLER_CUBE	windows/include/GL/glext.h	437;"	d
GL_SAMPLER_CUBE_ARB	windows/include/GL/glext.h	841;"	d
GL_SAMPLES	windows/include/GL/glext.h	226;"	d
GL_SAMPLES_3DFX	windows/include/GL/glext.h	2106;"	d
GL_SAMPLES_ARB	windows/include/GL/glext.h	513;"	d
GL_SAMPLES_EXT	windows/include/GL/glext.h	2126;"	d
GL_SAMPLES_PASSED	windows/include/GL/glext.h	358;"	d
GL_SAMPLES_PASSED_ARB	windows/include/GL/glext.h	817;"	d
GL_SAMPLES_SGIS	windows/include/GL/glext.h	1208;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	windows/include/GL/glext.h	222;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	windows/include/GL/glext.h	509;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	windows/include/GL/glext.h	2115;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	windows/include/GL/glext.h	1197;"	d
GL_SAMPLE_ALPHA_TO_ONE	windows/include/GL/glext.h	223;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	windows/include/GL/glext.h	510;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	windows/include/GL/glext.h	2116;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	windows/include/GL/glext.h	1198;"	d
GL_SAMPLE_BUFFERS	windows/include/GL/glext.h	225;"	d
GL_SAMPLE_BUFFERS_3DFX	windows/include/GL/glext.h	2105;"	d
GL_SAMPLE_BUFFERS_ARB	windows/include/GL/glext.h	512;"	d
GL_SAMPLE_BUFFERS_EXT	windows/include/GL/glext.h	2125;"	d
GL_SAMPLE_BUFFERS_SGIS	windows/include/GL/glext.h	1207;"	d
GL_SAMPLE_COVERAGE	windows/include/GL/glext.h	224;"	d
GL_SAMPLE_COVERAGE_ARB	windows/include/GL/glext.h	511;"	d
GL_SAMPLE_COVERAGE_INVERT	windows/include/GL/glext.h	228;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	windows/include/GL/glext.h	515;"	d
GL_SAMPLE_COVERAGE_VALUE	windows/include/GL/glext.h	227;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	windows/include/GL/glext.h	514;"	d
GL_SAMPLE_MASK_EXT	windows/include/GL/glext.h	2117;"	d
GL_SAMPLE_MASK_INVERT_EXT	windows/include/GL/glext.h	2128;"	d
GL_SAMPLE_MASK_INVERT_SGIS	windows/include/GL/glext.h	1210;"	d
GL_SAMPLE_MASK_SGIS	windows/include/GL/glext.h	1199;"	d
GL_SAMPLE_MASK_VALUE_EXT	windows/include/GL/glext.h	2127;"	d
GL_SAMPLE_MASK_VALUE_SGIS	windows/include/GL/glext.h	1209;"	d
GL_SAMPLE_PATTERN_EXT	windows/include/GL/glext.h	2129;"	d
GL_SAMPLE_PATTERN_SGIS	windows/include/GL/glext.h	1211;"	d
GL_SATURATE_BIT_ATI	windows/include/GL/glext.h	2547;"	d
GL_SCALAR_EXT	windows/include/GL/glext.h	2639;"	d
GL_SCALEBIAS_HINT_SGIX	windows/include/GL/glext.h	2408;"	d
GL_SCALE_BY_FOUR_NV	windows/include/GL/glext.h	1981;"	d
GL_SCALE_BY_ONE_HALF_NV	windows/include/GL/glext.h	1982;"	d
GL_SCALE_BY_TWO_NV	windows/include/GL/glext.h	1980;"	d
GL_SCREEN_COORDINATES_REND	windows/include/GL/glext.h	1762;"	d
GL_SECONDARY_COLOR_ARRAY	windows/include/GL/glext.h	309;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	339;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	791;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	windows/include/GL/glext.h	1739;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	windows/include/GL/glext.h	2065;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	windows/include/GL/glext.h	2073;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	windows/include/GL/glext.h	308;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1738;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	windows/include/GL/glext.h	305;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	windows/include/GL/glext.h	1735;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	windows/include/GL/glext.h	307;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1737;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	windows/include/GL/glext.h	306;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1736;"	d
GL_SECONDARY_COLOR_NV	windows/include/GL/glext.h	1966;"	d
GL_SECONDARY_INTERPOLATOR_ATI	windows/include/GL/glext.h	2523;"	d
GL_SEPARABLE_2D	windows/include/GL/glext.h	117;"	d
GL_SEPARABLE_2D_EXT	windows/include/GL/glext.h	1064;"	d
GL_SEPARATE_SPECULAR_COLOR	windows/include/GL/glext.h	94;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	windows/include/GL/glext.h	1729;"	d
GL_SGIS_detail_texture	windows/include/GL/glext.h	4383;"	d
GL_SGIS_fog_function	windows/include/GL/glext.h	4611;"	d
GL_SGIS_generate_mipmap	windows/include/GL/glext.h	4453;"	d
GL_SGIS_multisample	windows/include/GL/glext.h	4411;"	d
GL_SGIS_pixel_texture	windows/include/GL/glext.h	4329;"	d
GL_SGIS_point_line_texgen	windows/include/GL/glext.h	5487;"	d
GL_SGIS_point_parameters	windows/include/GL/glext.h	4529;"	d
GL_SGIS_sharpen_texture	windows/include/GL/glext.h	4393;"	d
GL_SGIS_texture4D	windows/include/GL/glext.h	4347;"	d
GL_SGIS_texture_border_clamp	windows/include/GL/glext.h	4469;"	d
GL_SGIS_texture_color_mask	windows/include/GL/glext.h	5491;"	d
GL_SGIS_texture_edge_clamp	windows/include/GL/glext.h	4465;"	d
GL_SGIS_texture_filter4	windows/include/GL/glext.h	4203;"	d
GL_SGIS_texture_lod	windows/include/GL/glext.h	4407;"	d
GL_SGIX_async	windows/include/GL/glext.h	4859;"	d
GL_SGIX_async_histogram	windows/include/GL/glext.h	4881;"	d
GL_SGIX_async_pixel	windows/include/GL/glext.h	4877;"	d
GL_SGIX_blend_alpha_minmax	windows/include/GL/glext.h	4851;"	d
GL_SGIX_calligraphic_fragment	windows/include/GL/glext.h	4713;"	d
GL_SGIX_clipmap	windows/include/GL/glext.h	4457;"	d
GL_SGIX_convolution_accuracy	windows/include/GL/glext.h	5479;"	d
GL_SGIX_depth_pass_instrument	windows/include/GL/glext.h	5445;"	d
GL_SGIX_depth_texture	windows/include/GL/glext.h	4607;"	d
GL_SGIX_flush_raster	windows/include/GL/glext.h	4599;"	d
GL_SGIX_fog_offset	windows/include/GL/glext.h	4621;"	d
GL_SGIX_fog_scale	windows/include/GL/glext.h	5069;"	d
GL_SGIX_fragment_lighting	windows/include/GL/glext.h	4773;"	d
GL_SGIX_framezoom	windows/include/GL/glext.h	4561;"	d
GL_SGIX_igloo_interface	windows/include/GL/glext.h	5499;"	d
GL_SGIX_instruments	windows/include/GL/glext.h	4539;"	d
GL_SGIX_interlace	windows/include/GL/glext.h	4489;"	d
GL_SGIX_ir_instrument1	windows/include/GL/glext.h	4709;"	d
GL_SGIX_list_priority	windows/include/GL/glext.h	4691;"	d
GL_SGIX_pixel_texture	windows/include/GL/glext.h	4321;"	d
GL_SGIX_pixel_tiles	windows/include/GL/glext.h	4493;"	d
GL_SGIX_polynomial_ffd	windows/include/GL/glext.h	4577;"	d
GL_SGIX_reference_plane	windows/include/GL/glext.h	4591;"	d
GL_SGIX_resample	windows/include/GL/glext.h	5483;"	d
GL_SGIX_scalebias_hint	windows/include/GL/glext.h	5731;"	d
GL_SGIX_shadow	windows/include/GL/glext.h	4461;"	d
GL_SGIX_shadow_ambient	windows/include/GL/glext.h	4721;"	d
GL_SGIX_sprite	windows/include/GL/glext.h	4501;"	d
GL_SGIX_subsample	windows/include/GL/glext.h	5433;"	d
GL_SGIX_tag_sample_buffer	windows/include/GL/glext.h	4569;"	d
GL_SGIX_texture_add_env	windows/include/GL/glext.h	4647;"	d
GL_SGIX_texture_coordinate_clamp	windows/include/GL/glext.h	5727;"	d
GL_SGIX_texture_lod_bias	windows/include/GL/glext.h	4717;"	d
GL_SGIX_texture_multi_buffer	windows/include/GL/glext.h	4515;"	d
GL_SGIX_texture_scale_bias	windows/include/GL/glext.h	4557;"	d
GL_SGIX_texture_select	windows/include/GL/glext.h	4497;"	d
GL_SGIX_vertex_preclip	windows/include/GL/glext.h	5475;"	d
GL_SGIX_ycrcb	windows/include/GL/glext.h	4769;"	d
GL_SGIX_ycrcb_subsample	windows/include/GL/glext.h	5441;"	d
GL_SGIX_ycrcba	windows/include/GL/glext.h	5437;"	d
GL_SGI_color_table	windows/include/GL/glext.h	4301;"	d
GL_SGI_texture_color_table	windows/include/GL/glext.h	4357;"	d
GL_SHADER_CONSISTENT_NV	windows/include/GL/glext.h	2239;"	d
GL_SHADER_OBJECT_ARB	windows/include/GL/glext.h	822;"	d
GL_SHADER_OPERATION_NV	windows/include/GL/glext.h	2241;"	d
GL_SHADER_SOURCE_LENGTH	windows/include/GL/glext.h	448;"	d
GL_SHADER_TYPE	windows/include/GL/glext.h	420;"	d
GL_SHADING_LANGUAGE_VERSION	windows/include/GL/glext.h	452;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	windows/include/GL/glext.h	874;"	d
GL_SHADOW_AMBIENT_SGIX	windows/include/GL/glext.h	1548;"	d
GL_SHADOW_ATTENUATION_EXT	windows/include/GL/glext.h	1645;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	windows/include/GL/glext.h	1723;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	windows/include/GL/glext.h	1177;"	d
GL_SIGNED_ALPHA8_NV	windows/include/GL/glext.h	2279;"	d
GL_SIGNED_ALPHA_NV	windows/include/GL/glext.h	2278;"	d
GL_SIGNED_HILO16_NV	windows/include/GL/glext.h	2269;"	d
GL_SIGNED_HILO8_NV	windows/include/GL/glext.h	2754;"	d
GL_SIGNED_HILO_NV	windows/include/GL/glext.h	2268;"	d
GL_SIGNED_IDENTITY_NV	windows/include/GL/glext.h	1978;"	d
GL_SIGNED_INTENSITY8_NV	windows/include/GL/glext.h	2281;"	d
GL_SIGNED_INTENSITY_NV	windows/include/GL/glext.h	2280;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	windows/include/GL/glext.h	2277;"	d
GL_SIGNED_LUMINANCE8_NV	windows/include/GL/glext.h	2275;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	windows/include/GL/glext.h	2276;"	d
GL_SIGNED_LUMINANCE_NV	windows/include/GL/glext.h	2274;"	d
GL_SIGNED_NEGATE_NV	windows/include/GL/glext.h	1979;"	d
GL_SIGNED_RGB8_NV	windows/include/GL/glext.h	2273;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	windows/include/GL/glext.h	2286;"	d
GL_SIGNED_RGBA8_NV	windows/include/GL/glext.h	2271;"	d
GL_SIGNED_RGBA_NV	windows/include/GL/glext.h	2270;"	d
GL_SIGNED_RGB_NV	windows/include/GL/glext.h	2272;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	windows/include/GL/glext.h	2285;"	d
GL_SINGLE_COLOR	windows/include/GL/glext.h	93;"	d
GL_SINGLE_COLOR_EXT	windows/include/GL/glext.h	1728;"	d
GL_SLICE_ACCUM_SUN	windows/include/GL/glext.h	2714;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	windows/include/GL/glext.h	98;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	windows/include/GL/glext.h	97;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	windows/include/GL/glext.h	96;"	d
GL_SMOOTH_POINT_SIZE_RANGE	windows/include/GL/glext.h	95;"	d
GL_SOURCE0_ALPHA	windows/include/GL/glext.h	260;"	d
GL_SOURCE0_ALPHA_ARB	windows/include/GL/glext.h	627;"	d
GL_SOURCE0_ALPHA_EXT	windows/include/GL/glext.h	1796;"	d
GL_SOURCE0_RGB	windows/include/GL/glext.h	257;"	d
GL_SOURCE0_RGB_ARB	windows/include/GL/glext.h	624;"	d
GL_SOURCE0_RGB_EXT	windows/include/GL/glext.h	1793;"	d
GL_SOURCE1_ALPHA	windows/include/GL/glext.h	261;"	d
GL_SOURCE1_ALPHA_ARB	windows/include/GL/glext.h	628;"	d
GL_SOURCE1_ALPHA_EXT	windows/include/GL/glext.h	1797;"	d
GL_SOURCE1_RGB	windows/include/GL/glext.h	258;"	d
GL_SOURCE1_RGB_ARB	windows/include/GL/glext.h	625;"	d
GL_SOURCE1_RGB_EXT	windows/include/GL/glext.h	1794;"	d
GL_SOURCE2_ALPHA	windows/include/GL/glext.h	262;"	d
GL_SOURCE2_ALPHA_ARB	windows/include/GL/glext.h	629;"	d
GL_SOURCE2_ALPHA_EXT	windows/include/GL/glext.h	1798;"	d
GL_SOURCE2_RGB	windows/include/GL/glext.h	259;"	d
GL_SOURCE2_RGB_ARB	windows/include/GL/glext.h	626;"	d
GL_SOURCE2_RGB_EXT	windows/include/GL/glext.h	1795;"	d
GL_SOURCE3_ALPHA_NV	windows/include/GL/glext.h	2032;"	d
GL_SOURCE3_RGB_NV	windows/include/GL/glext.h	2031;"	d
GL_SPARE0_NV	windows/include/GL/glext.h	1967;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	windows/include/GL/glext.h	1971;"	d
GL_SPARE1_NV	windows/include/GL/glext.h	1968;"	d
GL_SPRITE_AXIAL_SGIX	windows/include/GL/glext.h	1351;"	d
GL_SPRITE_AXIS_SGIX	windows/include/GL/glext.h	1349;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	windows/include/GL/glext.h	1353;"	d
GL_SPRITE_MODE_SGIX	windows/include/GL/glext.h	1348;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	windows/include/GL/glext.h	1352;"	d
GL_SPRITE_SGIX	windows/include/GL/glext.h	1347;"	d
GL_SPRITE_TRANSLATION_SGIX	windows/include/GL/glext.h	1350;"	d
GL_SRC0_ALPHA	windows/include/GL/glext.h	370;"	d
GL_SRC0_RGB	windows/include/GL/glext.h	367;"	d
GL_SRC1_ALPHA	windows/include/GL/glext.h	371;"	d
GL_SRC1_RGB	windows/include/GL/glext.h	368;"	d
GL_SRC2_ALPHA	windows/include/GL/glext.h	372;"	d
GL_SRC2_RGB	windows/include/GL/glext.h	369;"	d
GL_STATIC_ATI	windows/include/GL/glext.h	2566;"	d
GL_STATIC_COPY	windows/include/GL/glext.h	354;"	d
GL_STATIC_COPY_ARB	windows/include/GL/glext.h	806;"	d
GL_STATIC_DRAW	windows/include/GL/glext.h	352;"	d
GL_STATIC_DRAW_ARB	windows/include/GL/glext.h	804;"	d
GL_STATIC_READ	windows/include/GL/glext.h	353;"	d
GL_STATIC_READ_ARB	windows/include/GL/glext.h	805;"	d
GL_STENCIL_ATTACHMENT_EXT	windows/include/GL/glext.h	3020;"	d
GL_STENCIL_BACK_FAIL	windows/include/GL/glext.h	386;"	d
GL_STENCIL_BACK_FAIL_ATI	windows/include/GL/glext.h	2917;"	d
GL_STENCIL_BACK_FUNC	windows/include/GL/glext.h	385;"	d
GL_STENCIL_BACK_FUNC_ATI	windows/include/GL/glext.h	2916;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	windows/include/GL/glext.h	387;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	windows/include/GL/glext.h	2918;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	windows/include/GL/glext.h	388;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	windows/include/GL/glext.h	2919;"	d
GL_STENCIL_BACK_REF	windows/include/GL/glext.h	457;"	d
GL_STENCIL_BACK_VALUE_MASK	windows/include/GL/glext.h	458;"	d
GL_STENCIL_BACK_WRITEMASK	windows/include/GL/glext.h	459;"	d
GL_STENCIL_INDEX16_EXT	windows/include/GL/glext.h	3029;"	d
GL_STENCIL_INDEX1_EXT	windows/include/GL/glext.h	3026;"	d
GL_STENCIL_INDEX4_EXT	windows/include/GL/glext.h	3027;"	d
GL_STENCIL_INDEX8_EXT	windows/include/GL/glext.h	3028;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	windows/include/GL/glext.h	2765;"	d
GL_STORAGE_CACHED_APPLE	windows/include/GL/glext.h	2797;"	d
GL_STORAGE_SHARED_APPLE	windows/include/GL/glext.h	2798;"	d
GL_STREAM_COPY	windows/include/GL/glext.h	351;"	d
GL_STREAM_COPY_ARB	windows/include/GL/glext.h	803;"	d
GL_STREAM_DRAW	windows/include/GL/glext.h	349;"	d
GL_STREAM_DRAW_ARB	windows/include/GL/glext.h	801;"	d
GL_STREAM_READ	windows/include/GL/glext.h	350;"	d
GL_STREAM_READ_ARB	windows/include/GL/glext.h	802;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	windows/include/GL/glext.h	1505;"	d
GL_STRICT_LIGHTING_HINT_PGI	windows/include/GL/glext.h	1506;"	d
GL_STRICT_SCISSOR_HINT_PGI	windows/include/GL/glext.h	1507;"	d
GL_SUBTRACT	windows/include/GL/glext.h	272;"	d
GL_SUBTRACT_ARB	windows/include/GL/glext.h	639;"	d
GL_SUB_ATI	windows/include/GL/glext.h	2515;"	d
GL_SUNX_constant_data	windows/include/GL/glext.h	5073;"	d
GL_SUN_convolution_border_modes	windows/include/GL/glext.h	5245;"	d
GL_SUN_global_alpha	windows/include/GL/glext.h	5081;"	d
GL_SUN_mesh_array	windows/include/GL/glext.h	6037;"	d
GL_SUN_slice_accum	windows/include/GL/glext.h	6045;"	d
GL_SUN_triangle_list	windows/include/GL/glext.h	5103;"	d
GL_SUN_vertex	windows/include/GL/glext.h	5123;"	d
GL_SWIZZLE_STQ_ATI	windows/include/GL/glext.h	2533;"	d
GL_SWIZZLE_STQ_DQ_ATI	windows/include/GL/glext.h	2535;"	d
GL_SWIZZLE_STRQ_ATI	windows/include/GL/glext.h	2536;"	d
GL_SWIZZLE_STRQ_DQ_ATI	windows/include/GL/glext.h	2537;"	d
GL_SWIZZLE_STR_ATI	windows/include/GL/glext.h	2532;"	d
GL_SWIZZLE_STR_DR_ATI	windows/include/GL/glext.h	2534;"	d
GL_T2F_IUI_N3F_V2F_EXT	windows/include/GL/glext.h	1573;"	d
GL_T2F_IUI_N3F_V3F_EXT	windows/include/GL/glext.h	1574;"	d
GL_T2F_IUI_V2F_EXT	windows/include/GL/glext.h	1571;"	d
GL_T2F_IUI_V3F_EXT	windows/include/GL/glext.h	1572;"	d
GL_TABLE_TOO_LARGE	windows/include/GL/glext.h	148;"	d
GL_TABLE_TOO_LARGE_EXT	windows/include/GL/glext.h	1058;"	d
GL_TANGENT_ARRAY_EXT	windows/include/GL/glext.h	1767;"	d
GL_TANGENT_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1775;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1772;"	d
GL_TANGENT_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1771;"	d
GL_TEXCOORD1_BIT_PGI	windows/include/GL/glext.h	1484;"	d
GL_TEXCOORD2_BIT_PGI	windows/include/GL/glext.h	1485;"	d
GL_TEXCOORD3_BIT_PGI	windows/include/GL/glext.h	1486;"	d
GL_TEXCOORD4_BIT_PGI	windows/include/GL/glext.h	1487;"	d
GL_TEXTURE0	windows/include/GL/glext.h	182;"	d
GL_TEXTURE0_ARB	windows/include/GL/glext.h	463;"	d
GL_TEXTURE1	windows/include/GL/glext.h	183;"	d
GL_TEXTURE10	windows/include/GL/glext.h	192;"	d
GL_TEXTURE10_ARB	windows/include/GL/glext.h	473;"	d
GL_TEXTURE11	windows/include/GL/glext.h	193;"	d
GL_TEXTURE11_ARB	windows/include/GL/glext.h	474;"	d
GL_TEXTURE12	windows/include/GL/glext.h	194;"	d
GL_TEXTURE12_ARB	windows/include/GL/glext.h	475;"	d
GL_TEXTURE13	windows/include/GL/glext.h	195;"	d
GL_TEXTURE13_ARB	windows/include/GL/glext.h	476;"	d
GL_TEXTURE14	windows/include/GL/glext.h	196;"	d
GL_TEXTURE14_ARB	windows/include/GL/glext.h	477;"	d
GL_TEXTURE15	windows/include/GL/glext.h	197;"	d
GL_TEXTURE15_ARB	windows/include/GL/glext.h	478;"	d
GL_TEXTURE16	windows/include/GL/glext.h	198;"	d
GL_TEXTURE16_ARB	windows/include/GL/glext.h	479;"	d
GL_TEXTURE17	windows/include/GL/glext.h	199;"	d
GL_TEXTURE17_ARB	windows/include/GL/glext.h	480;"	d
GL_TEXTURE18	windows/include/GL/glext.h	200;"	d
GL_TEXTURE18_ARB	windows/include/GL/glext.h	481;"	d
GL_TEXTURE19	windows/include/GL/glext.h	201;"	d
GL_TEXTURE19_ARB	windows/include/GL/glext.h	482;"	d
GL_TEXTURE1_ARB	windows/include/GL/glext.h	464;"	d
GL_TEXTURE2	windows/include/GL/glext.h	184;"	d
GL_TEXTURE20	windows/include/GL/glext.h	202;"	d
GL_TEXTURE20_ARB	windows/include/GL/glext.h	483;"	d
GL_TEXTURE21	windows/include/GL/glext.h	203;"	d
GL_TEXTURE21_ARB	windows/include/GL/glext.h	484;"	d
GL_TEXTURE22	windows/include/GL/glext.h	204;"	d
GL_TEXTURE22_ARB	windows/include/GL/glext.h	485;"	d
GL_TEXTURE23	windows/include/GL/glext.h	205;"	d
GL_TEXTURE23_ARB	windows/include/GL/glext.h	486;"	d
GL_TEXTURE24	windows/include/GL/glext.h	206;"	d
GL_TEXTURE24_ARB	windows/include/GL/glext.h	487;"	d
GL_TEXTURE25	windows/include/GL/glext.h	207;"	d
GL_TEXTURE25_ARB	windows/include/GL/glext.h	488;"	d
GL_TEXTURE26	windows/include/GL/glext.h	208;"	d
GL_TEXTURE26_ARB	windows/include/GL/glext.h	489;"	d
GL_TEXTURE27	windows/include/GL/glext.h	209;"	d
GL_TEXTURE27_ARB	windows/include/GL/glext.h	490;"	d
GL_TEXTURE28	windows/include/GL/glext.h	210;"	d
GL_TEXTURE28_ARB	windows/include/GL/glext.h	491;"	d
GL_TEXTURE29	windows/include/GL/glext.h	211;"	d
GL_TEXTURE29_ARB	windows/include/GL/glext.h	492;"	d
GL_TEXTURE2_ARB	windows/include/GL/glext.h	465;"	d
GL_TEXTURE3	windows/include/GL/glext.h	185;"	d
GL_TEXTURE30	windows/include/GL/glext.h	212;"	d
GL_TEXTURE30_ARB	windows/include/GL/glext.h	493;"	d
GL_TEXTURE31	windows/include/GL/glext.h	213;"	d
GL_TEXTURE31_ARB	windows/include/GL/glext.h	494;"	d
GL_TEXTURE3_ARB	windows/include/GL/glext.h	466;"	d
GL_TEXTURE4	windows/include/GL/glext.h	186;"	d
GL_TEXTURE4_ARB	windows/include/GL/glext.h	467;"	d
GL_TEXTURE5	windows/include/GL/glext.h	187;"	d
GL_TEXTURE5_ARB	windows/include/GL/glext.h	468;"	d
GL_TEXTURE6	windows/include/GL/glext.h	188;"	d
GL_TEXTURE6_ARB	windows/include/GL/glext.h	469;"	d
GL_TEXTURE7	windows/include/GL/glext.h	189;"	d
GL_TEXTURE7_ARB	windows/include/GL/glext.h	470;"	d
GL_TEXTURE8	windows/include/GL/glext.h	190;"	d
GL_TEXTURE8_ARB	windows/include/GL/glext.h	471;"	d
GL_TEXTURE9	windows/include/GL/glext.h	191;"	d
GL_TEXTURE9_ARB	windows/include/GL/glext.h	472;"	d
GL_TEXTURE_1D_BINDING_EXT	windows/include/GL/glext.h	1157;"	d
GL_TEXTURE_2D_BINDING_EXT	windows/include/GL/glext.h	1158;"	d
GL_TEXTURE_3D	windows/include/GL/glext.h	71;"	d
GL_TEXTURE_3D_BINDING_EXT	windows/include/GL/glext.h	1159;"	d
GL_TEXTURE_3D_EXT	windows/include/GL/glext.h	1026;"	d
GL_TEXTURE_4DSIZE_SGIS	windows/include/GL/glext.h	1136;"	d
GL_TEXTURE_4D_BINDING_SGIS	windows/include/GL/glext.h	1139;"	d
GL_TEXTURE_4D_SGIS	windows/include/GL/glext.h	1134;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	windows/include/GL/glext.h	1012;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	windows/include/GL/glext.h	931;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	windows/include/GL/glext.h	1646;"	d
GL_TEXTURE_BASE_LEVEL	windows/include/GL/glext.h	90;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	windows/include/GL/glext.h	1191;"	d
GL_TEXTURE_BINDING_3D	windows/include/GL/glext.h	66;"	d
GL_TEXTURE_BINDING_CUBE_MAP	windows/include/GL/glext.h	233;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	windows/include/GL/glext.h	526;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	windows/include/GL/glext.h	1896;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	windows/include/GL/glext.h	910;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	windows/include/GL/glext.h	2226;"	d
GL_TEXTURE_BLUE_SIZE_EXT	windows/include/GL/glext.h	1011;"	d
GL_TEXTURE_BLUE_TYPE_ARB	windows/include/GL/glext.h	930;"	d
GL_TEXTURE_BORDER_VALUES_NV	windows/include/GL/glext.h	2299;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	windows/include/GL/glext.h	1263;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	windows/include/GL/glext.h	1268;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	windows/include/GL/glext.h	1264;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	windows/include/GL/glext.h	1267;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	windows/include/GL/glext.h	1265;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	windows/include/GL/glext.h	1266;"	d
GL_TEXTURE_COLOR_TABLE_SGI	windows/include/GL/glext.h	1143;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	windows/include/GL/glext.h	2162;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	windows/include/GL/glext.h	672;"	d
GL_TEXTURE_COMPARE_FUNC	windows/include/GL/glext.h	318;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	windows/include/GL/glext.h	667;"	d
GL_TEXTURE_COMPARE_MODE	windows/include/GL/glext.h	317;"	d
GL_TEXTURE_COMPARE_MODE_ARB	windows/include/GL/glext.h	666;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	windows/include/GL/glext.h	1278;"	d
GL_TEXTURE_COMPARE_SGIX	windows/include/GL/glext.h	1277;"	d
GL_TEXTURE_COMPRESSED	windows/include/GL/glext.h	250;"	d
GL_TEXTURE_COMPRESSED_ARB	windows/include/GL/glext.h	546;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	windows/include/GL/glext.h	249;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	windows/include/GL/glext.h	545;"	d
GL_TEXTURE_COMPRESSION_HINT	windows/include/GL/glext.h	248;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	windows/include/GL/glext.h	544;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	windows/include/GL/glext.h	1822;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	337;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	789;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	windows/include/GL/glext.h	1242;"	d
GL_TEXTURE_COORD_ARRAY_EXT	windows/include/GL/glext.h	1223;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	windows/include/GL/glext.h	2062;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	windows/include/GL/glext.h	2070;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	windows/include/GL/glext.h	1699;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1249;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	windows/include/GL/glext.h	1239;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1241;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1240;"	d
GL_TEXTURE_CUBE_MAP	windows/include/GL/glext.h	232;"	d
GL_TEXTURE_CUBE_MAP_ARB	windows/include/GL/glext.h	525;"	d
GL_TEXTURE_CUBE_MAP_EXT	windows/include/GL/glext.h	1895;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	windows/include/GL/glext.h	235;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	windows/include/GL/glext.h	528;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	windows/include/GL/glext.h	1898;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	windows/include/GL/glext.h	237;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	windows/include/GL/glext.h	530;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	windows/include/GL/glext.h	1900;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	windows/include/GL/glext.h	239;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	windows/include/GL/glext.h	532;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	windows/include/GL/glext.h	1902;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	windows/include/GL/glext.h	234;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	windows/include/GL/glext.h	527;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	windows/include/GL/glext.h	1897;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	windows/include/GL/glext.h	236;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	windows/include/GL/glext.h	529;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	windows/include/GL/glext.h	1899;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	windows/include/GL/glext.h	238;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	windows/include/GL/glext.h	531;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	windows/include/GL/glext.h	1901;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	windows/include/GL/glext.h	1396;"	d
GL_TEXTURE_DEFORMATION_SGIX	windows/include/GL/glext.h	1402;"	d
GL_TEXTURE_DEPTH	windows/include/GL/glext.h	73;"	d
GL_TEXTURE_DEPTH_EXT	windows/include/GL/glext.h	1028;"	d
GL_TEXTURE_DEPTH_SIZE	windows/include/GL/glext.h	315;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	windows/include/GL/glext.h	661;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	windows/include/GL/glext.h	934;"	d
GL_TEXTURE_DS_SIZE_NV	windows/include/GL/glext.h	2302;"	d
GL_TEXTURE_DT_SIZE_NV	windows/include/GL/glext.h	2303;"	d
GL_TEXTURE_ENV_BIAS_SGIX	windows/include/GL/glext.h	1461;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	windows/include/GL/glext.h	1035;"	d
GL_TEXTURE_FILTER_CONTROL	windows/include/GL/glext.h	311;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	windows/include/GL/glext.h	1916;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	windows/include/GL/glext.h	2873;"	d
GL_TEXTURE_GEQUAL_R_SGIX	windows/include/GL/glext.h	1280;"	d
GL_TEXTURE_GREEN_SIZE_EXT	windows/include/GL/glext.h	1010;"	d
GL_TEXTURE_GREEN_TYPE_ARB	windows/include/GL/glext.h	929;"	d
GL_TEXTURE_HI_SIZE_NV	windows/include/GL/glext.h	2300;"	d
GL_TEXTURE_INDEX_SIZE_EXT	windows/include/GL/glext.h	1522;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	windows/include/GL/glext.h	1014;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	windows/include/GL/glext.h	933;"	d
GL_TEXTURE_LEQUAL_R_SGIX	windows/include/GL/glext.h	1279;"	d
GL_TEXTURE_LIGHTING_MODE_HP	windows/include/GL/glext.h	1621;"	d
GL_TEXTURE_LIGHT_EXT	windows/include/GL/glext.h	1647;"	d
GL_TEXTURE_LOD_BIAS	windows/include/GL/glext.h	312;"	d
GL_TEXTURE_LOD_BIAS_EXT	windows/include/GL/glext.h	1917;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	windows/include/GL/glext.h	1544;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	windows/include/GL/glext.h	1542;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	windows/include/GL/glext.h	1543;"	d
GL_TEXTURE_LO_SIZE_NV	windows/include/GL/glext.h	2301;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	windows/include/GL/glext.h	1013;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	windows/include/GL/glext.h	932;"	d
GL_TEXTURE_MAG_SIZE_NV	windows/include/GL/glext.h	2304;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	windows/include/GL/glext.h	1648;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	windows/include/GL/glext.h	1649;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	windows/include/GL/glext.h	1921;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	windows/include/GL/glext.h	2404;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	windows/include/GL/glext.h	2402;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	windows/include/GL/glext.h	2403;"	d
GL_TEXTURE_MAX_LEVEL	windows/include/GL/glext.h	91;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	windows/include/GL/glext.h	1192;"	d
GL_TEXTURE_MAX_LOD	windows/include/GL/glext.h	89;"	d
GL_TEXTURE_MAX_LOD_SGIS	windows/include/GL/glext.h	1190;"	d
GL_TEXTURE_MIN_LOD	windows/include/GL/glext.h	88;"	d
GL_TEXTURE_MIN_LOD_SGIS	windows/include/GL/glext.h	1189;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	windows/include/GL/glext.h	1357;"	d
GL_TEXTURE_NORMAL_EXT	windows/include/GL/glext.h	1744;"	d
GL_TEXTURE_POST_SPECULAR_HP	windows/include/GL/glext.h	1622;"	d
GL_TEXTURE_PRE_SPECULAR_HP	windows/include/GL/glext.h	1623;"	d
GL_TEXTURE_PRIORITY_EXT	windows/include/GL/glext.h	1155;"	d
GL_TEXTURE_RECTANGLE_ARB	windows/include/GL/glext.h	909;"	d
GL_TEXTURE_RECTANGLE_NV	windows/include/GL/glext.h	2225;"	d
GL_TEXTURE_RED_SIZE_EXT	windows/include/GL/glext.h	1009;"	d
GL_TEXTURE_RED_TYPE_ARB	windows/include/GL/glext.h	928;"	d
GL_TEXTURE_RESIDENT_EXT	windows/include/GL/glext.h	1156;"	d
GL_TEXTURE_SHADER_NV	windows/include/GL/glext.h	2240;"	d
GL_TEXTURE_TOO_LARGE_EXT	windows/include/GL/glext.h	1018;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	windows/include/GL/glext.h	2906;"	d
GL_TEXTURE_WRAP_Q_SGIS	windows/include/GL/glext.h	1137;"	d
GL_TEXTURE_WRAP_R	windows/include/GL/glext.h	74;"	d
GL_TEXTURE_WRAP_R_EXT	windows/include/GL/glext.h	1029;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	windows/include/GL/glext.h	2770;"	d
GL_TRACK_MATRIX_NV	windows/include/GL/glext.h	2347;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	windows/include/GL/glext.h	2348;"	d
GL_TRANSFORM_HINT_APPLE	windows/include/GL/glext.h	1812;"	d
GL_TRANSPOSE_COLOR_MATRIX	windows/include/GL/glext.h	220;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	windows/include/GL/glext.h	504;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	windows/include/GL/glext.h	725;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	windows/include/GL/glext.h	217;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	windows/include/GL/glext.h	501;"	d
GL_TRANSPOSE_NV	windows/include/GL/glext.h	2327;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	windows/include/GL/glext.h	218;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	windows/include/GL/glext.h	502;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	windows/include/GL/glext.h	219;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	windows/include/GL/glext.h	503;"	d
GL_TRIANGLE_LIST_SUN	windows/include/GL/glext.h	1834;"	d
GL_TRIANGLE_MESH_SUN	windows/include/GL/glext.h	2710;"	d
GL_TYPE_RGBA_FLOAT_ATI	windows/include/GL/glext.h	2835;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	windows/include/GL/glext.h	2774;"	d
GL_UNPACK_CMYK_HINT_EXT	windows/include/GL/glext.h	1151;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	windows/include/GL/glext.h	1821;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	windows/include/GL/glext.h	1133;"	d
GL_UNPACK_IMAGE_HEIGHT	windows/include/GL/glext.h	70;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	windows/include/GL/glext.h	1025;"	d
GL_UNPACK_RESAMPLE_OML	windows/include/GL/glext.h	2423;"	d
GL_UNPACK_RESAMPLE_SGIX	windows/include/GL/glext.h	2144;"	d
GL_UNPACK_SKIP_IMAGES	windows/include/GL/glext.h	69;"	d
GL_UNPACK_SKIP_IMAGES_EXT	windows/include/GL/glext.h	1024;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	windows/include/GL/glext.h	1132;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	windows/include/GL/glext.h	2078;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	windows/include/GL/glext.h	76;"	d
GL_UNSIGNED_BYTE_3_3_2	windows/include/GL/glext.h	60;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	windows/include/GL/glext.h	1181;"	d
GL_UNSIGNED_IDENTITY_NV	windows/include/GL/glext.h	1972;"	d
GL_UNSIGNED_INT_10_10_10_2	windows/include/GL/glext.h	64;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	windows/include/GL/glext.h	1185;"	d
GL_UNSIGNED_INT_24_8_NV	windows/include/GL/glext.h	2214;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	windows/include/GL/glext.h	82;"	d
GL_UNSIGNED_INT_8_8_8_8	windows/include/GL/glext.h	63;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	windows/include/GL/glext.h	1184;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	windows/include/GL/glext.h	81;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	windows/include/GL/glext.h	2237;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	windows/include/GL/glext.h	2236;"	d
GL_UNSIGNED_INVERT_NV	windows/include/GL/glext.h	1973;"	d
GL_UNSIGNED_NORMALIZED_ARB	windows/include/GL/glext.h	935;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	windows/include/GL/glext.h	80;"	d
GL_UNSIGNED_SHORT_4_4_4_4	windows/include/GL/glext.h	61;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	windows/include/GL/glext.h	1182;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	windows/include/GL/glext.h	79;"	d
GL_UNSIGNED_SHORT_5_5_5_1	windows/include/GL/glext.h	62;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	windows/include/GL/glext.h	1183;"	d
GL_UNSIGNED_SHORT_5_6_5	windows/include/GL/glext.h	77;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	windows/include/GL/glext.h	78;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	windows/include/GL/glext.h	2803;"	d
GL_UNSIGNED_SHORT_8_8_MESA	windows/include/GL/glext.h	2951;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	windows/include/GL/glext.h	2804;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	windows/include/GL/glext.h	2952;"	d
GL_UPPER_LEFT	windows/include/GL/glext.h	456;"	d
GL_VALIDATE_STATUS	windows/include/GL/glext.h	443;"	d
GL_VARIABLE_A_NV	windows/include/GL/glext.h	1956;"	d
GL_VARIABLE_B_NV	windows/include/GL/glext.h	1957;"	d
GL_VARIABLE_C_NV	windows/include/GL/glext.h	1958;"	d
GL_VARIABLE_D_NV	windows/include/GL/glext.h	1959;"	d
GL_VARIABLE_E_NV	windows/include/GL/glext.h	1960;"	d
GL_VARIABLE_F_NV	windows/include/GL/glext.h	1961;"	d
GL_VARIABLE_G_NV	windows/include/GL/glext.h	1962;"	d
GL_VARIANT_ARRAY_EXT	windows/include/GL/glext.h	2681;"	d
GL_VARIANT_ARRAY_POINTER_EXT	windows/include/GL/glext.h	2682;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	2679;"	d
GL_VARIANT_ARRAY_TYPE_EXT	windows/include/GL/glext.h	2680;"	d
GL_VARIANT_DATATYPE_EXT	windows/include/GL/glext.h	2678;"	d
GL_VARIANT_EXT	windows/include/GL/glext.h	2642;"	d
GL_VARIANT_VALUE_EXT	windows/include/GL/glext.h	2677;"	d
GL_VECTOR_EXT	windows/include/GL/glext.h	2640;"	d
GL_VERSION_1_2	windows/include/GL/glext.h	3078;"	d
GL_VERSION_1_3	windows/include/GL/glext.h	3160;"	d
GL_VERSION_1_4	windows/include/GL/glext.h	3258;"	d
GL_VERSION_1_5	windows/include/GL/glext.h	3354;"	d
GL_VERSION_2_0	windows/include/GL/glext.h	3398;"	d
GL_VERTEX23_BIT_PGI	windows/include/GL/glext.h	1488;"	d
GL_VERTEX4_BIT_PGI	windows/include/GL/glext.h	1489;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	windows/include/GL/glext.h	2789;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	333;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	785;"	d
GL_VERTEX_ARRAY_COUNT_EXT	windows/include/GL/glext.h	1228;"	d
GL_VERTEX_ARRAY_EXT	windows/include/GL/glext.h	1219;"	d
GL_VERTEX_ARRAY_LIST_IBM	windows/include/GL/glext.h	2058;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	windows/include/GL/glext.h	2066;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	windows/include/GL/glext.h	1696;"	d
GL_VERTEX_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1245;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	windows/include/GL/glext.h	2793;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	windows/include/GL/glext.h	2794;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	windows/include/GL/glext.h	1948;"	d
GL_VERTEX_ARRAY_RANGE_NV	windows/include/GL/glext.h	1947;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	windows/include/GL/glext.h	2796;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	windows/include/GL/glext.h	1951;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	windows/include/GL/glext.h	1949;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	windows/include/GL/glext.h	2312;"	d
GL_VERTEX_ARRAY_SIZE_EXT	windows/include/GL/glext.h	1225;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	windows/include/GL/glext.h	2795;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1227;"	d
GL_VERTEX_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1226;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	windows/include/GL/glext.h	2351;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	windows/include/GL/glext.h	2361;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	windows/include/GL/glext.h	2362;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	windows/include/GL/glext.h	2363;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	windows/include/GL/glext.h	2364;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	windows/include/GL/glext.h	2365;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	windows/include/GL/glext.h	2366;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	windows/include/GL/glext.h	2352;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	windows/include/GL/glext.h	2353;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	windows/include/GL/glext.h	2354;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	windows/include/GL/glext.h	2355;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	windows/include/GL/glext.h	2356;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	windows/include/GL/glext.h	2357;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	windows/include/GL/glext.h	2358;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	windows/include/GL/glext.h	2359;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	windows/include/GL/glext.h	2360;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	342;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	794;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	windows/include/GL/glext.h	377;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	windows/include/GL/glext.h	681;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	windows/include/GL/glext.h	410;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	windows/include/GL/glext.h	698;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	windows/include/GL/glext.h	384;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	windows/include/GL/glext.h	694;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	windows/include/GL/glext.h	378;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	windows/include/GL/glext.h	682;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	windows/include/GL/glext.h	379;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	windows/include/GL/glext.h	683;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	windows/include/GL/glext.h	380;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	windows/include/GL/glext.h	684;"	d
GL_VERTEX_BLEND_ARB	windows/include/GL/glext.h	566;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	windows/include/GL/glext.h	1469;"	d
GL_VERTEX_DATA_HINT_PGI	windows/include/GL/glext.h	1468;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	windows/include/GL/glext.h	2135;"	d
GL_VERTEX_PRECLIP_SGIX	windows/include/GL/glext.h	2134;"	d
GL_VERTEX_PROGRAM_ARB	windows/include/GL/glext.h	680;"	d
GL_VERTEX_PROGRAM_BINDING_NV	windows/include/GL/glext.h	2349;"	d
GL_VERTEX_PROGRAM_NV	windows/include/GL/glext.h	2316;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	windows/include/GL/glext.h	382;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	windows/include/GL/glext.h	692;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	windows/include/GL/glext.h	2341;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	windows/include/GL/glext.h	383;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	windows/include/GL/glext.h	693;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	windows/include/GL/glext.h	2342;"	d
GL_VERTEX_SHADER	windows/include/GL/glext.h	414;"	d
GL_VERTEX_SHADER_ARB	windows/include/GL/glext.h	858;"	d
GL_VERTEX_SHADER_BINDING_EXT	windows/include/GL/glext.h	2578;"	d
GL_VERTEX_SHADER_EXT	windows/include/GL/glext.h	2577;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	windows/include/GL/glext.h	2656;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	windows/include/GL/glext.h	2658;"	d
GL_VERTEX_SHADER_LOCALS_EXT	windows/include/GL/glext.h	2660;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	windows/include/GL/glext.h	2659;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	windows/include/GL/glext.h	2661;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	windows/include/GL/glext.h	2657;"	d
GL_VERTEX_SOURCE_ATI	windows/include/GL/glext.h	2699;"	d
GL_VERTEX_STATE_PROGRAM_NV	windows/include/GL/glext.h	2317;"	d
GL_VERTEX_STREAM0_ATI	windows/include/GL/glext.h	2691;"	d
GL_VERTEX_STREAM1_ATI	windows/include/GL/glext.h	2692;"	d
GL_VERTEX_STREAM2_ATI	windows/include/GL/glext.h	2693;"	d
GL_VERTEX_STREAM3_ATI	windows/include/GL/glext.h	2694;"	d
GL_VERTEX_STREAM4_ATI	windows/include/GL/glext.h	2695;"	d
GL_VERTEX_STREAM5_ATI	windows/include/GL/glext.h	2696;"	d
GL_VERTEX_STREAM6_ATI	windows/include/GL/glext.h	2697;"	d
GL_VERTEX_STREAM7_ATI	windows/include/GL/glext.h	2698;"	d
GL_VERTEX_WEIGHTING_EXT	windows/include/GL/glext.h	1930;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	windows/include/GL/glext.h	1934;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	windows/include/GL/glext.h	1938;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	windows/include/GL/glext.h	1935;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	windows/include/GL/glext.h	1937;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	windows/include/GL/glext.h	1936;"	d
GL_VIBRANCE_BIAS_NV	windows/include/GL/glext.h	2298;"	d
GL_VIBRANCE_SCALE_NV	windows/include/GL/glext.h	2292;"	d
GL_WEIGHT_ARRAY_ARB	windows/include/GL/glext.h	572;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	windows/include/GL/glext.h	341;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	windows/include/GL/glext.h	793;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	windows/include/GL/glext.h	571;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	windows/include/GL/glext.h	570;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	windows/include/GL/glext.h	569;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	windows/include/GL/glext.h	568;"	d
GL_WEIGHT_SUM_UNITY_ARB	windows/include/GL/glext.h	565;"	d
GL_WIDE_LINE_HINT_PGI	windows/include/GL/glext.h	1511;"	d
GL_WIN_phong_shading	windows/include/GL/glext.h	4831;"	d
GL_WIN_specular_fog	windows/include/GL/glext.h	4835;"	d
GL_WRAP_BORDER_SUN	windows/include/GL/glext.h	1908;"	d
GL_WRITE_ONLY	windows/include/GL/glext.h	344;"	d
GL_WRITE_ONLY_ARB	windows/include/GL/glext.h	796;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	windows/include/GL/glext.h	2894;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	windows/include/GL/glext.h	2892;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	windows/include/GL/glext.h	2896;"	d
GL_W_EXT	windows/include/GL/glext.h	2665;"	d
GL_X_EXT	windows/include/GL/glext.h	2662;"	d
GL_YCBCR_422_APPLE	windows/include/GL/glext.h	2802;"	d
GL_YCBCR_MESA	windows/include/GL/glext.h	2953;"	d
GL_YCRCBA_SGIX	windows/include/GL/glext.h	2089;"	d
GL_YCRCB_422_SGIX	windows/include/GL/glext.h	1589;"	d
GL_YCRCB_444_SGIX	windows/include/GL/glext.h	1590;"	d
GL_YCRCB_SGIX	windows/include/GL/glext.h	2088;"	d
GL_Y_EXT	windows/include/GL/glext.h	2663;"	d
GL_ZERO_EXT	windows/include/GL/glext.h	2670;"	d
GL_Z_EXT	windows/include/GL/glext.h	2664;"	d
GLchar	windows/include/GL/glext.h	/^typedef char GLchar;			\/* native character *\/$/;"	t
GLcharARB	windows/include/GL/glext.h	/^typedef char GLcharARB;		\/* native character *\/$/;"	t
GLhalfARB	windows/include/GL/glext.h	/^typedef unsigned short GLhalfARB;$/;"	t
GLhalfNV	windows/include/GL/glext.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	windows/include/GL/glext.h	/^typedef unsigned int GLhandleARB;	\/* shader object handle *\/$/;"	t
GLintptr	windows/include/GL/glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptrARB	windows/include/GL/glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLsizeiptr	windows/include/GL/glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptrARB	windows/include/GL/glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GREAT	tools/trackgen/easymesh.cpp	50;"	d	file:
GRX_IDENT	interfaces/graphic.h	40;"	d
GR_ATT_ARCADE	interfaces/graphic.h	74;"	d
GR_ATT_BOARD	interfaces/graphic.h	69;"	d
GR_ATT_CAM	interfaces/graphic.h	64;"	d
GR_ATT_CAM_HEAD	interfaces/graphic.h	65;"	d
GR_ATT_CHGCAMINT	interfaces/graphic.h	78;"	d
GR_ATT_COUNTER	interfaces/graphic.h	70;"	d
GR_ATT_CUR_DRV	interfaces/graphic.h	94;"	d
GR_ATT_DEBUG	interfaces/graphic.h	72;"	d
GR_ATT_EVTINT	interfaces/graphic.h	79;"	d
GR_ATT_FOVFACT	interfaces/graphic.h	90;"	d
GR_ATT_FOVY	interfaces/graphic.h	68;"	d
GR_ATT_FRONT_GLOBAL	interfaces/graphic.h	97;"	d
GR_ATT_FRONT_LEVEL1	interfaces/graphic.h	100;"	d
GR_ATT_FRONT_LEVEL2	interfaces/graphic.h	99;"	d
GR_ATT_FRONT_LEVEL3	interfaces/graphic.h	98;"	d
GR_ATT_FRONT_MAP1	interfaces/graphic.h	106;"	d
GR_ATT_FRONT_MAP2	interfaces/graphic.h	107;"	d
GR_ATT_FRONT_MAP3	interfaces/graphic.h	108;"	d
GR_ATT_GGRAPH	interfaces/graphic.h	73;"	d
GR_ATT_LEADER	interfaces/graphic.h	71;"	d
GR_ATT_LODFACTOR	interfaces/graphic.h	91;"	d
GR_ATT_MAP	interfaces/graphic.h	67;"	d
GR_ATT_MAXPOINTBYSTRIP	interfaces/graphic.h	88;"	d
GR_ATT_MAXSTRIPBYWHEEL	interfaces/graphic.h	87;"	d
GR_ATT_MIRROR	interfaces/graphic.h	66;"	d
GR_ATT_NBLEADER	interfaces/graphic.h	75;"	d
GR_ATT_NB_SCREENS	interfaces/graphic.h	93;"	d
GR_ATT_PROXTHLD	interfaces/graphic.h	80;"	d
GR_ATT_REAR_GLOBAL	interfaces/graphic.h	101;"	d
GR_ATT_REAR_LEVEL1	interfaces/graphic.h	104;"	d
GR_ATT_REAR_LEVEL2	interfaces/graphic.h	103;"	d
GR_ATT_REAR_LEVEL3	interfaces/graphic.h	102;"	d
GR_ATT_REAR_MAP1	interfaces/graphic.h	109;"	d
GR_ATT_REAR_MAP2	interfaces/graphic.h	110;"	d
GR_ATT_REAR_MAP3	interfaces/graphic.h	111;"	d
GR_ATT_SKIDDELTAT	interfaces/graphic.h	89;"	d
GR_ATT_SMOKEDELTAT	interfaces/graphic.h	84;"	d
GR_ATT_SMOKEDLIFE	interfaces/graphic.h	85;"	d
GR_ATT_SMOKENB	interfaces/graphic.h	83;"	d
GR_ATT_SOUND_STATE	interfaces/graphic.h	46;"	d
GR_ATT_SOUND_STATE_DISABLED	interfaces/graphic.h	49;"	d
GR_ATT_SOUND_STATE_OPENAL	interfaces/graphic.h	48;"	d
GR_ATT_SOUND_STATE_PLIB	interfaces/graphic.h	47;"	d
GR_ATT_SOUND_VOLUME	interfaces/graphic.h	50;"	d
GR_ATT_TEXTURECOMPRESSION	interfaces/graphic.h	53;"	d
GR_ATT_TEXTURECOMPRESSION_DISABLED	interfaces/graphic.h	55;"	d
GR_ATT_TEXTURECOMPRESSION_ENABLED	interfaces/graphic.h	54;"	d
GR_ATT_TEXTURESIZE	interfaces/graphic.h	61;"	d
GR_ATT_WHEELRENDERING	interfaces/graphic.h	57;"	d
GR_ATT_WHEELRENDERING_DETAILED	interfaces/graphic.h	58;"	d
GR_ATT_WHEELRENDERING_SIMPLE	interfaces/graphic.h	59;"	d
GR_NB_MAX_SCREEN	modules/graphic/ssggraph/grmain.h	72;"	d
GR_PARAM_FILE	interfaces/graphic.h	42;"	d
GR_SCT_DISPMODE	interfaces/graphic.h	63;"	d
GR_SCT_GLFEATURES	interfaces/graphic.h	52;"	d
GR_SCT_GRAPHIC	interfaces/graphic.h	82;"	d
GR_SCT_PLAYABLE_DOV	interfaces/graphic.h	96;"	d
GR_SCT_SOUND	interfaces/graphic.h	45;"	d
GR_SCT_TVDIR	interfaces/graphic.h	77;"	d
GR_SHADOW_POINTS	modules/graphic/ssggraph/grcar.cpp	/^static const int GR_SHADOW_POINTS = 6;$/;"	v	file:
GR_SOUND_PARM_CFG	interfaces/graphic.h	44;"	d
GR_SPLIT_ADD	modules/graphic/ssggraph/grmain.h	69;"	d
GR_SPLIT_REM	modules/graphic/ssggraph/grmain.h	70;"	d
GR_VIEW_PART	interfaces/graphic.h	119;"	d
GR_VIEW_STD	interfaces/graphic.h	118;"	d
GR_ZOOM_DFLT	modules/graphic/ssggraph/grcam.h	271;"	d
GR_ZOOM_IN	modules/graphic/ssggraph/grcam.h	267;"	d
GR_ZOOM_MAX	modules/graphic/ssggraph/grcam.h	269;"	d
GR_ZOOM_MIN	modules/graphic/ssggraph/grcam.h	270;"	d
GR_ZOOM_OUT	modules/graphic/ssggraph/grcam.h	268;"	d
GameModeDepth	libs/tgfclient/fg_gm.cpp	/^	int			GameModeDepth;      \/\/ The pixel depth for game mode.$/;"	m	struct:tagSFG_State	file:
GameModeRefresh	libs/tgfclient/fg_gm.cpp	/^	int			GameModeRefresh;	\/\/ The refresh rate for game mode.$/;"	m	struct:tagSFG_State	file:
GameModeSize	libs/tgfclient/fg_gm.cpp	/^	SFG_XYUse	GameModeSize;       \/\/ The game mode screen's dimensions.$/;"	m	struct:tagSFG_State	file:
Gear	drivers/human/human.h	/^	tdble	Gear;$/;"	m	struct:HumanContext
Gear	drivers/inferno2/inferno2.cpp	/^static tdble	Gear;$/;"	v	file:
GenCarsInfo	libs/confscreens/driverconfig.cpp	/^GenCarsInfo(void)$/;"	f	file:
GenDrvList	libs/confscreens/driverconfig.cpp	/^GenDrvList(void)$/;"	f	file:
GenRelief	tools/trackgen/relief.cpp	/^GenRelief(int interior)$/;"	f
Generate	tools/trackgen/maintrackgen.cpp	/^static void Generate(void)$/;"	f	file:
GenerateMesh	tools/trackgen/easymesh.cpp	/^GenerateMesh(tTrack *Track, int rightside, int reverse, int exterior)$/;"	f	file:
GenerateObjects	tools/trackgen/objects.cpp	/^GenerateObjects(tTrack *track, void *TrackHandle, void *CfgHandle, FILE *save_fd, char *meshFile)$/;"	f
GenerateTerrain	tools/trackgen/easymesh.cpp	/^GenerateTerrain(tTrack *track, void *TrackHandle, char *outfile, FILE *AllFd, int noElevation)$/;"	f
GenerateTrack	tools/trackgen/track.cpp	/^GenerateTrack(tTrack *Track, void *TrackHandle, char *outFile, FILE *AllFd, int bump, int raceline)$/;"	f
Get	modules/simu/simuv3/Options.h	/^    T Get (const char* name)$/;"	f	class:OptionList
Get	modules/simu/simuv3/Options.h	/^    virtual T Get()$/;"	f	class:Option
Get	modules/simu/simuv3/Options.h	/^    void Get (const char* name, T& return_value)$/;"	f	class:OptionList
Get	modules/simu/simuv3/SimulationOptions.h	/^	T Get (char* name)$/;"	f	class:SimulationOptions
GetDataDir	libs/tgf/tgf.cpp	/^char * GetDataDir(void)$/;"	f
GetDistToStart	drivers/inferno2/common.cpp	/^GetDistToStart(tCarElt *car)$/;"	f
GetDistToStart	modules/graphic/ssggraph/grcam.cpp	/^GetDistToStart(tCarElt *car)$/;"	f	file:
GetElevation	tools/trackgen/elevation.cpp	/^tdble GetElevation(tdble x, tdble y, tdble z)$/;"	f
GetFilename	tools/trackgen/util.cpp	/^GetFilename(const char *filename, const char *filepath, char *buf, const int BUFSIZE)$/;"	f
GetFrictionDm	drivers/olethros/learn.h	/^	float GetFrictionDm(tTrackSeg* s) {return (dm + segdm[s->id]);}$/;"	f	class:olethros::SegLearn
GetFrictionDm2	drivers/olethros/learn.h	/^	float GetFrictionDm2(tTrackSeg* s) {return (dm2 + segdm2[s->id]);}$/;"	f	class:olethros::SegLearn
GetFrictionDm3	drivers/olethros/learn.h	/^	float GetFrictionDm3(tTrackSeg* s) {return (dm3 + segdm3[s->id]);}$/;"	f	class:olethros::SegLearn
GetItem	libs/learning/List.cpp	/^LISTITEM* GetItem (LIST* list, int n)$/;"	f
GetLibDir	libs/tgf/tgf.cpp	/^char * GetLibDir(void)$/;"	f
GetLocalDir	libs/tgf/tgf.cpp	/^char * GetLocalDir(void)$/;"	f
GetNextAxis	libs/confscreens/mouseconfig.cpp	/^GetNextAxis(void)$/;"	f	file:
GetNextItem	libs/learning/List.cpp	/^LISTITEM* GetNextItem(LISTITEM* ptr)$/;"	f
GetNormalToLine	drivers/olethros/geometry.cpp	/^Vector* GetNormalToLine(Vector* R)$/;"	f
GetObjectsNb	tools/trackgen/objects.cpp	/^GetObjectsNb(void *TrackHandle)$/;"	f
GetPoint	drivers/olethros/Trajectory.cpp	/^Point Trajectory::GetPoint (Segment& s, float w)$/;"	f	class:Trajectory
GetPrevItem	libs/learning/List.cpp	/^LISTITEM* GetPrevItem(LISTITEM* ptr)$/;"	f
GetRInverse	tools/trackgen/raceline.cpp	/^static double GetRInverse(int prev, vec2d p, int next)$/;"	f	file:
GetSingleTextureMode	libs/tgf/tgf.cpp	/^int GetSingleTextureMode (void)$/;"	f
GetTrackHeader	modules/track/track.cpp	/^GetTrackHeader(void *TrackHandle)$/;"	f	file:
GetTrackOrientation	tools/trackgen/easymesh.cpp	/^GetTrackOrientation(tTrack *track)$/;"	f	file:
GfCreateDir	libs/tgf/tgf.cpp	/^int GfCreateDir(char *path)$/;"	f
GfCreateDirForFile	libs/tgf/tgf.cpp	/^int GfCreateDirForFile(const char *filenameandpath)$/;"	f
GfCtrlType	libs/tgfclient/tgfclient.h	/^} GfCtrlType;$/;"	t	typeref:enum:__anon132
GfDirFreeList	libs/tgf/directory.cpp	/^void GfDirFreeList(tFList *list, tfDirfreeUserData freeUserData, bool freename, bool freedispname)$/;"	f
GfDirGetList	libs/tgf/directory.cpp	/^tFList * GfDirGetList(const char *dir)$/;"	f
GfDirGetListFiltered	libs/tgf/directory.cpp	/^tFList * GfDirGetListFiltered(const char *dir, const char *suffix)$/;"	f
GfError	libs/tgf/tgf.h	355;"	d
GfFatal	libs/tgf/tgf.h	/^GfFatal(const char *fmt, ...)$/;"	f
GfFatal	libs/tgf/tgf.h	337;"	d
GfHashAddBuf	libs/tgf/hash.cpp	/^void GfHashAddBuf(void *hash, char *key, size_t sz, void *data)$/;"	f
GfHashAddStr	libs/tgf/hash.cpp	/^int GfHashAddStr(void *hash, const char *key, const void *data)$/;"	f
GfHashCreate	libs/tgf/hash.cpp	/^void *GfHashCreate(int type)$/;"	f
GfHashGetBuf	libs/tgf/hash.cpp	/^const void *GfHashGetBuf(void *hash, char *key, size_t sz)$/;"	f
GfHashGetFirst	libs/tgf/hash.cpp	/^const void * GfHashGetFirst(void *hash)$/;"	f
GfHashGetNext	libs/tgf/hash.cpp	/^const void *GfHashGetNext(void *hash)$/;"	f
GfHashGetStr	libs/tgf/hash.cpp	/^const void *GfHashGetStr(void *hash, const char *key)$/;"	f
GfHashRelease	libs/tgf/hash.cpp	/^void GfHashRelease(void *hash, tfHashFree hashFree)$/;"	f
GfHashRemBuf	libs/tgf/hash.cpp	/^const void *GfHashRemBuf(void *hash, char *key, size_t sz)$/;"	f
GfHashRemStr	libs/tgf/hash.cpp	/^const void *GfHashRemStr(void *hash, char *key)$/;"	f
GfImgFreeTex	libs/tgfclient/img.cpp	/^GfImgFreeTex(GLuint tex)$/;"	f
GfImgReadPng	libs/tgfclient/img.cpp	/^GfImgReadPng(const char *filename, int *widthp, int *heightp, float screen_gamma)$/;"	f
GfImgReadTex	libs/tgfclient/img.cpp	/^GfImgReadTex(char *filename)$/;"	f
GfImgWritePng	libs/tgfclient/img.cpp	/^GfImgWritePng(unsigned char *img, const char *filename, int width, int height)$/;"	f
GfInit	libs/tgf/tgf.cpp	/^void GfInit(void)$/;"	f
GfInitClient	libs/tgfclient/tgfclient.cpp	/^GfInitClient(void)$/;"	f
GfJoyAxis	libs/tgfclient/control.cpp	/^static const char *GfJoyAxis[] = {$/;"	v	file:
GfJoyBtn	libs/tgfclient/control.cpp	/^static const char *GfJoyBtn[] = {$/;"	v	file:
GfKey	libs/tgfclient/control.cpp	/^static tgfKeyBinding GfKey[] = {$/;"	v	file:
GfModFreeInfoList	libs/tgf/module.cpp	/^GfModFreeInfoList(tModList **modlist)$/;"	f
GfModInfo	libs/tgf/module.cpp	/^GfModInfo(unsigned int gfid, char *dllname, tModList **modlist)$/;"	f
GfModInfoDir	libs/tgf/module.cpp	/^GfModInfoDir(unsigned int gfid, char *dir, int level, tModList **modlist)$/;"	f
GfModLoad	libs/tgf/module.cpp	/^GfModLoad(unsigned int gfid, char *dllname, tModList **modlist)$/;"	f
GfModLoadDir	libs/tgf/module.cpp	/^GfModLoadDir(unsigned int gfid, char *dir, tModList **modlist)$/;"	f
GfModUnloadList	libs/tgf/module.cpp	/^GfModUnloadList(tModList **modlist)$/;"	f
GfMouseAxis	libs/tgfclient/control.cpp	/^static const char *GfMouseAxis[] = {"MOUSE_LEFT", "MOUSE_RIGHT", "MOUSE_UP", "MOUSE_DOWN"};$/;"	v	file:
GfMouseBtn	libs/tgfclient/control.cpp	/^static const char *GfMouseBtn[] = {"MOUSE_LEFT_BTN", "MOUSE_MIDDLE_BTN", "MOUSE_RIGHT_BTN"}; \/* glut order *\/$/;"	v	file:
GfNearestPow2	libs/tgf/tgf.cpp	/^int GfNearestPow2 (int x)$/;"	f
GfOs	libs/tgf/os.cpp	/^tGfOs GfOs = {0};$/;"	v
GfOut	libs/tgf/tgf.h	/^GfOut(const char *fmt, ...)$/;"	f
GfOut	libs/tgf/tgf.h	377;"	d
GfParmCheckHandle	libs/tgf/params.cpp	/^int GfParmCheckHandle(void *ref, void *tgt) {$/;"	f
GfParmClean	libs/tgf/params.cpp	/^void GfParmClean(void *parmHandle) {$/;"	f
GfParmCreateDirectory	libs/tgf/params.cpp	/^int GfParmCreateDirectory(const char *file, void *parmHandle) {$/;"	f
GfParmGetCurNum	libs/tgf/params.cpp	/^tdble GfParmGetCurNum(void *handle, const char *path, const char *key,$/;"	f
GfParmGetCurStr	libs/tgf/params.cpp	/^const char* GfParmGetCurStr(void *handle, const char *path, const char *key,$/;"	f
GfParmGetEltNb	libs/tgf/params.cpp	/^int GfParmGetEltNb(void *handle, const char *path) {$/;"	f
GfParmGetFileName	libs/tgf/params.cpp	/^char* GfParmGetFileName(void *handle) {$/;"	f
GfParmGetName	libs/tgf/params.cpp	/^char* GfParmGetName(void *handle) {$/;"	f
GfParmGetNum	libs/tgf/params.cpp	/^tdble GfParmGetNum(void *handle, const char *path, const char *key,$/;"	f
GfParmGetNumBoundaries	libs/tgf/params.cpp	/^int GfParmGetNumBoundaries(void *handle, const char *path, const char *key,$/;"	f
GfParmGetStr	libs/tgf/params.cpp	/^const char* GfParmGetStr(void *parmHandle, const char *path, const char *key,$/;"	f
GfParmInit	libs/tgf/params.cpp	/^void GfParmInit(void) {$/;"	f
GfParmListClean	libs/tgf/params.cpp	/^int GfParmListClean(void *handle, const char *path) {$/;"	f
GfParmListGetCurEltName	libs/tgf/params.cpp	/^char* GfParmListGetCurEltName(void *handle, const char *path) {$/;"	f
GfParmListSeekFirst	libs/tgf/params.cpp	/^int GfParmListSeekFirst(void *handle, const char *path) {$/;"	f
GfParmListSeekNext	libs/tgf/params.cpp	/^int GfParmListSeekNext(void *handle, const char *path) {$/;"	f
GfParmMergeHandles	libs/tgf/params.cpp	/^void *GfParmMergeHandles(void *ref, void *tgt, int mode) {$/;"	f
GfParmReadBuf	libs/tgf/params.cpp	/^void* GfParmReadBuf(char *buffer) {$/;"	f
GfParmReadFile	libs/tgf/params.cpp	/^void* GfParmReadFile(const char *file, int mode) {$/;"	f
GfParmReleaseHandle	libs/tgf/params.cpp	/^void GfParmReleaseHandle(void *parmHandle) {$/;"	f
GfParmRemove	libs/tgf/params.cpp	/^void GfParmRemove(void *parmHandle, char *sectionName, char *paramName) {$/;"	f
GfParmSI2Unit	libs/tgf/params.cpp	/^tdble GfParmSI2Unit(const char *unit, tdble val) {$/;"	f
GfParmSetCurNum	libs/tgf/params.cpp	/^int GfParmSetCurNum(void *handle, const char *path, const char *key,$/;"	f
GfParmSetCurStr	libs/tgf/params.cpp	/^int GfParmSetCurStr(void *handle, const char *path, const char *key,$/;"	f
GfParmSetDTD	libs/tgf/params.cpp	/^void GfParmSetDTD(void *parmHandle, char *dtd, char*header) {$/;"	f
GfParmSetNum	libs/tgf/params.cpp	/^int GfParmSetNum(void *handle, const char *path, const char *key,$/;"	f
GfParmSetNumEx	libs/tgf/params.cpp	/^int GfParmSetNumEx(void *handle, const char *path, const char *key,$/;"	f
GfParmSetStr	libs/tgf/params.cpp	/^int GfParmSetStr(void *handle, const char *path, const char *key,$/;"	f
GfParmShutdown	libs/tgf/params.cpp	/^void GfParmShutdown(void) {$/;"	f
GfParmUnit2SI	libs/tgf/params.cpp	/^tdble GfParmUnit2SI(const char *unit, tdble val) {$/;"	f
GfParmWriteBuf	libs/tgf/params.cpp	/^int GfParmWriteBuf(void *handle, char *buf, int size) {$/;"	f
GfParmWriteFile	libs/tgf/params.cpp	/^int GfParmWriteFile(const char *file, void *parmHandle, const char *name) {$/;"	f
GfSKey	libs/tgfclient/control.cpp	/^static tgfKeyBinding GfSKey[] = {$/;"	v	file:
GfScrCenX	libs/tgfclient/screen.cpp	/^static int GfScrCenX;$/;"	v	file:
GfScrCenY	libs/tgfclient/screen.cpp	/^static int GfScrCenY;$/;"	v	file:
GfScrGetSize	libs/tgfclient/screen.cpp	/^void GfScrGetSize(int *scrw, int *scrh, int *vieww, int *viewh)$/;"	f
GfScrHeight	libs/tgfclient/screen.cpp	/^static int GfScrHeight;$/;"	v	file:
GfScrInit	libs/tgfclient/screen.cpp	/^void GfScrInit(int argc, char *argv[])$/;"	f
GfScrMenuInit	libs/tgfclient/screen.cpp	/^GfScrMenuInit(void *precMenu)$/;"	f
GfScrReinit	libs/tgfclient/screen.cpp	/^GfScrReinit(void * \/* dummy *\/)$/;"	f
GfScrShutdown	libs/tgfclient/screen.cpp	/^void GfScrShutdown(void)$/;"	f
GfScrWidth	libs/tgfclient/screen.cpp	/^static int GfScrWidth;$/;"	v	file:
GfTime2Str	libs/tgf/tgf.cpp	/^void GfTime2Str(char *result, int resultSize, tdble sec, int sgn)$/;"	f
GfTimeClock	libs/tgf/os.cpp	/^GfTimeClock(void)$/;"	f
GfTrace	libs/tgf/tgf.h	336;"	d
GfTrace	libs/tgf/tgf.h	340;"	d
GfViewHeight	libs/tgfclient/screen.cpp	/^static int GfViewHeight;$/;"	v	file:
GfViewWidth	libs/tgfclient/screen.cpp	/^static int GfViewWidth;$/;"	v	file:
GfctrlGetDefaultSection	libs/tgfclient/control.cpp	/^const char *GfctrlGetDefaultSection(GfCtrlType type)$/;"	f
GfctrlGetNameByRef	libs/tgfclient/control.cpp	/^const char *GfctrlGetNameByRef(GfCtrlType type, int index)$/;"	f
GfctrlGetRefByName	libs/tgfclient/control.cpp	/^void GfctrlGetRefByName(const char *name, tCtrlRef* ref)$/;"	f
GfctrlIsEventBlacklisted	libs/tgfclient/control.cpp	/^bool GfctrlIsEventBlacklisted(void *parmHandle, const char* driversSection, const char* event)$/;"	f
GfctrlJoyGetCurrent	libs/tgfclient/control.cpp	/^int GfctrlJoyGetCurrent(tCtrlJoyInfo *joyInfo)$/;"	f
GfctrlJoyInit	libs/tgfclient/control.cpp	/^tCtrlJoyInfo *GfctrlJoyInit(void)$/;"	f
GfctrlJoyIsPresent	libs/tgfclient/control.cpp	/^int GfctrlJoyIsPresent(void)$/;"	f
GfctrlJoyRelease	libs/tgfclient/control.cpp	/^void GfctrlJoyRelease(tCtrlJoyInfo *joyInfo)$/;"	f
GfctrlMouseCenter	libs/tgfclient/control.cpp	/^void GfctrlMouseCenter(void)$/;"	f
GfctrlMouseGetCurrent	libs/tgfclient/control.cpp	/^int GfctrlMouseGetCurrent(tCtrlMouseInfo *mouseInfo)$/;"	f
GfctrlMouseInit	libs/tgfclient/control.cpp	/^tCtrlMouseInfo *GfctrlMouseInit(void)$/;"	f
GfctrlMouseInitCenter	libs/tgfclient/control.cpp	/^void GfctrlMouseInitCenter(void)$/;"	f
GfctrlMouseRelease	libs/tgfclient/control.cpp	/^void GfctrlMouseRelease(tCtrlMouseInfo *mouseInfo)$/;"	f
GfuiAddKey	libs/tgfclient/gui.cpp	/^GfuiAddKey(void *scr, unsigned char key, const char *descr, void *userData, tfuiCallback onKeyPressed, tfuiCallback onKeyReleased)$/;"	f
GfuiAddSKey	libs/tgfclient/gui.cpp	/^GfuiAddSKey(void *scr, int key, const char *descr, void *userData, tfuiCallback onKeyPressed, tfuiCallback onKeyReleased)$/;"	f
GfuiButtonCreate	libs/tgfclient/guibutton.cpp	/^GfuiButtonCreate(void *scr, const char *text, int font, int x, int y, int width, int align, int mouse,$/;"	f
GfuiButtonGetFocused	libs/tgfclient/guibutton.cpp	/^GfuiButtonGetFocused(void)$/;"	f
GfuiButtonSetText	libs/tgfclient/guibutton.cpp	/^GfuiButtonSetText(void *scr, int id, const char *text)$/;"	f
GfuiButtonStateCreate	libs/tgfclient/guibutton.cpp	/^GfuiButtonStateCreate(void *scr, const char *text, int font, int x, int y, int width, int align, int mouse,$/;"	f
GfuiColor	libs/tgfclient/gui.cpp	/^float		GfuiColor[GFUI_COLORNB][4];$/;"	v
GfuiDisplay	libs/tgfclient/gui.cpp	/^GfuiDisplay(void)$/;"	f
GfuiDisplayNothing	libs/tgfclient/gui.cpp	/^GfuiDisplayNothing(void)$/;"	f
GfuiDraw	libs/tgfclient/guiobject.cpp	/^GfuiDraw(tGfuiObject *obj)$/;"	f
GfuiDrawCursor	libs/tgfclient/guiobject.cpp	/^GfuiDrawCursor()$/;"	f
GfuiEditboxCreate	libs/tgfclient/guiedit.cpp	/^GfuiEditboxCreate(void *scr, const char *text, int font, int x, int y, int width, int maxlen,$/;"	f
GfuiEditboxGetFocused	libs/tgfclient/guiedit.cpp	/^GfuiEditboxGetFocused(void)$/;"	f
GfuiEditboxGetString	libs/tgfclient/guiedit.cpp	/^GfuiEditboxGetString(void *scr, int id)$/;"	f
GfuiEditboxSetString	libs/tgfclient/guiedit.cpp	/^void GfuiEditboxSetString(void *scr, int id, const char *text)$/;"	f
GfuiEnable	libs/tgfclient/guiobject.cpp	/^GfuiEnable(void *scr, int id, int flag)$/;"	f
GfuiFontClass	libs/tgfclient/guifont.cpp	/^GfuiFontClass::GfuiFontClass(char *FileName)$/;"	f	class:GfuiFontClass
GfuiFontClass	libs/tgfclient/guifont.h	/^class GfuiFontClass$/;"	c
GfuiFontHeight	libs/tgfclient/guiobject.cpp	/^int GfuiFontHeight(int font)$/;"	f
GfuiFontWidth	libs/tgfclient/guiobject.cpp	/^int GfuiFontWidth(int font, const char *text)$/;"	f
GfuiGlutExtensionSupported	libs/tgfclient/screen.cpp	/^int GfuiGlutExtensionSupported(const char *str)$/;"	f
GfuiGrButtonCreate	libs/tgfclient/guibutton.cpp	/^GfuiGrButtonCreate(void *scr, const char *disabled, const char *enabled, const char *focused, const char *pushed,$/;"	f
GfuiHelpScreen	libs/tgfclient/guihelp.cpp	/^GfuiHelpScreen(void *prevScreen)$/;"	f
GfuiHookCreate	libs/tgfclient/gui.cpp	/^GfuiHookCreate(void *userDataOnActivate, tfuiCallback onActivate)$/;"	f
GfuiHookRelease	libs/tgfclient/gui.cpp	/^GfuiHookRelease(void *hook)$/;"	f
GfuiIdle	libs/tgfclient/gui.cpp	/^GfuiIdle(void)$/;"	f
GfuiKey	libs/tgfclient/gui.h	/^typedef struct GfuiKey$/;"	s
GfuiKeyEventRegister	libs/tgfclient/gui.cpp	/^GfuiKeyEventRegister(void *scr, tfuiKeyCallback onKeyAction)$/;"	f
GfuiKeyEventRegisterCurrent	libs/tgfclient/gui.cpp	/^GfuiKeyEventRegisterCurrent(tfuiKeyCallback onKeyAction)$/;"	f
GfuiLabelCreate	libs/tgfclient/guilabel.cpp	/^GfuiLabelCreate(void *scr, const char *text, int font, int x, int y, int align, int maxlen)$/;"	f
GfuiLabelCreateEx	libs/tgfclient/guilabel.cpp	/^GfuiLabelCreateEx(void *scr, const char *text, float *fgColor, int font, int x, int y, int align, int maxlen)$/;"	f
GfuiLabelSetColor	libs/tgfclient/guilabel.cpp	/^GfuiLabelSetColor(void *scr, int id, float *color)$/;"	f
GfuiLabelSetText	libs/tgfclient/guilabel.cpp	/^GfuiLabelSetText(void *scr, int id, const char *text)$/;"	f
GfuiLeanButtonCreate	libs/tgfclient/guibutton.cpp	/^int GfuiLeanButtonCreate(void *scr, const char *text, int font, int x, int y, int width, int align, int mouse,$/;"	f
GfuiListElement	libs/tgfclient/gui.h	/^typedef struct GfuiListElement$/;"	s
GfuiMenuBackQuitButtonCreate	libs/tgfclient/guimenu.cpp	/^GfuiMenuBackQuitButtonCreate(void *scr, const char *text, const char *tip, void *userdata, tfuiCallback onpush)$/;"	f
GfuiMenuButtonCreate	libs/tgfclient/guimenu.cpp	/^GfuiMenuButtonCreate(void *scr, const char *text, const char *tip, void *userdata, tfuiCallback onpush)$/;"	f
GfuiMenuDefaultKeysAdd	libs/tgfclient/guimenu.cpp	/^GfuiMenuDefaultKeysAdd(void *scr)$/;"	f
GfuiMenuScreenCreate	libs/tgfclient/guimenu.cpp	/^GfuiMenuScreenCreate(const char *title)$/;"	f
GfuiMouse	libs/tgfclient/gui.cpp	/^tMouseInfo	GfuiMouse;$/;"	v
GfuiMouseHW	libs/tgfclient/gui.cpp	/^int		GfuiMouseHW = 0;$/;"	v
GfuiMouseHide	libs/tgfclient/gui.cpp	/^GfuiMouseHide(void)$/;"	f
GfuiMouseInfo	libs/tgfclient/gui.cpp	/^tMouseInfo *GfuiMouseInfo(void)$/;"	f
GfuiMouseSetHWPresent	libs/tgfclient/gui.cpp	/^GfuiMouseSetHWPresent(void)$/;"	f
GfuiMouseSetPos	libs/tgfclient/gui.cpp	/^void GfuiMouseSetPos(int x, int y)$/;"	f
GfuiMouseShow	libs/tgfclient/gui.cpp	/^GfuiMouseShow(void)$/;"	f
GfuiMouseVisible	libs/tgfclient/gui.cpp	/^static int	GfuiMouseVisible = 1;$/;"	v	file:
GfuiObject	libs/tgfclient/gui.h	/^typedef struct GfuiObject$/;"	s
GfuiPrintString	libs/tgfclient/guiobject.cpp	/^void GfuiPrintString(const char *text, float *fgColor, int font, int x, int y, int align)$/;"	f
GfuiRegisterKey	libs/tgfclient/gui.cpp	/^GfuiRegisterKey(unsigned char key, char *descr, void *userData, tfuiCallback onKeyPressed, tfuiCallback onKeyReleased)$/;"	f
GfuiSKeyEventRegister	libs/tgfclient/gui.cpp	/^GfuiSKeyEventRegister(void *scr, tfuiSKeyCallback onSKeyAction)$/;"	f
GfuiSKeyEventRegisterCurrent	libs/tgfclient/gui.cpp	/^GfuiSKeyEventRegisterCurrent(tfuiSKeyCallback onSKeyAction)$/;"	f
GfuiScreen	libs/tgfclient/gui.cpp	/^tGfuiScreen	*GfuiScreen;	\/* current screen *\/$/;"	v
GfuiScreenActivate	libs/tgfclient/gui.cpp	/^GfuiScreenActivate(void *screen)$/;"	f
GfuiScreenAddBgImg	libs/tgfclient/gui.cpp	/^GfuiScreenAddBgImg(void *scr, const char *filename)$/;"	f
GfuiScreenCreate	libs/tgfclient/gui.cpp	/^GfuiScreenCreate(void)$/;"	f
GfuiScreenCreateEx	libs/tgfclient/gui.cpp	/^GfuiScreenCreateEx(float *bgColor,$/;"	f
GfuiScreenDeactivate	libs/tgfclient/gui.cpp	/^GfuiScreenDeactivate(void)$/;"	f
GfuiScreenIsActive	libs/tgfclient/gui.cpp	/^GfuiScreenIsActive(void *screen)$/;"	f
GfuiScreenRelease	libs/tgfclient/gui.cpp	/^GfuiScreenRelease(void *scr)$/;"	f
GfuiScreenReplace	libs/tgfclient/gui.cpp	/^GfuiScreenReplace(void *screen)$/;"	f
GfuiScreenShot	libs/tgfclient/gui.cpp	/^GfuiScreenShot(void * \/* notused *\/)$/;"	f
GfuiScrollBarCreate	libs/tgfclient/guiscrollbar.cpp	/^GfuiScrollBarCreate(void *scr, int x, int y, int align, int width, int orientation,$/;"	f
GfuiScrollBarPosGet	libs/tgfclient/guiscrollbar.cpp	/^GfuiScrollBarPosGet(void *scr, int id)$/;"	f
GfuiScrollBarPosSet	libs/tgfclient/guiscrollbar.cpp	/^GfuiScrollBarPosSet(void *scr, int id, int min, int max, int len, int start)$/;"	f
GfuiScrollListCreate	libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListCreate(void *scr, int font, int x, int y, int align, int width, int height,$/;"	f
GfuiScrollListExtractElement	libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListExtractElement(void *scr, int Id, int index, void **userData)$/;"	f
GfuiScrollListExtractSelectedElement	libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListExtractSelectedElement(void *scr, int Id, void **userData)$/;"	f
GfuiScrollListGetElement	libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListGetElement(void *scr, int Id, int index, void **userData)$/;"	f
GfuiScrollListGetSelectedElement	libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListGetSelectedElement(void *scr, int Id, void **userData)$/;"	f
GfuiScrollListInsertElement	libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListInsertElement(void *scr, int Id, char *element, int index, void *userData)$/;"	f
GfuiScrollListMoveSelectedElement	libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListMoveSelectedElement(void *scr, int Id, int delta)$/;"	f
GfuiStaticImageCreate	libs/tgfclient/guiimage.cpp	/^int GfuiStaticImageCreate(void *scr, int x, int y, int w, int h, char *name)$/;"	f
GfuiStaticImageSet	libs/tgfclient/guiimage.cpp	/^void GfuiStaticImageSet(void *scr, int id, char *name)$/;"	f
GfuiTipCreate	libs/tgfclient/guilabel.cpp	/^GfuiTipCreate(void *scr, const char *text, int maxlen)$/;"	f
GfuiTitleCreate	libs/tgfclient/guilabel.cpp	/^GfuiTitleCreate(void *scr, const char *text, int maxlen)$/;"	f
GfuiUnSelectCurrent	libs/tgfclient/guiobject.cpp	/^GfuiUnSelectCurrent(void)$/;"	f
GfuiVisibilitySet	libs/tgfclient/guiobject.cpp	/^GfuiVisibilitySet(void *scr, int id, int visible)$/;"	f
GlobalStepLen	modules/track/track3.cpp	/^static tdble	GlobalStepLen = 0;$/;"	v	file:
GlobalStepLen	modules/track/track4.cpp	/^static tdble	GlobalStepLen = 0;$/;"	v	file:
Gmax	drivers/inferno2/inferno2.cpp	/^tdble Gmax;$/;"	v
GraphMenuInit	libs/confscreens/graphconfig.cpp	/^void *GraphMenuInit(void *prevMenu)$/;"	f
GridStep	tools/trackgen/easymesh.cpp	/^static tdble 	GridStep;$/;"	v	file:
GridStep	tools/trackgen/maintrackgen.cpp	/^float GridStep = 40.0;$/;"	v
GridStep	tools/trackgen/relief.cpp	/^static tdble	GridStep;$/;"	v	file:
Group	tools/trackgen/objects.cpp	/^Group(tTrack *track, void *TrackHandle, ssgEntity *ent)$/;"	f	file:
GroupNb	tools/trackgen/easymesh.cpp	/^static int		GroupNb;$/;"	v	file:
GroupNb	tools/trackgen/objects.cpp	/^static int		GroupNb;$/;"	v	file:
GroupNb	tools/trackgen/track.cpp	/^static int GroupNb;$/;"	v	file:
GroupRoot	tools/trackgen/objects.cpp	/^static ssgRoot	*GroupRoot = NULL;$/;"	v	file:
GroupSize	tools/trackgen/easymesh.cpp	/^static float		GroupSize;$/;"	v	file:
GroupSize	tools/trackgen/objects.cpp	/^static float		GroupSize;$/;"	v	file:
Groups	tools/trackgen/easymesh.cpp	/^static struct group	*Groups;$/;"	v	typeref:struct:group	file:
Groups	tools/trackgen/objects.cpp	/^static struct group	*Groups;$/;"	v	typeref:struct:group	file:
Groups	tools/trackgen/track.cpp	/^static tGroup *Groups;$/;"	v	file:
HASH_BYTE	libs/tgf/hash.cpp	50;"	d	file:
HASH_TABLE	libs/txml/hashtable.h	/^} HASH_TABLE;$/;"	t	typeref:struct:__anon107
HASH_TABLE_ITER	libs/txml/hashtable.h	/^} HASH_TABLE_ITER;$/;"	t	typeref:struct:__anon108
HAVE_CONFIG_H	libs/client/splash.cpp	21;"	d	file:
HAVE_CONFIG_H	libs/portability/portability.h	27;"	d
HCtx	drivers/human/human.cpp	/^tHumanContext *HCtx[10] = { 0 };$/;"	v
HEADER_SIMPLE_OPENGL_IMAGE_LIBRARY	topview/SOIL.h	41;"	d
HM_ATT_ABS	interfaces/playerpref.h	106;"	d
HM_ATT_ABS_CMD	interfaces/playerpref.h	41;"	d
HM_ATT_ASR	interfaces/playerpref.h	107;"	d
HM_ATT_ASR_CMD	interfaces/playerpref.h	40;"	d
HM_ATT_AUTOREVERSE	interfaces/playerpref.h	46;"	d
HM_ATT_BRAKE	interfaces/playerpref.h	87;"	d
HM_ATT_BRAKE_DEAD	interfaces/playerpref.h	92;"	d
HM_ATT_BRAKE_MAX	interfaces/playerpref.h	89;"	d
HM_ATT_BRAKE_MIN	interfaces/playerpref.h	88;"	d
HM_ATT_BRAKE_POW	interfaces/playerpref.h	91;"	d
HM_ATT_BRAKE_SENS	interfaces/playerpref.h	90;"	d
HM_ATT_CLUTCH	interfaces/playerpref.h	94;"	d
HM_ATT_CLUTCH_DEAD	interfaces/playerpref.h	99;"	d
HM_ATT_CLUTCH_MAX	interfaces/playerpref.h	96;"	d
HM_ATT_CLUTCH_MIN	interfaces/playerpref.h	95;"	d
HM_ATT_CLUTCH_POW	interfaces/playerpref.h	98;"	d
HM_ATT_CLUTCH_SENS	interfaces/playerpref.h	97;"	d
HM_ATT_DN_SHFT	interfaces/playerpref.h	39;"	d
HM_ATT_EVENTBLACKLIST	interfaces/playerpref.h	110;"	d
HM_ATT_GEAR_1	interfaces/playerpref.h	50;"	d
HM_ATT_GEAR_2	interfaces/playerpref.h	51;"	d
HM_ATT_GEAR_3	interfaces/playerpref.h	52;"	d
HM_ATT_GEAR_4	interfaces/playerpref.h	53;"	d
HM_ATT_GEAR_5	interfaces/playerpref.h	54;"	d
HM_ATT_GEAR_6	interfaces/playerpref.h	55;"	d
HM_ATT_GEAR_N	interfaces/playerpref.h	49;"	d
HM_ATT_GEAR_R	interfaces/playerpref.h	48;"	d
HM_ATT_LEFTSTEER	interfaces/playerpref.h	68;"	d
HM_ATT_LEFTSTEER_DEAD	interfaces/playerpref.h	72;"	d
HM_ATT_LEFTSTEER_MAX	interfaces/playerpref.h	70;"	d
HM_ATT_LEFTSTEER_MIN	interfaces/playerpref.h	69;"	d
HM_ATT_LEFTSTEER_POW	interfaces/playerpref.h	71;"	d
HM_ATT_LIGHT1_CMD	interfaces/playerpref.h	43;"	d
HM_ATT_NBPITS	interfaces/playerpref.h	108;"	d
HM_ATT_REL_BUT_NEUTRAL	interfaces/playerpref.h	58;"	d
HM_ATT_RIGHTSTEER	interfaces/playerpref.h	74;"	d
HM_ATT_RIGHTSTEER_DEAD	interfaces/playerpref.h	78;"	d
HM_ATT_RIGHTSTEER_MAX	interfaces/playerpref.h	76;"	d
HM_ATT_RIGHTSTEER_MIN	interfaces/playerpref.h	75;"	d
HM_ATT_RIGHTSTEER_POW	interfaces/playerpref.h	77;"	d
HM_ATT_SEQSHFT_ALLOW_NEUTRAL	interfaces/playerpref.h	61;"	d
HM_ATT_SPDLIM_CMD	interfaces/playerpref.h	44;"	d
HM_ATT_STEER_DEAD	interfaces/playerpref.h	66;"	d
HM_ATT_STEER_POW	interfaces/playerpref.h	64;"	d
HM_ATT_STEER_SENS	interfaces/playerpref.h	63;"	d
HM_ATT_STEER_SPD	interfaces/playerpref.h	65;"	d
HM_ATT_THROTTLE	interfaces/playerpref.h	80;"	d
HM_ATT_THROTTLE_DEAD	interfaces/playerpref.h	85;"	d
HM_ATT_THROTTLE_MAX	interfaces/playerpref.h	82;"	d
HM_ATT_THROTTLE_MIN	interfaces/playerpref.h	81;"	d
HM_ATT_THROTTLE_POW	interfaces/playerpref.h	84;"	d
HM_ATT_THROTTLE_SENS	interfaces/playerpref.h	83;"	d
HM_ATT_TRANS	interfaces/playerpref.h	105;"	d
HM_ATT_UP_SHFT	interfaces/playerpref.h	38;"	d
HM_DRV_FILE	interfaces/playerpref.h	29;"	d
HM_LIST_DRV	interfaces/playerpref.h	103;"	d
HM_PREF_FILE	interfaces/playerpref.h	30;"	d
HM_SECT_DRVPREF	interfaces/playerpref.h	36;"	d
HM_SECT_JSPREF	interfaces/playerpref.h	32;"	d
HM_SECT_KEYBPREF	interfaces/playerpref.h	34;"	d
HM_SECT_MOUSEPREF	interfaces/playerpref.h	33;"	d
HM_SECT_PREF	interfaces/playerpref.h	101;"	d
HM_VAL_AUTO	interfaces/playerpref.h	112;"	d
HM_VAL_JOYSTICK	interfaces/playerpref.h	118;"	d
HM_VAL_KEYBOARD	interfaces/playerpref.h	120;"	d
HM_VAL_MANUAL	interfaces/playerpref.h	113;"	d
HM_VAL_MOUSE	interfaces/playerpref.h	119;"	d
HM_VAL_NO	interfaces/playerpref.h	116;"	d
HM_VAL_YES	interfaces/playerpref.h	115;"	d
HORIZ_MARGIN	libs/tgfclient/guibutton.cpp	323;"	d	file:
HPBUFFERARB	windows/include/GL/wglext.h	/^DECLARE_HANDLE(HPBUFFERARB);$/;"	v
HPBUFFEREXT	windows/include/GL/wglext.h	/^DECLARE_HANDLE(HPBUFFEREXT);$/;"	v
HUMAN_ATT_AMAGIC	drivers/human/human.h	50;"	d
HUMAN_ATT_FMAGIC	drivers/human/human.h	51;"	d
HUMAN_ATT_FUELPERLAP	drivers/human/human.h	52;"	d
HUMAN_ATT_PITENTRY	drivers/human/human.h	48;"	d
HUMAN_ATT_PITEXIT	drivers/human/human.h	49;"	d
HUMAN_SECT_PRIV	drivers/human/human.h	47;"	d
HashElem	libs/tgf/hash.cpp	/^typedef struct HashElem$/;"	s	file:
HashHeader	libs/tgf/hash.cpp	/^typedef struct HashHeader$/;"	s	file:
HeightSteps	tools/trackgen/maintrackgen.cpp	/^int	HeightSteps = 30;$/;"	v
HmReadPrefs	drivers/human/pref.cpp	/^void HmReadPrefs(int index) {$/;"	f
HumanContext	drivers/human/human.h	/^typedef struct HumanContext$/;"	s
I	modules/simu/simuv2/axle.h	/^    tdble	I;	\/* including differential inertia but not wheels *\/$/;"	m	struct:__anon12
I	modules/simu/simuv2/brake.h	/^    tdble	I;$/;"	m	struct:__anon7
I	modules/simu/simuv2/differential.h	/^    tdble	I;$/;"	m	struct:__anon10
I	modules/simu/simuv2/differential.h	/^    tdble	I;$/;"	m	struct:__anon9
I	modules/simu/simuv2/engine.h	/^    tdble		I;$/;"	m	struct:__anon19
I	modules/simu/simuv2/wheel.h	/^    tdble  	I;       	\/* I = inertial moment of the wheel *\/$/;"	m	struct:__anon11
I	modules/simu/simuv3/axle.h	/^    tdble	I;	\/* including differential inertia but not wheels *\/$/;"	m	struct:__anon34
I	modules/simu/simuv3/brake.h	/^    tdble	I;$/;"	m	struct:__anon29
I	modules/simu/simuv3/differential.h	/^    tdble	I;$/;"	m	struct:__anon31
I	modules/simu/simuv3/differential.h	/^    tdble	I;$/;"	m	struct:__anon32
I	modules/simu/simuv3/engine.h	/^    tdble		I;$/;"	m	struct:__anon38
I	modules/simu/simuv3/wheel.h	/^    tdble  	I;       	\/* I = inertial moment of the wheel *\/$/;"	m	struct:__anon33
I1	tools/nfs2ac/mainnfs2ac.cpp	/^    int    I1 ;$/;"	m	struct:__anon58	file:
I2	tools/nfs2ac/mainnfs2ac.cpp	/^    int    I2 ;$/;"	m	struct:__anon58	file:
I3	tools/nfs2ac/mainnfs2ac.cpp	/^    int    I3 ;$/;"	m	struct:__anon58	file:
ICHAR	libs/txml/xmlparse.c	/^typedef char ICHAR;$/;"	t	file:
ICHAR	libs/txml/xmlparse.c	/^typedef unsigned short ICHAR;$/;"	t	file:
IDENTITY	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    IDENTITY = 0x00, $/;"	e	enum:Transform::__anon14
IDX_BRAKE_POW	libs/confscreens/controlconfig.cpp	/^static const int IDX_BRAKE_POW = 5;		\/\/ Index for the list above$/;"	v	file:
IDX_LEFTSTEER_POW	libs/confscreens/controlconfig.cpp	/^static const int IDX_LEFTSTEER_POW = 1;	\/\/ Index for the list above$/;"	v	file:
INDEX	drivers/bt/driver.h	/^		int INDEX;$/;"	m	class:Driver
INDEX	drivers/damned/driver.h	/^		int INDEX;$/;"	m	class:Driver
INDEX	drivers/olethros/driver.h	/^	int INDEX;$/;"	m	class:olethros::Driver
INDEX	drivers/sparkle/driver.h	/^		int INDEX;$/;"	m	class:Driver
INFINITY_	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar INFINITY_ =      1.0e50;$/;"	v
INITSET	windows/include/vorbis/vorbisfile.h	109;"	d
INIT_ATTS_SIZE	libs/txml/xmlparse.c	60;"	d	file:
INIT_BLOCK_SIZE	libs/txml/xmlparse.c	61;"	d	file:
INIT_BUFFER_SIZE	libs/txml/xmlparse.c	62;"	d	file:
INIT_DATA_BUF_SIZE	libs/txml/xmlparse.c	59;"	d	file:
INIT_ENCODING	libs/txml/xmltok.h	/^} INIT_ENCODING;$/;"	t	typeref:struct:__anon119
INIT_MSG_LEN	libs/learning/string_utils.cpp	87;"	d	file:
INIT_SIZE	libs/txml/hashtable.c	34;"	d	file:
INIT_TAG_BUF_SIZE	libs/txml/xmlparse.c	58;"	d	file:
INSANE	drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon151
INSANE	drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon195
INSANE	drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon174
INSANE	drivers/human/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon186
INSANE	drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon160
INSANE	drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon206
INSANE	drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon167
INSERTINGROUP	tools/accc/ac3dgroup.cpp	314;"	d	file:
INSIDE	tools/trackgen/easymesh.cpp	66;"	d	file:
INSTBASE	tools/trackgen/maintrackgen.cpp	339;"	d	file:
INTEGRAL_TH_1	drivers/human/human.cpp	1992;"	d	file:
INTEGRAL_TH_2	drivers/human/human.cpp	1993;"	d	file:
INTEGRAL_TH_3	drivers/human/human.cpp	1994;"	d	file:
INTERNAL	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  enum TagType { LEAF, INTERNAL };$/;"	e	enum:BBoxNode::TagType
INVALID_CASES	libs/txml/xmltok_impl.c	1648;"	d	file:
INVALID_CASES	libs/txml/xmltok_impl.c	37;"	d	file:
INVALID_LEAD_CASE	libs/txml/xmltok_impl.c	26;"	d	file:
IN_LANE	drivers/olethros/pit.h	/^	NONE=0x0, APPROACHING, IN_LANE, PIT_EXIT$/;"	e	enum:olethros::PitState
IP_UI	drivers/human/human.cpp	69;"	d	file:
IP_UI_HANIEUM	drivers/human/human.cpp	146;"	d	file:
IS_INVALID_CHAR	libs/txml/xmltok.c	169;"	d	file:
IS_INVALID_CHAR	libs/txml/xmltok.c	189;"	d	file:
IS_INVALID_CHAR	libs/txml/xmltok.c	466;"	d	file:
IS_INVALID_CHAR	libs/txml/xmltok.c	533;"	d	file:
IS_INVALID_CHAR	libs/txml/xmltok_impl.c	23;"	d	file:
IS_NAME_CHAR	libs/txml/xmltok.c	165;"	d	file:
IS_NAME_CHAR	libs/txml/xmltok.c	185;"	d	file:
IS_NAME_CHAR	libs/txml/xmltok.c	438;"	d	file:
IS_NAME_CHAR	libs/txml/xmltok.c	462;"	d	file:
IS_NAME_CHAR	libs/txml/xmltok.c	505;"	d	file:
IS_NAME_CHAR	libs/txml/xmltok.c	529;"	d	file:
IS_NAME_CHAR_MINBPC	libs/txml/xmltok.c	172;"	d	file:
IS_NAME_CHAR_MINBPC	libs/txml/xmltok.c	186;"	d	file:
IS_NAME_CHAR_MINBPC	libs/txml/xmltok.c	439;"	d	file:
IS_NAME_CHAR_MINBPC	libs/txml/xmltok.c	463;"	d	file:
IS_NAME_CHAR_MINBPC	libs/txml/xmltok.c	506;"	d	file:
IS_NAME_CHAR_MINBPC	libs/txml/xmltok.c	530;"	d	file:
IS_NMSTRT_CHAR	libs/txml/xmltok.c	167;"	d	file:
IS_NMSTRT_CHAR	libs/txml/xmltok.c	187;"	d	file:
IS_NMSTRT_CHAR	libs/txml/xmltok.c	441;"	d	file:
IS_NMSTRT_CHAR	libs/txml/xmltok.c	464;"	d	file:
IS_NMSTRT_CHAR	libs/txml/xmltok.c	508;"	d	file:
IS_NMSTRT_CHAR	libs/txml/xmltok.c	531;"	d	file:
IS_NMSTRT_CHAR_MINBPC	libs/txml/xmltok.c	173;"	d	file:
IS_NMSTRT_CHAR_MINBPC	libs/txml/xmltok.c	188;"	d	file:
IS_NMSTRT_CHAR_MINBPC	libs/txml/xmltok.c	442;"	d	file:
IS_NMSTRT_CHAR_MINBPC	libs/txml/xmltok.c	465;"	d	file:
IS_NMSTRT_CHAR_MINBPC	libs/txml/xmltok.c	509;"	d	file:
IS_NMSTRT_CHAR_MINBPC	libs/txml/xmltok.c	532;"	d	file:
IS_RUNNING	drivers/data_list.h	/^			IS_RUNNING, 	PASSED_TIME};$/;"	e	enum:sensing_data_name
Id	libs/confscreens/controlconfig.h	/^	int Id;$/;"	m	struct:__anon122
Ideal	modules/simu/simuv3/susp.h	/^    Ideal, Simple, Wishbone$/;"	e	enum:SuspensionType
Idle	libs/confscreens/controlconfig.cpp	/^static void Idle(void)$/;"	f	file:
Idle2	libs/confscreens/joystickconfig.cpp	/^static void Idle2(void)$/;"	f	file:
Idle2	libs/confscreens/mouseconfig.cpp	/^Idle2(void)$/;"	f	file:
IdleMouseInit	libs/confscreens/mouseconfig.cpp	/^IdleMouseInit(void)$/;"	f	file:
Iinv	modules/simu/simuv2/carstruct.h	/^    t3Dd	Iinv;		\/* inverse of inertial moment along the car's 3 axis *\/$/;"	m	struct:__anon23
Iinv	modules/simu/simuv3/carstruct.h	/^    t3Dd	Iinv;		\/* inverse of inertial moment along the car's 3 axis *\/$/;"	m	struct:__anon42
ImgReadPng	misc/png2jpg/png2jpg.c	/^ImgReadPng(FILE *fp, int *widthp, int *heightp, float screen_gamma)$/;"	f
ImgSize	tools/texmapper/maintexmapper.cpp	/^int	ImgSize;$/;"	v
IndexArray	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  IndexArray() : indices(0), count(0) {}$/;"	f	class:IndexArray
IndexArray	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  IndexArray(int n) : indices(new unsigned int[n]), count(n) {}$/;"	f	class:IndexArray
IndexArray	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  IndexArray(int n, const unsigned int v[]) : $/;"	f	class:IndexArray
IndexArray	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^class IndexArray {$/;"	c
IndexBuf	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef vector<unsigned int> IndexBuf;$/;"	t	file:
IndexBuf	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^typedef vector<unsigned int> IndexBuf;$/;"	t	file:
InitFuncPt	drivers/berniw/berniw.cpp	/^static int InitFuncPt(int index, void *pt) {$/;"	f	file:
InitFuncPt	drivers/berniw2/berniw2.cpp	/^static int InitFuncPt(int index, void *pt) {$/;"	f	file:
InitFuncPt	drivers/berniw3/berniw3.cpp	/^static int InitFuncPt(int index, void *pt) {$/;"	f	file:
InitFuncPt	drivers/bt/bt.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	drivers/damned/damned.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	drivers/human/human.cpp	/^static int InitFuncPt(int index, void *pt) {$/;"	f	file:
InitFuncPt	drivers/inferno/inferno.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	drivers/inferno2/inferno2.cpp	/^InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	drivers/lliaw/lliaw.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	drivers/olethros/olethros.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	namespace:olethros
InitFuncPt	drivers/sparkle/sparkle.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	drivers/tita/tita.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitGears	drivers/inferno2/common.cpp	/^InitGears(tCarElt* car, int idx)$/;"	f
InitMultiTex	modules/graphic/ssggraph/grmain.cpp	/^bool InitMultiTex(void)$/;"	f
InitObjects	tools/trackgen/objects.cpp	/^InitObjects(tTrack *track, void *TrackHandle)$/;"	f	file:
InitScene	tools/trackgen/track.cpp	/^int InitScene(tTrack *Track, void *TrackHandle, int bump, int raceline)$/;"	f
InitSides	modules/track/track3.cpp	/^InitSides(void *TrackHandle, tTrack *theTrack)$/;"	f	file:
InputFileName	tools/accc/mainaccc.cpp	/^char	*InputFileName = NULL;$/;"	v
InputFileName	tools/texmapper/maintexmapper.cpp	/^char	*InputFileName = NULL;$/;"	v
InputWaited	libs/confscreens/controlconfig.cpp	/^static int InputWaited = 0;$/;"	v	file:
InsertInGroup	tools/trackgen/objects.cpp	/^InsertInGroup(ssgEntity *ent)$/;"	f	file:
InsertInner	tools/trackgen/objects.cpp	/^InsertInner(ssgEntity *ent)$/;"	f	file:
InstId	libs/confscreens/joystickconfig.cpp	/^static int InstId;$/;"	v	file:
InstId	libs/confscreens/mouseconfig.cpp	/^static int	InstId;$/;"	v	file:
Instructions	libs/confscreens/joystickconfig.cpp	/^static const char *Instructions[] = {$/;"	v	file:
Instructions	libs/confscreens/mouseconfig.cpp	/^static const char *Instructions[] = {$/;"	v	file:
IntEnd	libs/tgfclient/guifont.h	/^    int IntStart, IntEnd;$/;"	m	struct:__anon137
IntStart	libs/tgfclient/guifont.h	/^    int IntStart, IntEnd;$/;"	m	struct:__anon137
InteriorList	tools/trackgen/relief.cpp	/^tRingListHead	InteriorList;$/;"	v
Interpolate	tools/trackgen/raceline.cpp	/^static void Interpolate(int Step)$/;"	f	file:
Intersect	modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^typedef bool (*Intersect)(const Shape&, const Shape&, $/;"	t
IntersectLineLine	drivers/olethros/geometry.cpp	/^float IntersectLineLine(ParametricLine* A, ParametricLine* B)$/;"	f
IntersectSphereLine	drivers/olethros/geometry.cpp	/^Vector* IntersectSphereLine(ParametricLine* line, Vector* C, float r)$/;"	f
IntersectTable	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^typedef AlgoTable<Intersect> IntersectTable;$/;"	t	file:
InvBrkCmd	drivers/inferno2/inferno2.cpp	/^static tdble	InvBrkCmd;$/;"	v	file:
J	libs/learning/ann_policy.h	/^	ANN* J; \/\/\/< Evaluation network$/;"	m	class:ANN_Policy
JQs	libs/learning/ann_policy.h	/^	real* JQs; \/\/\/< Placeholder for evaluation vector (\\c separate_actions)$/;"	m	class:ANN_Policy
JS_FALSE	windows/include/plib/js.h	39;"	d
JS_NEW	windows/include/plib/js.h	26;"	d
JS_TRUE	windows/include/plib/js.h	38;"	d
J_ps_pa	libs/learning/ann_policy.h	/^	real J_ps_pa; \/\/\/< Evaluation of last action$/;"	m	class:ANN_Policy
Ja	libs/learning/ann_policy.h	/^	ANN** Ja; \/\/\/< Evaluation networks (for \\c separate_actions case)$/;"	m	class:ANN_Policy
JoyCalAutomaton	libs/confscreens/joystickconfig.cpp	/^static void JoyCalAutomaton(void)$/;"	f	file:
JoyCalButton	libs/confscreens/controlconfig.cpp	/^static int	JoyCalButton;$/;"	v	file:
JoyCalMenuInit	libs/confscreens/joystickconfig.cpp	/^void *JoyCalMenuInit(void *prevMenu, tCmdInfo *cmd, int maxcmd, void *parmhandle, const char* driversection)$/;"	f
JustCalculate	tools/trackgen/maintrackgen.cpp	/^int JustCalculate;$/;"	v
K	modules/simu/simuv2/susp.h	/^    tdble K;          \/* spring coef *\/$/;"	m	struct:__anon22
K	modules/simu/simuv3/susp.h	/^    tdble K;          \/* spring coef *\/$/;"	m	struct:__anon41
KEY	libs/txml/hashtable.h	/^typedef const char *KEY;$/;"	t
KEY	libs/txml/hashtable.h	/^typedef const wchar_t *KEY;$/;"	t
KIDS	tools/accc/ac3dload.cpp	41;"	d	file:
KMUCS_GRAPHICS_TRANSFORM_HPP	topview/transform.hpp	2;"	d
KMUCS_GRAPHICS_VEC_HPP	topview/vec.hpp	2;"	d
KMUVCL_GRAPHICS_MAT_HPP	topview/mat.hpp	2;"	d
KMUVCL_GRAPHICS_OPERATOR_HPP	topview/operator.hpp	2;"	d
KeyBarrierHeight	modules/track/track3.cpp	/^static const char *KeyBarrierHeight[2]  = {TRK_ATT_RBAH, TRK_ATT_LBAH};$/;"	v	file:
KeyBarrierStyle	modules/track/track3.cpp	/^static const char *KeyBarrierStyle[2]   = {TRK_ATT_RBAS, TRK_ATT_LBAS};$/;"	v	file:
KeyBarrierSurface	modules/track/track3.cpp	/^static const char *KeyBarrierSurface[2] = {TRK_ATT_RBASURF, TRK_ATT_LBASURF};$/;"	v	file:
KeyBarrierWidth	modules/track/track3.cpp	/^static const char *KeyBarrierWidth[2]   = {TRK_ATT_RBAW, TRK_ATT_LBAW};$/;"	v	file:
KeyBorderHeight	modules/track/track3.cpp	/^static const char *KeyBorderHeight[2]   = {TRK_ATT_RBH, TRK_ATT_LBH};$/;"	v	file:
KeyBorderStyle	modules/track/track3.cpp	/^static const char *KeyBorderStyle[2]    = {TRK_ATT_RBS, TRK_ATT_LBS};$/;"	v	file:
KeyBorderSurface	modules/track/track3.cpp	/^static const char *KeyBorderSurface[2]  = {TRK_ATT_RBSURF, TRK_ATT_LBSURF};$/;"	v	file:
KeyBorderWidth	modules/track/track3.cpp	/^static const char *KeyBorderWidth[2]    = {TRK_ATT_RBW, TRK_ATT_LBW};$/;"	v	file:
KeySideBankType	modules/track/track3.cpp	/^static const char *KeySideBankType[2]   = {TRK_ATT_RST, TRK_ATT_LST};$/;"	v	file:
KeySideEndWidth	modules/track/track3.cpp	/^static const char *KeySideEndWidth[2]   = {TRK_ATT_RSWE, TRK_ATT_LSWE};$/;"	v	file:
KeySideStartWidth	modules/track/track3.cpp	/^static const char *KeySideStartWidth[2] = {TRK_ATT_RSWS, TRK_ATT_LSWS};$/;"	v	file:
KeySideSurface	modules/track/track3.cpp	/^static const char *KeySideSurface[2]    = {TRK_ATT_RSSURF, TRK_ATT_LSSURF};$/;"	v	file:
KeySideWidth	modules/track/track3.cpp	/^static const char *KeySideWidth[2]      = {TRK_ATT_RSW, TRK_ATT_LSW};$/;"	v	file:
Kx	modules/simu/simuv2/aero.h	/^    tdble	Kx;$/;"	m	struct:__anon28
Kx	modules/simu/simuv3/aero.h	/^    tdble	Kx;$/;"	m	struct:__anon47
Kyl	interfaces/track.h	/^    tdble	Kyl;		\/* find y along x *\/$/;"	m	struct:trackSeg
Kz	modules/simu/simuv2/aero.h	/^    tdble	Kz;$/;"	m	struct:__anon28
Kz	modules/simu/simuv3/aero.h	/^    tdble	Kz;$/;"	m	struct:__anon47
Kzl	interfaces/track.h	/^    tdble Kzl;		\/* long constant *\/$/;"	m	struct:trackSeg
Kzw	interfaces/track.h	/^    tdble Kzw;		\/* width constant *\/$/;"	m	struct:trackSeg
LABEL_NUM	predictor/predict.py	/^LABEL_NUM = 3$/;"	v
LABEL_NUM	predictor/train.py	/^LABEL_NUM = 3$/;"	v
LABEL_NUM	predictor/train2.py	/^LABEL_NUM = 3$/;"	v
LAPBACKTIMEPENALTY	drivers/berniw/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	drivers/berniw/mycar.h	/^		static const double LAPBACKTIMEPENALTY; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	drivers/berniw2/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	drivers/berniw2/mycar.h	/^		static const double LAPBACKTIMEPENALTY; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	drivers/berniw3/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	drivers/berniw3/mycar.h	/^		static const double LAPBACKTIMEPENALTY; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	drivers/human/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	drivers/human/mycar.h	/^		static const double LAPBACKTIMEPENALTY; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	drivers/inferno/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0;		\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	drivers/inferno/mycar.h	/^		static const double LAPBACKTIMEPENALTY; 	\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	drivers/lliaw/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0;		\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	drivers/lliaw/mycar.h	/^		static const double LAPBACKTIMEPENALTY; 	\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	drivers/tita/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0;		\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	drivers/tita/mycar.h	/^		static const double LAPBACKTIMEPENALTY; 	\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar
LAPLACIAN	libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
LAP_BACK_TIME_PENALTY	drivers/bt/opponent.cpp	/^const float Opponent::LAP_BACK_TIME_PENALTY = -30.0f;	\/\/ [s]$/;"	m	class:Opponent	file:
LAP_BACK_TIME_PENALTY	drivers/bt/opponent.h	/^		static const float LAP_BACK_TIME_PENALTY;$/;"	m	class:Opponent
LAP_BACK_TIME_PENALTY	drivers/damned/opponent.cpp	/^const float Opponent::LAP_BACK_TIME_PENALTY = -30.0f;	\/\/ [s]$/;"	m	class:Opponent	file:
LAP_BACK_TIME_PENALTY	drivers/damned/opponent.h	/^		static const float LAP_BACK_TIME_PENALTY;$/;"	m	class:Opponent
LAP_BACK_TIME_PENALTY	drivers/olethros/opponent.cpp	/^const float Opponent::LAP_BACK_TIME_PENALTY = -30.0;	\/\/ [s]$/;"	m	class:olethros::Opponent	file:
LAP_BACK_TIME_PENALTY	drivers/olethros/opponent.h	/^		static const float LAP_BACK_TIME_PENALTY;$/;"	m	class:olethros::Opponent
LATERAL	drivers/data_list.h	/^			POS_Y, 		SPEED_ERROR,		LATERAL, 	TARGET_WHEEL_SPEED, 	WHEEL_SPEED, 	$/;"	e	enum:sensing_data_name
LDATA	windows/include/pngconf.h	472;"	d
LDATA	windows/include/pngconf.h	474;"	d
LDFLAGS	linux/Makefile	/^LDFLAGS = -rdynamic$/;"	m
LDFLAGS	tools/accc/Makefile	/^LDFLAGS		= -rdynamic$/;"	m
LDWS_BUFFER_RESET	drivers/human/human.cpp	135;"	d	file:
LDWS_CALCULATING	drivers/human/human.cpp	136;"	d	file:
LDWS_ERROR	drivers/human/human.cpp	1989;"	d	file:
LDWS_ON_LEVEL0	drivers/human/human.cpp	138;"	d	file:
LDWS_ON_LEVEL1_L	drivers/human/human.cpp	139;"	d	file:
LDWS_ON_LEVEL1_R	drivers/human/human.cpp	142;"	d	file:
LDWS_ON_LEVEL2_L	drivers/human/human.cpp	140;"	d	file:
LDWS_ON_LEVEL2_R	drivers/human/human.cpp	143;"	d	file:
LDWS_ON_LEVEL3_L	drivers/human/human.cpp	141;"	d	file:
LDWS_ON_LEVEL3_R	drivers/human/human.cpp	144;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1056;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1073;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1148;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1151;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1206;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1209;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1322;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1325;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1494;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1499;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1578;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1581;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1620;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	1625;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	367;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	376;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	798;"	d	file:
LEAD_CASE	libs/txml/xmltok_impl.c	807;"	d	file:
LEAF	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  enum TagType { LEAF, INTERNAL };$/;"	e	enum:BBoxNode::TagType
LEFT	interfaces/car.h	46;"	d
LEFT_STEER	drivers/data_list.h	/^enum actuating_data_name{ACCEL, BRAKE, LEFT_STEER, RIGHT_STEER, STEER_MODE, NUM_DUMMY};$/;"	e	enum:actuating_data_name
LENGTH_MARGIN	drivers/bt/opponent.cpp	/^const float Opponent::LENGTH_MARGIN = 3.0f;				\/\/ [m] savety margin.$/;"	m	class:Opponent	file:
LENGTH_MARGIN	drivers/bt/opponent.h	/^		static const float LENGTH_MARGIN;$/;"	m	class:Opponent
LENGTH_MARGIN	drivers/damned/opponent.cpp	/^const float Opponent::LENGTH_MARGIN = 3.0f;				\/\/ [m] savety margin.$/;"	m	class:Opponent	file:
LENGTH_MARGIN	drivers/damned/opponent.h	/^		static const float LENGTH_MARGIN;$/;"	m	class:Opponent
LENGTH_MARGIN	drivers/olethros/opponent.cpp	/^const float Opponent::LENGTH_MARGIN = 3.0;				\/\/ [m] safety margin.$/;"	m	class:olethros::Opponent	file:
LENGTH_MARGIN	drivers/olethros/opponent.h	/^		static const float LENGTH_MARGIN;$/;"	m	class:olethros::Opponent
LENGTH_MARGIN	drivers/sparkle/opponent.cpp	/^float Opponent::LENGTH_MARGIN = 2.0;	\/* [m] savety margin *\/$/;"	m	class:Opponent	file:
LENGTH_MARGIN	drivers/sparkle/opponent.h	/^		static float LENGTH_MARGIN;$/;"	m	class:Opponent
LEVEL0	modules/graphic/ssggraph/grvtxtable.h	55;"	d
LEVEL1	modules/graphic/ssggraph/grvtxtable.h	56;"	d
LEVEL2	modules/graphic/ssggraph/grvtxtable.h	57;"	d
LEVEL3	modules/graphic/ssggraph/grvtxtable.h	58;"	d
LEVELC	modules/graphic/ssggraph/grvtxtable.h	49;"	d
LEVELC2	modules/graphic/ssggraph/grvtxtable.h	51;"	d
LEVELC3	modules/graphic/ssggraph/grvtxtable.h	53;"	d
LG_STEP_MAX	tools/trackgen/track.cpp	531;"	d	file:
LIBDIR	modules/simu/simuv2/SOLID-2.0/src/Makefile	/^LIBDIR	     =	lib$/;"	m
LIBRARY	modules/simu/simuv2/SOLID-2.0/src/Makefile	/^LIBRARY      =	libsolid.a$/;"	m
LIBS	drivers/human/Makefile	/^LIBS      =  -lplibul$/;"	m
LIBS	drivers/olethros/Makefile	/^LIBS        = -L${EXPORTBASE}\/lib -llearning$/;"	m
LIBS	libs/client/Makefile	/^LIBS      =  -lplibssg -lplibsg -lplibul$/;"	m
LIBS	libs/confscreens/Makefile	/^LIBS      = -lplibjs$/;"	m
LIBS	libs/tgfclient/Makefile	/^LIBS      = -lplibjs$/;"	m
LIBS	modules/graphic/ssggraph/Makefile	/^LIBS      = -lplibsl -lplibsm -lplibsg -lplibssg -lplibul -lplibssgaux -lopenal$/;"	m
LIBS	modules/simu/simuv2/Makefile	/^LIBS		=  -lplibsg -lplibul -L${EXPORTBASE}\/lib -lsolid$/;"	m
LIBS	modules/simu/simuv3/Makefile	/^LIBS		=  -lplibsg -lplibul -L${EXPORTBASE}\/lib -lsolid$/;"	m
LIGHT_NO_TYPE	modules/graphic/ssggraph/grcarlight.h	95;"	d
LIGHT_TYPE_BRAKE	modules/graphic/ssggraph/grcarlight.h	92;"	d
LIGHT_TYPE_BRAKE2	modules/graphic/ssggraph/grcarlight.h	93;"	d
LIGHT_TYPE_FRONT	modules/graphic/ssggraph/grcarlight.h	88;"	d
LIGHT_TYPE_FRONT2	modules/graphic/ssggraph/grcarlight.h	89;"	d
LIGHT_TYPE_REAR	modules/graphic/ssggraph/grcarlight.h	90;"	d
LIGHT_TYPE_REAR2	modules/graphic/ssggraph/grcarlight.h	91;"	d
LIGHT_TYPE_REVERSE	modules/graphic/ssggraph/grcarlight.h	94;"	d
LIMITED_SLIP	interfaces/car.h	/^		NONE = 0, SPOOL = 1, FREE = 2, LIMITED_SLIP = 3, VISCOUS_COUPLER = 4$/;"	e	enum:__anon83::TDiffType
LINEAR	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    LINEAR = ROTATION | SCALING,$/;"	e	enum:Transform::__anon14
LINES	libs/raceengineclient/racegl.cpp	277;"	d	file:
LINE_SZ	libs/tgf/params.cpp	41;"	d	file:
LINUX_AL	windows/include/AL/altypes.h	12;"	d
LINUX_AL	windows/include/AL/alut.h	12;"	d
LIST	libs/learning/List.h	/^} LIST;$/;"	t	typeref:struct:List
LISTITEM	libs/learning/List.h	/^} LISTITEM;$/;"	t	typeref:struct:ListItem
LIST_H	libs/learning/List.h	13;"	d
LITTLE_ENDIAN	libs/tgfclient/guifont.cpp	31;"	d	file:
LKAS	drivers/data_list.h	/^enum flag_data_name{CC,LKAS};$/;"	e	enum:flag_data_name
LKAS	yunseok/tcp_client.cpp	/^	ACC, LKAS, TARGET_SPEED$/;"	e	enum:data	file:
LKAS	yunseok/tcp_client_2.cpp	/^	ACC, LKAS, TARGET_SPEED$/;"	e	enum:data	file:
LKAS_TRIGGER	drivers/data_list.h	/^enum sensing_data_name{CC_TRIGGER, 	LKAS_TRIGGER, 		SPEED, 		TARGET_SPEED, 		ACCEL_VALUE, $/;"	e	enum:sensing_data_name
LMAX	tools/trackgen/track.cpp	76;"	d	file:
LNorm	libs/learning/MathFunctions.cpp	/^real LNorm (real* a, real* b, int n, real p)$/;"	f
LOC	tools/accc/ac3dload.cpp	43;"	d	file:
LOCALTOOLS	libs/txml/gennmtab/Makefile	/^LOCALTOOLS = gennmtab$/;"	m
LODSelectMask	modules/graphic/ssggraph/grcar.h	/^    int			LODSelectMask[32];$/;"	m	struct:__anon5
LODSelector	modules/graphic/ssggraph/grcar.h	/^    ssgSelector		*LODSelector;$/;"	m	struct:__anon5
LODThreshold	modules/graphic/ssggraph/grcar.h	/^    float		LODThreshold[32];$/;"	m	struct:__anon5
LOG_OPTIONS	modules/simu/simuv3/Options.h	21;"	d
LOOKAHEAD	drivers/data_list.h	/^			STEER_ANGLE, 	LOOKAHEAD,		TO_LEFT, 	TO_RIGHT, 		TO_MIDDLE,$/;"	e	enum:sensing_data_name
LOOKAHEAD_CONST	drivers/bt/driver.cpp	/^const float Driver::LOOKAHEAD_CONST = 17.0f;				\/\/ [m]$/;"	m	class:Driver	file:
LOOKAHEAD_CONST	drivers/bt/driver.h	/^		static const float LOOKAHEAD_CONST;$/;"	m	class:Driver
LOOKAHEAD_CONST	drivers/damned/driver.cpp	/^const float Driver::LOOKAHEAD_CONST = 17.0f;				\/\/ [m]$/;"	m	class:Driver	file:
LOOKAHEAD_CONST	drivers/damned/driver.h	/^		static const float LOOKAHEAD_CONST;$/;"	m	class:Driver
LOOKAHEAD_CONST	drivers/olethros/driver.cpp	/^    const float Driver::LOOKAHEAD_CONST = 17.0f;					\/\/\/< [m]$/;"	m	class:olethros::Driver	file:
LOOKAHEAD_CONST	drivers/olethros/driver.h	/^	static const float LOOKAHEAD_CONST;$/;"	m	class:olethros::Driver
LOOKAHEAD_CONST	drivers/sparkle/driver.cpp	/^const float Driver::LOOKAHEAD_CONST = 17.0;					\/* [m] *\/$/;"	m	class:Driver	file:
LOOKAHEAD_CONST	drivers/sparkle/driver.h	/^		static const float LOOKAHEAD_CONST;$/;"	m	class:Driver
LOOKAHEAD_FACTOR	drivers/berniw/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/3.0; \/* [-] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	drivers/berniw/mycar.h	/^		static const double LOOKAHEAD_FACTOR;	\/* [-] *\/$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	drivers/berniw2/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/3.0; \/* [-] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	drivers/berniw2/mycar.h	/^		static const double LOOKAHEAD_FACTOR;	\/* [-] *\/$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	drivers/berniw3/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/3.0; \/* [-] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	drivers/berniw3/mycar.h	/^		static const double LOOKAHEAD_FACTOR;	\/* [-] *\/$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	drivers/bt/driver.cpp	/^const float Driver::LOOKAHEAD_FACTOR = 0.33f;				\/\/ [-]$/;"	m	class:Driver	file:
LOOKAHEAD_FACTOR	drivers/bt/driver.h	/^		static const float LOOKAHEAD_FACTOR;$/;"	m	class:Driver
LOOKAHEAD_FACTOR	drivers/damned/driver.cpp	/^const float Driver::LOOKAHEAD_FACTOR = 0.33f;				\/\/ [-]$/;"	m	class:Driver	file:
LOOKAHEAD_FACTOR	drivers/damned/driver.h	/^		static const float LOOKAHEAD_FACTOR;$/;"	m	class:Driver
LOOKAHEAD_FACTOR	drivers/human/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/3.0; \/* [-] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	drivers/human/mycar.h	/^		static const double LOOKAHEAD_FACTOR;	\/* [-] *\/$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	drivers/inferno/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/(3.0*TRACKRES); \/\/ [-].$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	drivers/inferno/mycar.h	/^		static const double LOOKAHEAD_FACTOR;		\/\/ [-].$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	drivers/lliaw/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/(3.0*TRACKRES); \/\/ [-].$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	drivers/lliaw/mycar.h	/^		static const double LOOKAHEAD_FACTOR;		\/\/ [-].$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	drivers/olethros/driver.cpp	/^    const float Driver::LOOKAHEAD_FACTOR = 0.33f;				\/\/\/< [-]$/;"	m	class:olethros::Driver	file:
LOOKAHEAD_FACTOR	drivers/olethros/driver.h	/^	static const float LOOKAHEAD_FACTOR;$/;"	m	class:olethros::Driver
LOOKAHEAD_FACTOR	drivers/sparkle/driver.cpp	/^const float Driver::LOOKAHEAD_FACTOR = 0.33;				\/* [-] *\/$/;"	m	class:Driver	file:
LOOKAHEAD_FACTOR	drivers/sparkle/driver.h	/^		static const float LOOKAHEAD_FACTOR;$/;"	m	class:Driver
LOOKAHEAD_FACTOR	drivers/tita/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/(3.0*TRACKRES); \/\/ [-].$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	drivers/tita/mycar.h	/^		static const double LOOKAHEAD_FACTOR;		\/\/ [-].$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	drivers/berniw/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;	\/* [m] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	drivers/berniw/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;\/* [m] *\/$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	drivers/berniw2/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;	\/* [m] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	drivers/berniw2/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;\/* [m] *\/$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	drivers/berniw3/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;	\/* [m] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	drivers/berniw3/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;\/* [m] *\/$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	drivers/human/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;	\/* [m] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	drivers/human/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;\/* [m] *\/$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	drivers/inferno/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;		\/\/ [m].$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	drivers/inferno/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;	\/\/ [m].$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	drivers/lliaw/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;		\/\/ [m].$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	drivers/lliaw/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;	\/\/ [m].$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	drivers/tita/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;		\/\/ [m].$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	drivers/tita/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;	\/\/ [m].$/;"	m	class:MyCar
LPALBUFFER3F	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFER3F)( ALuint bid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALBUFFER3I	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFER3I)( ALuint bid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALBUFFERDATA	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERDATA)( ALuint bid, ALenum format, const ALvoid* data, ALsizei size, ALsizei freq );$/;"	t
LPALBUFFERF	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERF)( ALuint bid, ALenum param, ALfloat value);$/;"	t
LPALBUFFERFV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERFV)( ALuint bid, ALenum param, const ALfloat* values );$/;"	t
LPALBUFFERI	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERI)( ALuint bid, ALenum param, ALint value);$/;"	t
LPALBUFFERIV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERIV)( ALuint bid, ALenum param, const ALint* values );$/;"	t
LPALCCAPTURECLOSEDEVICE	windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCCAPTURECLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCAPTUREOPENDEVICE	windows/include/AL/alc.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCCAPTUREOPENDEVICE)( const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize );$/;"	t
LPALCCAPTURESAMPLES	windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCCAPTURESAMPLES)( ALCdevice *device, ALCvoid *buffer, ALCsizei samples );$/;"	t
LPALCCAPTURESTART	windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCCAPTURESTART)( ALCdevice *device );$/;"	t
LPALCCAPTURESTOP	windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCCAPTURESTOP)( ALCdevice *device );$/;"	t
LPALCCLOSEDEVICE	windows/include/AL/alc.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCCLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCREATECONTEXT	windows/include/AL/alc.h	/^typedef ALCcontext *   (ALCAPIENTRY *LPALCCREATECONTEXT) (ALCdevice *device, const ALCint *attrlist);$/;"	t
LPALCDESTROYCONTEXT	windows/include/AL/alc.h	/^typedef void	       (ALCAPIENTRY *LPALCDESTROYCONTEXT)( ALCcontext *context );$/;"	t
LPALCGETCONTEXTSDEVICE	windows/include/AL/alc.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCGETCONTEXTSDEVICE)( ALCcontext *context );$/;"	t
LPALCGETCURRENTCONTEXT	windows/include/AL/alc.h	/^typedef ALCcontext *   (ALCAPIENTRY *LPALCGETCURRENTCONTEXT)( ALCvoid );$/;"	t
LPALCGETENUMVALUE	windows/include/AL/alc.h	/^typedef ALCenum        (ALCAPIENTRY *LPALCGETENUMVALUE)(ALCdevice *device, const ALCchar *enumname );$/;"	t
LPALCGETERROR	windows/include/AL/alc.h	/^typedef ALCenum	       (ALCAPIENTRY *LPALCGETERROR)( ALCdevice *device );$/;"	t
LPALCGETINTEGERV	windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCGETINTEGERV)( ALCdevice *device, ALCenum param, ALCsizei size, ALCint *dest );$/;"	t
LPALCGETPROCADDRESS	windows/include/AL/alc.h	/^typedef void *         (ALCAPIENTRY *LPALCGETPROCADDRESS)(ALCdevice *device, const ALCchar *funcname );$/;"	t
LPALCGETSTRING	windows/include/AL/alc.h	/^typedef const ALCchar* (ALCAPIENTRY *LPALCGETSTRING)( ALCdevice *device, ALCenum param );$/;"	t
LPALCISEXTENSIONPRESENT	windows/include/AL/alc.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCISEXTENSIONPRESENT)( ALCdevice *device, const ALCchar *extname );$/;"	t
LPALCMAKECONTEXTCURRENT	windows/include/AL/alc.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCMAKECONTEXTCURRENT)( ALCcontext *context );$/;"	t
LPALCOPENDEVICE	windows/include/AL/alc.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCOPENDEVICE)( const ALCchar *devicename );$/;"	t
LPALCPROCESSCONTEXT	windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCPROCESSCONTEXT)( ALCcontext *context );$/;"	t
LPALCSUSPENDCONTEXT	windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCSUSPENDCONTEXT)( ALCcontext *context );$/;"	t
LPALDELETEBUFFERS	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDELETEBUFFERS)( ALsizei n, const ALuint* buffers );$/;"	t
LPALDELETESOURCES	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDELETESOURCES)( ALsizei n, const ALuint* sources );$/;"	t
LPALDISABLE	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDISABLE)( ALenum capability ); $/;"	t
LPALDISTANCEMODEL	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDISTANCEMODEL)( ALenum distanceModel );$/;"	t
LPALDOPPLERFACTOR	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDOPPLERFACTOR)( ALfloat value );$/;"	t
LPALDOPPLERVELOCITY	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDOPPLERVELOCITY)( ALfloat value );$/;"	t
LPALENABLE	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALENABLE)( ALenum capability );$/;"	t
LPALGENBUFFERS	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGENBUFFERS)( ALsizei n, ALuint* buffers );$/;"	t
LPALGENSOURCES	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGENSOURCES)( ALsizei n, ALuint* sources ); $/;"	t
LPALGETBOOLEAN	windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALGETBOOLEAN)( ALenum param );$/;"	t
LPALGETBOOLEANV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBOOLEANV)( ALenum param, ALboolean* data );$/;"	t
LPALGETBUFFER3F	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFER3F)( ALuint bid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETBUFFER3I	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFER3I)( ALuint bid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	t
LPALGETBUFFERF	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERF)( ALuint bid, ALenum param, ALfloat* value );$/;"	t
LPALGETBUFFERFV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERFV)( ALuint bid, ALenum param, ALfloat* values );$/;"	t
LPALGETBUFFERI	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERI)( ALuint bid, ALenum param, ALint* value );$/;"	t
LPALGETBUFFERIV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERIV)( ALuint bid, ALenum param, ALint* values );$/;"	t
LPALGETDOUBLE	windows/include/AL/al.h	/^typedef ALdouble       (ALAPIENTRY *LPALGETDOUBLE)( ALenum param );$/;"	t
LPALGETDOUBLEV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETDOUBLEV)( ALenum param, ALdouble* data );$/;"	t
LPALGETENUMVALUE	windows/include/AL/al.h	/^typedef ALenum         (ALAPIENTRY *LPALGETENUMVALUE)( const ALchar* ename );$/;"	t
LPALGETERROR	windows/include/AL/al.h	/^typedef ALenum         (ALAPIENTRY *LPALGETERROR)( ALvoid );$/;"	t
LPALGETFLOAT	windows/include/AL/al.h	/^typedef ALfloat        (ALAPIENTRY *LPALGETFLOAT)( ALenum param );$/;"	t
LPALGETFLOATV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETFLOATV)( ALenum param, ALfloat* data );$/;"	t
LPALGETINTEGER	windows/include/AL/al.h	/^typedef ALint          (ALAPIENTRY *LPALGETINTEGER)( ALenum param );$/;"	t
LPALGETINTEGERV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETINTEGERV)( ALenum param, ALint* data );$/;"	t
LPALGETLISTENER3F	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENER3F)( ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3 );$/;"	t
LPALGETLISTENER3I	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENER3I)( ALenum param, ALint *value1, ALint *value2, ALint *value3 );$/;"	t
LPALGETLISTENERF	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERF)( ALenum param, ALfloat* value );$/;"	t
LPALGETLISTENERFV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERFV)( ALenum param, ALfloat* values );$/;"	t
LPALGETLISTENERI	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERI)( ALenum param, ALint* value );$/;"	t
LPALGETLISTENERIV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERIV)( ALenum param, ALint* values );$/;"	t
LPALGETPROCADDRESS	windows/include/AL/al.h	/^typedef void*          (ALAPIENTRY *LPALGETPROCADDRESS)( const ALchar* fname );$/;"	t
LPALGETSOURCE3F	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCE3F)( ALuint sid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETSOURCE3I	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCE3I)( ALuint sid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	t
LPALGETSOURCEF	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEF)( ALuint sid, ALenum param, ALfloat* value );$/;"	t
LPALGETSOURCEFV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEFV)( ALuint sid, ALenum param, ALfloat* values );$/;"	t
LPALGETSOURCEI	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEI)( ALuint sid, ALenum param, ALint* value );$/;"	t
LPALGETSOURCEIV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEIV)( ALuint sid, ALenum param, ALint* values );$/;"	t
LPALGETSTRING	windows/include/AL/al.h	/^typedef const ALchar*  (ALAPIENTRY *LPALGETSTRING)( ALenum param );$/;"	t
LPALISBUFFER	windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALISBUFFER)( ALuint bid );$/;"	t
LPALISENABLED	windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALISENABLED)( ALenum capability ); $/;"	t
LPALISEXTENSIONPRESENT	windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALISEXTENSIONPRESENT)(const ALchar* extname );$/;"	t
LPALISSOURCE	windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALISSOURCE)( ALuint sid ); $/;"	t
LPALLISTENER3F	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENER3F)( ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALLISTENER3I	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENER3I)( ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALLISTENERF	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENERF)( ALenum param, ALfloat value );$/;"	t
LPALLISTENERFV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENERFV)( ALenum param, const ALfloat* values );$/;"	t
LPALLISTENERI	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENERI)( ALenum param, ALint value );$/;"	t
LPALLISTENERIV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENERIV)( ALenum param, const ALint* values );$/;"	t
LPALSOURCE3F	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCE3F)( ALuint sid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALSOURCE3I	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCE3I)( ALuint sid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALSOURCEF	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEF)( ALuint sid, ALenum param, ALfloat value); $/;"	t
LPALSOURCEFV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEFV)( ALuint sid, ALenum param, const ALfloat* values );$/;"	t
LPALSOURCEI	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEI)( ALuint sid, ALenum param, ALint value); $/;"	t
LPALSOURCEIV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEIV)( ALuint sid, ALenum param, const ALint* values );$/;"	t
LPALSOURCEPAUSE	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPAUSE)( ALuint sid );$/;"	t
LPALSOURCEPAUSEV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPAUSEV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEPLAY	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPLAY)( ALuint sid );$/;"	t
LPALSOURCEPLAYV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPLAYV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEQUEUEBUFFERS	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, const ALuint *bids );$/;"	t
LPALSOURCEREWIND	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEREWIND)( ALuint sid );$/;"	t
LPALSOURCEREWINDV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEREWINDV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCESTOP	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCESTOP)( ALuint sid );$/;"	t
LPALSOURCESTOPV	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCESTOPV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEUNQUEUEBUFFERS	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEUNQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, ALuint *bids );$/;"	t
LPALSPEEDOFSOUND	windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSPEEDOFSOUND)( ALfloat value );$/;"	t
LST_RANGES	interfaces/car.h	586;"	d
LabAxisId	libs/confscreens/joystickconfig.cpp	/^static int  LabAxisId[4];$/;"	v	file:
LabMaxId	libs/confscreens/joystickconfig.cpp	/^static int  LabMaxId[4];$/;"	v	file:
LabMinId	libs/confscreens/joystickconfig.cpp	/^static int  LabMinId[4];$/;"	v	file:
LabName	libs/confscreens/joystickconfig.cpp	/^static const char *LabName[] = { "Steer", "Throttle", "Brake", "Clutch" };$/;"	v	file:
LabelColor	libs/confscreens/driverconfig.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LabelColor	libs/confscreens/graphconfig.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LabelColor	libs/confscreens/openglconfig.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LabelColor	libs/confscreens/simuconfig.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LabelColor	libs/confscreens/soundconfig.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LabelColor	libs/tgfclient/screen.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LandAnchor	modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *LandAnchor = 0;$/;"	v
LaplacianDistribution	libs/learning/Distribution.h	/^	LaplacianDistribution() {m=0.0;l=1.0;}$/;"	f	class:LaplacianDistribution
LaplacianDistribution	libs/learning/Distribution.h	/^	LaplacianDistribution(real lambda)$/;"	f	class:LaplacianDistribution
LaplacianDistribution	libs/learning/Distribution.h	/^	LaplacianDistribution(real mean, real var)$/;"	f	class:LaplacianDistribution
LaplacianDistribution	libs/learning/Distribution.h	/^class LaplacianDistribution : public ParametricDistribution {$/;"	c
LastListItem	libs/learning/List.cpp	/^LISTITEM* LastListItem(LIST* list)$/;"	f
LastPitStopLap	drivers/human/human.h	/^	int		LastPitStopLap;$/;"	m	struct:HumanContext
LastTimeClick	libs/tgfclient/gui.cpp	/^static double LastTimeClick;$/;"	v	file:
Layer	libs/learning/ANN.h	/^} Layer;$/;"	t	typeref:struct:Layer_
Layer_	libs/learning/ANN.h	/^typedef struct Layer_ {$/;"	s
LearningMethod	libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	g
Length	drivers/olethros/TrackData.h	/^    float Length()$/;"	f	class:Point
LengthId	libs/racescreens/trackselect.cpp	/^static int LengthId;$/;"	v	file:
LgfsFinal	drivers/inferno2/inferno2.cpp	/^tdble LgfsFinal[10];$/;"	v
Line	tools/trackgen/relief.cpp	/^typedef struct Line$/;"	s	file:
LinkNext	libs/learning/List.cpp	/^LISTITEM* LinkNext(LISTITEM* src, void* ptr, void (*free_obj) (void* obj))$/;"	f
LinkPrev	libs/learning/List.cpp	/^LISTITEM* LinkPrev(LISTITEM* src, void* ptr, void (*free_obj) (void* obj))$/;"	f
LinuxSpecInit	linux/linuxspec.cpp	/^LinuxSpecInit(void)$/;"	f
List	libs/learning/List.cpp	/^LIST* List(void)$/;"	f
List	libs/learning/List.h	/^typedef struct List {$/;"	s
ListAppend	libs/learning/List.cpp	/^LISTITEM* ListAppend(LIST* list, void* p) {$/;"	f
ListAppend	libs/learning/List.cpp	/^LISTITEM* ListAppend(LIST* list, void* p, void (*free_obj) (void* obj))$/;"	f
ListItem	libs/learning/List.cpp	/^LISTITEM* ListItem(void* ptr, void (*free_obj) (void* obj)) $/;"	f
ListItem	libs/learning/List.h	/^typedef struct ListItem {$/;"	s
ListLinearSearchRetrieve	libs/learning/List.cpp	/^LISTITEM* ListLinearSearchRetrieve (struct List* list, void* ptr)$/;"	f
ListSize	libs/learning/List.cpp	/^int ListSize(LIST* list) {$/;"	f
LoadANN	libs/learning/ANN.cpp	/^ANN* LoadANN(FILE* f)$/;"	f
LoadANN	libs/learning/ANN.cpp	/^ANN* LoadANN(char* filename)$/;"	f
LoadElevation	tools/trackgen/elevation.cpp	/^void LoadElevation(tTrack *track, void *TrackHandle, char *imgFile)$/;"	f
LoadFromFile	modules/simu/simuv3/SimulationOptions.cpp	/^void SimulationOptions::LoadFromFile(void* handle) {$/;"	f	class:SimulationOptions
LoadParameter	drivers/olethros/learn.cpp	/^bool SegLearn::LoadParameter (float* p, int n, FILE* f)$/;"	f	class:SegLearn
LoadRelief	tools/trackgen/relief.cpp	/^LoadRelief(void *TrackHandle, char *reliefFile)$/;"	f
Loaded	modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
LodFactorEditId	libs/confscreens/graphconfig.cpp	/^static int	LodFactorEditId;$/;"	v	file:
LodFactorValue	libs/confscreens/graphconfig.cpp	/^static tdble	LodFactorValue = 1.0;$/;"	v	file:
M	libs/tgf/tgf.h	/^    t3Dd M; \/**< Moments *\/$/;"	m	struct:__anon98
M	modules/graphic/ssggraph/grcam.cpp	85;"	d	file:
M	modules/graphic/ssggraph/grcam.cpp	90;"	d	file:
MACINTOSH_AL	windows/include/AL/altypes.h	7;"	d
MACINTOSH_AL	windows/include/AL/alut.h	7;"	d
MAGIC1	drivers/bt/learn.cpp	24;"	d	file:
MAGIC1	drivers/damned/learn.cpp	24;"	d	file:
MAGIC2	drivers/bt/learn.cpp	26;"	d	file:
MAGIC2	drivers/damned/learn.cpp	26;"	d	file:
MARGIN	drivers/berniw/mycar.cpp	/^const double MyCar::MARGIN = 0.3;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar	file:
MARGIN	drivers/berniw/mycar.h	/^		static const double MARGIN;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar
MARGIN	drivers/berniw2/mycar.cpp	/^const double MyCar::MARGIN = 0.3;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar	file:
MARGIN	drivers/berniw2/mycar.h	/^		static const double MARGIN;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar
MARGIN	drivers/berniw3/mycar.cpp	/^const double MyCar::MARGIN = 0.3;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar	file:
MARGIN	drivers/berniw3/mycar.h	/^		static const double MARGIN;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar
MARGIN	drivers/human/mycar.cpp	/^const double MyCar::MARGIN = 0.3;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar	file:
MARGIN	drivers/human/mycar.h	/^		static const double MARGIN;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar
MARGIN	drivers/inferno/mycar.cpp	/^const double MyCar::MARGIN = 0.2;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar	file:
MARGIN	drivers/inferno/mycar.h	/^		static const double MARGIN;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar
MARGIN	drivers/lliaw/mycar.cpp	/^const double MyCar::MARGIN = 0.2;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar	file:
MARGIN	drivers/lliaw/mycar.h	/^		static const double MARGIN;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar
MARGIN	drivers/tita/mycar.cpp	/^const double MyCar::MARGIN = 0.2;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar	file:
MARGIN	drivers/tita/mycar.h	/^		static const double MARGIN;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar
MAT	tools/accc/ac3dload.cpp	50;"	d	file:
MATERIAL	tools/accc/ac3dload.cpp	39;"	d	file:
MATH_FUNCTIONS_H	libs/learning/MathFunctions.h	13;"	d
MAX	drivers/human/human.cpp	85;"	d	file:
MAX	libs/tgf/tgf.h	54;"	d
MAX	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^enum { MIN = 0, MAX = 1 };$/;"	e	enum:__anon15
MAXALLOWEDPITCH	drivers/berniw/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;		\/* max allowed angle between road and car [radians] *\/$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	drivers/berniw/mycar.h	/^		static const double MAXALLOWEDPITCH;	\/* [-] radians *\/$/;"	m	class:MyCar
MAXALLOWEDPITCH	drivers/berniw2/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;		\/* max allowed angle between road and car [radians] *\/$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	drivers/berniw2/mycar.h	/^		static const double MAXALLOWEDPITCH;	\/* [-] radians *\/$/;"	m	class:MyCar
MAXALLOWEDPITCH	drivers/berniw3/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;		\/* max allowed angle between road and car [radians] *\/$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	drivers/berniw3/mycar.h	/^		static const double MAXALLOWEDPITCH;	\/* [-] radians *\/$/;"	m	class:MyCar
MAXALLOWEDPITCH	drivers/human/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;		\/* max allowed angle between road and car [radians] *\/$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	drivers/human/mycar.h	/^		static const double MAXALLOWEDPITCH;	\/* [-] radians *\/$/;"	m	class:MyCar
MAXALLOWEDPITCH	drivers/inferno/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;			\/\/ Max allowed angle between road and car [radians].$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	drivers/inferno/mycar.h	/^		static const double MAXALLOWEDPITCH;		\/\/ [-] radians.$/;"	m	class:MyCar
MAXALLOWEDPITCH	drivers/lliaw/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;			\/\/ Max allowed angle between road and car [radians].$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	drivers/lliaw/mycar.h	/^		static const double MAXALLOWEDPITCH;		\/\/ [-] radians.$/;"	m	class:MyCar
MAXALLOWEDPITCH	drivers/tita/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;			\/\/ Max allowed angle between road and car [radians].$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	drivers/tita/mycar.h	/^		static const double MAXALLOWEDPITCH;		\/\/ [-] radians.$/;"	m	class:MyCar
MAXANGLE	drivers/berniw/mycar.h	/^		double MAXANGLE;								\/* biggest allowed angle to the path [deg] *\/$/;"	m	class:MyCar
MAXANGLE	drivers/berniw2/mycar.h	/^		double MAXANGLE;								\/* biggest allowed angle to the path [deg] *\/$/;"	m	class:MyCar
MAXANGLE	drivers/berniw3/mycar.h	/^		double MAXANGLE;								\/* biggest allowed angle to the path [deg] *\/$/;"	m	class:MyCar
MAXANGLE	drivers/human/mycar.h	/^		double MAXANGLE;								\/* biggest allowed angle to the path [deg] *\/$/;"	m	class:MyCar
MAXANGLE	drivers/inferno/mycar.h	/^		double MAXANGLE;								\/\/ Biggest allowed angle to the path [deg].$/;"	m	class:MyCar
MAXANGLE	drivers/lliaw/mycar.h	/^		double MAXANGLE;								\/\/ Biggest allowed angle to the path [deg].$/;"	m	class:MyCar
MAXANGLE	drivers/tita/mycar.h	/^		double MAXANGLE;								\/\/ Biggest allowed angle to the path [deg].$/;"	m	class:MyCar
MAXDAMMAGE	drivers/berniw/mycar.h	/^		int MAXDAMMAGE;									\/* if dammage > MAXDAMMAGE then we plan a pit stop [-] *\/$/;"	m	class:MyCar
MAXDAMMAGE	drivers/berniw2/mycar.h	/^		int MAXDAMMAGE;									\/* if dammage > MAXDAMMAGE then we plan a pit stop [-] *\/$/;"	m	class:MyCar
MAXDAMMAGE	drivers/berniw3/mycar.h	/^		int MAXDAMMAGE;									\/* if dammage > MAXDAMMAGE then we plan a pit stop [-] *\/$/;"	m	class:MyCar
MAXDAMMAGE	drivers/human/mycar.h	/^		int MAXDAMMAGE;									\/* if dammage > MAXDAMMAGE then we plan a pit stop [-] *\/$/;"	m	class:MyCar
MAXDAMMAGE	drivers/inferno/mycar.h	/^		int MAXDAMMAGE;									\/\/ If dammage > MAXDAMMAGE then we plan a pit stop [-].$/;"	m	class:MyCar
MAXDAMMAGE	drivers/lliaw/mycar.h	/^		int MAXDAMMAGE;									\/\/ If dammage > MAXDAMMAGE then we plan a pit stop [-].$/;"	m	class:MyCar
MAXDAMMAGE	drivers/tita/mycar.h	/^		int MAXDAMMAGE;									\/\/ If dammage > MAXDAMMAGE then we plan a pit stop [-].$/;"	m	class:MyCar
MAXLINEWIDTH	modules/graphic/ssggraph/grtrackmap.cpp	/^const float cGrTrackMap::MAXLINEWIDTH = 20.0;$/;"	m	class:cGrTrackMap	file:
MAXLINEWIDTH	modules/graphic/ssggraph/grtrackmap.h	/^		static const float MAXLINEWIDTH;$/;"	m	class:cGrTrackMap
MAXPOINT_BY_STRIP	modules/graphic/ssggraph/grskidmarks.h	4;"	d
MAXRELAX	drivers/berniw/mycar.h	/^		double MAXRELAX;								\/* to avoid skidding (0..0.99) [-] *\/$/;"	m	class:MyCar
MAXRELAX	drivers/berniw2/mycar.h	/^		double MAXRELAX;								\/* to avoid skidding (0..0.99) [-] *\/$/;"	m	class:MyCar
MAXRELAX	drivers/berniw3/mycar.h	/^		double MAXRELAX;								\/* to avoid skidding (0..0.99) [-] *\/$/;"	m	class:MyCar
MAXRELAX	drivers/human/mycar.h	/^		double MAXRELAX;								\/* to avoid skidding (0..0.99) [-] *\/$/;"	m	class:MyCar
MAXRELAX	drivers/inferno/mycar.h	/^		double MAXRELAX;								\/\/ To avoid skidding (0..0.99) [-].$/;"	m	class:MyCar
MAXRELAX	drivers/lliaw/mycar.h	/^		double MAXRELAX;								\/\/ To avoid skidding (0..0.99) [-].$/;"	m	class:MyCar
MAXRELAX	drivers/tita/mycar.h	/^		double MAXRELAX;								\/\/ To avoid skidding (0..0.99) [-].$/;"	m	class:MyCar
MAXSEG_64K	windows/include/zconf.h	161;"	d
MAXSTRIP_BYWHEEL	modules/graphic/ssggraph/grskidmarks.h	5;"	d
MAX_BRAKE_FOLLOW_DISTANCE	drivers/olethros/driver.cpp	/^    const float Driver::MAX_BRAKE_FOLLOW_DISTANCE = 2.0f;        \/\/\/< [m] Predicted minimum distance from next opponent to start applying brake.$/;"	m	class:olethros::Driver	file:
MAX_BRAKE_FOLLOW_DISTANCE	drivers/olethros/driver.h	/^	static const float MAX_BRAKE_FOLLOW_DISTANCE;$/;"	m	class:olethros::Driver
MAX_CLR	tools/trackgen/elevation.cpp	52;"	d	file:
MAX_DISTANCE	modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat MAX_DISTANCE; \/\/\/< maximum allowed distance$/;"	m	class:OpenalTorcsSound
MAX_DISTANCE_LOW	modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat MAX_DISTANCE_LOW; \/\/\/< maximum allowed distance$/;"	m	class:OpenalTorcsSound
MAX_FUEL_PER_METER	drivers/berniw/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	drivers/berniw/mycar.h	/^		static const double MAX_FUEL_PER_METER;	\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar
MAX_FUEL_PER_METER	drivers/berniw2/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	drivers/berniw2/mycar.h	/^		static const double MAX_FUEL_PER_METER;	\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar
MAX_FUEL_PER_METER	drivers/berniw3/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	drivers/berniw3/mycar.h	/^		static const double MAX_FUEL_PER_METER;	\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar
MAX_FUEL_PER_METER	drivers/bt/driver.cpp	/^const float Driver::MAX_FUEL_PER_METER = 0.0008f;			\/\/ [liter\/m] fuel consumtion.$/;"	m	class:Driver	file:
MAX_FUEL_PER_METER	drivers/bt/driver.h	/^		static const float MAX_FUEL_PER_METER;$/;"	m	class:Driver
MAX_FUEL_PER_METER	drivers/bt/strategy.cpp	/^const float SimpleStrategy::MAX_FUEL_PER_METER = 0.0008f;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:SimpleStrategy	file:
MAX_FUEL_PER_METER	drivers/bt/strategy.h	/^		static const float MAX_FUEL_PER_METER;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:SimpleStrategy
MAX_FUEL_PER_METER	drivers/damned/driver.cpp	/^const float Driver::MAX_FUEL_PER_METER = 0.0008f;			\/\/ [liter\/m] fuel consumtion.$/;"	m	class:Driver	file:
MAX_FUEL_PER_METER	drivers/damned/driver.h	/^		static const float MAX_FUEL_PER_METER;$/;"	m	class:Driver
MAX_FUEL_PER_METER	drivers/damned/strategy.cpp	/^const float SimpleStrategy::MAX_FUEL_PER_METER = 0.0008f;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:SimpleStrategy	file:
MAX_FUEL_PER_METER	drivers/damned/strategy.h	/^		static const float MAX_FUEL_PER_METER;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:SimpleStrategy
MAX_FUEL_PER_METER	drivers/human/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	drivers/human/mycar.h	/^		static const double MAX_FUEL_PER_METER;	\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar
MAX_FUEL_PER_METER	drivers/inferno/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;	\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	drivers/inferno/mycar.h	/^		static const double MAX_FUEL_PER_METER;		\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar
MAX_FUEL_PER_METER	drivers/lliaw/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;	\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	drivers/lliaw/mycar.h	/^		static const double MAX_FUEL_PER_METER;		\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar
MAX_FUEL_PER_METER	drivers/olethros/driver.cpp	/^    const float Driver::MAX_FUEL_PER_METER = 0.0008f;			\/\/\/< [liter\/m] fuel consumtion.$/;"	m	class:olethros::Driver	file:
MAX_FUEL_PER_METER	drivers/olethros/driver.h	/^	static const float MAX_FUEL_PER_METER;$/;"	m	class:olethros::Driver
MAX_FUEL_PER_METER	drivers/olethros/strategy.cpp	/^const float SimpleStrategy::MAX_FUEL_PER_METER = 0.0008f;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:olethros::SimpleStrategy	file:
MAX_FUEL_PER_METER	drivers/olethros/strategy.h	/^	static const float MAX_FUEL_PER_METER;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:olethros::SimpleStrategy
MAX_FUEL_PER_METER	drivers/tita/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;	\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	drivers/tita/mycar.h	/^		static const double MAX_FUEL_PER_METER;		\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar
MAX_GEARS	interfaces/car.h	284;"	d
MAX_INC_FACTOR	drivers/bt/driver.cpp	/^const float Driver::MAX_INC_FACTOR = 5.0f;					\/\/ [m] Increment faster if speed is slow [1.0..10.0].$/;"	m	class:Driver	file:
MAX_INC_FACTOR	drivers/bt/driver.h	/^		static const float MAX_INC_FACTOR;$/;"	m	class:Driver
MAX_INC_FACTOR	drivers/damned/driver.cpp	/^const float Driver::MAX_INC_FACTOR = 5.0f;					\/\/ [m] Increment faster if speed is slow [1.0..10.0].$/;"	m	class:Driver	file:
MAX_INC_FACTOR	drivers/damned/driver.h	/^		static const float MAX_INC_FACTOR;$/;"	m	class:Driver
MAX_INC_FACTOR	drivers/olethros/driver.cpp	/^    const float Driver::MAX_INC_FACTOR = 5.0f;					\/\/\/< [m] Increment faster if speed is slow [1.0..10.0].$/;"	m	class:olethros::Driver	file:
MAX_INC_FACTOR	drivers/olethros/driver.h	/^	static const float MAX_INC_FACTOR;$/;"	m	class:olethros::Driver
MAX_LINES	libs/racescreens/miscscreens.cpp	187;"	d	file:
MAX_LINES	libs/racescreens/results.cpp	46;"	d	file:
MAX_MATERIALS	modules/graphic/ssggraph/grloadac.cpp	98;"	d	file:
MAX_MEM_LEVEL	windows/include/zconf.h	208;"	d
MAX_MEM_LEVEL	windows/include/zconf.h	210;"	d
MAX_MOD_ITF	libs/tgf/tgf.h	186;"	d
MAX_NAME_LEN	interfaces/car.h	36;"	d
MAX_NODES	tools/trackgen/easymesh.cpp	59;"	d	file:
MAX_NUMBER_LIGHT	modules/graphic/ssggraph/grcarlight.h	81;"	d
MAX_SMOKE_LIFE	modules/graphic/ssggraph/grsmoke.h	5;"	d
MAX_SMOKE_NUMBER	modules/graphic/ssggraph/grsmoke.h	6;"	d
MAX_SPEED	drivers/berniw/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
MAX_SPEED	drivers/berniw/mycar.h	/^		static const double MAX_SPEED;			\/* [m\/s] *\/$/;"	m	class:MyCar
MAX_SPEED	drivers/berniw2/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
MAX_SPEED	drivers/berniw2/mycar.h	/^		static const double MAX_SPEED;			\/* [m\/s] *\/$/;"	m	class:MyCar
MAX_SPEED	drivers/berniw3/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
MAX_SPEED	drivers/berniw3/mycar.h	/^		static const double MAX_SPEED;			\/* [m\/s] *\/$/;"	m	class:MyCar
MAX_SPEED	drivers/bt/driver.cpp	/^const float Driver::MAX_SPEED = 84.0f;						\/\/ [m\/s] Speed to compute the percentage of brake to apply.$/;"	m	class:Driver	file:
MAX_SPEED	drivers/bt/driver.h	/^		static const float MAX_SPEED;$/;"	m	class:Driver
MAX_SPEED	drivers/damned/driver.cpp	/^const float Driver::MAX_SPEED = 84.0f;						\/\/ [m\/s] Speed to compute the percentage of brake to apply.$/;"	m	class:Driver	file:
MAX_SPEED	drivers/damned/driver.h	/^		static const float MAX_SPEED;$/;"	m	class:Driver
MAX_SPEED	drivers/human/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
MAX_SPEED	drivers/human/mycar.h	/^		static const double MAX_SPEED;			\/* [m\/s] *\/$/;"	m	class:MyCar
MAX_SPEED	drivers/inferno/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
MAX_SPEED	drivers/inferno/mycar.h	/^		static const double MAX_SPEED;				\/\/ [m\/s].$/;"	m	class:MyCar
MAX_SPEED	drivers/lliaw/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
MAX_SPEED	drivers/lliaw/mycar.h	/^		static const double MAX_SPEED;				\/\/ [m\/s].$/;"	m	class:MyCar
MAX_SPEED	drivers/olethros/driver.cpp	/^    const float Driver::MAX_SPEED = 84.0f;						\/\/\/< [m\/s] Speed to compute the percentage of brake to apply.$/;"	m	class:olethros::Driver	file:
MAX_SPEED	drivers/olethros/driver.h	/^	static const float MAX_SPEED;$/;"	m	class:olethros::Driver
MAX_SPEED	drivers/sparkle/driver.cpp	/^const float Driver::MAX_SPEED = 84.0;						\/* [m\/s] *\/$/;"	m	class:Driver	file:
MAX_SPEED	drivers/sparkle/driver.h	/^		static const float MAX_SPEED;$/;"	m	class:Driver
MAX_SPEED	drivers/tita/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
MAX_SPEED	drivers/tita/mycar.h	/^		static const double MAX_SPEED;				\/\/ [m\/s].$/;"	m	class:MyCar
MAX_TMP_INTS	modules/track/track3.cpp	809;"	d	file:
MAX_TMP_INTS	modules/track/track4.cpp	431;"	d	file:
MAX_UNSTUCK_ANGLE	drivers/bt/driver.cpp	/^const float Driver::MAX_UNSTUCK_ANGLE = 15.0f\/180.0f*PI;	\/\/ [radians] If the angle of the car on the track is smaller, we assume we are not stuck.$/;"	m	class:Driver	file:
MAX_UNSTUCK_ANGLE	drivers/bt/driver.h	/^		static const float MAX_UNSTUCK_ANGLE;$/;"	m	class:Driver
MAX_UNSTUCK_ANGLE	drivers/damned/driver.cpp	/^const float Driver::MAX_UNSTUCK_ANGLE = 15.0f\/180.0f*PI;	\/\/ [radians] If the angle of the car on the track is smaller, we assume we are not stuck.$/;"	m	class:Driver	file:
MAX_UNSTUCK_ANGLE	drivers/damned/driver.h	/^		static const float MAX_UNSTUCK_ANGLE;$/;"	m	class:Driver
MAX_UNSTUCK_ANGLE	drivers/olethros/driver.cpp	/^    const float Driver::MAX_UNSTUCK_ANGLE = 15.0\/180.0*PI;		\/\/\/< [radians] If the angle of the car on the track is smaller, we assume we are not stuck.$/;"	m	class:olethros::Driver	file:
MAX_UNSTUCK_ANGLE	drivers/olethros/driver.h	/^	static const float MAX_UNSTUCK_ANGLE;$/;"	m	class:olethros::Driver
MAX_UNSTUCK_ANGLE	drivers/sparkle/driver.cpp	/^const float Driver::MAX_UNSTUCK_ANGLE = 15.0\/180.0*PI;		\/* [radians] *\/$/;"	m	class:Driver	file:
MAX_UNSTUCK_ANGLE	drivers/sparkle/driver.h	/^		static const float MAX_UNSTUCK_ANGLE;$/;"	m	class:Driver
MAX_UNSTUCK_COUNT	drivers/bt/driver.h	/^		int MAX_UNSTUCK_COUNT;$/;"	m	class:Driver
MAX_UNSTUCK_COUNT	drivers/damned/driver.h	/^		int MAX_UNSTUCK_COUNT;$/;"	m	class:Driver
MAX_UNSTUCK_COUNT	drivers/olethros/driver.h	/^	int MAX_UNSTUCK_COUNT;$/;"	m	class:olethros::Driver
MAX_UNSTUCK_COUNT	drivers/sparkle/driver.h	/^		int MAX_UNSTUCK_COUNT;$/;"	m	class:Driver
MAX_UNSTUCK_SPEED	drivers/bt/driver.cpp	/^const float Driver::MAX_UNSTUCK_SPEED = 5.0f;				\/\/ [m\/s] Below this speed we consider being stuck.$/;"	m	class:Driver	file:
MAX_UNSTUCK_SPEED	drivers/bt/driver.h	/^		static const float MAX_UNSTUCK_SPEED;$/;"	m	class:Driver
MAX_UNSTUCK_SPEED	drivers/damned/driver.cpp	/^const float Driver::MAX_UNSTUCK_SPEED = 5.0f;				\/\/ [m\/s] Below this speed we consider being stuck.$/;"	m	class:Driver	file:
MAX_UNSTUCK_SPEED	drivers/damned/driver.h	/^		static const float MAX_UNSTUCK_SPEED;$/;"	m	class:Driver
MAX_UNSTUCK_SPEED	drivers/olethros/driver.cpp	/^    const float Driver::MAX_UNSTUCK_SPEED = 5.0f;				\/\/\/< [m\/s] Below this speed we consider being stuck.$/;"	m	class:olethros::Driver	file:
MAX_UNSTUCK_SPEED	drivers/olethros/driver.h	/^	static const float MAX_UNSTUCK_SPEED;$/;"	m	class:olethros::Driver
MAX_UNSTUCK_SPEED	drivers/sparkle/driver.cpp	/^const float Driver::MAX_UNSTUCK_SPEED = 5.0;				\/* [m\/s] *\/$/;"	m	class:Driver	file:
MAX_UNSTUCK_SPEED	drivers/sparkle/driver.h	/^		static const float MAX_UNSTUCK_SPEED;$/;"	m	class:Driver
MAX_VOL	modules/graphic/ssggraph/TorcsSound.h	/^	float MAX_VOL; \/\/\/< Maximum volume$/;"	m	class:TorcsSound
MAX_WBITS	windows/include/zconf.h	220;"	d
MEANNB	modules/simu/simuv3/simu.cpp	56;"	d	file:
MEANW	modules/simu/simuv3/simu.cpp	57;"	d	file:
MIN	drivers/human/human.cpp	84;"	d	file:
MIN	libs/tgf/tgf.h	103;"	d
MIN	libs/tgf/tgf.h	58;"	d
MIN	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^enum { MIN = 0, MAX = 1 };$/;"	e	enum:__anon15
MINBPC	libs/txml/xmltok.c	160;"	d	file:
MINBPC	libs/txml/xmltok.c	181;"	d	file:
MINBPC	libs/txml/xmltok.c	431;"	d	file:
MINBPC	libs/txml/xmltok.c	458;"	d	file:
MINBPC	libs/txml/xmltok.c	497;"	d	file:
MINBPC	libs/txml/xmltok.c	525;"	d	file:
MINLINEWIDTH	modules/graphic/ssggraph/grtrackmap.cpp	/^const float cGrTrackMap::MINLINEWIDTH = 5.0;$/;"	m	class:cGrTrackMap	file:
MINLINEWIDTH	modules/graphic/ssggraph/grtrackmap.h	/^		static const float MINLINEWIDTH;$/;"	m	class:cGrTrackMap
MINOVERTAKERANGE	drivers/berniw/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 250.0;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	drivers/berniw/mycar.h	/^		static const double MINOVERTAKERANGE;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar
MINOVERTAKERANGE	drivers/berniw2/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 250.0;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	drivers/berniw2/mycar.h	/^		static const double MINOVERTAKERANGE;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar
MINOVERTAKERANGE	drivers/berniw3/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 250.0;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	drivers/berniw3/mycar.h	/^		static const double MINOVERTAKERANGE;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar
MINOVERTAKERANGE	drivers/human/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 250.0;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	drivers/human/mycar.h	/^		static const double MINOVERTAKERANGE;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar
MINOVERTAKERANGE	drivers/inferno/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 100.0;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	drivers/inferno/mycar.h	/^		static const double MINOVERTAKERANGE;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar
MINOVERTAKERANGE	drivers/lliaw/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 100.0;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	drivers/lliaw/mycar.h	/^		static const double MINOVERTAKERANGE;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar
MINOVERTAKERANGE	drivers/tita/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 100.0;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	drivers/tita/mycar.h	/^		static const double MINOVERTAKERANGE;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar
MINVAL	tools/accc/accc.h	169;"	d
MIN_BRAKE_FOLLOW_DISTANCE	drivers/olethros/driver.cpp	/^    const float Driver::MIN_BRAKE_FOLLOW_DISTANCE = 1.0f;        \/\/\/< [m] Predicted minimum distance from next opponent to apply full brake$/;"	m	class:olethros::Driver	file:
MIN_BRAKE_FOLLOW_DISTANCE	drivers/olethros/driver.h	/^	static const float MIN_BRAKE_FOLLOW_DISTANCE;$/;"	m	class:olethros::Driver
MIN_BYTES_PER_CHAR	libs/txml/xmlrole.c	33;"	d	file:
MIN_UNSTUCK_DIST	drivers/bt/driver.cpp	/^const float Driver::MIN_UNSTUCK_DIST = 3.0f;				\/\/ [m] If we are closer to the middle we assume to be not stuck.$/;"	m	class:Driver	file:
MIN_UNSTUCK_DIST	drivers/bt/driver.h	/^		static const float MIN_UNSTUCK_DIST;$/;"	m	class:Driver
MIN_UNSTUCK_DIST	drivers/damned/driver.cpp	/^const float Driver::MIN_UNSTUCK_DIST = 3.0f;				\/\/ [m] If we are closer to the middle we assume to be not stuck.$/;"	m	class:Driver	file:
MIN_UNSTUCK_DIST	drivers/damned/driver.h	/^		static const float MIN_UNSTUCK_DIST;$/;"	m	class:Driver
MIN_UNSTUCK_DIST	drivers/olethros/driver.cpp	/^    const float Driver::MIN_UNSTUCK_DIST = 2.0f;					\/\/\/< [m] If we are closer to the middle we assume to be not stuck.$/;"	m	class:olethros::Driver	file:
MIN_UNSTUCK_DIST	drivers/olethros/driver.h	/^	static const float MIN_UNSTUCK_DIST;$/;"	m	class:olethros::Driver
MIN_UNSTUCK_DIST	drivers/sparkle/driver.cpp	/^const float Driver::MIN_UNSTUCK_DIST = 3.0;					\/* [m] *\/$/;"	m	class:Driver	file:
MIN_UNSTUCK_DIST	drivers/sparkle/driver.h	/^		static const float MIN_UNSTUCK_DIST;$/;"	m	class:Driver
MM_ATT_SOUND_ENABLE	libs/musicplayer/musicplayer.h	25;"	d
MM_SCT_SOUND	libs/musicplayer/musicplayer.h	24;"	d
MM_SOUND_PARM_CFG	libs/musicplayer/musicplayer.h	23;"	d
MM_VAL_SOUND_DISABLED	libs/musicplayer/musicplayer.h	27;"	d
MM_VAL_SOUND_ENABLED	libs/musicplayer/musicplayer.h	26;"	d
MODECHECK	libs/raceengineclient/raceengine.cpp	/^extern const short MODECHECK = 3;$/;"	v
MODULE	drivers/berniw/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	drivers/berniw2/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	drivers/berniw3/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	drivers/bt/Makefile	/^MODULE      = ${ROBOT}.so$/;"	m
MODULE	drivers/damned/Makefile	/^MODULE      = ${ROBOT}.so$/;"	m
MODULE	drivers/human/Makefile	/^MODULE    = ${ROBOT}.so$/;"	m
MODULE	drivers/inferno/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	drivers/inferno2/Makefile	/^MODULE    = ${ROBOT}.so$/;"	m
MODULE	drivers/lliaw/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	drivers/olethros/Makefile	/^MODULE      = ${ROBOT}.so$/;"	m
MODULE	drivers/sparkle/Makefile	/^MODULE      = ${ROBOT}.so$/;"	m
MODULE	drivers/tita/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	modules/graphic/ssggraph/Makefile	/^MODULE    = ssggraph.so$/;"	m
MODULE	modules/simu/simuv2/Makefile	/^MODULE		= simuv2.so$/;"	m
MODULE	modules/simu/simuv3/Makefile	/^MODULE		= simuv3.so$/;"	m
MODULE	modules/telemetry/Makefile	/^MODULE    = telemetry.so$/;"	m
MODULE	modules/track/Makefile	/^MODULE    = track.so$/;"	m
MODULEDIR	drivers/berniw/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/berniw2/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/berniw3/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/bt/Makefile	/^MODULEDIR   = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/damned/Makefile	/^MODULEDIR   = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/human/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/inferno/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/inferno2/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/lliaw/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/olethros/Makefile	/^MODULEDIR   = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/sparkle/Makefile	/^MODULEDIR   = drivers\/${ROBOT}$/;"	m
MODULEDIR	drivers/tita/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	modules/graphic/ssggraph/Makefile	/^MODULEDIR = modules\/graphic$/;"	m
MODULEDIR	modules/simu/simuv2/Makefile	/^MODULEDIR	= modules\/simu$/;"	m
MODULEDIR	modules/simu/simuv3/Makefile	/^MODULEDIR	= modules\/simu$/;"	m
MODULEDIR	modules/telemetry/Makefile	/^MODULEDIR = modules\/telemetry$/;"	m
MODULEDIR	modules/track/Makefile	/^MODULEDIR = modules\/track$/;"	m
MSDOS	windows/include/zconf.h	135;"	d
MULT	modules/graphic/ssggraph/grcar.cpp	447;"	d	file:
MULTIBYTE_CASES	libs/txml/xmltok_impl.c	1647;"	d	file:
MUST_CONVERT	libs/txml/xmlparse.c	33;"	d	file:
MUST_CONVERT	libs/txml/xmlparse.c	40;"	d	file:
MU_FACTOR	drivers/bt/driver.h	/^		float MU_FACTOR;				\/\/ [-]$/;"	m	class:Driver
MU_FACTOR	drivers/damned/driver.h	/^		float MU_FACTOR;				\/\/ [-]$/;"	m	class:Driver
MU_FACTOR	drivers/olethros/driver.h	/^	float MU_FACTOR;				\/\/\/< [-]$/;"	m	class:olethros::Driver
MU_FACTOR	drivers/sparkle/driver.h	/^		float MU_FACTOR;				\/* [-] *\/$/;"	m	class:Driver
M_PI	tools/accc/ac3dload.cpp	57;"	d	file:
M_PI	windows/osspec.h	53;"	d
ManagedStrategy	drivers/olethros/strategy.cpp	/^ManagedStrategy::ManagedStrategy() : SimpleStrategy()$/;"	f	class:olethros::ManagedStrategy
ManagedStrategy	drivers/olethros/strategy.h	/^class ManagedStrategy : public SimpleStrategy$/;"	c	namespace:olethros
MapId	libs/racescreens/trackselect.cpp	/^static int MapId;$/;"	v	file:
Margin	tools/trackgen/easymesh.cpp	/^static tdble 	Margin;$/;"	v	file:
Margin	tools/trackgen/elevation.cpp	/^static tdble 	Margin;$/;"	v	file:
Margin	tools/trackgen/maintrackgen.cpp	/^float Margin = 100.0;$/;"	v
Mat3	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^typedef Scalar Mat3[3][3];$/;"	t
Match	modules/simu/simuv3/Options.h	/^    virtual bool Match(const char* s) {$/;"	f	class:AbstractOption
Matrix	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix() {}$/;"	f	class:Matrix
Matrix	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(Scalar x, Scalar y, Scalar z) { setScaling(x, y, z); }$/;"	f	class:Matrix
Matrix	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(Scalar xx, Scalar xy, Scalar xz,$/;"	f	class:Matrix
Matrix	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(const Quaternion& q) { setRotation(q); }$/;"	f	class:Matrix
Matrix	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(const double *m) { setValue(m); }$/;"	f	class:Matrix
Matrix	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(const float *m) { setValue(m); }$/;"	f	class:Matrix
Matrix	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^class Matrix {$/;"	c
MaxFreqId	libs/tgfclient/screen.cpp	/^static int	MaxFreqId;$/;"	v	file:
MaxSpeed	drivers/inferno2/inferno2.cpp	/^tdble	MaxSpeed[10];$/;"	v
Max_Cl_given_Cd	modules/simu/simuv3/aero.cpp	/^tdble Max_Cl_given_Cd (tdble Cd)$/;"	f
Max_SCl_given_Cd	modules/simu/simuv3/aero.cpp	/^tdble Max_SCl_given_Cd (tdble Cd, tdble A)$/;"	f
MaximumLiftGivenDrag	modules/simu/simuv3/aero.cpp	/^tdble MaximumLiftGivenDrag (tdble drag, tdble A)$/;"	f
Measure	drivers/olethros/learn.h	/^		void Measure(float taccel_, float derr_, float dtm_)$/;"	f	class:olethros::SegLearn::Averages
MenuMusicOptionId	libs/confscreens/soundconfig.cpp	/^static int MenuMusicOptionId;$/;"	v	file:
MergeAll	tools/trackgen/maintrackgen.cpp	/^int MergeAll;$/;"	v
MergeTerrain	tools/trackgen/maintrackgen.cpp	/^int MergeTerrain;$/;"	v
Minv	modules/simu/simuv2/carstruct.h	/^    tdble	Minv;		\/* 1 \/ mass with pilot (without fuel) *\/$/;"	m	struct:__anon23
Minv	modules/simu/simuv3/carstruct.h	/^    tdble	Minv;		\/* 1 \/ mass with pilot (without fuel) *\/$/;"	m	struct:__anon42
ModInfo	libs/tgf/tgf.h	/^typedef struct ModInfo {$/;"	s
ModList	libs/tgf/tgf.h	/^typedef struct ModList {$/;"	s
Mode	libs/tgfclient/screen.cpp	/^static const char *Mode[] = {"Full-screen mode", "Window mode"};$/;"	v	file:
ModeLabelId	libs/tgfclient/screen.cpp	/^static int	ModeLabelId;$/;"	v	file:
ModePrevNext	libs/tgfclient/screen.cpp	/^ModePrevNext(void *vdelta)$/;"	f	file:
MouseCalAutomaton	libs/confscreens/mouseconfig.cpp	/^MouseCalAutomaton(void)$/;"	f	file:
MouseCalButton	libs/confscreens/controlconfig.cpp	/^static int	MouseCalButton;$/;"	v	file:
MouseCalMenuInit	libs/confscreens/mouseconfig.cpp	/^MouseCalMenuInit(void *prevMenu, tCmdInfo *cmd, int maxcmd)$/;"	f
MouseControlUsed	drivers/human/human.h	/^	int		MouseControlUsed;$/;"	m	struct:HumanContext
MouseInfo	libs/tgfclient/tgfclient.h	/^typedef struct MouseInfo$/;"	s
MultinomialGaussian	libs/learning/Distribution.h	/^	MultinomialGaussian() {d=1;}$/;"	f	class:MultinomialGaussian
MultinomialGaussian	libs/learning/Distribution.h	/^	MultinomialGaussian(int d)$/;"	f	class:MultinomialGaussian
MultinomialGaussian	libs/learning/Distribution.h	/^class MultinomialGaussian : public Distribution {$/;"	c
Mx	modules/simu/simuv3/aero.h	/^	tdble   Mx, My, Mz; \/* torques (only with aero damage) *\/$/;"	m	struct:__anon46
My	modules/simu/simuv3/aero.h	/^	tdble   Mx, My, Mz; \/* torques (only with aero damage) *\/$/;"	m	struct:__anon46
MyCar	drivers/berniw/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	drivers/berniw/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	drivers/berniw2/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	drivers/berniw2/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	drivers/berniw3/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	drivers/berniw3/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	drivers/human/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	drivers/human/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	drivers/inferno/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	drivers/inferno/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	drivers/lliaw/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	drivers/lliaw/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	drivers/tita/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	drivers/tita/mycar.h	/^class MyCar : public AbstractCar$/;"	c
Mz	modules/simu/simuv3/aero.h	/^	tdble   Mx, My, Mz; \/* torques (only with aero damage) *\/$/;"	m	struct:__anon46
N	tools/trackgen/easymesh.h	/^    int N;$/;"	m	struct:seg
NAME	tools/accc/ac3dload.cpp	42;"	d	file:
NAMED	libs/txml/hashtable.h	/^} NAMED;$/;"	t	typeref:struct:__anon106
NBBOTS	drivers/bt/bt.cpp	37;"	d	file:
NBBOTS	drivers/damned/damned.cpp	37;"	d	file:
NBBOTS	drivers/olethros/olethros.cpp	52;"	d	file:
NBBOTS	drivers/sparkle/sparkle.cpp	38;"	d	file:
NB_BG_FACES	modules/graphic/ssggraph/grscene.cpp	63;"	d	file:
NB_BOARDS	modules/graphic/ssggraph/grboard.cpp	48;"	d	file:
NB_CBOARDS	modules/graphic/ssggraph/grboard.cpp	50;"	d	file:
NB_CRASH_SOUND	modules/graphic/ssggraph/sound_defines.h	11;"	d
NB_DRV	libs/confscreens/driverconfig.cpp	52;"	d	file:
NB_ENGINE_SOUND	modules/graphic/ssggraph/sound_defines.h	12;"	d
NB_LBOARDS	modules/graphic/ssggraph/grboard.cpp	49;"	d	file:
NB_STEPS	libs/confscreens/joystickconfig.cpp	46;"	d	file:
NONE	drivers/olethros/pit.h	/^	NONE=0x0, APPROACHING, IN_LANE, PIT_EXIT$/;"	e	enum:olethros::PitState
NONE	interfaces/car.h	/^		NONE = 0, SPOOL = 1, FREE = 2, LIMITED_SLIP = 3, VISCOUS_COUPLER = 4$/;"	e	enum:__anon83::TDiffType
NORM0_2PI	libs/tgf/tgf.h	82;"	d
NORMAL	drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon151
NORMAL	drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon195
NORMAL	drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon174
NORMAL	drivers/human/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon186
NORMAL	drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon160
NORMAL	drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon206
NORMAL	drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon167
NORMAL_VTABLE	libs/txml/xmltok.c	144;"	d	file:
NORM_PI_PI	libs/tgf/tgf.h	89;"	d
NOTEXTURE	modules/graphic/ssggraph/grloadac.cpp	97;"	d	file:
NOTOPEN	windows/include/vorbis/vorbisfile.h	105;"	d
NO_CHECK_BOUNDS	drivers/olethros/geometry.h	/^	enum BoundsCheckingStatus {NO_CHECK_BOUNDS=0, CHECK_BOUNDS=1};$/;"	e	enum:Vector::BoundsCheckingStatus
NO_DRV	libs/confscreens/driverconfig.cpp	31;"	d	file:
NO_DUMMY_DECL	windows/include/zconf.h	202;"	d
NO_vsnprintf	windows/include/zconf.h	404;"	d
NO_vsnprintf	windows/include/zconf.h	408;"	d
NPOINTS	drivers/bt/pit.h	/^		enum { NPOINTS = 7 };$/;"	e	enum:Pit::__anon213
NPOINTS	drivers/damned/pit.h	/^		enum { NPOINTS = 7 };$/;"	e	enum:Pit::__anon204
NPOINTS	drivers/olethros/pit.h	/^		enum { NPOINTS = 7 };$/;"	e	enum:olethros::Pit::__anon205
NPOINTS	drivers/sparkle/pit.h	26;"	d
NTPARAMS	drivers/berniw/pathfinder.h	/^		enum { NTPARAMS = 1001 };		\/* # entries in dat files *\/$/;"	e	enum:Pathfinder::__anon159
NTPARAMS	drivers/berniw2/pathfinder.h	/^		enum { NTPARAMS = 1001 };		\/* # entries in dat files *\/$/;"	e	enum:Pathfinder::__anon203
NTPARAMS	drivers/berniw3/pathfinder.h	/^		enum { NTPARAMS = 1001 };		\/* # entries in dat files *\/$/;"	e	enum:Pathfinder::__anon182
NTPARAMS	drivers/human/pathfinder.h	/^		enum { NTPARAMS = 1001 };		\/* # entries in dat files *\/$/;"	e	enum:Pathfinder::__anon194
NUMSURF	tools/accc/ac3dload.cpp	48;"	d	file:
NUMVERT	tools/accc/ac3dload.cpp	47;"	d	file:
NUM_DUMMY	drivers/data_list.h	/^enum actuating_data_name{ACCEL, BRAKE, LEFT_STEER, RIGHT_STEER, STEER_MODE, NUM_DUMMY};$/;"	e	enum:actuating_data_name
NUM_JOY	libs/tgfclient/tgfclient.h	35;"	d
NUM_OF_DATA	yunseok/tcp_client.cpp	26;"	d	file:
NUM_OF_DATA	yunseok/tcp_client_2.cpp	25;"	d	file:
NUM_TYPES	modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^const int NUM_TYPES = 8;$/;"	v
N_THICKNESS_SEGMENTS	modules/simu/simuv3/wheel.h	26;"	d
NaiveInverseRotate	modules/simu/simuv3/car.cpp	/^void NaiveInverseRotate (t3Dd v, t3Dd u, t3Dd* v0)$/;"	f
NaiveRotate	modules/simu/simuv3/car.cpp	/^void NaiveRotate (t3Dd v, t3Dd u, t3Dd* v0)$/;"	f
NameEditId	libs/confscreens/driverconfig.cpp	/^static int NameEditId;$/;"	v	file:
NbMaxCols	tools/texmapper/maintexmapper.cpp	/^int	NbMaxCols;$/;"	v
NbPitStopProg	drivers/human/human.h	/^	int		NbPitStopProg;$/;"	m	struct:HumanContext
NbPitStops	drivers/human/human.h	/^	int		NbPitStops;$/;"	m	struct:HumanContext
NbRows	tools/texmapper/maintexmapper.cpp	/^int	NbRows;$/;"	v
Nc	tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
Ne	tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
NewANN	libs/learning/ANN.cpp	/^ANN *NewANN(int n_inputs, int n_outputs)$/;"	f
NewElt	libs/txml/xml.cpp	/^NewElt(const char *name, const char **atts)$/;"	f	file:
NewStringBuffer	libs/learning/string_utils.cpp	/^StringBuffer* NewStringBuffer (int length)$/;"	f
NextListItem	libs/learning/List.cpp	/^LISTITEM* NextListItem(LIST* list)$/;"	f
Nn	tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
Nne	tools/trackgen/easymesh.h	/^    int    Nne;$/;"	m	struct:nod
None	modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
NormalDistribution	libs/learning/Distribution.h	/^	NormalDistribution() {m=0.0; s=1.0; cache = false;}$/;"	f	class:NormalDistribution
NormalDistribution	libs/learning/Distribution.h	/^	NormalDistribution(real mean, real std)$/;"	f	class:NormalDistribution
NormalDistribution	libs/learning/Distribution.h	/^class NormalDistribution : public ParametricDistribution {$/;"	c
Normalise	drivers/olethros/TrackData.h	/^    void Normalise()$/;"	f	class:Point
Normalise	libs/learning/MathFunctions.cpp	/^void Normalise (real* src, real* dst, int n_elements)$/;"	f
Ns	tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
O1	drivers/inferno2/inferno2.cpp	/^tdble O1[10] = {60.0};$/;"	v
O2	drivers/inferno2/inferno2.cpp	/^tdble O2[10] = {60.0};$/;"	v
O3	drivers/inferno2/inferno2.cpp	/^tdble O3[10] = {0.0};$/;"	v
O4	drivers/inferno2/inferno2.cpp	/^tdble O4[10] = {0.0};$/;"	v
O5	drivers/inferno2/inferno2.cpp	/^tdble O5[10] = {20.0};$/;"	v
OA	drivers/inferno2/inferno2.cpp	/^tdble OA[10] = {0.0};$/;"	v
OBJECT	tools/accc/ac3dload.cpp	40;"	d	file:
OBJ_GROUP	modules/graphic/ssggraph/grloadac.cpp	235;"	d	file:
OBJ_LIGHT	modules/graphic/ssggraph/grloadac.cpp	236;"	d	file:
OBJ_POLY	modules/graphic/ssggraph/grloadac.cpp	234;"	d	file:
OBJ_WORLD	modules/graphic/ssggraph/grloadac.cpp	233;"	d	file:
OF	windows/include/zconf.h	240;"	d
OF	windows/include/zconf.h	242;"	d
OFF	tools/trackgen/easymesh.cpp	53;"	d	file:
OFFSET	drivers/inferno2/inferno2.cpp	233;"	d	file:
OFFSETAPPROACH	drivers/inferno2/inferno2.cpp	234;"	d	file:
OFFSETEXIT	drivers/inferno2/inferno2.cpp	236;"	d	file:
OFFSETFINAL	drivers/inferno2/inferno2.cpp	235;"	d	file:
OFFSET_CMD	libs/confscreens/joystickconfig.cpp	48;"	d	file:
OLETHROS_ATT_FUELCONSUMPTION	drivers/olethros/driver.h	45;"	d
OLETHROS_ATT_FUELPERLAP	drivers/olethros/driver.h	44;"	d
OLETHROS_ATT_MUFACTOR	drivers/olethros/driver.h	46;"	d
OLETHROS_SECT_PRIV	drivers/olethros/driver.h	43;"	d
ON	tools/trackgen/easymesh.cpp	52;"	d	file:
OP	drivers/inferno2/inferno2.cpp	/^tdble OP[10] = {15.0};$/;"	v
OPEN	tools/trackgen/easymesh.cpp	65;"	d	file:
OPENAL	windows/include/AL/al.h	60;"	d
OPENAL_MODE	modules/graphic/ssggraph/grsound.cpp	/^enum SoundMode {DISABLED, OPENAL_MODE, PLIB_MODE};$/;"	e	enum:SoundMode	file:
OPENED	windows/include/vorbis/vorbisfile.h	107;"	d
OPP_BACK	drivers/bt/opponent.h	40;"	d
OPP_BACK	drivers/damned/opponent.h	40;"	d
OPP_BACK	drivers/olethros/opponent.h	41;"	d
OPP_BACK	drivers/sparkle/opponent.h	40;"	d
OPP_COLL	drivers/bt/opponent.h	42;"	d
OPP_COLL	drivers/damned/opponent.h	42;"	d
OPP_COLL	drivers/olethros/opponent.h	43;"	d
OPP_COLL	drivers/sparkle/opponent.h	42;"	d
OPP_FRONT	drivers/bt/opponent.h	39;"	d
OPP_FRONT	drivers/damned/opponent.h	39;"	d
OPP_FRONT	drivers/olethros/opponent.h	40;"	d
OPP_FRONT	drivers/sparkle/opponent.h	39;"	d
OPP_FRONT_FAST	drivers/bt/opponent.h	44;"	d
OPP_FRONT_FAST	drivers/damned/opponent.h	44;"	d
OPP_FRONT_FAST	drivers/olethros/opponent.h	45;"	d
OPP_IGNORE	drivers/bt/opponent.h	38;"	d
OPP_IGNORE	drivers/damned/opponent.h	38;"	d
OPP_IGNORE	drivers/olethros/opponent.h	39;"	d
OPP_IGNORE	drivers/sparkle/opponent.h	38;"	d
OPP_LETPASS	drivers/bt/opponent.h	43;"	d
OPP_LETPASS	drivers/damned/opponent.h	43;"	d
OPP_LETPASS	drivers/olethros/opponent.h	44;"	d
OPP_SIDE	drivers/bt/opponent.h	41;"	d
OPP_SIDE	drivers/damned/opponent.h	41;"	d
OPP_SIDE	drivers/olethros/opponent.h	42;"	d
OPP_SIDE	drivers/sparkle/opponent.h	41;"	d
OPTIMAL	modules/simu/simuv3/SimulationOptions.h	/^    OPTIMAL, \/\/\/< Gives the maximum theoretically allowed (accorindg to the principle of the conservation of energy) amount of lift for a given drag.$/;"	e	enum:AeroFlowModel
OPTIONS_H	modules/simu/simuv3/Options.h	13;"	d
OS2	windows/include/zconf.h	138;"	d
OSI_MAX_BUFFERS	modules/graphic/ssggraph/SoundInterface.h	/^	int OSI_MAX_BUFFERS;$/;"	m	class:OpenalSoundInterface
OSI_MAX_SOURCES	modules/graphic/ssggraph/SoundInterface.h	/^	int OSI_MAX_SOURCES;$/;"	m	class:OpenalSoundInterface
OSI_MAX_STATIC_SOURCES	modules/graphic/ssggraph/SoundInterface.h	/^	int OSI_MAX_STATIC_SOURCES;$/;"	m	class:OpenalSoundInterface
OSI_MIN_DYNAMIC_SOURCES	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^const int OpenalSoundInterface::OSI_MIN_DYNAMIC_SOURCES = 4;$/;"	m	class:OpenalSoundInterface	file:
OSI_MIN_DYNAMIC_SOURCES	modules/graphic/ssggraph/SoundInterface.h	/^	static const int OSI_MIN_DYNAMIC_SOURCES;$/;"	m	class:OpenalSoundInterface
OVERLAPPASSDIST	drivers/berniw/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;		\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	drivers/berniw/mycar.h	/^		static const double OVERLAPPASSDIST;	\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar
OVERLAPPASSDIST	drivers/berniw2/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;		\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	drivers/berniw2/mycar.h	/^		static const double OVERLAPPASSDIST;	\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar
OVERLAPPASSDIST	drivers/berniw3/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;		\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	drivers/berniw3/mycar.h	/^		static const double OVERLAPPASSDIST;	\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar
OVERLAPPASSDIST	drivers/human/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;		\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	drivers/human/mycar.h	/^		static const double OVERLAPPASSDIST;	\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar
OVERLAPPASSDIST	drivers/inferno/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;			\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	drivers/inferno/mycar.h	/^		static const double OVERLAPPASSDIST;		\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar
OVERLAPPASSDIST	drivers/lliaw/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;			\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	drivers/lliaw/mycar.h	/^		static const double OVERLAPPASSDIST;		\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar
OVERLAPPASSDIST	drivers/tita/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;			\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	drivers/tita/mycar.h	/^		static const double OVERLAPPASSDIST;		\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar
OVERLAPSTARTDIST	drivers/berniw/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	drivers/berniw/mycar.h	/^		static const double OVERLAPSTARTDIST;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar
OVERLAPSTARTDIST	drivers/berniw2/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	drivers/berniw2/mycar.h	/^		static const double OVERLAPSTARTDIST;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar
OVERLAPSTARTDIST	drivers/berniw3/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	drivers/berniw3/mycar.h	/^		static const double OVERLAPSTARTDIST;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar
OVERLAPSTARTDIST	drivers/human/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	drivers/human/mycar.h	/^		static const double OVERLAPSTARTDIST;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar
OVERLAPSTARTDIST	drivers/inferno/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	drivers/inferno/mycar.h	/^		static const double OVERLAPSTARTDIST;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar
OVERLAPSTARTDIST	drivers/lliaw/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	drivers/lliaw/mycar.h	/^		static const double OVERLAPSTARTDIST;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar
OVERLAPSTARTDIST	drivers/tita/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	drivers/tita/mycar.h	/^		static const double OVERLAPSTARTDIST;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar
OVERLAPWAITTIME	drivers/berniw/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;		\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	drivers/berniw/mycar.h	/^		static const double OVERLAPWAITTIME;	\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar
OVERLAPWAITTIME	drivers/berniw2/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;		\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	drivers/berniw2/mycar.h	/^		static const double OVERLAPWAITTIME;	\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar
OVERLAPWAITTIME	drivers/berniw3/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;		\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	drivers/berniw3/mycar.h	/^		static const double OVERLAPWAITTIME;	\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar
OVERLAPWAITTIME	drivers/human/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;		\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	drivers/human/mycar.h	/^		static const double OVERLAPWAITTIME;	\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar
OVERLAPWAITTIME	drivers/inferno/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;			\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	drivers/inferno/mycar.h	/^		static const double OVERLAPWAITTIME;		\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar
OVERLAPWAITTIME	drivers/lliaw/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;			\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	drivers/lliaw/mycar.h	/^		static const double OVERLAPWAITTIME;		\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar
OVERLAPWAITTIME	drivers/tita/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;			\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	drivers/tita/mycar.h	/^		static const double OVERLAPWAITTIME;		\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar
OVERLAP_WAIT_TIME	drivers/bt/opponent.cpp	/^const float Opponent::OVERLAP_WAIT_TIME = 5.0f;			\/\/ [s] overlaptimer must reach this time before we let the opponent pass.$/;"	m	class:Opponent	file:
OVERLAP_WAIT_TIME	drivers/bt/opponent.h	/^		static const float OVERLAP_WAIT_TIME;$/;"	m	class:Opponent
OVERLAP_WAIT_TIME	drivers/damned/opponent.cpp	/^const float Opponent::OVERLAP_WAIT_TIME = 5.0f;			\/\/ [s] overlaptimer must reach this time before we let the opponent pass.$/;"	m	class:Opponent	file:
OVERLAP_WAIT_TIME	drivers/damned/opponent.h	/^		static const float OVERLAP_WAIT_TIME;$/;"	m	class:Opponent
OVERLAP_WAIT_TIME	drivers/olethros/opponent.cpp	/^const float Opponent::OVERLAP_WAIT_TIME = 5.0;			\/\/ [s] overlaptimer must reach this time before we let the opponent pass.$/;"	m	class:olethros::Opponent	file:
OVERLAP_WAIT_TIME	drivers/olethros/opponent.h	/^		static const float OVERLAP_WAIT_TIME;$/;"	m	class:olethros::Opponent
OVERTAKEANGLE	drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;		\/* minimum angle between cars [radians] *\/$/;"	m	class:MyCar	file:
OVERTAKEANGLE	drivers/berniw/mycar.h	/^		static const double OVERTAKEANGLE;		\/* [-] radians *\/$/;"	m	class:MyCar
OVERTAKEANGLE	drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;		\/* minimum angle between cars [radians] *\/$/;"	m	class:MyCar	file:
OVERTAKEANGLE	drivers/berniw2/mycar.h	/^		static const double OVERTAKEANGLE;		\/* [-] radians *\/$/;"	m	class:MyCar
OVERTAKEANGLE	drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;		\/* minimum angle between cars [radians] *\/$/;"	m	class:MyCar	file:
OVERTAKEANGLE	drivers/berniw3/mycar.h	/^		static const double OVERTAKEANGLE;		\/* [-] radians *\/$/;"	m	class:MyCar
OVERTAKEANGLE	drivers/human/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;		\/* minimum angle between cars [radians] *\/$/;"	m	class:MyCar	file:
OVERTAKEANGLE	drivers/human/mycar.h	/^		static const double OVERTAKEANGLE;		\/* [-] radians *\/$/;"	m	class:MyCar
OVERTAKEANGLE	drivers/inferno/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;			\/\/ Minimum angle between cars [radians].$/;"	m	class:MyCar	file:
OVERTAKEANGLE	drivers/inferno/mycar.h	/^		static const double OVERTAKEANGLE;			\/\/ [-] radians.$/;"	m	class:MyCar
OVERTAKEANGLE	drivers/lliaw/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;			\/\/ Minimum angle between cars [radians].$/;"	m	class:MyCar	file:
OVERTAKEANGLE	drivers/lliaw/mycar.h	/^		static const double OVERTAKEANGLE;			\/\/ [-] radians.$/;"	m	class:MyCar
OVERTAKEANGLE	drivers/tita/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;			\/\/ Minimum angle between cars [radians].$/;"	m	class:MyCar	file:
OVERTAKEANGLE	drivers/tita/mycar.h	/^		static const double OVERTAKEANGLE;			\/\/ [-] radians.$/;"	m	class:MyCar
OVERTAKEDIST	drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;			\/* planning distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEDIST	drivers/berniw/mycar.h	/^		static const double OVERTAKEDIST;		\/* planned distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEDIST	drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;			\/* planning distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEDIST	drivers/berniw2/mycar.h	/^		static const double OVERTAKEDIST;		\/* planned distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEDIST	drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;			\/* planning distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEDIST	drivers/berniw3/mycar.h	/^		static const double OVERTAKEDIST;		\/* planned distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEDIST	drivers/human/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;			\/* planning distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEDIST	drivers/human/mycar.h	/^		static const double OVERTAKEDIST;		\/* planned distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEDIST	drivers/inferno/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;				\/\/ Planning distance of CG's while overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEDIST	drivers/inferno/mycar.h	/^		static const double OVERTAKEDIST;			\/\/ Planned distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEDIST	drivers/lliaw/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;				\/\/ Planning distance of CG's while overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEDIST	drivers/lliaw/mycar.h	/^		static const double OVERTAKEDIST;			\/\/ Planned distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEDIST	drivers/tita/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;				\/\/ Planning distance of CG's while overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEDIST	drivers/tita/mycar.h	/^		static const double OVERTAKEDIST;			\/\/ Planned distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEMARGIN	drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKEMARGIN = 1.7;		\/* distance between cars [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMARGIN	drivers/berniw/mycar.h	/^		static const double OVERTAKEMARGIN;		\/* [m] *\/$/;"	m	class:MyCar
OVERTAKEMARGIN	drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKEMARGIN = 1.7;		\/* distance between cars [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMARGIN	drivers/berniw2/mycar.h	/^		static const double OVERTAKEMARGIN;		\/* [m] *\/$/;"	m	class:MyCar
OVERTAKEMARGIN	drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKEMARGIN = 1.7;		\/* distance between cars [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMARGIN	drivers/berniw3/mycar.h	/^		static const double OVERTAKEMARGIN;		\/* [m] *\/$/;"	m	class:MyCar
OVERTAKEMARGIN	drivers/human/mycar.cpp	/^const double MyCar::OVERTAKEMARGIN = 1.7;		\/* distance between cars [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMARGIN	drivers/human/mycar.h	/^		static const double OVERTAKEMARGIN;		\/* [m] *\/$/;"	m	class:MyCar
OVERTAKEMINDIST	drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;		\/* minimal distance between cars overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	drivers/berniw/mycar.h	/^		static const double OVERTAKEMINDIST;	\/* minimal distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEMINDIST	drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;		\/* minimal distance between cars overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	drivers/berniw2/mycar.h	/^		static const double OVERTAKEMINDIST;	\/* minimal distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEMINDIST	drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;		\/* minimal distance between cars overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	drivers/berniw3/mycar.h	/^		static const double OVERTAKEMINDIST;	\/* minimal distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEMINDIST	drivers/human/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;		\/* minimal distance between cars overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	drivers/human/mycar.h	/^		static const double OVERTAKEMINDIST;	\/* minimal distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEMINDIST	drivers/inferno/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;			\/\/ Minimal distance between cars overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	drivers/inferno/mycar.h	/^		static const double OVERTAKEMINDIST;		\/\/ Minimal distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEMINDIST	drivers/lliaw/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;			\/\/ Minimal distance between cars overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	drivers/lliaw/mycar.h	/^		static const double OVERTAKEMINDIST;		\/\/ Minimal distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEMINDIST	drivers/tita/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;			\/\/ Minimal distance between cars overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	drivers/tita/mycar.h	/^		static const double OVERTAKEMINDIST;		\/\/ Minimal distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKERADIUS	drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKERADIUS	drivers/berniw/mycar.h	/^		static const double OVERTAKERADIUS;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKERADIUS	drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKERADIUS	drivers/berniw2/mycar.h	/^		static const double OVERTAKERADIUS;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKERADIUS	drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKERADIUS	drivers/berniw3/mycar.h	/^		static const double OVERTAKERADIUS;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKERADIUS	drivers/human/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKERADIUS	drivers/human/mycar.h	/^		static const double OVERTAKERADIUS;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKERADIUS	drivers/inferno/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKERADIUS	drivers/inferno/mycar.h	/^		static const double OVERTAKERADIUS;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar
OVERTAKERADIUS	drivers/lliaw/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKERADIUS	drivers/lliaw/mycar.h	/^		static const double OVERTAKERADIUS;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar
OVERTAKERADIUS	drivers/tita/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKERADIUS	drivers/tita/mycar.h	/^		static const double OVERTAKERADIUS;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar
OVERTAKE_OFFSET_INC	drivers/bt/driver.h	/^		float OVERTAKE_OFFSET_INC;		\/\/ [m\/timestep]$/;"	m	class:Driver
OVERTAKE_OFFSET_INC	drivers/damned/driver.h	/^		float OVERTAKE_OFFSET_INC;		\/\/ [m\/timestep]$/;"	m	class:Driver
OVERTAKE_OFFSET_INC	drivers/olethros/driver.h	/^	float OVERTAKE_OFFSET_INC;		\/\/\/< [m\/timestep]$/;"	m	class:olethros::Driver
OVERTAKE_OFFSET_INC	drivers/sparkle/driver.h	/^		float OVERTAKE_OFFSET_INC;		\/* [m\/timestep] *\/$/;"	m	class:Driver
OVERTAKE_OFFSET_SPEED	drivers/bt/driver.cpp	/^const float Driver::OVERTAKE_OFFSET_SPEED = 5.0f;			\/\/ [m\/s] Offset change speed.$/;"	m	class:Driver	file:
OVERTAKE_OFFSET_SPEED	drivers/bt/driver.h	/^		static const float OVERTAKE_OFFSET_SPEED;$/;"	m	class:Driver
OVERTAKE_OFFSET_SPEED	drivers/damned/driver.cpp	/^const float Driver::OVERTAKE_OFFSET_SPEED = 5.0f;			\/\/ [m\/s] Offset change speed.$/;"	m	class:Driver	file:
OVERTAKE_OFFSET_SPEED	drivers/damned/driver.h	/^		static const float OVERTAKE_OFFSET_SPEED;$/;"	m	class:Driver
OVERTAKE_OFFSET_SPEED	drivers/olethros/driver.cpp	/^    const float Driver::OVERTAKE_OFFSET_SPEED = 2.0f;			\/\/\/< [m\/s] Offset change speed.$/;"	m	class:olethros::Driver	file:
OVERTAKE_OFFSET_SPEED	drivers/olethros/driver.h	/^	static const float OVERTAKE_OFFSET_SPEED;$/;"	m	class:olethros::Driver
OVERTAKE_OFFSET_SPEED	drivers/sparkle/driver.cpp	/^const float Driver::OVERTAKE_OFFSET_SPEED = 5.0;			\/* [m\/s] *\/$/;"	m	class:Driver	file:
OVERTAKE_OFFSET_SPEED	drivers/sparkle/driver.h	/^		static const float OVERTAKE_OFFSET_SPEED;$/;"	m	class:Driver
OVERTAKE_TIME	drivers/olethros/driver.cpp	/^    const float Driver::OVERTAKE_TIME = 2.0f;			        \/\/\/< [s] Approach time to consider overtaking.$/;"	m	class:olethros::Driver	file:
OVERTAKE_TIME	drivers/olethros/driver.h	/^	static const float OVERTAKE_TIME;$/;"	m	class:olethros::Driver
OV_CALLBACKS_DEFAULT	windows/include/vorbis/vorbisfile.h	/^static ov_callbacks OV_CALLBACKS_DEFAULT = {$/;"	v
OV_CALLBACKS_NOCLOSE	windows/include/vorbis/vorbisfile.h	/^static ov_callbacks OV_CALLBACKS_NOCLOSE = {$/;"	v
OV_CALLBACKS_STREAMONLY	windows/include/vorbis/vorbisfile.h	/^static ov_callbacks OV_CALLBACKS_STREAMONLY = {$/;"	v
OV_CALLBACKS_STREAMONLY_NOCLOSE	windows/include/vorbis/vorbisfile.h	/^static ov_callbacks OV_CALLBACKS_STREAMONLY_NOCLOSE = {$/;"	v
OV_EBADHEADER	windows/include/vorbis/codec.h	231;"	d
OV_EBADLINK	windows/include/vorbis/codec.h	235;"	d
OV_EBADPACKET	windows/include/vorbis/codec.h	234;"	d
OV_ECTL_COUPLING_GET	windows/include/vorbis/vorbisenc.h	367;"	d
OV_ECTL_COUPLING_SET	windows/include/vorbis/vorbisenc.h	379;"	d
OV_ECTL_IBLOCK_GET	windows/include/vorbis/vorbisenc.h	348;"	d
OV_ECTL_IBLOCK_SET	windows/include/vorbis/vorbisenc.h	359;"	d
OV_ECTL_LOWPASS_GET	windows/include/vorbis/vorbisenc.h	332;"	d
OV_ECTL_LOWPASS_SET	windows/include/vorbis/vorbisenc.h	340;"	d
OV_ECTL_RATEMANAGE2_GET	windows/include/vorbis/vorbisenc.h	313;"	d
OV_ECTL_RATEMANAGE2_SET	windows/include/vorbis/vorbisenc.h	324;"	d
OV_ECTL_RATEMANAGE_AVG	windows/include/vorbis/vorbisenc.h	415;"	d
OV_ECTL_RATEMANAGE_GET	windows/include/vorbis/vorbisenc.h	393;"	d
OV_ECTL_RATEMANAGE_HARD	windows/include/vorbis/vorbisenc.h	426;"	d
OV_ECTL_RATEMANAGE_SET	windows/include/vorbis/vorbisenc.h	404;"	d
OV_EFAULT	windows/include/vorbis/codec.h	227;"	d
OV_EIMPL	windows/include/vorbis/codec.h	228;"	d
OV_EINVAL	windows/include/vorbis/codec.h	229;"	d
OV_ENOSEEK	windows/include/vorbis/codec.h	236;"	d
OV_ENOTAUDIO	windows/include/vorbis/codec.h	233;"	d
OV_ENOTVORBIS	windows/include/vorbis/codec.h	230;"	d
OV_EOF	windows/include/vorbis/codec.h	223;"	d
OV_EREAD	windows/include/vorbis/codec.h	226;"	d
OV_EVERSION	windows/include/vorbis/codec.h	232;"	d
OV_EXCLUDE_STATIC_CALLBACKS	libs/musicplayer/OggSoundStream.h	25;"	d
OV_FALSE	windows/include/vorbis/codec.h	222;"	d
OV_HOLE	windows/include/vorbis/codec.h	224;"	d
OW	drivers/inferno2/inferno2.cpp	/^tdble OW[10] = {2.0};$/;"	v
ObjCopy	libs/learning/learn_debug.h	33;"	d
ObjPair	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^typedef pair<DtObjectRef, DtObjectRef> ObjPair;$/;"	t
ObjUniqId	tools/trackgen/objects.cpp	/^static int		ObjUniqId = 0;$/;"	v	file:
Object	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^Object::Object(DtObjectRef obj, ShapePtr shape) : $/;"	f	class:Object
Object	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^class Object {$/;"	c
ObjectList	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef map<DtObjectRef, Object *> ObjectList;$/;"	t	file:
ObjectPtr	modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^typedef const Object *ObjectPtr;$/;"	t
Offset	drivers/inferno2/inferno2.cpp	/^static tdble Offset[10]    = {0.0f};$/;"	v	file:
OffsetApproach	drivers/inferno2/inferno2.cpp	/^tdble OffsetApproach[10] = {0.0};$/;"	v
OffsetExit	drivers/inferno2/inferno2.cpp	/^tdble OffsetExit[10]     = {0.0};$/;"	v
OffsetFinal	drivers/inferno2/inferno2.cpp	/^tdble OffsetFinal[10]    = {0.0};$/;"	v
OggSoundStream	libs/musicplayer/OggSoundStream.cpp	/^OggSoundStream::OggSoundStream(char* path):$/;"	f	class:OggSoundStream
OggSoundStream	libs/musicplayer/OggSoundStream.h	/^class OggSoundStream : public SoundStream$/;"	c
OggVorbis_File	windows/include/vorbis/vorbisfile.h	/^typedef struct OggVorbis_File {$/;"	s
OggVorbis_File	windows/include/vorbis/vorbisfile.h	/^} OggVorbis_File;$/;"	t	typeref:struct:OggVorbis_File
OldTime	modules/graphic/ssggraph/grmain.cpp	/^static double OldTime;$/;"	v	file:
OpenALMusicPlayer	libs/musicplayer/OpenALMusicPlayer.cpp	/^OpenALMusicPlayer::OpenALMusicPlayer(SoundStream* soundStream):$/;"	f	class:OpenALMusicPlayer
OpenALMusicPlayer	libs/musicplayer/OpenALMusicPlayer.h	/^class OpenALMusicPlayer$/;"	c
OpenGLMenuInit	libs/confscreens/openglconfig.cpp	/^void * OpenGLMenuInit(void *prevMenu)$/;"	f
OpenalSoundInterface	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^OpenalSoundInterface::OpenalSoundInterface(float sampling_rate, int n_channels): SoundInterface (sampling_rate, n_channels)$/;"	f	class:OpenalSoundInterface
OpenalSoundInterface	modules/graphic/ssggraph/SoundInterface.h	/^class OpenalSoundInterface : public SoundInterface {$/;"	c
OpenalTorcsSound	modules/graphic/ssggraph/TorcsSound.cpp	/^OpenalTorcsSound::OpenalTorcsSound(const char* filename, OpenalSoundInterface* sitf, int flags, bool loop, bool static_pool)$/;"	f	class:OpenalTorcsSound
OpenalTorcsSound	modules/graphic/ssggraph/TorcsSound.h	/^class OpenalTorcsSound : public TorcsSound {$/;"	c
Opponent	drivers/bt/opponent.cpp	/^Opponent::Opponent() : teammate(false)$/;"	f	class:Opponent
Opponent	drivers/bt/opponent.h	/^class Opponent {$/;"	c
Opponent	drivers/damned/opponent.cpp	/^Opponent::Opponent() : teammate(false)$/;"	f	class:Opponent
Opponent	drivers/damned/opponent.h	/^class Opponent {$/;"	c
Opponent	drivers/olethros/opponent.cpp	/^Opponent::Opponent()$/;"	f	class:olethros::Opponent
Opponent	drivers/olethros/opponent.h	/^	class Opponent {$/;"	c	namespace:olethros
Opponent	drivers/sparkle/opponent.cpp	/^Opponent::Opponent()$/;"	f	class:Opponent
Opponent	drivers/sparkle/opponent.h	/^class Opponent {$/;"	c
Opponents	drivers/bt/opponent.cpp	/^Opponents::Opponents(tSituation *s, Driver *driver, Cardata *c)$/;"	f	class:Opponents
Opponents	drivers/bt/opponent.h	/^class Opponents {$/;"	c
Opponents	drivers/damned/opponent.cpp	/^Opponents::Opponents(tSituation *s, Driver *driver, Cardata *c)$/;"	f	class:Opponents
Opponents	drivers/damned/opponent.h	/^class Opponents {$/;"	c
Opponents	drivers/olethros/opponent.cpp	/^Opponents::Opponents(tSituation *s, Driver *driver, Cardata *c)$/;"	f	class:olethros::Opponents
Opponents	drivers/olethros/opponent.h	/^	class Opponents {$/;"	c	namespace:olethros
Opponents	drivers/sparkle/opponent.cpp	/^Opponents::Opponents(tSituation *s, Driver *driver)$/;"	f	class:Opponents
Opponents	drivers/sparkle/opponent.h	/^class Opponents {$/;"	c
Optimise	drivers/olethros/Trajectory.cpp	/^void Trajectory::Optimise(SegmentList track, int max_iter, float alpha, const char* fname, bool reset)$/;"	f	class:Trajectory
Option	modules/simu/simuv3/Options.h	/^    Option(const char* s, T* p)$/;"	f	class:Option
Option	modules/simu/simuv3/Options.h	/^template <typename T> class Option : public AbstractOption {$/;"	c
OptionList	modules/simu/simuv3/Options.h	/^    OptionList()$/;"	f	class:OptionList
OptionList	modules/simu/simuv3/Options.h	/^class OptionList {$/;"	c
OrderString	tools/accc/mainaccc.cpp	/^char *OrderString=NULL;$/;"	v
OtherCar	drivers/berniw/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	drivers/berniw2/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	drivers/berniw3/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	drivers/human/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	drivers/inferno/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	drivers/lliaw/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	drivers/tita/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OutMeshName	tools/trackgen/maintrackgen.cpp	/^char *OutMeshName;$/;"	v
OutTrackName	tools/trackgen/maintrackgen.cpp	/^char *OutTrackName;$/;"	v
OutputFileName	tools/accc/mainaccc.cpp	/^char	*OutputFileName = NULL;$/;"	v
OutputFileName	tools/texmapper/maintexmapper.cpp	/^char	*OutputFileName = NULL;$/;"	v
OutputFileName	tools/trackgen/maintrackgen.cpp	/^char *OutputFileName;$/;"	v
P	libs/learning/policy.h	/^	real** P; \/\/\/< pursuit action probabilities$/;"	m	class:DiscretePolicy
P2	tools/accc/ac3dload.cpp	3848;"	d	file:
PARAMEXT	linux/osspec.h	27;"	d
PARAMEXT	windows/osspec.h	27;"	d
PARAM_CREATE	libs/tgf/params.cpp	42;"	d	file:
PARM_HANDLE_FLAG_PARSE_ERROR	libs/tgf/params.cpp	104;"	d	file:
PARM_HANDLE_FLAG_PRIVATE	libs/tgf/params.cpp	103;"	d	file:
PARM_MAGIC	libs/tgf/params.cpp	89;"	d	file:
PARSE_CONT	modules/graphic/ssggraph/grloadac.cpp	128;"	d	file:
PARSE_POP	modules/graphic/ssggraph/grloadac.cpp	129;"	d	file:
PARTOPEN	windows/include/vorbis/vorbisfile.h	106;"	d
PASSED_TIME	drivers/data_list.h	/^			IS_RUNNING, 	PASSED_TIME};$/;"	e	enum:sensing_data_name
PATHBUF	drivers/inferno/pathfinder.h	51;"	d
PATHBUF	drivers/lliaw/pathfinder.h	51;"	d
PATHBUF	drivers/tita/pathfinder.h	51;"	d
PATHERR	drivers/berniw/mycar.cpp	/^const double MyCar::PATHERR = 0.5;				\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar	file:
PATHERR	drivers/berniw/mycar.h	/^		static const double PATHERR;			\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar
PATHERR	drivers/berniw2/mycar.cpp	/^const double MyCar::PATHERR = 0.5;				\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar	file:
PATHERR	drivers/berniw2/mycar.h	/^		static const double PATHERR;			\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar
PATHERR	drivers/berniw3/mycar.cpp	/^const double MyCar::PATHERR = 0.5;				\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar	file:
PATHERR	drivers/berniw3/mycar.h	/^		static const double PATHERR;			\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar
PATHERR	drivers/human/mycar.cpp	/^const double MyCar::PATHERR = 0.5;				\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar	file:
PATHERR	drivers/human/mycar.h	/^		static const double PATHERR;			\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar
PATHERR	drivers/inferno/mycar.cpp	/^const double MyCar::PATHERR = 0.5;					\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar	file:
PATHERR	drivers/inferno/mycar.h	/^		static const double PATHERR;				\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar
PATHERR	drivers/lliaw/mycar.cpp	/^const double MyCar::PATHERR = 0.5;					\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar	file:
PATHERR	drivers/lliaw/mycar.h	/^		static const double PATHERR;				\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar
PATHERR	drivers/tita/mycar.cpp	/^const double MyCar::PATHERR = 0.5;					\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar	file:
PATHERR	drivers/tita/mycar.h	/^		static const double PATHERR;				\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar
PATHERRFACTOR	drivers/berniw/mycar.h	/^		double PATHERRFACTOR;							\/* if derror > PATHERR*PATHERRFACTOR we compute a corrected path [-] *\/$/;"	m	class:MyCar
PATHERRFACTOR	drivers/berniw2/mycar.h	/^		double PATHERRFACTOR;							\/* if derror > PATHERR*PATHERRFACTOR we compute a corrected path [-] *\/$/;"	m	class:MyCar
PATHERRFACTOR	drivers/berniw3/mycar.h	/^		double PATHERRFACTOR;							\/* if derror > PATHERR*PATHERRFACTOR we compute a corrected path [-] *\/$/;"	m	class:MyCar
PATHERRFACTOR	drivers/human/mycar.h	/^		double PATHERRFACTOR;							\/* if derror > PATHERR*PATHERRFACTOR we compute a corrected path [-] *\/$/;"	m	class:MyCar
PATHERRFACTOR	drivers/inferno/mycar.h	/^		double PATHERRFACTOR;							\/\/ If derror > PATHERR*PATHERRFACTOR we compute a corrected path [-].$/;"	m	class:MyCar
PATHERRFACTOR	drivers/lliaw/mycar.h	/^		double PATHERRFACTOR;							\/\/ If derror > PATHERR*PATHERRFACTOR we compute a corrected path [-].$/;"	m	class:MyCar
PATHERRFACTOR	drivers/tita/mycar.h	/^		double PATHERRFACTOR;							\/\/ If derror > PATHERR*PATHERRFACTOR we compute a corrected path [-].$/;"	m	class:MyCar
PATH_K1999	drivers/berniw/pathfinder.h	57;"	d
PATH_K1999	drivers/berniw2/pathfinder.h	57;"	d
PATH_K1999	drivers/berniw3/pathfinder.h	57;"	d
PATH_K1999	drivers/human/pathfinder.h	57;"	d
PFNGLACTIVESTENCILFACEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t
PFNGLACTIVETEXTUREARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLALPHAFRAGMENTOP1ATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLALPHAFRAGMENTOP2ATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLALPHAFRAGMENTOP3ATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLAPPLYTEXTUREEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t
PFNGLAREPROGRAMSRESIDENTNVPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	t
PFNGLARETEXTURESRESIDENTEXTPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	t
PFNGLARRAYELEMENTEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLARRAYOBJECTATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLASYNCMARKERSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLATTACHOBJECTARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
PFNGLATTACHSHADERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINFRAGMENTSHADERATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLBEGINOCCLUSIONQUERYNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLBEGINQUERYARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINVERTEXSHADEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLBINDATTRIBLOCATIONARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDFRAGMENTSHADERATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLBINDFRAMEBUFFEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDLIGHTPARAMETEREXTPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t
PFNGLBINDMATERIALPARAMETEREXTPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t
PFNGLBINDPARAMETEREXTPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t
PFNGLBINDPROGRAMARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
PFNGLBINDPROGRAMNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDRENDERBUFFEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDTEXGENPARAMETEREXTPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);$/;"	t
PFNGLBINDTEXTUREEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t
PFNGLBINDVERTEXARRAYAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXSHADEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLBINORMAL3BEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t
PFNGLBINORMAL3BVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLBINORMAL3DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t
PFNGLBINORMAL3DVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLBINORMAL3FEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t
PFNGLBINORMAL3FVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLBINORMAL3IEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t
PFNGLBINORMAL3IVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLBINORMAL3SEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t
PFNGLBINORMAL3SVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLBINORMALPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLBLENDCOLOREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLORPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDEQUATIONEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINGRPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBUFFERDATAARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERSUBDATAARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	windows/include/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t
PFNGLCLAMPCOLORARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t
PFNGLCOLOR3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLCOLOR3HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLCOLOR3HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLCOLOR4HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	t
PFNGLCOLOR4HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4UBVERTEX2FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	t
PFNGLCOLOR4UBVERTEX2FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4UBVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4UBVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLORFRAGMENTOP1ATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLCOLORFRAGMENTOP2ATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLCOLORFRAGMENTOP3ATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLCOLORPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLCOLORPOINTERLISTIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLCOLORPOINTERVINTELPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORSUBTABLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORTABLEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVSGIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVSGIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLESGIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOMBINERINPUTNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLCOMBINEROUTPUTNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	t
PFNGLCOMBINERPARAMETERFNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLCOMBINERPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMBINERPARAMETERINVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOMBINERPARAMETERIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMPILESHADERARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
PFNGLCOMPILESHADERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCONVOLUTIONFILTER1DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONPARAMETERFEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOPYCOLORSUBTABLEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLESGIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXIMAGE1DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCREATEPROGRAMOBJECTARBPROC	windows/include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t
PFNGLCREATEPROGRAMPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATESHADEROBJECTARBPROC	windows/include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
PFNGLCREATESHADERPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCULLPARAMETERDVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLCULLPARAMETERFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLCURRENTPALETTEMATRIXARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
PFNGLDEFORMATIONMAP3DSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	t
PFNGLDEFORMATIONMAP3FSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	t
PFNGLDEFORMSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLDELETEASYNCMARKERSSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t
PFNGLDELETEBUFFERSARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEFENCESAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFRAGMENTSHADERATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLDELETEFRAMEBUFFERSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEOBJECTARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
PFNGLDELETEOCCLUSIONQUERIESNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEPROGRAMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEPROGRAMSARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEPROGRAMSNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEQUERIESARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETERENDERBUFFERSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESHADERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETETEXTURESEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETEVERTEXARRAYSAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXSHADEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLDEPTHBOUNDSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t
PFNGLDETACHOBJECTARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
PFNGLDETACHSHADERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDETAILTEXFUNCSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDRAWARRAYSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWBUFFERSARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWELEMENTARRAYAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t
PFNGLDRAWMESHARRAYSSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	t
PFNGLEDGEFLAGPOINTERLISTIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	t
PFNGLELEMENTPOINTERAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLELEMENTPOINTERATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDFRAGMENTSHADERATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLENDOCCLUSIONQUERYNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t
PFNGLENDQUERYARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t
PFNGLENDQUERYPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDVERTEXSHADEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLEVALMAPSNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLEXECUTEPROGRAMNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);$/;"	t
PFNGLEXTRACTCOMPONENTEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLFINALCOMBINERINPUTNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLFINISHASYNCSGIXPROC	windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLFINISHFENCEAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHOBJECTAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t
PFNGLFINISHTEXTURESUNXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t
PFNGLFLUSHPIXELDATARANGENVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t
PFNGLFLUSHRASTERSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGENVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t
PFNGLFOGCOORDDEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDDVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDFEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDHNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t
PFNGLFOGCOORDHVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t
PFNGLFOGCOORDPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGCOORDPOINTERLISTIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLFOGCOORDPOINTERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGFUNCSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTLIGHTFSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTISGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTIVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELISGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTMATERIALFSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTMATERIALISGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTMATERIALIVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEZOOMSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t
PFNGLFREEOBJECTBUFFERATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLGENASYNCMARKERSSGIXPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t
PFNGLGENBUFFERSARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t
PFNGLGENFENCESAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFRAGMENTSHADERSATIPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t
PFNGLGENFRAMEBUFFERSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENOCCLUSIONQUERIESNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENPROGRAMSARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENPROGRAMSNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENQUERIESARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENRENDERBUFFERSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSYMBOLSEXTPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	t
PFNGLGENTEXTURESEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENVERTEXARRAYSAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLGENVERTEXSHADERSEXTPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t
PFNGLGETACTIVEATTRIBARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETARRAYOBJECTFVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETARRAYOBJECTIVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDOBJECTSARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	t
PFNGLGETATTRIBLOCATIONARBPROC	windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBUFFERPARAMETERIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPOINTERVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERSUBDATAARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOLORTABLESGIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCONVOLUTIONFILTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETDETAILTEXFUNCSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETFENCEIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETFOGFUNCSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETHANDLEARBPROC	windows/include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
PFNGLGETHISTOGRAMEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETINFOLOGARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	t
PFNGLGETINSTRUMENTSSGIXPROC	windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLGETINVARIANTBOOLEANVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETINVARIANTFLOATVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETINVARIANTINTEGERVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETLISTPARAMETERFVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETLISTPARAMETERIVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);$/;"	t
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPCONTROLPOINTSNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	t
PFNGLGETMAPPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPPARAMETERIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMINMAXPARAMETERFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETOBJECTBUFFERFVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTBUFFERIVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPARAMETERFVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYUIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETPOINTERVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPARAMETERDVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETPROGRAMPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPROGRAMSTRINGARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETPROGRAMSTRINGNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);$/;"	t
PFNGLGETQUERYIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSEPARABLEFILTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSHADERINFOLOGPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERSOURCEARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	t
PFNGLGETSHADERSOURCEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHARPENTEXFUNCSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETTEXBUMPPARAMETERFVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t
PFNGLGETTEXBUMPPARAMETERIVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t
PFNGLGETTEXFILTERFUNCSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);$/;"	t
PFNGLGETTRACKMATRIXIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	t
PFNGLGETUNIFORMFVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONARBPROC	windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETVARIANTBOOLEANVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETVARIANTFLOATVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETVARIANTINTEGERVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETVARIANTPOINTERVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBDVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGLOBALALPHAFACTORBSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORDSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t
PFNGLGLOBALALPHAFACTORFSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t
PFNGLGLOBALALPHAFACTORISUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t
PFNGLGLOBALALPHAFACTORSSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t
PFNGLGLOBALALPHAFACTORUBSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORUISUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t
PFNGLGLOBALALPHAFACTORUSSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t
PFNGLHINTPGIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t
PFNGLHISTOGRAMEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLIGLOOINTERFACESGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLINDEXFUNCEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLINDEXMATERIALEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLINDEXPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLINDEXPOINTERLISTIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLINSERTCOMPONENTEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLINSTRUMENTSBUFFERSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t
PFNGLISASYNCMARKERSGIXPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLISBUFFERARBPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISFENCEAPPLEPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFRAMEBUFFEREXTPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t
PFNGLISOBJECTBUFFERATIPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLISOCCLUSIONQUERYNVPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMARBPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMNVPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYARBPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFEREXTPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSHADERPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISTEXTUREEXTPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t
PFNGLISVARIANTENABLEDEXTPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t
PFNGLISVERTEXARRAYAPPLEPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLLIGHTENVISGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLINKPROGRAMARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLLINKPROGRAMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTPARAMETERFSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t
PFNGLLISTPARAMETERFVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);$/;"	t
PFNGLLISTPARAMETERISGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t
PFNGLLISTPARAMETERIVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);$/;"	t
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLLOADPROGRAMNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLLOCKARRAYSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t
PFNGLMAPBUFFERARBPROC	windows/include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	windows/include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPCONTROLPOINTSNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	t
PFNGLMAPOBJECTBUFFERATIPROC	windows/include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLMAPPARAMETERFVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMAPPARAMETERIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMATRIXINDEXPOINTERARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMATRIXINDEXUBVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t
PFNGLMATRIXINDEXUIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t
PFNGLMATRIXINDEXUSVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t
PFNGLMINMAXEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIMODEDRAWARRAYSIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t
PFNGLMULTITEXCOORD1HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLMULTITEXCOORD2HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLMULTITEXCOORD3HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLMULTITEXCOORD4HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLNEWOBJECTBUFFERATIPROC	windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	t
PFNGLNORMAL3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLNORMAL3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLNORMAL3HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t
PFNGLNORMAL3HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLNORMALPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLNORMALPOINTERLISTIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLNORMALPOINTERVINTELPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLNORMALSTREAM3BATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMALSTREAM3BVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t
PFNGLNORMALSTREAM3DATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMALSTREAM3DVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLNORMALSTREAM3FATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMALSTREAM3FVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLNORMALSTREAM3IATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMALSTREAM3IVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLNORMALSTREAM3SATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMALSTREAM3SVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLPASSTEXCOORDATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t
PFNGLPIXELDATARANGENVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid *pointer);$/;"	t
PFNGLPIXELTEXGENPARAMETERFSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTEXGENPARAMETERISGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELTEXGENSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLPNTRIANGLESFATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPNTRIANGLESIATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERFARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERINVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOLLASYNCSGIXPROC	windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLPOLLINSTRUMENTSSGIXPROC	windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t
PFNGLPOLYGONOFFSETEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t
PFNGLPRIMITIVERESTARTINDEXNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t
PFNGLPRIORITIZETEXTURESEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	t
PFNGLPROGRAMENVPARAMETER4DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMENVPARAMETER4DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMENVPARAMETER4FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETER4DNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMPARAMETER4DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETER4FNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMPARAMETER4FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETERS4DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETERS4FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, const GLfloat *v);$/;"	t
PFNGLPROGRAMSTRINGARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLREADINSTRUMENTSSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLREFERENCEPLANESGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t
PFNGLRENDERBUFFERSTORAGEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLREPLACEMENTCODEPOINTERSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	t
PFNGLREPLACEMENTCODEUBSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t
PFNGLREPLACEMENTCODEUBVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUISUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t
PFNGLREPLACEMENTCODEUSSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t
PFNGLREPLACEMENTCODEUSVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLRESETHISTOGRAMEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESIZEBUFFERSMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMAPATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t
PFNGLSAMPLEMASKEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEPATTERNEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t
PFNGLSECONDARYCOLOR3BEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3FEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLSECONDARYCOLOR3HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLSECONDARYCOLOR3IEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3SEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3UBEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UIEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3USEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLORPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSEPARABLEFILTER2DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSETFENCEAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLSETFENCENVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);$/;"	t
PFNGLSETINVARIANTEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSETLOCALCONSTANTEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSHADEROP1EXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t
PFNGLSHADEROP2EXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	t
PFNGLSHADEROP3EXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	t
PFNGLSHADERSOURCEARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);$/;"	t
PFNGLSHARPENTEXFUNCSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLSPRITEPARAMETERFSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLSPRITEPARAMETERFVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLSPRITEPARAMETERISGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLSPRITEPARAMETERIVSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLSTARTINSTRUMENTSSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLSTENCILFUNCSEPARATEATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPSEPARATEATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTOPINSTRUMENTSSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLSTRINGMARKERGREMEDYPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid *string);$/;"	t
PFNGLSWIZZLEEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLTAGSAMPLEBUFFERSGIXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t
PFNGLTANGENT3BEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t
PFNGLTANGENT3BVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLTANGENT3DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t
PFNGLTANGENT3DVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLTANGENT3FEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t
PFNGLTANGENT3FVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLTANGENT3IEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t
PFNGLTANGENT3IVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLTANGENT3SEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t
PFNGLTANGENT3SVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLTANGENTPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLTBUFFERMASK3DFXPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t
PFNGLTESTFENCEAPPLEPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTOBJECTAPPLEPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t
PFNGLTEXBUMPPARAMETERFVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXBUMPPARAMETERIVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t
PFNGLTEXCOORD1HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t
PFNGLTEXCOORD1HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FVERTEX3FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLTEXCOORD2HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD3HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLTEXCOORD3HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4FVERTEX4FSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLTEXCOORD4HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORDPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLTEXCOORDPOINTERLISTIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLTEXCOORDPOINTERVINTELPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLTEXFILTERFUNCSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	t
PFNGLTEXIMAGE3DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE4DSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE1DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE4DSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURECOLORMASKSGISPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLTEXTURELIGHTEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t
PFNGLTEXTUREMATERIALEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLTEXTURENORMALEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t
PFNGLTRACKMATRIXNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	t
PFNGLUNIFORM1FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORMMATRIX2FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNLOCKARRAYSEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t
PFNGLUNMAPBUFFERARBPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPOBJECTBUFFERATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLUPDATEOBJECTBUFFERATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	t
PFNGLUSEPROGRAMOBJECTARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLUSEPROGRAMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVALIDATEPROGRAMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVARIANTARRAYOBJECTATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVARIANTBVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t
PFNGLVARIANTDVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t
PFNGLVARIANTFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t
PFNGLVARIANTIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t
PFNGLVARIANTPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	t
PFNGLVARIANTSVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t
PFNGLVARIANTUBVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t
PFNGLVARIANTUIVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t
PFNGLVARIANTUSVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t
PFNGLVERTEX2HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEX2HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX3HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEX3HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX4HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEX4HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXARRAYRANGEAPPLEPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYRANGENVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIB1DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t
PFNGLVERTEXATTRIB1HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB1SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEXATTRIB2HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB2SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEXATTRIB3HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB3SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4HNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEXATTRIB4HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB4IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4UBVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVERTEXATTRIBPOINTERARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBS1DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS1FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS1HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS1SVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS2DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS2FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS2HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS2SVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS3DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS3FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS3HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS3SVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4DVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS4FVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS4HVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS4SVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4UBVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);$/;"	t
PFNGLVERTEXBLENDARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
PFNGLVERTEXBLENDENVFATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLVERTEXBLENDENVIATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLVERTEXPOINTERLISTIBMPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLVERTEXPOINTERVINTELPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLVERTEXSTREAM1DATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t
PFNGLVERTEXSTREAM1DVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM1FATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t
PFNGLVERTEXSTREAM1FVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM1IATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t
PFNGLVERTEXSTREAM1IVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM1SATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t
PFNGLVERTEXSTREAM1SVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM2DATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXSTREAM2DVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM2FATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXSTREAM2FVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM2IATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t
PFNGLVERTEXSTREAM2IVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM2SATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXSTREAM2SVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM3DATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXSTREAM3DVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM3FATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXSTREAM3FVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM3IATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXSTREAM3IVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM3SATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXSTREAM3SVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM4DATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXSTREAM4DVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM4FATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXSTREAM4FVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM4IATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXSTREAM4IVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM4SATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXSTREAM4SVATIPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXWEIGHTFEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t
PFNGLVERTEXWEIGHTFVEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t
PFNGLVERTEXWEIGHTHNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t
PFNGLVERTEXWEIGHTHVNVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t
PFNGLVERTEXWEIGHTPOINTEREXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTBVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t
PFNGLWEIGHTDVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t
PFNGLWEIGHTFVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t
PFNGLWEIGHTIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t
PFNGLWEIGHTPOINTERARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTSVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t
PFNGLWEIGHTUBVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t
PFNGLWEIGHTUIVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t
PFNGLWEIGHTUSVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t
PFNGLWINDOWPOS2DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3DARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3FARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3IARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3SARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SVARBPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS4DMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLWINDOWPOS4DVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS4FMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLWINDOWPOS4FVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS4IMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLWINDOWPOS4IVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS4SMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLWINDOWPOS4SVMESAPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWRITEMASKEXTPROC	windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNWGLALLOCATEMEMORYNVPROC	windows/include/GL/wglext.h	/^typedef void* (WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	t
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);$/;"	t
PFNWGLBEGINFRAMETRACKINGI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	windows/include/GL/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLBINDTEXIMAGEARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLCHOOSEPIXELFORMATARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCHOOSEPIXELFORMATEXTPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCREATEBUFFERREGIONARBPROC	windows/include/GL/wglext.h	/^typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType);$/;"	t
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	windows/include/GL/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLCREATEIMAGEBUFFERI3DPROC	windows/include/GL/wglext.h	/^typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	t
PFNWGLCREATEPBUFFERARBPROC	windows/include/GL/wglext.h	/^typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLCREATEPBUFFEREXTPROC	windows/include/GL/wglext.h	/^typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLDELETEBUFFERREGIONARBPROC	windows/include/GL/wglext.h	/^typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	windows/include/GL/wglext.h	/^typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLDESTROYIMAGEBUFFERI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t
PFNWGLDESTROYPBUFFERARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLDESTROYPBUFFEREXTPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLDISABLEFRAMELOCKI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLDISABLEGENLOCKI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENABLEFRAMELOCKI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLENABLEGENLOCKI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENDFRAMETRACKINGI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLFREEMEMORYNVPROC	windows/include/GL/wglext.h	/^typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);$/;"	t
PFNWGLGENLOCKSAMPLERATEI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t
PFNWGLGENLOCKSOURCEDELAYI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t
PFNWGLGENLOCKSOURCEEDGEI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t
PFNWGLGENLOCKSOURCEI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t
PFNWGLGETCURRENTREADDCARBPROC	windows/include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);$/;"	t
PFNWGLGETCURRENTREADDCEXTPROC	windows/include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);$/;"	t
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETEXTENSIONSSTRINGARBPROC	windows/include/GL/wglext.h	/^typedef const char * (WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t
PFNWGLGETEXTENSIONSSTRINGEXTPROC	windows/include/GL/wglext.h	/^typedef const char * (WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);$/;"	t
PFNWGLGETFRAMEUSAGEI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);$/;"	t
PFNWGLGETGAMMATABLEI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);$/;"	t
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);$/;"	t
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);$/;"	t
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);$/;"	t
PFNWGLGETGENLOCKSOURCEI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);$/;"	t
PFNWGLGETMSCRATEOMLPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	t
PFNWGLGETPBUFFERDCARBPROC	windows/include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLGETPBUFFERDCEXTPROC	windows/include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);$/;"	t
PFNWGLGETSWAPINTERVALEXTPROC	windows/include/GL/wglext.h	/^typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);$/;"	t
PFNWGLGETSYNCVALUESOMLPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLISENABLEDFRAMELOCKI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLISENABLEDGENLOCKI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);$/;"	t
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	windows/include/GL/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLuint length);$/;"	t
PFNWGLMAKECONTEXTCURRENTARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTEXTPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLQUERYFRAMETRACKINGI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);$/;"	t
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);$/;"	t
PFNWGLQUERYPBUFFERARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYPBUFFEREXTPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);$/;"	t
PFNWGLRELEASEPBUFFERDCARBPROC	windows/include/GL/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASEPBUFFERDCEXTPROC	windows/include/GL/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASETEXIMAGEARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLRESTOREBUFFERREGIONARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	t
PFNWGLSAVEBUFFERREGIONARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height);$/;"	t
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETGAMMATABLEI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);$/;"	t
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETPBUFFERATTRIBARBPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);$/;"	t
PFNWGLSWAPBUFFERSMSCOMLPROC	windows/include/GL/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLSWAPINTERVALEXTPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	windows/include/GL/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLWAITFORMSCOMLPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLWAITFORSBCOMLPROC	windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PGAIN	drivers/inferno2/inferno2.cpp	222;"	d	file:
PGain	drivers/inferno2/inferno2.cpp	/^static tdble PGain[10]     = {0.015f};$/;"	v	file:
PI	libs/learning/Distribution.cpp	/^static const double PI = 3.14159265358979323846;$/;"	v	file:
PI	libs/tgf/tgf.h	/^const double PI = 3.14159265358979323846;  \/**< PI *\/$/;"	v
PI	tools/trackgen/easymesh.cpp	46;"	d	file:
PITCH	drivers/data_list.h	/^			PITCH, 		ROLL, 			YAW_RATE, 	DISTANCE, 		POS_X, 		$/;"	e	enum:sensing_data_name
PITCH_SLOT	modules/graphic/ssggraph/TorcsSound.h	24;"	d
PITOFFSET1	drivers/inferno2/inferno2.cpp	237;"	d	file:
PITOFFSET2	drivers/inferno2/inferno2.cpp	238;"	d	file:
PITOFFSET3	drivers/inferno2/inferno2.cpp	241;"	d	file:
PITOFFSET4	drivers/inferno2/inferno2.cpp	242;"	d	file:
PITOFFSET5	drivers/inferno2/inferno2.cpp	243;"	d	file:
PITOFFSETA	drivers/inferno2/inferno2.cpp	240;"	d	file:
PITOFFSETP	drivers/inferno2/inferno2.cpp	239;"	d	file:
PITPOINTS	drivers/berniw/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/* # points for pit spline *\/$/;"	e	enum:Pathfinder::__anon158
PITPOINTS	drivers/berniw2/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/* # points for pit spline *\/$/;"	e	enum:Pathfinder::__anon202
PITPOINTS	drivers/berniw3/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/* # points for pit spline *\/$/;"	e	enum:Pathfinder::__anon181
PITPOINTS	drivers/human/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/* # points for pit spline *\/$/;"	e	enum:Pathfinder::__anon193
PITPOINTS	drivers/inferno/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/\/ # points for pit spline.$/;"	e	enum:Pathfinder::__anon166
PITPOINTS	drivers/lliaw/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/\/ # points for pit spline.$/;"	e	enum:Pathfinder::__anon212
PITPOINTS	drivers/tita/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/\/ # points for pit spline.$/;"	e	enum:Pathfinder::__anon173
PIT_BRAKE_AHEAD	drivers/bt/driver.cpp	/^const float Driver::PIT_BRAKE_AHEAD = 200.0f;				\/\/ [m] Workaround for "broken" pitentries.$/;"	m	class:Driver	file:
PIT_BRAKE_AHEAD	drivers/bt/driver.h	/^		static const float PIT_BRAKE_AHEAD;$/;"	m	class:Driver
PIT_BRAKE_AHEAD	drivers/damned/driver.cpp	/^const float Driver::PIT_BRAKE_AHEAD = 200.0f;				\/\/ [m] Workaround for "broken" pitentries.$/;"	m	class:Driver	file:
PIT_BRAKE_AHEAD	drivers/damned/driver.h	/^		static const float PIT_BRAKE_AHEAD;$/;"	m	class:Driver
PIT_BRAKE_AHEAD	drivers/olethros/driver.cpp	/^    const float Driver::PIT_BRAKE_AHEAD = 200.0f;				\/\/\/< [m] Workaround for "broken" pitentries.$/;"	m	class:olethros::Driver	file:
PIT_BRAKE_AHEAD	drivers/olethros/driver.h	/^	static const float PIT_BRAKE_AHEAD;$/;"	m	class:olethros::Driver
PIT_BRAKE_AHEAD	drivers/sparkle/driver.cpp	/^const float Driver::PIT_BRAKE_AHEAD = 200.0;				\/* [m] *\/$/;"	m	class:Driver	file:
PIT_BRAKE_AHEAD	drivers/sparkle/driver.h	/^		static const float PIT_BRAKE_AHEAD;$/;"	m	class:Driver
PIT_DAMMAGE	drivers/bt/strategy.cpp	/^const int SimpleStrategy::PIT_DAMMAGE = 5000;				\/\/ [-]$/;"	m	class:SimpleStrategy	file:
PIT_DAMMAGE	drivers/bt/strategy.h	/^		static const int PIT_DAMMAGE;			\/\/ If damage > we request a pit stop.$/;"	m	class:SimpleStrategy
PIT_DAMMAGE	drivers/damned/strategy.cpp	/^const int SimpleStrategy::PIT_DAMMAGE = 5000;				\/\/ [-]$/;"	m	class:SimpleStrategy	file:
PIT_DAMMAGE	drivers/damned/strategy.h	/^		static const int PIT_DAMMAGE;			\/\/ If damage > we request a pit stop.$/;"	m	class:SimpleStrategy
PIT_DAMMAGE	drivers/olethros/strategy.cpp	/^const int SimpleStrategy::PIT_DAMMAGE = 1000;				\/\/ [-]$/;"	m	class:olethros::SimpleStrategy	file:
PIT_DAMMAGE	drivers/olethros/strategy.h	/^	static const int PIT_DAMMAGE;			\/\/ If damage > we request a pit stop.$/;"	m	class:olethros::SimpleStrategy
PIT_DAMMAGE	drivers/sparkle/pit.cpp	/^const int Pit::PIT_DAMMAGE = 5000;              \/* [-] *\/$/;"	m	class:Pit	file:
PIT_DAMMAGE	drivers/sparkle/pit.h	/^		static const int PIT_DAMMAGE;$/;"	m	class:Pit
PIT_DEEP	tools/trackgen/track.cpp	413;"	d	file:
PIT_EXIT	drivers/olethros/pit.h	/^	NONE=0x0, APPROACHING, IN_LANE, PIT_EXIT$/;"	e	enum:olethros::PitState
PIT_HEIGHT	tools/trackgen/track.cpp	412;"	d	file:
PIT_LOOKAHEAD	drivers/bt/driver.cpp	/^const float Driver::PIT_LOOKAHEAD = 6.0f;					\/\/ [m] Lookahead to stop in the pit.$/;"	m	class:Driver	file:
PIT_LOOKAHEAD	drivers/bt/driver.h	/^		static const float PIT_LOOKAHEAD;$/;"	m	class:Driver
PIT_LOOKAHEAD	drivers/damned/driver.cpp	/^const float Driver::PIT_LOOKAHEAD = 6.0f;					\/\/ [m] Lookahead to stop in the pit.$/;"	m	class:Driver	file:
PIT_LOOKAHEAD	drivers/damned/driver.h	/^		static const float PIT_LOOKAHEAD;$/;"	m	class:Driver
PIT_LOOKAHEAD	drivers/olethros/driver.cpp	/^    const float Driver::PIT_LOOKAHEAD = 6.0f;					\/\/\/< [m] Lookahead to stop in the pit.$/;"	m	class:olethros::Driver	file:
PIT_LOOKAHEAD	drivers/olethros/driver.h	/^	static const float PIT_LOOKAHEAD;$/;"	m	class:olethros::Driver
PIT_LOOKAHEAD	drivers/sparkle/driver.cpp	/^const float Driver::PIT_LOOKAHEAD = 6.0;					\/* [m] *\/$/;"	m	class:Driver	file:
PIT_LOOKAHEAD	drivers/sparkle/driver.h	/^		static const float PIT_LOOKAHEAD;$/;"	m	class:Driver
PIT_MU	drivers/bt/driver.cpp	/^const float Driver::PIT_MU = 0.4f;							\/\/ [-] Friction of pit concrete.$/;"	m	class:Driver	file:
PIT_MU	drivers/bt/driver.h	/^		static const float PIT_MU;$/;"	m	class:Driver
PIT_MU	drivers/damned/driver.cpp	/^const float Driver::PIT_MU = 0.4f;							\/\/ [-] Friction of pit concrete.$/;"	m	class:Driver	file:
PIT_MU	drivers/damned/driver.h	/^		static const float PIT_MU;$/;"	m	class:Driver
PIT_MU	drivers/olethros/driver.cpp	/^    const float Driver::PIT_MU = 0.4f;							\/\/\/< [-] Friction of pit concrete.$/;"	m	class:olethros::Driver	file:
PIT_MU	drivers/olethros/driver.h	/^	static const float PIT_MU;$/;"	m	class:olethros::Driver
PIT_MU	drivers/sparkle/driver.cpp	/^const float Driver::PIT_MU = 0.4;							\/* [-] *\/$/;"	m	class:Driver	file:
PIT_MU	drivers/sparkle/driver.h	/^		static const float PIT_MU;$/;"	m	class:Driver
PIT_STATE_ASKED	drivers/inferno2/common.h	53;"	d
PIT_STATE_DECEL	drivers/inferno2/common.h	61;"	d
PIT_STATE_ENTERED	drivers/inferno2/common.h	54;"	d
PIT_STATE_EXIT	drivers/inferno2/common.h	60;"	d
PIT_STATE_NO	drivers/inferno2/common.h	51;"	d
PIT_STATE_NONE	drivers/inferno2/common.h	52;"	d
PIT_STATE_PITLANE_AFTER	drivers/inferno2/common.h	59;"	d
PIT_STATE_PITLANE_BEFORE	drivers/inferno2/common.h	55;"	d
PIT_STATE_PIT_ALIGN	drivers/inferno2/common.h	57;"	d
PIT_STATE_PIT_ENTRY	drivers/inferno2/common.h	56;"	d
PIT_STATE_PIT_EXIT	drivers/inferno2/common.h	58;"	d
PIT_TOP	tools/trackgen/track.cpp	414;"	d	file:
PKGSUBDIRS	Makefile	/^PKGSUBDIRS	= interfaces libs linux modules windows tools drivers doc raceman$/;"	m
PKGSUBDIRS	drivers/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	drivers/berniw/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	drivers/berniw2/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	drivers/berniw3/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	drivers/bt/0/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/1/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/2/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/3/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/4/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/5/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/6/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/7/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/8/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/9/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/bt/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/0/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/1/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/2/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/3/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/4/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/5/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/6/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/7/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/8/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/9/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/damned/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	drivers/inferno2/1/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/10/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/2/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/3/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/4/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/5/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/6/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/7/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/8/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/9/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/inferno2/Makefile	/^PKGSUBDIRS		= ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/lliaw/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	drivers/olethros/0/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/1/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/2/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/3/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/4/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/5/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/6/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/7/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/8/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/9/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/olethros/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/sparkle/0/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/sparkle/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	drivers/tita/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	libs/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	libs/txml/Makefile	/^PKGSUBDIRS	= gennmtab$/;"	m
PKGSUBDIRS	modules/Makefile	/^PKGSUBDIRS	= track simu graphic telemetry$/;"	m
PKGSUBDIRS	modules/graphic/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	modules/simu/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	modules/simu/simuv2/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	modules/simu/simuv2/SOLID-2.0/Makefile	/^PKGSUBDIRS	= $(SUBDIRS) $(EXPINCDIRS)$/;"	m
PKGSUBDIRS	modules/simu/simuv2/SOLID-2.0/include/Makefile	/^PKGSUBDIRS	= $(EXPINCDIRS)$/;"	m
PKGSUBDIRS	tools/Makefile	/^PKGSUBDIRS	=  $(SUBDIRS)$/;"	m
PKGSUBDIRS	tools/package/Makefile	/^PKGSUBDIRS     = $(SUBDIRS)$/;"	m
PKGSUBDIRS	windows/Makefile	/^PKGSUBDIRS	= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
PKGSUBDIRS	windows/include/Makefile	/^PKGSUBDIRS	= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
PKGSUBDIRS	windows/include/ogg/Makefile	/^PKGSUBDIRS	= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
PKGSUBDIRS	windows/include/vorbis/Makefile	/^PKGSUBDIRS	= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
PLANAR	modules/simu/simuv3/SimulationOptions.h	/^	PLANAR, \/\/\/< A planar model - severely underperforms$/;"	e	enum:AeroFlowModel
PLIB_MAJOR_VERSION	windows/include/plib/ul.h	155;"	d
PLIB_MINOR_VERSION	windows/include/plib/ul.h	156;"	d
PLIB_MODE	modules/graphic/ssggraph/grsound.cpp	/^enum SoundMode {DISABLED, OPENAL_MODE, PLIB_MODE};$/;"	e	enum:SoundMode	file:
PLIB_TINY_VERSION	windows/include/plib/ul.h	157;"	d
PLIB_VERSION	windows/include/plib/ul.h	159;"	d
PNGAIN	drivers/inferno2/inferno2.cpp	224;"	d	file:
PNGAPI	windows/include/pngconf.h	205;"	d
PNGAPI	windows/include/pngconf.h	216;"	d
PNGAPI	windows/include/pngconf.h	260;"	d
PNGARG	windows/include/pngconf.h	85;"	d
PNGARG	windows/include/pngconf.h	89;"	d
PNGARG	windows/include/pngconf.h	91;"	d
PNGCAPI	windows/include/pngconf.h	199;"	d
PNGCAPI	windows/include/pngconf.h	203;"	d
PNGCAPI	windows/include/pngconf.h	213;"	d
PNGCAPI	windows/include/pngconf.h	254;"	d
PNGCBAPI	windows/include/pngconf.h	257;"	d
PNGCONF_H	windows/include/pngconf.h	23;"	d
PNGLCONF_H	windows/include/pnglibconf.h	22;"	d
PNG_16BIT_SUPPORTED	windows/include/pnglibconf.h	42;"	d
PNG_AFTER_IDAT	windows/include/png.h	708;"	d
PNG_ALIGN_MEMORY_SUPPORTED	windows/include/pnglibconf.h	43;"	d
PNG_ALLOCATED	windows/include/pngconf.h	348;"	d
PNG_ALLOCATED	windows/include/pngconf.h	373;"	d
PNG_ALLOCATED	windows/include/pngconf.h	395;"	d
PNG_ALL_FILTERS	windows/include/png.h	1613;"	d
PNG_ALL_MNG_FEATURES	windows/include/png.h	934;"	d
PNG_ALPHA_ASSOCIATED	windows/include/png.h	1212;"	d
PNG_ALPHA_BROKEN	windows/include/png.h	1215;"	d
PNG_ALPHA_OPTIMIZED	windows/include/png.h	1214;"	d
PNG_ALPHA_PNG	windows/include/png.h	1210;"	d
PNG_ALPHA_PREMULTIPLIED	windows/include/png.h	1213;"	d
PNG_ALPHA_STANDARD	windows/include/png.h	1211;"	d
PNG_API_RULE	windows/include/pnglibconf.h	24;"	d
PNG_BACKGROUND_GAMMA_FILE	windows/include/png.h	1451;"	d
PNG_BACKGROUND_GAMMA_SCREEN	windows/include/png.h	1450;"	d
PNG_BACKGROUND_GAMMA_UNIQUE	windows/include/png.h	1452;"	d
PNG_BACKGROUND_GAMMA_UNKNOWN	windows/include/png.h	1449;"	d
PNG_BENIGN_ERRORS_SUPPORTED	windows/include/pnglibconf.h	44;"	d
PNG_BUILD_GRAYSCALE_PALETTE_SUPPORTED	windows/include/pnglibconf.h	46;"	d
PNG_BYTES_TO_CHECK	libs/tgfclient/img.cpp	42;"	d	file:
PNG_BYTES_TO_CHECK	misc/png2jpg/png2jpg.c	41;"	d	file:
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(int, *png_user_chunk_ptr, (png_structp,$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(png_voidp, *png_malloc_ptr, (png_structp,$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_error_ptr, (png_structp, png_const_charp));$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_flush_ptr, (png_structp));$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_free_ptr, (png_structp, png_voidp));$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_progressive_end_ptr, (png_structp, png_infop));$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_progressive_info_ptr, (png_structp, png_infop));$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_progressive_row_ptr, (png_structp, png_bytep,$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_read_status_ptr, (png_structp, png_uint_32,$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_rw_ptr, (png_structp, png_bytep, png_size_t));$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_unknown_chunk_ptr, (png_structp));$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_user_transform_ptr, (png_structp, png_row_infop,$/;"	t
PNG_CALLBACK	windows/include/png.h	/^typedef PNG_CALLBACK(void, *png_write_status_ptr, (png_structp, png_uint_32,$/;"	t
PNG_CALLBACK	windows/include/pngconf.h	318;"	d
PNG_CALLOC_SUPPORTED	windows/include/pnglibconf.h	25;"	d
PNG_CHECK_cHRM_SUPPORTED	windows/include/pnglibconf.h	47;"	d
PNG_COLOR_MASK_ALPHA	windows/include/png.h	736;"	d
PNG_COLOR_MASK_COLOR	windows/include/png.h	735;"	d
PNG_COLOR_MASK_PALETTE	windows/include/png.h	734;"	d
PNG_COLOR_TYPE_GA	windows/include/png.h	746;"	d
PNG_COLOR_TYPE_GRAY	windows/include/png.h	739;"	d
PNG_COLOR_TYPE_GRAY_ALPHA	windows/include/png.h	743;"	d
PNG_COLOR_TYPE_PALETTE	windows/include/png.h	740;"	d
PNG_COLOR_TYPE_RGB	windows/include/png.h	741;"	d
PNG_COLOR_TYPE_RGBA	windows/include/png.h	745;"	d
PNG_COLOR_TYPE_RGB_ALPHA	windows/include/png.h	742;"	d
PNG_COL_FROM_PASS_COL	windows/include/png.h	2522;"	d
PNG_COL_IN_INTERLACE_PASS	windows/include/png.h	2537;"	d
PNG_COMPRESSION_TYPE_BASE	windows/include/png.h	749;"	d
PNG_COMPRESSION_TYPE_DEFAULT	windows/include/png.h	750;"	d
PNG_CONSOLE_IO_SUPPORTED	windows/include/pnglibconf.h	49;"	d
PNG_CONST	windows/include/pngconf.h	426;"	d
PNG_CONVERT_tIME_SUPPORTED	windows/include/pnglibconf.h	50;"	d
PNG_COST_SHIFT	windows/include/pnglibconf.h	26;"	d
PNG_CRC_DEFAULT	windows/include/png.h	1581;"	d
PNG_CRC_ERROR_QUIT	windows/include/png.h	1582;"	d
PNG_CRC_NO_CHANGE	windows/include/png.h	1586;"	d
PNG_CRC_QUIET_USE	windows/include/png.h	1585;"	d
PNG_CRC_WARN_DISCARD	windows/include/png.h	1583;"	d
PNG_CRC_WARN_USE	windows/include/png.h	1584;"	d
PNG_DEFAULT_READ_MACROS	windows/include/pnglibconf.h	27;"	d
PNG_DEFAULT_sRGB	windows/include/png.h	1288;"	d
PNG_DEPRECATED	windows/include/pngconf.h	351;"	d
PNG_DEPRECATED	windows/include/pngconf.h	377;"	d
PNG_DEPRECATED	windows/include/pngconf.h	386;"	d
PNG_DESTROY_WILL_FREE_DATA	windows/include/png.h	1893;"	d
PNG_DLL_EXPORT	windows/include/pngconf.h	234;"	d
PNG_EASY_ACCESS_SUPPORTED	windows/include/pnglibconf.h	51;"	d
PNG_EMPTY	windows/include/pngconf.h	307;"	d
PNG_EQUATION_ARBITRARY	windows/include/png.h	770;"	d
PNG_EQUATION_BASE_E	windows/include/png.h	769;"	d
PNG_EQUATION_HYPERBOLIC	windows/include/png.h	771;"	d
PNG_EQUATION_LAST	windows/include/png.h	772;"	d
PNG_EQUATION_LINEAR	windows/include/png.h	768;"	d
PNG_ERROR_ACTION_ERROR	windows/include/png.h	1144;"	d
PNG_ERROR_ACTION_NONE	windows/include/png.h	1142;"	d
PNG_ERROR_ACTION_WARN	windows/include/png.h	1143;"	d
PNG_ERROR_TEXT_SUPPORTED	windows/include/pnglibconf.h	53;"	d
PNG_EXPORT	windows/include/pngconf.h	309;"	d
PNG_EXPORTA	windows/include/pngconf.h	299;"	d
PNG_EXPORT_TYPE	windows/include/pngconf.h	232;"	d
PNG_EXPORT_TYPE	windows/include/pngconf.h	290;"	d
PNG_FILLER_AFTER	windows/include/png.h	1390;"	d
PNG_FILLER_BEFORE	windows/include/png.h	1389;"	d
PNG_FILTER_AVG	windows/include/png.h	1611;"	d
PNG_FILTER_HEURISTIC_DEFAULT	windows/include/png.h	1667;"	d
PNG_FILTER_HEURISTIC_LAST	windows/include/png.h	1670;"	d
PNG_FILTER_HEURISTIC_UNWEIGHTED	windows/include/png.h	1668;"	d
PNG_FILTER_HEURISTIC_WEIGHTED	windows/include/png.h	1669;"	d
PNG_FILTER_NONE	windows/include/png.h	1608;"	d
PNG_FILTER_PAETH	windows/include/png.h	1612;"	d
PNG_FILTER_SUB	windows/include/png.h	1609;"	d
PNG_FILTER_TYPE_BASE	windows/include/png.h	753;"	d
PNG_FILTER_TYPE_DEFAULT	windows/include/png.h	755;"	d
PNG_FILTER_UP	windows/include/png.h	1610;"	d
PNG_FILTER_VALUE_AVG	windows/include/png.h	1622;"	d
PNG_FILTER_VALUE_LAST	windows/include/png.h	1624;"	d
PNG_FILTER_VALUE_NONE	windows/include/png.h	1619;"	d
PNG_FILTER_VALUE_PAETH	windows/include/png.h	1623;"	d
PNG_FILTER_VALUE_SUB	windows/include/png.h	1620;"	d
PNG_FILTER_VALUE_UP	windows/include/png.h	1621;"	d
PNG_FIXED_EXPORT	windows/include/pngconf.h	410;"	d
PNG_FIXED_POINT_SUPPORTED	windows/include/pnglibconf.h	54;"	d
PNG_FLAG_MNG_EMPTY_PLTE	windows/include/png.h	932;"	d
PNG_FLAG_MNG_FILTER_64	windows/include/png.h	933;"	d
PNG_FLOATING_ARITHMETIC_SUPPORTED	windows/include/pnglibconf.h	55;"	d
PNG_FLOATING_POINT_SUPPORTED	windows/include/pnglibconf.h	56;"	d
PNG_FORMAT_AFIRST_SUPPORTED	windows/include/pnglibconf.h	57;"	d
PNG_FORMAT_BGR_SUPPORTED	windows/include/pnglibconf.h	58;"	d
PNG_FP_1	windows/include/png.h	727;"	d
PNG_FP_EXPORT	windows/include/pngconf.h	402;"	d
PNG_FP_HALF	windows/include/png.h	728;"	d
PNG_FP_MAX	windows/include/png.h	729;"	d
PNG_FP_MIN	windows/include/png.h	730;"	d
PNG_FREE_ALL	windows/include/png.h	1908;"	d
PNG_FREE_HIST	windows/include/png.h	1897;"	d
PNG_FREE_ICCP	windows/include/png.h	1898;"	d
PNG_FREE_LIST	windows/include/png.h	1904;"	d
PNG_FREE_MUL	windows/include/png.h	1909;"	d
PNG_FREE_PCAL	windows/include/png.h	1901;"	d
PNG_FREE_PLTE	windows/include/png.h	1905;"	d
PNG_FREE_ROWS	windows/include/png.h	1900;"	d
PNG_FREE_SCAL	windows/include/png.h	1902;"	d
PNG_FREE_SPLT	windows/include/png.h	1899;"	d
PNG_FREE_TEXT	windows/include/png.h	1907;"	d
PNG_FREE_TRNS	windows/include/png.h	1906;"	d
PNG_FREE_UNKN	windows/include/png.h	1903;"	d
PNG_FUNCTION	windows/include/pngconf.h	286;"	d
PNG_GAMMA_LINEAR	windows/include/png.h	1291;"	d
PNG_GAMMA_MAC_18	windows/include/png.h	1289;"	d
PNG_GAMMA_THRESHOLD	windows/include/png.h	1480;"	d
PNG_GAMMA_THRESHOLD_FIXED	windows/include/pnglibconf.h	28;"	d
PNG_GAMMA_sRGB	windows/include/png.h	1290;"	d
PNG_H	windows/include/png.h	364;"	d
PNG_HANDLE_AS_UNKNOWN_SUPPORTED	windows/include/pnglibconf.h	60;"	d
PNG_HANDLE_CHUNK_ALWAYS	windows/include/png.h	2395;"	d
PNG_HANDLE_CHUNK_AS_DEFAULT	windows/include/png.h	2392;"	d
PNG_HANDLE_CHUNK_IF_SAFE	windows/include/png.h	2394;"	d
PNG_HANDLE_CHUNK_NEVER	windows/include/png.h	2393;"	d
PNG_HAVE_IHDR	windows/include/png.h	706;"	d
PNG_HAVE_PLTE	windows/include/png.h	707;"	d
PNG_HEADER_VERSION_STRING	windows/include/png.h	377;"	d
PNG_IMPEXP	windows/include/pngconf.h	270;"	d
PNG_IMPEXP	windows/include/pngconf.h	274;"	d
PNG_INCH_CONVERSIONS_SUPPORTED	windows/include/pnglibconf.h	63;"	d
PNG_INFO_IDAT	windows/include/png.h	818;"	d
PNG_INFO_IMAGE_SUPPORTED	windows/include/pnglibconf.h	64;"	d
PNG_INFO_PLTE	windows/include/png.h	806;"	d
PNG_INFO_bKGD	windows/include/png.h	808;"	d
PNG_INFO_cHRM	windows/include/png.h	805;"	d
PNG_INFO_gAMA	windows/include/png.h	803;"	d
PNG_INFO_hIST	windows/include/png.h	809;"	d
PNG_INFO_iCCP	windows/include/png.h	815;"	d
PNG_INFO_oFFs	windows/include/png.h	811;"	d
PNG_INFO_pCAL	windows/include/png.h	813;"	d
PNG_INFO_pHYs	windows/include/png.h	810;"	d
PNG_INFO_sBIT	windows/include/png.h	804;"	d
PNG_INFO_sCAL	windows/include/png.h	817;"	d
PNG_INFO_sPLT	windows/include/png.h	816;"	d
PNG_INFO_sRGB	windows/include/png.h	814;"	d
PNG_INFO_tIME	windows/include/png.h	812;"	d
PNG_INFO_tRNS	windows/include/png.h	807;"	d
PNG_INTERLACE_ADAM7	windows/include/png.h	759;"	d
PNG_INTERLACE_ADAM7_PASSES	windows/include/png.h	2482;"	d
PNG_INTERLACE_LAST	windows/include/png.h	760;"	d
PNG_INTERLACE_NONE	windows/include/png.h	758;"	d
PNG_INTRAPIXEL_DIFFERENCING	windows/include/png.h	754;"	d
PNG_IO_CHUNK_CRC	windows/include/png.h	2473;"	d
PNG_IO_CHUNK_DATA	windows/include/png.h	2472;"	d
PNG_IO_CHUNK_HDR	windows/include/png.h	2471;"	d
PNG_IO_MASK_LOC	windows/include/png.h	2475;"	d
PNG_IO_MASK_OP	windows/include/png.h	2474;"	d
PNG_IO_NONE	windows/include/png.h	2467;"	d
PNG_IO_READING	windows/include/png.h	2468;"	d
PNG_IO_SIGNATURE	windows/include/png.h	2470;"	d
PNG_IO_STATE_SUPPORTED	windows/include/pnglibconf.h	65;"	d
PNG_IO_WRITING	windows/include/png.h	2469;"	d
PNG_ITXT_COMPRESSION_NONE	windows/include/png.h	657;"	d
PNG_ITXT_COMPRESSION_zTXt	windows/include/png.h	658;"	d
PNG_KEYWORD_MAX_LENGTH	windows/include/png.h	793;"	d
PNG_LIBPNG_BUILD_ALPHA	windows/include/png.h	395;"	d
PNG_LIBPNG_BUILD_BASE_TYPE	windows/include/png.h	409;"	d
PNG_LIBPNG_BUILD_BETA	windows/include/png.h	396;"	d
PNG_LIBPNG_BUILD_PATCH	windows/include/png.h	402;"	d
PNG_LIBPNG_BUILD_PRIVATE	windows/include/png.h	404;"	d
PNG_LIBPNG_BUILD_RC	windows/include/png.h	397;"	d
PNG_LIBPNG_BUILD_RELEASE_STATUS_MASK	windows/include/png.h	399;"	d
PNG_LIBPNG_BUILD_SPECIAL	windows/include/png.h	406;"	d
PNG_LIBPNG_BUILD_STABLE	windows/include/png.h	398;"	d
PNG_LIBPNG_BUILD_TYPE	windows/include/png.h	467;"	d
PNG_LIBPNG_BUILD_TYPE	windows/include/png.h	471;"	d
PNG_LIBPNG_BUILD_TYPE	windows/include/png.h	474;"	d
PNG_LIBPNG_VER	windows/include/png.h	417;"	d
PNG_LIBPNG_VER_BUILD	windows/include/png.h	392;"	d
PNG_LIBPNG_VER_DLLNUM	windows/include/png.h	381;"	d
PNG_LIBPNG_VER_MAJOR	windows/include/png.h	384;"	d
PNG_LIBPNG_VER_MINOR	windows/include/png.h	385;"	d
PNG_LIBPNG_VER_RELEASE	windows/include/png.h	386;"	d
PNG_LIBPNG_VER_SONUM	windows/include/png.h	380;"	d
PNG_LIBPNG_VER_STRING	windows/include/png.h	376;"	d
PNG_MAX_GAMMA_8	windows/include/pnglibconf.h	29;"	d
PNG_MAX_MALLOC_64K	windows/include/pngconf.h	478;"	d
PNG_MAX_PALETTE_LENGTH	windows/include/png.h	796;"	d
PNG_MNG_FEATURES_SUPPORTED	windows/include/pnglibconf.h	67;"	d
PNG_NORETURN	windows/include/pngconf.h	345;"	d
PNG_NORETURN	windows/include/pngconf.h	369;"	d
PNG_NORETURN	windows/include/pngconf.h	392;"	d
PNG_NO_FILTERS	windows/include/png.h	1607;"	d
PNG_OFFSET_LAST	windows/include/png.h	765;"	d
PNG_OFFSET_MICROMETER	windows/include/png.h	764;"	d
PNG_OFFSET_PIXEL	windows/include/png.h	763;"	d
PNG_PASS_COLS	windows/include/png.h	2513;"	d
PNG_PASS_COL_OFFSET	windows/include/png.h	2497;"	d
PNG_PASS_COL_SHIFT	windows/include/png.h	2504;"	d
PNG_PASS_MASK	windows/include/png.h	2531;"	d
PNG_PASS_ROWS	windows/include/png.h	2511;"	d
PNG_PASS_ROW_OFFSET	windows/include/png.h	2496;"	d
PNG_PASS_ROW_SHIFT	windows/include/png.h	2503;"	d
PNG_PASS_START_COL	windows/include/png.h	2489;"	d
PNG_PASS_START_ROW	windows/include/png.h	2488;"	d
PNG_PEDANTIC_WARNINGS_SUPPORTED	windows/include/pngconf.h	330;"	d
PNG_POINTER_INDEXING_SUPPORTED	windows/include/pnglibconf.h	71;"	d
PNG_PRIVATE	windows/include/pngconf.h	358;"	d
PNG_PRIVATE	windows/include/pngconf.h	380;"	d
PNG_PRIVATE	windows/include/pngconf.h	398;"	d
PNG_PROGRESSIVE_READ_SUPPORTED	windows/include/pnglibconf.h	72;"	d
PNG_QUANTIZE_BLUE_BITS	windows/include/pnglibconf.h	30;"	d
PNG_QUANTIZE_GREEN_BITS	windows/include/pnglibconf.h	31;"	d
PNG_QUANTIZE_RED_BITS	windows/include/pnglibconf.h	32;"	d
PNG_READ_16BIT_SUPPORTED	windows/include/pnglibconf.h	73;"	d
PNG_READ_16_TO_8	windows/include/png.h	1461;"	d
PNG_READ_ALPHA_MODE_SUPPORTED	windows/include/pnglibconf.h	74;"	d
PNG_READ_ANCILLARY_CHUNKS_SUPPORTED	windows/include/pnglibconf.h	75;"	d
PNG_READ_BACKGROUND_SUPPORTED	windows/include/pnglibconf.h	76;"	d
PNG_READ_BGR_SUPPORTED	windows/include/pnglibconf.h	77;"	d
PNG_READ_COMPOSITE_NODIV_SUPPORTED	windows/include/pnglibconf.h	80;"	d
PNG_READ_COMPRESSED_TEXT_SUPPORTED	windows/include/pnglibconf.h	81;"	d
PNG_READ_EXPAND_16_SUPPORTED	windows/include/pnglibconf.h	82;"	d
PNG_READ_EXPAND_SUPPORTED	windows/include/pnglibconf.h	83;"	d
PNG_READ_FILLER_SUPPORTED	windows/include/pnglibconf.h	84;"	d
PNG_READ_GAMMA_SUPPORTED	windows/include/pnglibconf.h	86;"	d
PNG_READ_GRAY_TO_RGB_SUPPORTED	windows/include/pnglibconf.h	87;"	d
PNG_READ_INTERLACING_SUPPORTED	windows/include/pnglibconf.h	90;"	d
PNG_READ_INT_FUNCTIONS_SUPPORTED	windows/include/pnglibconf.h	91;"	d
PNG_READ_INVERT_ALPHA_SUPPORTED	windows/include/pnglibconf.h	92;"	d
PNG_READ_INVERT_SUPPORTED	windows/include/pnglibconf.h	93;"	d
PNG_READ_OPT_PLTE_SUPPORTED	windows/include/pnglibconf.h	96;"	d
PNG_READ_PACKSWAP_SUPPORTED	windows/include/pnglibconf.h	98;"	d
PNG_READ_PACK_SUPPORTED	windows/include/pnglibconf.h	97;"	d
PNG_READ_QUANTIZE_SUPPORTED	windows/include/pnglibconf.h	101;"	d
PNG_READ_RGB_TO_GRAY_SUPPORTED	windows/include/pnglibconf.h	102;"	d
PNG_READ_SCALE_16_TO_8_SUPPORTED	windows/include/pnglibconf.h	104;"	d
PNG_READ_SHIFT_SUPPORTED	windows/include/pnglibconf.h	106;"	d
PNG_READ_STRIP_16_TO_8_SUPPORTED	windows/include/pnglibconf.h	109;"	d
PNG_READ_STRIP_ALPHA_SUPPORTED	windows/include/pnglibconf.h	110;"	d
PNG_READ_SUPPORTED	windows/include/pnglibconf.h	111;"	d
PNG_READ_SWAP_ALPHA_SUPPORTED	windows/include/pnglibconf.h	112;"	d
PNG_READ_SWAP_SUPPORTED	windows/include/pnglibconf.h	113;"	d
PNG_READ_TEXT_SUPPORTED	windows/include/pnglibconf.h	115;"	d
PNG_READ_TRANSFORMS_SUPPORTED	windows/include/pnglibconf.h	117;"	d
PNG_READ_UNKNOWN_CHUNKS_SUPPORTED	windows/include/pnglibconf.h	119;"	d
PNG_READ_USER_CHUNKS_SUPPORTED	windows/include/pnglibconf.h	120;"	d
PNG_READ_USER_TRANSFORM_SUPPORTED	windows/include/pnglibconf.h	121;"	d
PNG_READ_bKGD_SUPPORTED	windows/include/pnglibconf.h	78;"	d
PNG_READ_cHRM_SUPPORTED	windows/include/pnglibconf.h	79;"	d
PNG_READ_gAMA_SUPPORTED	windows/include/pnglibconf.h	85;"	d
PNG_READ_hIST_SUPPORTED	windows/include/pnglibconf.h	88;"	d
PNG_READ_iCCP_SUPPORTED	windows/include/pnglibconf.h	89;"	d
PNG_READ_iTXt_SUPPORTED	windows/include/pnglibconf.h	94;"	d
PNG_READ_oFFs_SUPPORTED	windows/include/pnglibconf.h	95;"	d
PNG_READ_pCAL_SUPPORTED	windows/include/pnglibconf.h	99;"	d
PNG_READ_pHYs_SUPPORTED	windows/include/pnglibconf.h	100;"	d
PNG_READ_sBIT_SUPPORTED	windows/include/pnglibconf.h	103;"	d
PNG_READ_sCAL_SUPPORTED	windows/include/pnglibconf.h	105;"	d
PNG_READ_sPLT_SUPPORTED	windows/include/pnglibconf.h	107;"	d
PNG_READ_sRGB_SUPPORTED	windows/include/pnglibconf.h	108;"	d
PNG_READ_tEXt_SUPPORTED	windows/include/pnglibconf.h	114;"	d
PNG_READ_tIME_SUPPORTED	windows/include/pnglibconf.h	116;"	d
PNG_READ_tRNS_SUPPORTED	windows/include/pnglibconf.h	118;"	d
PNG_READ_zTXt_SUPPORTED	windows/include/pnglibconf.h	122;"	d
PNG_REMOVED	windows/include/pngconf.h	314;"	d
PNG_RESOLUTION_LAST	windows/include/png.h	783;"	d
PNG_RESOLUTION_METER	windows/include/png.h	782;"	d
PNG_RESOLUTION_UNKNOWN	windows/include/png.h	781;"	d
PNG_RGB_TO_GRAY_DEFAULT	windows/include/png.h	1145;"	d
PNG_ROW_FROM_PASS_ROW	windows/include/png.h	2520;"	d
PNG_ROW_IN_INTERLACE_PASS	windows/include/png.h	2535;"	d
PNG_SAVE_INT_32_SUPPORTED	windows/include/pnglibconf.h	123;"	d
PNG_SCALE_LAST	windows/include/png.h	778;"	d
PNG_SCALE_METER	windows/include/png.h	776;"	d
PNG_SCALE_RADIAN	windows/include/png.h	777;"	d
PNG_SCALE_UNKNOWN	windows/include/png.h	775;"	d
PNG_SEQUENTIAL_READ_SUPPORTED	windows/include/pnglibconf.h	126;"	d
PNG_SETJMP_SUPPORTED	windows/include/pnglibconf.h	129;"	d
PNG_SET_CHUNK_CACHE_LIMIT_SUPPORTED	windows/include/pnglibconf.h	127;"	d
PNG_SET_CHUNK_MALLOC_LIMIT_SUPPORTED	windows/include/pnglibconf.h	128;"	d
PNG_SET_USER_LIMITS_SUPPORTED	windows/include/pnglibconf.h	130;"	d
PNG_SET_WILL_FREE_DATA	windows/include/png.h	1894;"	d
PNG_SIZE_MAX	windows/include/png.h	722;"	d
PNG_STDIO_SUPPORTED	windows/include/pnglibconf.h	133;"	d
PNG_TEXT_COMPRESSION_LAST	windows/include/png.h	659;"	d
PNG_TEXT_COMPRESSION_NONE	windows/include/png.h	655;"	d
PNG_TEXT_COMPRESSION_NONE_WR	windows/include/png.h	653;"	d
PNG_TEXT_COMPRESSION_zTXt	windows/include/png.h	656;"	d
PNG_TEXT_COMPRESSION_zTXt_WR	windows/include/png.h	654;"	d
PNG_TEXT_SUPPORTED	windows/include/pnglibconf.h	135;"	d
PNG_TIME_RFC1123_SUPPORTED	windows/include/pnglibconf.h	136;"	d
PNG_TRANSFORM_BGR	windows/include/png.h	917;"	d
PNG_TRANSFORM_EXPAND	windows/include/png.h	914;"	d
PNG_TRANSFORM_EXPAND_16	windows/include/png.h	928;"	d
PNG_TRANSFORM_GRAY_TO_RGB	windows/include/png.h	926;"	d
PNG_TRANSFORM_IDENTITY	windows/include/png.h	909;"	d
PNG_TRANSFORM_INVERT_ALPHA	windows/include/png.h	920;"	d
PNG_TRANSFORM_INVERT_MONO	windows/include/png.h	915;"	d
PNG_TRANSFORM_PACKING	windows/include/png.h	912;"	d
PNG_TRANSFORM_PACKSWAP	windows/include/png.h	913;"	d
PNG_TRANSFORM_SCALE_16	windows/include/png.h	929;"	d
PNG_TRANSFORM_SHIFT	windows/include/png.h	916;"	d
PNG_TRANSFORM_STRIP_16	windows/include/png.h	910;"	d
PNG_TRANSFORM_STRIP_ALPHA	windows/include/png.h	911;"	d
PNG_TRANSFORM_STRIP_FILLER	windows/include/png.h	921;"	d
PNG_TRANSFORM_STRIP_FILLER_AFTER	windows/include/png.h	924;"	d
PNG_TRANSFORM_STRIP_FILLER_BEFORE	windows/include/png.h	923;"	d
PNG_TRANSFORM_SWAP_ALPHA	windows/include/png.h	918;"	d
PNG_TRANSFORM_SWAP_ENDIAN	windows/include/png.h	919;"	d
PNG_UINT_31_MAX	windows/include/png.h	720;"	d
PNG_UINT_32_MAX	windows/include/png.h	721;"	d
PNG_UNKNOWN_CHUNKS_SUPPORTED	windows/include/pnglibconf.h	139;"	d
PNG_USER_CHUNKS_SUPPORTED	windows/include/pnglibconf.h	140;"	d
PNG_USER_CHUNK_CACHE_MAX	windows/include/pnglibconf.h	34;"	d
PNG_USER_CHUNK_MALLOC_MAX	windows/include/pnglibconf.h	35;"	d
PNG_USER_HEIGHT_MAX	windows/include/pnglibconf.h	36;"	d
PNG_USER_LIMITS_SUPPORTED	windows/include/pnglibconf.h	141;"	d
PNG_USER_MEM_SUPPORTED	windows/include/pnglibconf.h	142;"	d
PNG_USER_TRANSFORM_INFO_SUPPORTED	windows/include/pnglibconf.h	143;"	d
PNG_USER_TRANSFORM_PTR_SUPPORTED	windows/include/pnglibconf.h	144;"	d
PNG_USER_WIDTH_MAX	windows/include/pnglibconf.h	37;"	d
PNG_USER_WILL_FREE_DATA	windows/include/png.h	1895;"	d
PNG_USE_READ_MACROS	windows/include/pngconf.h	59;"	d
PNG_USE_READ_MACROS	windows/include/pngconf.h	63;"	d
PNG_USE_RESULT	windows/include/pngconf.h	342;"	d
PNG_USE_RESULT	windows/include/pngconf.h	366;"	d
PNG_USE_RESULT	windows/include/pngconf.h	389;"	d
PNG_WARNINGS_SUPPORTED	windows/include/pnglibconf.h	145;"	d
PNG_WEIGHT_SHIFT	windows/include/pnglibconf.h	38;"	d
PNG_WRITE_16BIT_SUPPORTED	windows/include/pnglibconf.h	146;"	d
PNG_WRITE_ANCILLARY_CHUNKS_SUPPORTED	windows/include/pnglibconf.h	147;"	d
PNG_WRITE_BGR_SUPPORTED	windows/include/pnglibconf.h	148;"	d
PNG_WRITE_COMPRESSED_TEXT_SUPPORTED	windows/include/pnglibconf.h	151;"	d
PNG_WRITE_CUSTOMIZE_ZTXT_COMPRESSION_SUPPORTED	windows/include/pnglibconf.h	152;"	d
PNG_WRITE_FILLER_SUPPORTED	windows/include/pnglibconf.h	153;"	d
PNG_WRITE_FILTER_SUPPORTED	windows/include/pnglibconf.h	154;"	d
PNG_WRITE_FLUSH_SUPPORTED	windows/include/pnglibconf.h	155;"	d
PNG_WRITE_INTERLACING_SUPPORTED	windows/include/pnglibconf.h	159;"	d
PNG_WRITE_INT_FUNCTIONS_SUPPORTED	windows/include/pnglibconf.h	160;"	d
PNG_WRITE_INVERT_ALPHA_SUPPORTED	windows/include/pnglibconf.h	161;"	d
PNG_WRITE_INVERT_SUPPORTED	windows/include/pnglibconf.h	162;"	d
PNG_WRITE_OPTIMIZE_CMF_SUPPORTED	windows/include/pnglibconf.h	165;"	d
PNG_WRITE_PACKSWAP_SUPPORTED	windows/include/pnglibconf.h	167;"	d
PNG_WRITE_PACK_SUPPORTED	windows/include/pnglibconf.h	166;"	d
PNG_WRITE_SHIFT_SUPPORTED	windows/include/pnglibconf.h	172;"	d
PNG_WRITE_SUPPORTED	windows/include/pnglibconf.h	175;"	d
PNG_WRITE_SWAP_ALPHA_SUPPORTED	windows/include/pnglibconf.h	176;"	d
PNG_WRITE_SWAP_SUPPORTED	windows/include/pnglibconf.h	177;"	d
PNG_WRITE_TEXT_SUPPORTED	windows/include/pnglibconf.h	179;"	d
PNG_WRITE_TRANSFORMS_SUPPORTED	windows/include/pnglibconf.h	181;"	d
PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED	windows/include/pnglibconf.h	183;"	d
PNG_WRITE_USER_TRANSFORM_SUPPORTED	windows/include/pnglibconf.h	184;"	d
PNG_WRITE_WEIGHTED_FILTER_SUPPORTED	windows/include/pnglibconf.h	185;"	d
PNG_WRITE_bKGD_SUPPORTED	windows/include/pnglibconf.h	149;"	d
PNG_WRITE_cHRM_SUPPORTED	windows/include/pnglibconf.h	150;"	d
PNG_WRITE_gAMA_SUPPORTED	windows/include/pnglibconf.h	156;"	d
PNG_WRITE_hIST_SUPPORTED	windows/include/pnglibconf.h	157;"	d
PNG_WRITE_iCCP_SUPPORTED	windows/include/pnglibconf.h	158;"	d
PNG_WRITE_iTXt_SUPPORTED	windows/include/pnglibconf.h	163;"	d
PNG_WRITE_oFFs_SUPPORTED	windows/include/pnglibconf.h	164;"	d
PNG_WRITE_pCAL_SUPPORTED	windows/include/pnglibconf.h	168;"	d
PNG_WRITE_pHYs_SUPPORTED	windows/include/pnglibconf.h	169;"	d
PNG_WRITE_sBIT_SUPPORTED	windows/include/pnglibconf.h	170;"	d
PNG_WRITE_sCAL_SUPPORTED	windows/include/pnglibconf.h	171;"	d
PNG_WRITE_sPLT_SUPPORTED	windows/include/pnglibconf.h	173;"	d
PNG_WRITE_sRGB_SUPPORTED	windows/include/pnglibconf.h	174;"	d
PNG_WRITE_tEXt_SUPPORTED	windows/include/pnglibconf.h	178;"	d
PNG_WRITE_tIME_SUPPORTED	windows/include/pnglibconf.h	180;"	d
PNG_WRITE_tRNS_SUPPORTED	windows/include/pnglibconf.h	182;"	d
PNG_WRITE_zTXt_SUPPORTED	windows/include/pnglibconf.h	186;"	d
PNG_ZBUF_SIZE	windows/include/pnglibconf.h	39;"	d
PNG_bKGD_SUPPORTED	windows/include/pnglibconf.h	45;"	d
PNG_cHRM_SUPPORTED	windows/include/pnglibconf.h	48;"	d
PNG_gAMA_SUPPORTED	windows/include/pnglibconf.h	59;"	d
PNG_hIST_SUPPORTED	windows/include/pnglibconf.h	61;"	d
PNG_iCCP_SUPPORTED	windows/include/pnglibconf.h	62;"	d
PNG_iTXt_SUPPORTED	windows/include/pnglibconf.h	66;"	d
PNG_oFFs_SUPPORTED	windows/include/pnglibconf.h	68;"	d
PNG_pCAL_SUPPORTED	windows/include/pnglibconf.h	69;"	d
PNG_pHYs_SUPPORTED	windows/include/pnglibconf.h	70;"	d
PNG_sBIT_SUPPORTED	windows/include/pnglibconf.h	124;"	d
PNG_sCAL_PRECISION	windows/include/pnglibconf.h	33;"	d
PNG_sCAL_SUPPORTED	windows/include/pnglibconf.h	125;"	d
PNG_sPLT_SUPPORTED	windows/include/pnglibconf.h	131;"	d
PNG_sRGB_INTENT_ABSOLUTE	windows/include/png.h	789;"	d
PNG_sRGB_INTENT_LAST	windows/include/png.h	790;"	d
PNG_sRGB_INTENT_PERCEPTUAL	windows/include/png.h	786;"	d
PNG_sRGB_INTENT_RELATIVE	windows/include/png.h	787;"	d
PNG_sRGB_INTENT_SATURATION	windows/include/png.h	788;"	d
PNG_sRGB_SUPPORTED	windows/include/pnglibconf.h	132;"	d
PNG_tEXt_SUPPORTED	windows/include/pnglibconf.h	134;"	d
PNG_tIME_SUPPORTED	windows/include/pnglibconf.h	137;"	d
PNG_tRNS_SUPPORTED	windows/include/pnglibconf.h	138;"	d
PNG_zTXt_SUPPORTED	windows/include/pnglibconf.h	187;"	d
POLICY_H	libs/learning/policy.h	15;"	d
POLICY_LOG	libs/learning/policy.cpp	23;"	d	file:
PORT	predictor/predict.py	/^PORT = 40000$/;"	v
PORT	predictor/talker.py	/^PORT = 9999$/;"	v
PORT_NUM	labview/socket.cpp	25;"	d	file:
PORT_NUM	predictor/main.cpp	15;"	d	file:
PORT_NUM	yunseok/tcp_client.cpp	24;"	d	file:
PORT_NUM	yunseok/tcp_client_2.cpp	23;"	d	file:
PORT_TALKER	predictor/main.cpp	16;"	d	file:
PORT_UI	drivers/human/human.cpp	68;"	d	file:
PORT_UI_HANIEUM	drivers/human/human.cpp	145;"	d	file:
POSITION	libs/txml/xmltok.h	/^} POSITION;$/;"	t	typeref:struct:position
POS_X	drivers/data_list.h	/^			PITCH, 		ROLL, 			YAW_RATE, 	DISTANCE, 		POS_X, 		$/;"	e	enum:sensing_data_name
POS_Y	drivers/data_list.h	/^			POS_Y, 		SPEED_ERROR,		LATERAL, 	TARGET_WHEEL_SPEED, 	WHEEL_SPEED, 	$/;"	e	enum:sensing_data_name
PRACTICE	libs/robottools/robottools.h	/^	PRACTICE = 0,$/;"	e	enum:rtCarPitSetupType
PREDY	drivers/inferno2/inferno2.cpp	229;"	d	file:
PREFIX	libs/txml/xmltok.c	178;"	d	file:
PREFIX	libs/txml/xmltok.c	333;"	d	file:
PREFIX	libs/txml/xmltok.c	430;"	d	file:
PREFIX	libs/txml/xmltok.c	494;"	d	file:
PREFIX	libs/txml/xmltok.c	496;"	d	file:
PREFIX	libs/txml/xmltok.c	561;"	d	file:
PREFIX	libs/txml/xmltok_impl.c	101;"	d	file:
PRINT_PROFILE	libs/tgf/tgf.h	564;"	d
PRINT_PROFILE	libs/tgf/tgf.h	604;"	d
PRM_BELLCRANK	interfaces/car.h	535;"	d
PRM_BIAS	interfaces/car.h	579;"	d
PRM_BONNET	interfaces/car.h	591;"	d
PRM_BRKAREA	interfaces/car.h	552;"	d
PRM_BRKDIAM	interfaces/car.h	551;"	d
PRM_BRKPRESS	interfaces/car.h	554;"	d
PRM_BRKREP	interfaces/car.h	553;"	d
PRM_BUMPTHRESHOLD	interfaces/car.h	541;"	d
PRM_CA	interfaces/car.h	525;"	d
PRM_CAMBER	interfaces/car.h	524;"	d
PRM_CAR	interfaces/car.h	588;"	d
PRM_CATEGORY	interfaces/car.h	498;"	d
PRM_CENTR	interfaces/car.h	511;"	d
PRM_CX	interfaces/car.h	556;"	d
PRM_DAMAGE_AERO	interfaces/car.h	660;"	d
PRM_DAMAGE_ALIGNMENT	interfaces/car.h	659;"	d
PRM_DAMAGE_SUSPENSION	interfaces/car.h	658;"	d
PRM_DAMAGE_TYRES	interfaces/car.h	657;"	d
PRM_EFACTOR	interfaces/car.h	527;"	d
PRM_EFFICIENCY	interfaces/car.h	513;"	d
PRM_ENGBRKCOEFF	interfaces/car.h	571;"	d
PRM_ENV	interfaces/car.h	590;"	d
PRM_FASTBUMP	interfaces/car.h	539;"	d
PRM_FASTREBOUND	interfaces/car.h	540;"	d
PRM_FCL	interfaces/car.h	557;"	d
PRM_FRLWEIGHTREP	interfaces/car.h	506;"	d
PRM_FRNTAREA	interfaces/car.h	559;"	d
PRM_FRWEIGHTREP	interfaces/car.h	505;"	d
PRM_FUEL	interfaces/car.h	510;"	d
PRM_FUELCONS	interfaces/car.h	570;"	d
PRM_GCHEIGHT	interfaces/car.h	508;"	d
PRM_HEIGHT	interfaces/car.h	503;"	d
PRM_INERTIA	interfaces/car.h	512;"	d
PRM_LEN	interfaces/car.h	499;"	d
PRM_LOADFMAX	interfaces/car.h	529;"	d
PRM_LOADFMIN	interfaces/car.h	530;"	d
PRM_LOCKINGBRAKE_TQ	interfaces/car.h	599;"	d
PRM_LOCKING_TQ	interfaces/car.h	598;"	d
PRM_MASS	interfaces/car.h	504;"	d
PRM_MAX_SLIP_BIAS	interfaces/car.h	597;"	d
PRM_MAX_TQ_BIAS	interfaces/car.h	596;"	d
PRM_MIN_TQ_BIAS	interfaces/car.h	595;"	d
PRM_MODEL_AEROFLOW	interfaces/car.h	661;"	d
PRM_MODEL_AERO_FACTOR	interfaces/car.h	662;"	d
PRM_MODEL_TYRE_TEMPERATURE	interfaces/car.h	663;"	d
PRM_MU	interfaces/car.h	518;"	d
PRM_OPLOAD	interfaces/car.h	531;"	d
PRM_OVERALLLEN	interfaces/car.h	501;"	d
PRM_OVERALLWIDTH	interfaces/car.h	502;"	d
PRM_PACKERS	interfaces/car.h	536;"	d
PRM_POWER	interfaces/car.h	572;"	d
PRM_PRESSURE	interfaces/car.h	528;"	d
PRM_RATIO	interfaces/car.h	578;"	d
PRM_RCL	interfaces/car.h	558;"	d
PRM_REBOUNDTHRESHOLD	interfaces/car.h	542;"	d
PRM_REVSLIM	interfaces/car.h	564;"	d
PRM_REVSMAX	interfaces/car.h	565;"	d
PRM_RFACTOR	interfaces/car.h	526;"	d
PRM_RIDEHEIGHT	interfaces/car.h	522;"	d
PRM_RIMDIAM	interfaces/car.h	519;"	d
PRM_ROLLCENTER	interfaces/car.h	584;"	d
PRM_RPM	interfaces/car.h	567;"	d
PRM_RRLWEIGHTREP	interfaces/car.h	507;"	d
PRM_SHADOW_TEXTURE	interfaces/car.h	593;"	d
PRM_SHIFTTIME	interfaces/car.h	582;"	d
PRM_SIZE	interfaces/car.h	515;"	d
PRM_SLOWBUMP	interfaces/car.h	537;"	d
PRM_SLOWREBOUND	interfaces/car.h	538;"	d
PRM_SPEEDO_DIGITAL	interfaces/car.h	644;"	d
PRM_SPEEDO_MAXANG	interfaces/car.h	643;"	d
PRM_SPEEDO_MAXVAL	interfaces/car.h	641;"	d
PRM_SPEEDO_MINANG	interfaces/car.h	642;"	d
PRM_SPEEDO_MINVAL	interfaces/car.h	640;"	d
PRM_SPEEDO_NDLXSZ	interfaces/car.h	634;"	d
PRM_SPEEDO_NDLYSZ	interfaces/car.h	635;"	d
PRM_SPEEDO_TEX	interfaces/car.h	629;"	d
PRM_SPEEDO_XCENTER	interfaces/car.h	636;"	d
PRM_SPEEDO_XDIGITCENTER	interfaces/car.h	638;"	d
PRM_SPEEDO_XPOS	interfaces/car.h	632;"	d
PRM_SPEEDO_XSZ	interfaces/car.h	630;"	d
PRM_SPEEDO_YCENTER	interfaces/car.h	637;"	d
PRM_SPEEDO_YDIGITCENTER	interfaces/car.h	639;"	d
PRM_SPEEDO_YPOS	interfaces/car.h	633;"	d
PRM_SPEEDO_YSZ	interfaces/car.h	631;"	d
PRM_SPR	interfaces/car.h	533;"	d
PRM_STEERLOCK	interfaces/car.h	548;"	d
PRM_STEERSPD	interfaces/car.h	549;"	d
PRM_SUSPCOURSE	interfaces/car.h	534;"	d
PRM_SUSPENSION_TYPE	modules/simu/simuv3/susp.h	72;"	d
PRM_TACHO_MAXANG	interfaces/car.h	627;"	d
PRM_TACHO_MAXVAL	interfaces/car.h	625;"	d
PRM_TACHO_MINANG	interfaces/car.h	626;"	d
PRM_TACHO_MINVAL	interfaces/car.h	624;"	d
PRM_TACHO_NDLXSZ	interfaces/car.h	618;"	d
PRM_TACHO_NDLYSZ	interfaces/car.h	619;"	d
PRM_TACHO_TEX	interfaces/car.h	613;"	d
PRM_TACHO_XCENTER	interfaces/car.h	620;"	d
PRM_TACHO_XDIGITCENTER	interfaces/car.h	622;"	d
PRM_TACHO_XPOS	interfaces/car.h	616;"	d
PRM_TACHO_XSZ	interfaces/car.h	614;"	d
PRM_TACHO_YCENTER	interfaces/car.h	621;"	d
PRM_TACHO_YDIGITCENTER	interfaces/car.h	623;"	d
PRM_TACHO_YPOS	interfaces/car.h	617;"	d
PRM_TACHO_YSZ	interfaces/car.h	615;"	d
PRM_TANK	interfaces/car.h	509;"	d
PRM_THRESHOLD	interfaces/car.h	587;"	d
PRM_TICKOVER	interfaces/car.h	566;"	d
PRM_TIRERATIO	interfaces/car.h	521;"	d
PRM_TIREWIDTH	interfaces/car.h	520;"	d
PRM_TOE	interfaces/car.h	523;"	d
PRM_TQ	interfaces/car.h	568;"	d
PRM_TURBO	interfaces/car.h	573;"	d
PRM_TURBO_FACTOR	interfaces/car.h	575;"	d
PRM_TURBO_LAG	interfaces/car.h	576;"	d
PRM_TURBO_RPM	interfaces/car.h	574;"	d
PRM_TYPE	interfaces/car.h	514;"	d
PRM_VISCOSITY_FACTOR	interfaces/car.h	600;"	d
PRM_WHEELSON	interfaces/car.h	589;"	d
PRM_WHEEL_3D	interfaces/car.h	646;"	d
PRM_WHEEL_3D_DIR	interfaces/car.h	647;"	d
PRM_WHEEL_TEXTURE	interfaces/car.h	592;"	d
PRM_WIDTH	interfaces/car.h	500;"	d
PRM_WINGANGLE	interfaces/car.h	561;"	d
PRM_WINGAREA	interfaces/car.h	560;"	d
PRM_XPOS	interfaces/car.h	544;"	d
PRM_YPOS	interfaces/car.h	545;"	d
PRM_ZPOS	interfaces/car.h	546;"	d
PROGRAM	linux/Makefile	/^PROGRAM = torcs-bin$/;"	m
PROGRAM	tools/accc/Makefile	/^PROGRAM		= accc-bin$/;"	m
PROGRAM	tools/nfs2ac/Makefile	/^PROGRAM		= nfs2ac-bin$/;"	m
PROGRAM	tools/nfsperf/Makefile	/^PROGRAM		= nfsperf-bin$/;"	m
PROGRAM	tools/texmapper/Makefile	/^PROGRAM   	= texmapper-bin$/;"	m
PROGRAM	tools/trackgen/Makefile	/^PROGRAM      	= trackgen-bin$/;"	m
PROLOG_HANDLER	libs/txml/xmlrole.c	/^typedef int PROLOG_HANDLER(struct prolog_state *state,$/;"	t	file:
PROLOG_STATE	libs/txml/xmlrole.h	/^} PROLOG_STATE;$/;"	t	typeref:struct:prolog_state
PULL_SPD	modules/simu/simuv3/simu.cpp	204;"	d	file:
PULL_Z_OFFSET	modules/simu/simuv3/simu.cpp	203;"	d	file:
PUSH	drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon151
PUSH	drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon195
PUSH	drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon174
PUSH	drivers/human/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon186
PUSH	drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon160
PUSH	drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon206
PUSH	drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon167
P_NUM	libs/tgf/params.cpp	44;"	d	file:
P_STR	libs/tgf/params.cpp	45;"	d	file:
PairList	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^typedef map<ObjPair, Response, less<ObjPair> > PairList;$/;"	t
ParamAbs	drivers/human/human.h	/^	int		ParamAbs;$/;"	m	struct:HumanContext
ParamAsr	drivers/human/human.h	/^	int		ParamAsr;$/;"	m	struct:HumanContext
ParamFileName	tools/texmapper/maintexmapper.cpp	/^char	*ParamFileName = NULL;$/;"	v
ParamHandle	tools/texmapper/maintexmapper.cpp	/^void	*ParamHandle = NULL;$/;"	v
ParametricDistribution	libs/learning/Distribution.h	/^	ParametricDistribution() {}$/;"	f	class:ParametricDistribution
ParametricDistribution	libs/learning/Distribution.h	/^class ParametricDistribution : public Distribution {$/;"	c
ParametricLine	drivers/olethros/geometry.cpp	/^ParametricLine::ParametricLine (Vector* A, Vector* B)$/;"	f	class:ParametricLine
ParametricLine	drivers/olethros/geometry.h	/^class ParametricLine$/;"	c
ParametricSphere	drivers/olethros/geometry.cpp	/^ParametricSphere::ParametricSphere(Vector* C, float r)$/;"	f	class:ParametricSphere
ParametricSphere	drivers/olethros/geometry.cpp	/^ParametricSphere::ParametricSphere(int N)$/;"	f	class:ParametricSphere
ParametricSphere	drivers/olethros/geometry.h	/^class ParametricSphere$/;"	c
Parser	libs/txml/xmlparse.c	/^} Parser;$/;"	t	typeref:struct:__anon117	file:
PartialFlowRectangle	modules/simu/simuv3/aero.cpp	/^tdble PartialFlowRectangle(tdble theta, tdble psi)$/;"	f
PartialFlowSmooth	modules/simu/simuv3/aero.cpp	/^tdble PartialFlowSmooth(tdble theta, tdble psi)$/;"	f
PartialFlowSphere	modules/simu/simuv3/aero.cpp	/^tdble PartialFlowSphere(tdble theta, tdble psi)$/;"	f
Particle	topview/topview.cpp	/^struct Particle {$/;"	s	file:
PartnerList	modules/simu/simuv2/SOLID-2.0/src/RespTable.cpp	/^typedef vector<DtObjectRef> PartnerList;$/;"	t	file:
PathSeg	drivers/berniw/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	drivers/berniw2/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	drivers/berniw3/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	drivers/human/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	drivers/inferno/pathfinder.h	/^		PathSeg(int segments, int tracksegments) {$/;"	f	class:PathSeg
PathSeg	drivers/inferno/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	drivers/lliaw/pathfinder.h	/^		PathSeg(int segments, int tracksegments) {$/;"	f	class:PathSeg
PathSeg	drivers/lliaw/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	drivers/tita/pathfinder.h	/^		PathSeg(int segments, int tracksegments) {$/;"	f	class:PathSeg
PathSeg	drivers/tita/pathfinder.h	/^class PathSeg$/;"	c
PathSegOpt	drivers/inferno/pathfinder.h	/^		PathSegOpt(int segments) {$/;"	f	class:PathSegOpt
PathSegOpt	drivers/inferno/pathfinder.h	/^class PathSegOpt$/;"	c
PathSegOpt	drivers/lliaw/pathfinder.h	/^		PathSegOpt(int segments) {$/;"	f	class:PathSegOpt
PathSegOpt	drivers/lliaw/pathfinder.h	/^class PathSegOpt$/;"	c
PathSegOpt	drivers/tita/pathfinder.h	/^		PathSegOpt(int segments) {$/;"	f	class:PathSegOpt
PathSegOpt	drivers/tita/pathfinder.h	/^class PathSegOpt$/;"	c
PathSegPit	drivers/inferno/pathfinder.h	/^		PathSegPit(int pitsegments, int segments, int start, int end, PathSegOpt* p) :$/;"	f	class:PathSegPit
PathSegPit	drivers/inferno/pathfinder.h	/^class PathSegPit$/;"	c
PathSegPit	drivers/lliaw/pathfinder.h	/^		PathSegPit(int pitsegments, int segments, int start, int end, PathSegOpt* p) :$/;"	f	class:PathSegPit
PathSegPit	drivers/lliaw/pathfinder.h	/^class PathSegPit$/;"	c
PathSegPit	drivers/tita/pathfinder.h	/^		PathSegPit(int pitsegments, int segments, int start, int end, PathSegOpt* p) :$/;"	f	class:PathSegPit
PathSegPit	drivers/tita/pathfinder.h	/^class PathSegPit$/;"	c
Pathfinder	drivers/berniw/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	drivers/berniw/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	drivers/berniw2/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	drivers/berniw2/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	drivers/berniw3/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	drivers/berniw3/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	drivers/human/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	drivers/human/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	drivers/inferno/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	drivers/inferno/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	drivers/lliaw/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	drivers/lliaw/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	drivers/tita/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	drivers/tita/pathfinder.h	/^class Pathfinder$/;"	c
Paused	modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
PickDrvCarLabelId	libs/racescreens/driverselect.cpp	/^static int PickDrvCarLabelId;$/;"	v	file:
PickDrvCategoryLabelId	libs/racescreens/driverselect.cpp	/^static int PickDrvCategoryLabelId;$/;"	v	file:
PickDrvNameLabelId	libs/racescreens/driverselect.cpp	/^static int PickDrvNameLabelId;$/;"	v	file:
Pit	drivers/bt/pit.cpp	/^Pit::Pit(tSituation *s, Driver *driver)$/;"	f	class:Pit
Pit	drivers/bt/pit.h	/^class Pit {$/;"	c
Pit	drivers/damned/pit.cpp	/^Pit::Pit(tSituation *s, Driver *driver)$/;"	f	class:Pit
Pit	drivers/damned/pit.h	/^class Pit {$/;"	c
Pit	drivers/olethros/pit.cpp	/^Pit::Pit(tSituation *s, Driver *driver)$/;"	f	class:olethros::Pit
Pit	drivers/olethros/pit.h	/^class Pit {$/;"	c	namespace:olethros
Pit	drivers/sparkle/pit.cpp	/^Pit::Pit(tSituation *s, Driver *driver)$/;"	f	class:Pit
Pit	drivers/sparkle/pit.h	/^class Pit {$/;"	c
PitState	drivers/inferno2/inferno2.cpp	/^int   PitState[10]  = {0};$/;"	v
PitState	drivers/olethros/pit.h	/^enum PitState {$/;"	g	namespace:olethros
PitsAnchor	modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *PitsAnchor = 0;$/;"	v
PitsEditId	libs/confscreens/driverconfig.cpp	/^static int PitsEditId;$/;"	v	file:
PitsId	libs/racescreens/trackselect.cpp	/^static int PitsId;$/;"	v	file:
PlayerInfo	libs/confscreens/driverconfig.cpp	/^typedef struct PlayerInfo$/;"	s	file:
PlayersInfo	libs/confscreens/driverconfig.cpp	/^static tPlayerInfo PlayersInfo[NB_DRV];$/;"	v	file:
Playing	modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
PlibSoundInterface	modules/graphic/ssggraph/PlibSoundInterface.cpp	/^PlibSoundInterface::PlibSoundInterface(float sampling_rate, int n_channels) : SoundInterface (sampling_rate, n_channels)$/;"	f	class:PlibSoundInterface
PlibSoundInterface	modules/graphic/ssggraph/SoundInterface.h	/^class PlibSoundInterface : public SoundInterface {$/;"	c
PlibTorcsSound	modules/graphic/ssggraph/TorcsSound.cpp	/^PlibTorcsSound::PlibTorcsSound(slScheduler* sched,$/;"	f	class:PlibTorcsSound
PlibTorcsSound	modules/graphic/ssggraph/TorcsSound.h	/^class PlibTorcsSound : public TorcsSound {$/;"	c
PnGain	drivers/inferno2/inferno2.cpp	/^static tdble PnGain[10]    = {0.02f};$/;"	v	file:
Point	drivers/olethros/TrackData.h	/^    Point()$/;"	f	class:Point
Point	drivers/olethros/TrackData.h	/^    Point(float x, float y, float z  = 0.0)$/;"	f	class:Point
Point	drivers/olethros/TrackData.h	/^class Point$/;"	c
Point	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^  Point() {}$/;"	f	class:Point
Point	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^  Point(Scalar x, Scalar y, Scalar z) : Vector(x, y, z) {}$/;"	f	class:Point
Point	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^  Point(const double p[3]) : Vector(p) {}$/;"	f	class:Point
Point	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^  Point(const float p[3]) : Vector(p) {} $/;"	f	class:Point
Point	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^class Point : public Vector {$/;"	c
PointBuf	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef vector<Point> PointBuf;$/;"	t	file:
PointCoords	drivers/olethros/geometry.cpp	/^void ParametricLine::PointCoords (float t, Vector* X)$/;"	f	class:ParametricLine
PolyList	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef vector<const Polytope *> PolyList;$/;"	t	file:
Polygon	modules/simu/simuv2/SOLID-2.0/src/Polygon.h	/^  Polygon(const VertexBase& b, int c, const unsigned int v[]) : $/;"	f	class:Polygon
Polygon	modules/simu/simuv2/SOLID-2.0/src/Polygon.h	/^class Polygon : public Polytope {$/;"	c
Polyhedron	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^Polyhedron::Polyhedron(const VertexBase& b, int c, const unsigned int v[]) :$/;"	f	class:Polyhedron
Polyhedron	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.h	/^class Polyhedron : public Polytope {$/;"	c
Polytope	modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  Polytope(const VertexBase& b, int c, const unsigned int v[]) : $/;"	f	class:Polytope
Polytope	modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^class Polytope : public Convex {$/;"	c
PopItem	libs/learning/List.cpp	/^int PopItem(LIST* list) {$/;"	f
PreA	modules/graphic/ssggraph/grcam.cpp	/^    tdble PreA;$/;"	m	class:cGrCarCamBehind	file:
PreA	modules/graphic/ssggraph/grcam.cpp	/^    tdble PreA;$/;"	m	class:cGrCarCamBehind2	file:
PrefHdle	drivers/human/pref.cpp	/^void *PrefHdle;$/;"	v
PrefHdle	libs/confscreens/controlconfig.cpp	/^static void	*PrefHdle = NULL;$/;"	v	file:
PrintSegments	drivers/olethros/TrackData.h	/^    void PrintSegments()$/;"	f	class:SegmentList
Processor	libs/txml/xmlparse.c	/^typedef enum XML_Error Processor(XML_Parser parser,$/;"	t	typeref:enum:Processor	file:
ProfileInstance	libs/tgf/profiler.cpp	/^ProfileInstance::ProfileInstance(const char * pname) {$/;"	f	class:ProfileInstance
ProfileInstance	libs/tgf/tgf.h	/^class ProfileInstance {$/;"	c
Profiler	libs/tgf/profiler.cpp	/^Profiler::Profiler() {$/;"	f	class:Profiler
Profiler	libs/tgf/tgf.h	/^class Profiler {$/;"	c
PropagateUpdateBackwards	drivers/olethros/learn.cpp	/^void SegLearn::PropagateUpdateBackwards (tTrackSeg* pseg, float d, float beta, float max_length)$/;"	f	class:SegLearn
ProxList	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef set<Encounter> ProxList;$/;"	t	file:
Q	drivers/olethros/geometry.h	/^	Vector* Q; \/\/ direction$/;"	m	class:ParametricLine
Q	libs/learning/policy.h	/^	real** Q; \/\/\/< state-action evaluation$/;"	m	class:DiscretePolicy
QLearning	libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
QSOUND_CHAR_H	modules/graphic/ssggraph/QSoundChar.h	2;"	d
QSoundChar	modules/graphic/ssggraph/QSoundChar.h	/^}QSoundChar;$/;"	t	typeref:struct:QSoundChar_
QSoundChar_	modules/graphic/ssggraph/QSoundChar.h	/^typedef struct QSoundChar_ $/;"	s
QUALIFYING	libs/robottools/robottools.h	/^	QUALIFYING = 1,$/;"	e	enum:rtCarPitSetupType
QuatToEuler	modules/simu/simuv3/car.cpp	/^void QuatToEuler (sgVec3 hpr, const sgQuat quat )$/;"	f
Quaternion	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion() {}$/;"	f	class:Quaternion
Quaternion	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(Scalar x, Scalar y, Scalar z, Scalar w) : Tuple4(x, y, z, w) {}$/;"	f	class:Quaternion
Quaternion	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(Scalar yaw, Scalar pitch, Scalar roll) { $/;"	f	class:Quaternion
Quaternion	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(const Vector& axis, Scalar angle) { setRotation(axis, angle); }$/;"	f	class:Quaternion
Quaternion	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(const double v[4]) : Tuple4(v) {}$/;"	f	class:Quaternion
Quaternion	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(const float v[4]) : Tuple4(v) {}$/;"	f	class:Quaternion
Quaternion	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^class Quaternion : public Tuple4 {$/;"	c
QueueSoundMap	modules/graphic/ssggraph/SoundInterface.h	/^} QueueSoundMap;$/;"	t	typeref:struct:QueueSoundMap_
QueueSoundMap_	modules/graphic/ssggraph/SoundInterface.h	/^typedef struct QueueSoundMap_ {$/;"	s
QuitHookActivate	libs/raceengineclient/racemain.cpp	/^static void QuitHookActivate(void * \/* dummy *\/)$/;"	f	file:
QuitHookHandle	libs/raceengineclient/racemain.cpp	/^static void	*QuitHookHandle = 0;$/;"	v	file:
QuitHookInit	libs/raceengineclient/racemain.cpp	/^static void* QuitHookInit(void)$/;"	f	file:
R	drivers/olethros/geometry.h	/^	Vector* R; \/\/ origin$/;"	m	class:ParametricLine
R	tools/trackgen/easymesh.cpp	/^	double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
RACE	libs/robottools/robottools.h	/^	RACE = 2,$/;"	e	enum:rtCarPitSetupType
RACE_ENG_CFG	libs/raceengineclient/raceinit.h	34;"	d
RAD2DEG	libs/tgf/tgf.h	76;"	d
RADS2RPM	libs/tgf/tgf.h	74;"	d
RADS_PER_DEG	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar RADS_PER_DEG =  0.01745329251994329547;$/;"	v
RBFConnection	libs/learning/ANN.h	/^} RBFConnection;$/;"	t	typeref:struct:RBFConnection_
RBFConnection_	libs/learning/ANN.h	/^typedef struct RBFConnection_ {$/;"	s
RCM_IDENT	interfaces/raceman.h	36;"	d
RCM_MAX_DT_ROBOTS	interfaces/raceman.h	57;"	d
RCM_MAX_DT_SIMU	interfaces/raceman.h	56;"	d
REAL_H	libs/learning/real.h	2;"	d
REAR	interfaces/car.h	44;"	d
REAR_LFT	interfaces/car.h	42;"	d
REAR_RGT	interfaces/car.h	41;"	d
RECORD_COUNT	drivers/human/human.cpp	86;"	d	file:
REFERENCE_DISTANCE	modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat REFERENCE_DISTANCE; \/\/\/< reference distance for sound$/;"	m	class:OpenalTorcsSound
REFS	tools/accc/ac3dload.cpp	51;"	d	file:
RELAXATION	libs/robottools/robottools.h	40;"	d
RELAXATION2	libs/robottools/robottools.h	32;"	d
REPEAT1	libs/tgfclient/gui.cpp	47;"	d	file:
REPEAT2	libs/tgfclient/gui.cpp	48;"	d	file:
RESOLUTION	modules/graphic/ssggraph/grtrackmap.cpp	/^const float cGrTrackMap::RESOLUTION = 5.0;$/;"	m	class:cGrTrackMap	file:
RESOLUTION	modules/graphic/ssggraph/grtrackmap.h	/^		static const float RESOLUTION;$/;"	m	class:cGrTrackMap
RE_ATTR_BEST_LAP_TIME	interfaces/raceman.h	346;"	d
RE_ATTR_BOT_SPEED	interfaces/raceman.h	349;"	d
RE_ATTR_CAR	interfaces/raceman.h	342;"	d
RE_ATTR_CUR_DRIVER	interfaces/raceman.h	332;"	d
RE_ATTR_CUR_RACE	interfaces/raceman.h	330;"	d
RE_ATTR_CUR_TRACK	interfaces/raceman.h	331;"	d
RE_ATTR_DAMMAGES	interfaces/raceman.h	350;"	d
RE_ATTR_DATE	interfaces/raceman.h	327;"	d
RE_ATTR_DLL_NAME	interfaces/raceman.h	334;"	d
RE_ATTR_IDX	interfaces/raceman.h	344;"	d
RE_ATTR_INDEX	interfaces/raceman.h	335;"	d
RE_ATTR_LAPS	interfaces/raceman.h	345;"	d
RE_ATTR_MODULE	interfaces/raceman.h	343;"	d
RE_ATTR_NAME	interfaces/raceman.h	341;"	d
RE_ATTR_NB_PIT_STOPS	interfaces/raceman.h	351;"	d
RE_ATTR_PENALTYTIME	interfaces/raceman.h	353;"	d
RE_ATTR_POINTS	interfaces/raceman.h	352;"	d
RE_ATTR_TIME	interfaces/raceman.h	347;"	d
RE_ATTR_TOP_SPEED	interfaces/raceman.h	348;"	d
RE_SECT_CURRENT	interfaces/raceman.h	329;"	d
RE_SECT_HEADER	interfaces/raceman.h	326;"	d
RE_SECT_RANK	interfaces/raceman.h	339;"	d
RE_SECT_RESULTS	interfaces/raceman.h	338;"	d
RE_SECT_STANDINGS	interfaces/raceman.h	337;"	d
RE_STATE_CONFIG	interfaces/raceman.h	103;"	d
RE_STATE_ERROR	interfaces/raceman.h	113;"	d
RE_STATE_EVENT_INIT	interfaces/raceman.h	104;"	d
RE_STATE_EVENT_SHUTDOWN	interfaces/raceman.h	111;"	d
RE_STATE_EXIT	interfaces/raceman.h	114;"	d
RE_STATE_POST_RACE	interfaces/raceman.h	110;"	d
RE_STATE_PRE_RACE	interfaces/raceman.h	105;"	d
RE_STATE_RACE	interfaces/raceman.h	107;"	d
RE_STATE_RACE_END	interfaces/raceman.h	109;"	d
RE_STATE_RACE_START	interfaces/raceman.h	106;"	d
RE_STATE_RACE_STOP	interfaces/raceman.h	108;"	d
RE_STATE_SHUTDOWN	interfaces/raceman.h	112;"	d
RIGHT	interfaces/car.h	45;"	d
RIGHT_STEER	drivers/data_list.h	/^enum actuating_data_name{ACCEL, BRAKE, LEFT_STEER, RIGHT_STEER, STEER_MODE, NUM_DUMMY};$/;"	e	enum:actuating_data_name
RMAX	drivers/berniw/berniw.h	41;"	d
RMAX	drivers/berniw/trackdesc.h	45;"	d
RMAX	drivers/berniw2/berniw.h	41;"	d
RMAX	drivers/berniw2/trackdesc.h	45;"	d
RMAX	drivers/berniw3/berniw.h	41;"	d
RMAX	drivers/berniw3/trackdesc.h	45;"	d
RMAX	drivers/human/human.cpp	76;"	d	file:
RMAX	drivers/human/trackdesc.h	45;"	d
RMAX	drivers/inferno/berniw.h	45;"	d
RMAX	drivers/inferno/trackdesc.h	46;"	d
RMAX	drivers/lliaw/berniw.h	45;"	d
RMAX	drivers/lliaw/trackdesc.h	46;"	d
RMAX	drivers/tita/berniw.h	45;"	d
RMAX	drivers/tita/trackdesc.h	46;"	d
RM_ACTIVGAMESCR	interfaces/raceman.h	52;"	d
RM_ASYNC	interfaces/raceman.h	43;"	d
RM_ATTR_ALLOW_RESTART	interfaces/raceman.h	248;"	d
RM_ATTR_BGIMG	interfaces/raceman.h	260;"	d
RM_ATTR_CARSPERPIT	interfaces/raceman.h	283;"	d
RM_ATTR_CATEGORY	interfaces/raceman.h	258;"	d
RM_ATTR_COLDIST	interfaces/raceman.h	275;"	d
RM_ATTR_COLOFFSET	interfaces/raceman.h	276;"	d
RM_ATTR_CORNER_CUT_TIME_PENALTY	interfaces/raceman.h	287;"	d
RM_ATTR_CUR_CONF	interfaces/raceman.h	246;"	d
RM_ATTR_DAMAGE_FACTOR	interfaces/raceman.h	288;"	d
RM_ATTR_DAMAGE_REPAIR_FACTOR	interfaces/raceman.h	292;"	d
RM_ATTR_DESCR	interfaces/raceman.h	259;"	d
RM_ATTR_DISPMODE	interfaces/raceman.h	268;"	d
RM_ATTR_DISPRES	interfaces/raceman.h	269;"	d
RM_ATTR_DISP_START_GRID	interfaces/raceman.h	250;"	d
RM_ATTR_DISTANCE	interfaces/raceman.h	280;"	d
RM_ATTR_DRVNAME	interfaces/raceman.h	257;"	d
RM_ATTR_FOCUSED	interfaces/raceman.h	266;"	d
RM_ATTR_FOCUSEDIDX	interfaces/raceman.h	267;"	d
RM_ATTR_FUEL_FACTOR	interfaces/raceman.h	289;"	d
RM_ATTR_IDX	interfaces/raceman.h	265;"	d
RM_ATTR_INITHEIGHT	interfaces/raceman.h	278;"	d
RM_ATTR_INITSPEED	interfaces/raceman.h	277;"	d
RM_ATTR_INVALIDATE_BEST_LAP_CORNER_CUT	interfaces/raceman.h	286;"	d
RM_ATTR_INVALIDATE_BEST_LAP_WALL_TOUCH	interfaces/raceman.h	285;"	d
RM_ATTR_LAPS	interfaces/raceman.h	281;"	d
RM_ATTR_MAXNUM	interfaces/raceman.h	252;"	d
RM_ATTR_MAX_DMG	interfaces/raceman.h	279;"	d
RM_ATTR_MAX_DRV	interfaces/raceman.h	253;"	d
RM_ATTR_MODULE	interfaces/raceman.h	264;"	d
RM_ATTR_NAME	interfaces/raceman.h	256;"	d
RM_ATTR_PITSTOP_BASE_TIME	interfaces/raceman.h	293;"	d
RM_ATTR_PIT_SPEED_LIMIT	interfaces/raceman.h	290;"	d
RM_ATTR_POINTS	interfaces/raceman.h	295;"	d
RM_ATTR_POLE	interfaces/raceman.h	282;"	d
RM_ATTR_PRIO	interfaces/raceman.h	255;"	d
RM_ATTR_RACE	interfaces/raceman.h	272;"	d
RM_ATTR_REFUEL_FUEL_FLOW	interfaces/raceman.h	291;"	d
RM_ATTR_ROWS	interfaces/raceman.h	273;"	d
RM_ATTR_RUNIMG	interfaces/raceman.h	261;"	d
RM_ATTR_SPLASH_MENU	interfaces/raceman.h	249;"	d
RM_ATTR_STARTIMG	interfaces/raceman.h	262;"	d
RM_ATTR_START_ORDER	interfaces/raceman.h	247;"	d
RM_ATTR_TOSTART	interfaces/raceman.h	274;"	d
RM_ATTR_TYPE	interfaces/raceman.h	271;"	d
RM_ATT_CAPTURE_ENABLE	interfaces/raceman.h	320;"	d
RM_ATT_CAPTURE_FPS	interfaces/raceman.h	321;"	d
RM_ATT_CAPTURE_OUT_DIR	interfaces/raceman.h	322;"	d
RM_CAR_STATE_BROKEN	interfaces/car.h	215;"	d
RM_CAR_STATE_DNF	interfaces/car.h	209;"	d
RM_CAR_STATE_ELIMINATED	interfaces/car.h	217;"	d
RM_CAR_STATE_FINISH	interfaces/car.h	207;"	d
RM_CAR_STATE_NO_SIMU	interfaces/car.h	214;"	d
RM_CAR_STATE_OUT	interfaces/car.h	213;"	d
RM_CAR_STATE_OUTOFGAS	interfaces/car.h	216;"	d
RM_CAR_STATE_PIT	interfaces/car.h	208;"	d
RM_CAR_STATE_PULLDN	interfaces/car.h	212;"	d
RM_CAR_STATE_PULLSIDE	interfaces/car.h	211;"	d
RM_CAR_STATE_PULLUP	interfaces/car.h	210;"	d
RM_CAR_STATE_SIMU_NO_MOVE	interfaces/car.h	218;"	d
RM_CMD_NONE	interfaces/car.h	353;"	d
RM_CMD_PIT_ASKED	interfaces/car.h	354;"	d
RM_CONF_DISP_MODE	libs/racescreens/racescreens.h	63;"	d
RM_CONF_RACE_LEN	libs/racescreens/racescreens.h	62;"	d
RM_CONTINUE_RACE	interfaces/raceman.h	46;"	d
RM_DISP_MODE_CAPTURE	interfaces/raceman.h	149;"	d
RM_DISP_MODE_CONSOLE	interfaces/raceman.h	151;"	d
RM_DISP_MODE_NONE	interfaces/raceman.h	150;"	d
RM_DISP_MODE_NORMAL	interfaces/raceman.h	148;"	d
RM_DRV_HUMAN	interfaces/car.h	120;"	d
RM_DRV_ROBOT	interfaces/car.h	121;"	d
RM_END_RACE	interfaces/raceman.h	45;"	d
RM_LIGHT_HEAD1	interfaces/car.h	359;"	d
RM_LIGHT_HEAD2	interfaces/car.h	360;"	d
RM_MSG_LEN	interfaces/car.h	356;"	d
RM_NEXT_EVENT	interfaces/raceman.h	50;"	d
RM_NEXT_RACE	interfaces/raceman.h	49;"	d
RM_NEXT_STEP	interfaces/raceman.h	48;"	d
RM_PENALTY_DRIVETHROUGH	interfaces/car.h	123;"	d
RM_PENALTY_STOPANDGO	interfaces/car.h	124;"	d
RM_PIT_REPAIR	interfaces/car.h	433;"	d
RM_PIT_STOPANDGO	interfaces/car.h	434;"	d
RM_PNST_DRIVETHROUGH	interfaces/raceman.h	175;"	d
RM_PNST_SPD	interfaces/raceman.h	178;"	d
RM_PNST_STNGO	interfaces/raceman.h	179;"	d
RM_PNST_STOPANDGO	interfaces/raceman.h	176;"	d
RM_PNST_STOPANDGO_OK	interfaces/raceman.h	177;"	d
RM_QUIT	interfaces/raceman.h	53;"	d
RM_RACE_ENDED	interfaces/raceman.h	66;"	d
RM_RACE_FINISHING	interfaces/raceman.h	65;"	d
RM_RACE_PAUSED	interfaces/raceman.h	69;"	d
RM_RACE_PRESTART	interfaces/raceman.h	68;"	d
RM_RACE_RUNNING	interfaces/raceman.h	64;"	d
RM_RACE_STARTING	interfaces/raceman.h	67;"	d
RM_SECT_CONF	interfaces/raceman.h	240;"	d
RM_SECT_DRIVERS	interfaces/raceman.h	236;"	d
RM_SECT_DRIVERS_RACING	interfaces/raceman.h	244;"	d
RM_SECT_HEADER	interfaces/raceman.h	235;"	d
RM_SECT_MOVIE_CAPTURE	interfaces/raceman.h	318;"	d
RM_SECT_OPTIONS	interfaces/raceman.h	241;"	d
RM_SECT_POINTS	interfaces/raceman.h	242;"	d
RM_SECT_RACES	interfaces/raceman.h	238;"	d
RM_SECT_STARTINGGRID	interfaces/raceman.h	237;"	d
RM_SECT_TRACKS	interfaces/raceman.h	239;"	d
RM_SYNC	interfaces/raceman.h	42;"	d
RM_TYPE_PRACTICE	interfaces/raceman.h	71;"	d
RM_TYPE_QUALIF	interfaces/raceman.h	72;"	d
RM_TYPE_RACE	interfaces/raceman.h	73;"	d
RM_VAL_CONFDISPMODE	interfaces/raceman.h	301;"	d
RM_VAL_CONFRACELEN	interfaces/raceman.h	300;"	d
RM_VAL_DRVSEL	interfaces/raceman.h	298;"	d
RM_VAL_DRV_LIST_ORDER	interfaces/raceman.h	303;"	d
RM_VAL_INVISIBLE	interfaces/raceman.h	315;"	d
RM_VAL_LAST_RACE_ORDER	interfaces/raceman.h	304;"	d
RM_VAL_LAST_RACE_RORDER	interfaces/raceman.h	305;"	d
RM_VAL_NO	interfaces/raceman.h	312;"	d
RM_VAL_PRACTICE	interfaces/raceman.h	309;"	d
RM_VAL_QUALIF	interfaces/raceman.h	308;"	d
RM_VAL_RACE	interfaces/raceman.h	307;"	d
RM_VAL_RACECONF	interfaces/raceman.h	299;"	d
RM_VAL_TRACKSEL	interfaces/raceman.h	297;"	d
RM_VAL_VISIBLE	interfaces/raceman.h	314;"	d
RM_VAL_YES	interfaces/raceman.h	311;"	d
ROBOT	drivers/berniw/1/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/10/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/2/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/3/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/4/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/5/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/6/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/7/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/8/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/9/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	drivers/berniw2/1/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/10/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/2/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/3/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/4/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/5/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/6/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/7/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/8/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/9/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw2/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	drivers/berniw3/1/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/10/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/2/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/3/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/4/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/5/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/6/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/7/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/8/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/9/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/berniw3/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	drivers/bt/0/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/0/practice/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/0/qualifying/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/0/race/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/1/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/1/practice/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/1/qualifying/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/1/race/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/2/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/3/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/4/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/5/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/6/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/7/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/8/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/9/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/bt/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	drivers/damned/0/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/1/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/2/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/3/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/4/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/5/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/6/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/7/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/8/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/9/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/damned/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	drivers/human/Makefile	/^ROBOT = human$/;"	m
ROBOT	drivers/inferno/1/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/10/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/2/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/3/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/4/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/5/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/6/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/7/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/8/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/9/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	drivers/inferno2/Makefile	/^ROBOT     = inferno2$/;"	m
ROBOT	drivers/lliaw/1/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/10/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/2/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/3/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/4/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/5/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/6/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/7/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/8/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/9/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/lliaw/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	drivers/olethros/0/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/1/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/2/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/3/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/4/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/5/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/6/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/7/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/8/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/9/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/olethros/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	drivers/sparkle/0/Makefile	/^ROBOT       = sparkle$/;"	m
ROBOT	drivers/sparkle/Makefile	/^ROBOT       = sparkle$/;"	m
ROBOT	drivers/tita/1/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/10/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/2/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/3/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/4/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/5/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/6/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/7/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/8/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/9/Makefile	/^ROBOT = tita$/;"	m
ROBOT	drivers/tita/Makefile	/^ROBOT = tita$/;"	m
ROB_ATTR_AUTHOR	interfaces/robot.h	129;"	d
ROB_ATTR_BLUE	interfaces/robot.h	135;"	d
ROB_ATTR_CAR	interfaces/robot.h	130;"	d
ROB_ATTR_CATEGORY	interfaces/robot.h	131;"	d
ROB_ATTR_DESC	interfaces/robot.h	128;"	d
ROB_ATTR_GREEN	interfaces/robot.h	134;"	d
ROB_ATTR_LEVEL	interfaces/robot.h	142;"	d
ROB_ATTR_NAME	interfaces/robot.h	126;"	d
ROB_ATTR_RACENUM	interfaces/robot.h	132;"	d
ROB_ATTR_RED	interfaces/robot.h	133;"	d
ROB_ATTR_TEAM	interfaces/robot.h	127;"	d
ROB_ATTR_TYPE	interfaces/robot.h	137;"	d
ROB_IDENT	interfaces/robot.h	47;"	d
ROB_LIST_INDEX	interfaces/robot.h	124;"	d
ROB_PIT_IM	interfaces/robot.h	100;"	d
ROB_PIT_MENU	interfaces/robot.h	101;"	d
ROB_SECT_ROBOTS	interfaces/robot.h	122;"	d
ROB_VAL_AMATEUR	interfaces/robot.h	145;"	d
ROB_VAL_HUMAN	interfaces/robot.h	139;"	d
ROB_VAL_PRO	interfaces/robot.h	147;"	d
ROB_VAL_ROBOT	interfaces/robot.h	140;"	d
ROB_VAL_ROOKIE	interfaces/robot.h	144;"	d
ROB_VAL_SEMI_PRO	interfaces/robot.h	146;"	d
ROLL	drivers/data_list.h	/^			PITCH, 		ROLL, 			YAW_RATE, 	DISTANCE, 		POS_X, 		$/;"	e	enum:sensing_data_name
ROLLOFF_FACTOR	modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat ROLLOFF_FACTOR; \/\/\/< how fast we need to roll off$/;"	m	class:OpenalTorcsSound
ROTATION	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    ROTATION = 0x02,$/;"	e	enum:Transform::__anon14
ROUND_UP	libs/txml/xmlparse.c	51;"	d	file:
RPL_IDENT	interfaces/replay.h	24;"	d
RPM2RADS	libs/tgf/tgf.h	75;"	d
RREL	drivers/berniw/trackdesc.h	48;"	d
RREL	drivers/berniw2/trackdesc.h	48;"	d
RREL	drivers/berniw3/trackdesc.h	48;"	d
RREL	drivers/human/trackdesc.h	48;"	d
RREL	drivers/inferno/trackdesc.h	49;"	d
RREL	drivers/lliaw/trackdesc.h	49;"	d
RREL	drivers/tita/trackdesc.h	49;"	d
RaceNumEditId	libs/confscreens/driverconfig.cpp	/^static int RaceNumEditId;$/;"	v	file:
RacelineSegment	tools/trackgen/raceline.cpp	/^struct RacelineSegment {$/;"	s	file:
RacemanModLoaded	libs/client/mainmenu.cpp	/^tModList *RacemanModLoaded = (tModList*)NULL;$/;"	v
ReAddRacemanListButton	libs/raceengineclient/raceinit.cpp	/^void ReAddRacemanListButton(void *menuHandle)$/;"	f
ReApplyRaceTimePenalties	libs/raceengineclient/raceresults.cpp	/^static void ReApplyRaceTimePenalties(void)$/;"	f	file:
ReBoardInfo	libs/raceengineclient/racegl.cpp	/^static void ReBoardInfo(void * \/* vboard *\/) {$/;"	f	file:
ReDisplayResults	libs/raceengineclient/raceresults.cpp	/^ReDisplayResults(void)$/;"	f
ReDisplayStandings	libs/raceengineclient/raceresults.cpp	/^ReDisplayStandings(void)$/;"	f
ReEventInitResults	libs/raceengineclient/raceresults.cpp	/^ReEventInitResults(void)$/;"	f
ReEventShutdown	libs/raceengineclient/racemain.cpp	/^int ReEventShutdown(void)$/;"	f
ReGetCurrentRaceName	libs/raceengineclient/raceinit.cpp	/^ReGetCurrentRaceName(void)$/;"	f
ReGetPrevRaceName	libs/raceengineclient/raceinit.cpp	/^ReGetPrevRaceName(void)$/;"	f
ReHookInit	libs/raceengineclient/racegl.cpp	/^ReHookInit(void) {$/;"	f
ReHookShutdown	libs/raceengineclient/racegl.cpp	/^void ReHookShutdown(void) {$/;"	f
ReInfo	libs/raceengineclient/raceengine.cpp	/^tRmInfo *ReInfo = 0;$/;"	v
ReInfo	modules/simu/simuv3/carstruct.h	/^    tRmInfo     *ReInfo;$/;"	m	struct:__anon42
ReInit	libs/raceengineclient/raceinit.cpp	/^ReInit(void)$/;"	f
ReInitCars	libs/raceengineclient/raceinit.cpp	/^ReInitCars(void)$/;"	f
ReInitResults	libs/raceengineclient/raceresults.cpp	/^ReInitResults(void)$/;"	f
ReInitRules	libs/raceengineclient/racemain.cpp	/^void ReInitRules(tRmInfo* ReInfo)$/;"	f
ReInitTrack	libs/raceengineclient/raceinit.cpp	/^ReInitTrack(void)$/;"	f
ReManage	libs/raceengineclient/raceengine.cpp	/^static void ReManage(tCarElt *car) {$/;"	f	file:
ReNewTrackMenu	libs/raceengineclient/racemanmenu.cpp	/^ReNewTrackMenu(void)$/;"	f
ReOneStep	libs/raceengineclient/raceengine.cpp	/^static void ReOneStep(double deltaTimeIncrement) {$/;"	f	file:
RePostRace	libs/raceengineclient/racemain.cpp	/^int RePostRace(void)$/;"	f
RePreRace	libs/raceengineclient/racemain.cpp	/^int RePreRace(void)$/;"	f
ReRaceBigMsgSet	libs/raceengineclient/raceengine.cpp	/^static void ReRaceBigMsgSet(const char *msg, double life) {$/;"	f	file:
ReRaceCleanDrivers	libs/raceengineclient/raceinit.cpp	/^ReRaceCleanDrivers(void)$/;"	f
ReRaceCleanup	libs/raceengineclient/raceinit.cpp	/^ReRaceCleanup(void)$/;"	f
ReRaceEnd	libs/raceengineclient/racemain.cpp	/^int ReRaceEnd(void)$/;"	f
ReRaceEventInit	libs/raceengineclient/racemain.cpp	/^ReRaceEventInit(void)$/;"	f
ReRaceModList	libs/raceengineclient/raceinit.cpp	/^tModList *ReRaceModList = 0;$/;"	v
ReRaceMsgSet	libs/raceengineclient/raceengine.cpp	/^static void ReRaceMsgSet(const char *msg, double life) {$/;"	f	file:
ReRaceMsgUpdate	libs/raceengineclient/raceengine.cpp	/^static void ReRaceMsgUpdate(void) {$/;"	f	file:
ReRaceRules	libs/raceengineclient/raceengine.cpp	/^static void ReRaceRules(tCarElt *car) {$/;"	f	file:
ReRaceStart	libs/raceengineclient/racemain.cpp	/^int ReRaceStart(void)$/;"	f
ReRaceStop	libs/raceengineclient/racemain.cpp	/^int ReRaceStop(void)$/;"	f
ReRacemanMenu	libs/raceengineclient/racemanmenu.cpp	/^ReRacemanMenu(void)$/;"	f
ReResEraseScreen	libs/raceengineclient/racegl.cpp	/^void ReResEraseScreen(void) {$/;"	f
ReResGetLines	libs/raceengineclient/racegl.cpp	/^int ReResGetLines(void) {$/;"	f
ReResScreenAddText	libs/raceengineclient/racegl.cpp	/^void ReResScreenAddText(char *text) {$/;"	f
ReResScreenInit	libs/raceengineclient/racegl.cpp	/^ReResScreenInit(void) {$/;"	f
ReResScreenRemoveText	libs/raceengineclient/racegl.cpp	/^void ReResScreenRemoveText(int line) {$/;"	f
ReResScreenSetText	libs/raceengineclient/racegl.cpp	/^void ReResScreenSetText(const char *text, int line, int clr) {$/;"	f
ReResScreenSetTitle	libs/raceengineclient/racegl.cpp	/^void ReResScreenSetTitle(char *title) {$/;"	f
ReResShowCont	libs/raceengineclient/racegl.cpp	/^void ReResShowCont(void) {$/;"	f
ReRunRaceOnConsole	libs/raceengineclient/raceinit.cpp	/^void ReRunRaceOnConsole(const char* raceconfig)$/;"	f
ReSavePracticeLap	libs/raceengineclient/raceresults.cpp	/^ReSavePracticeLap(tCarElt *car)$/;"	f
ReScreenInit	libs/raceengineclient/racegl.cpp	/^ReScreenInit(void) {$/;"	f
ReScreenShutdown	libs/raceengineclient/racegl.cpp	/^void ReScreenShutdown(void) {$/;"	f
ReSetRaceBigMsg	libs/raceengineclient/racegl.cpp	/^void ReSetRaceBigMsg(const char *msg) {$/;"	f
ReSetRaceMsg	libs/raceengineclient/racegl.cpp	/^void ReSetRaceMsg(const char *msg) {$/;"	f
ReShutdown	libs/raceengineclient/raceinit.cpp	/^void ReShutdown(void)$/;"	f
ReSinglePlayerInit	libs/raceengineclient/singleplayer.cpp	/^ReSinglePlayerInit(void *precMenu)$/;"	f
ReSortCars	libs/raceengineclient/raceengine.cpp	/^static void ReSortCars(void) {$/;"	f	file:
ReStart	libs/raceengineclient/raceengine.cpp	/^void ReStart(void) {$/;"	f
ReStartNewRace	libs/raceengineclient/raceinit.cpp	/^ReStartNewRace(void * \/* dummy *\/)$/;"	f
ReStateApply	libs/raceengineclient/racestate.cpp	/^ReStateApply(void *vstate)$/;"	f
ReStateInit	libs/raceengineclient/racestate.cpp	/^ReStateInit(void *prevMenu)$/;"	f
ReStateManage	libs/raceengineclient/racestate.cpp	/^ReStateManage(void)$/;"	f
ReStop	libs/raceengineclient/raceengine.cpp	/^void ReStop(void) {$/;"	f
ReStoreRaceResults	libs/raceengineclient/raceresults.cpp	/^void ReStoreRaceResults(const char *race)$/;"	f
ReTimeMod	libs/raceengineclient/raceengine.cpp	/^void ReTimeMod(void *vcmd) {$/;"	f
ReUpdate	libs/raceengineclient/raceengine.cpp	/^int ReUpdate(void) {$/;"	f
ReUpdateQualifCurRes	libs/raceengineclient/raceresults.cpp	/^ReUpdateQualifCurRes(tCarElt *car)$/;"	f
ReUpdateStandings	libs/raceengineclient/raceresults.cpp	/^ReUpdateStandings(void)$/;"	f
ReUpdtPitCmd	libs/raceengineclient/raceengine.cpp	/^static void ReUpdtPitCmd(void *pvcar) {$/;"	f	file:
ReUpdtPitTime	libs/raceengineclient/raceengine.cpp	/^static void ReUpdtPitTime(tCarElt *car) {$/;"	f	file:
ReadFile	libs/learning/learn_debug.h	26;"	d
ReadSimuCfg	libs/confscreens/simuconfig.cpp	/^static void ReadSimuCfg(void)$/;"	f	file:
ReadTrack3	modules/track/track3.cpp	/^ReadTrack3(tTrack *theTrack, void *TrackHandle, tRoadCam **camList, int ext)$/;"	f
ReadTrack4	modules/track/track4.cpp	/^ReadTrack4(tTrack *theTrack, void *TrackHandle, tRoadCam **camList, int ext)$/;"	f
RearLevelGroup1	modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelGroup1;$/;"	m	struct:DoV
RearLevelGroup2	modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelGroup2;$/;"	m	struct:DoV
RearLevelGroup3	modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelGroup3;$/;"	m	struct:DoV
RearLevelGroupGlobal	modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelGroupGlobal; \/* the distance for the end of the front scene *\/$/;"	m	struct:DoV
RearLevelMap1	modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelMap1;$/;"	m	struct:DoV
RearLevelMap2	modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelMap2;$/;"	m	struct:DoV
RearLevelMap3	modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelMap3;$/;"	m	struct:DoV
RelButNeutral	drivers/human/human.h	/^	int		RelButNeutral;$/;"	m	struct:HumanContext
ReloadValues	libs/confscreens/controlconfig.cpp	/^static int ReloadValues = 1;$/;"	v	file:
RemoveCar	modules/simu/simuv2/simu.cpp	/^RemoveCar(tCar *car, tSituation *s)$/;"	f	file:
RemoveCar	modules/simu/simuv3/simu.cpp	/^RemoveCar(tCar *car, tSituation *s)$/;"	f	file:
RemoveListItem	libs/learning/List.cpp	/^int RemoveListItem(LIST* list, LISTITEM* ptr) {$/;"	f
RepairDamage	drivers/olethros/strategy.cpp	/^bool ManagedStrategy::RepairDamage(tCarElt* car, Opponents* opponents)$/;"	f	class:olethros::ManagedStrategy
Res	libs/tgfclient/screen.cpp	/^static char	**Res = NULL;$/;"	v	file:
Res	libs/tgfclient/screen.cpp	/^static char	*Res[] = {"640x480", "800x600", "1024x768", "1152x768", "1152x864", "1200x854", "1200x960", "1280x720", "1280x1024", "1400x900", "1600x900", "1600x1200", "1680x1050", "1920x1200", "320x200"};$/;"	v	file:
ResLabelId	libs/tgfclient/screen.cpp	/^static int	ResLabelId;$/;"	v	file:
ResPrevNext	libs/tgfclient/screen.cpp	/^ResPrevNext(void *vdelta)$/;"	f	file:
Reset	libs/learning/ann_policy.cpp	/^void ANN_Policy::Reset()$/;"	f	class:ANN_Policy
Reset	libs/learning/policy.cpp	/^void DiscretePolicy::Reset ()$/;"	f	class:DiscretePolicy
Reshape	libs/tgfclient/screen.cpp	/^static void Reshape(int width, int height)$/;"	f	file:
Resize	drivers/olethros/geometry.cpp	/^void Vector::Resize(int N_)$/;"	f	class:Vector
RespTable	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^class RespTable {$/;"	c
Response	modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  Response(DtResponse r = 0, $/;"	f	class:Response
Response	modules/simu/simuv2/SOLID-2.0/src/Response.h	/^class Response {$/;"	c
RestartRaceHookActivate	libs/raceengineclient/racemain.cpp	/^static void RestartRaceHookActivate(void * \/* dummy *\/)$/;"	f	file:
RestartRaceHookHandle	libs/raceengineclient/racemain.cpp	/^static void	*RestartRaceHookHandle = 0;$/;"	v	file:
RestartRaceHookInit	libs/raceengineclient/racemain.cpp	/^static void* RestartRaceHookInit(void)$/;"	f	file:
RmCarRules	interfaces/raceman.h	/^typedef struct RmCarRules$/;"	s
RmCarSetupScreenInit	libs/racescreens/carsetupscreen.cpp	/^void *RmCarSetupScreenInit(void *prevMenu, tCarElt *car, tRmInfo* reInfo)$/;"	f
RmDisplayStartRace	libs/racescreens/miscscreens.cpp	/^RmDisplayStartRace(tRmInfo *info, void *startScr, void *abortScr)$/;"	f
RmDriversSelect	libs/racescreens/driverselect.cpp	/^void RmDriversSelect(void *vs)$/;"	f
RmFileSelect	libs/racescreens/fileselect.cpp	/^void RmFileSelect(void *vs)$/;"	f
RmFourStateScreen	libs/racescreens/miscscreens.cpp	/^void *RmFourStateScreen($/;"	f
RmGetCategoryName	libs/racescreens/trackselect.cpp	/^char* RmGetCategoryName(char *category)$/;"	f
RmGetTrackName	libs/racescreens/trackselect.cpp	/^char* RmGetTrackName(char *category, char *trackName)$/;"	f
RmInfo	interfaces/raceman.h	/^typedef struct RmInfo$/;"	s
RmLoadingScreenSetText	libs/racescreens/loadingscreen.cpp	/^void RmLoadingScreenSetText(const char *text)$/;"	f
RmLoadingScreenStart	libs/racescreens/loadingscreen.cpp	/^void RmLoadingScreenStart(const char *title, const char *bgimg)$/;"	f
RmMovieCapture	interfaces/raceman.h	/^typedef struct RmMovieCapture$/;"	s
RmNStateScreen	libs/racescreens/miscscreens.cpp	/^void *RmNStateScreen($/;"	f
RmNextRace	libs/racescreens/results.cpp	/^tRaceCall RmNextRace;$/;"	v
RmPitMenuStart	libs/racescreens/pitmenu.cpp	/^void RmPitMenuStart(tCarElt *car, tRmInfo *reInfo, void *userdata, tfuiCallback callback)$/;"	f
RmPrevRace	libs/racescreens/results.cpp	/^tRaceCall RmPrevRace;$/;"	v
RmRaceParamMenu	libs/racescreens/racemenu.cpp	/^void RmRaceParamMenu(void *vrp)$/;"	f
RmRaceRules	interfaces/raceman.h	/^typedef struct RmRaceRules$/;"	s
RmRuleFlags	interfaces/raceman.h	/^	enum RmRuleFlags {$/;"	g	struct:RmRaceRules
RmShowResults	libs/racescreens/results.cpp	/^void RmShowResults(void *prevHdle, tRmInfo *info)$/;"	f
RmShowStandings	libs/racescreens/results.cpp	/^void RmShowStandings(void *prevHdle, tRmInfo *info)$/;"	f
RmShutdownLoadingScreen	libs/racescreens/loadingscreen.cpp	/^void RmShutdownLoadingScreen(void)$/;"	f
RmTrackSelect	libs/racescreens/trackselect.cpp	/^void RmTrackSelect(void *vs)$/;"	f
RmTriStateScreen	libs/racescreens/miscscreens.cpp	/^void *RmTriStateScreen($/;"	f
RmTwoStateScreen	libs/racescreens/miscscreens.cpp	/^void *RmTwoStateScreen($/;"	f
RoadCam	interfaces/track.h	/^typedef struct RoadCam$/;"	s
RobotItf	interfaces/robot.h	/^typedef struct RobotItf {$/;"	s
Root	tools/texmapper/maintexmapper.cpp	/^ssgEntity	*Root;$/;"	v
Root	tools/trackgen/objects.cpp	/^static ssgRoot	*Root = NULL;$/;"	v	file:
Root	tools/trackgen/relief.cpp	/^static ssgEntity	*Root = NULL;$/;"	v	file:
RootWindow	libs/tgfclient/fg_gm.cpp	/^	Window				RootWindow;			\/\/The screen's root window.$/;"	m	struct:tagSFG_Display	file:
Row	tools/texmapper/maintexmapper.cpp	/^tRow	*Row;$/;"	v
RtCarPitSetupExists	libs/robottools/rttrack.cpp	/^bool RtCarPitSetupExists($/;"	f
RtDistToPit	libs/robottools/rttrack.cpp	/^RtDistToPit(struct CarElt *car, tTrack *track, tdble *dL, tdble *dW)$/;"	f
RtGetCarPitSetupFilename	libs/robottools/rttrack.cpp	/^void RtGetCarPitSetupFilename($/;"	f
RtGetDistFromStart	libs/robottools/rttrack.cpp	/^RtGetDistFromStart(tCarElt *car)$/;"	f
RtGetDistFromStart2	libs/robottools/rttrack.cpp	/^RtGetDistFromStart2(tTrkLocPos *p)$/;"	f
RtInitCarPitSetup	libs/robottools/rttrack.cpp	/^void RtInitCarPitSetup(void *hdle,  tCarPitSetup* s, bool minmaxonly)$/;"	f
RtInitCarPitSetupFromDefault	libs/robottools/rttrack.cpp	/^bool RtInitCarPitSetupFromDefault(tCarPitSetup* s, const char* carname)$/;"	f
RtLoadCarPitSetup	libs/robottools/rttrack.cpp	/^bool RtLoadCarPitSetup($/;"	f
RtLoadCarPitSetupFilename	libs/robottools/rttrack.cpp	/^bool RtLoadCarPitSetupFilename(void* hdlecar, const char* filepath,  tCarPitSetup* s, bool minmaxonly)$/;"	f
RtLoadOriginalCarSettings	libs/robottools/rttrack.cpp	/^void* RtLoadOriginalCarSettings(const char* carname)$/;"	f
RtParmReadSetup	libs/robottools/rttrack.cpp	/^void* RtParmReadSetup($/;"	f
RtParmSetNum	libs/robottools/rttrack.cpp	/^static void RtParmSetNum(void* hdlesetup, const char* path, const char* key, const char* unit, tCarPitSetupValue* v)$/;"	f	file:
RtReadCarPitSetupEntry	libs/robottools/rttrack.cpp	/^static void RtReadCarPitSetupEntry(tCarPitSetupValue* v, const char* path, const char* key, void *hdle, bool minmaxonly)$/;"	f	file:
RtSaveCarPitSetup	libs/robottools/rttrack.cpp	/^void RtSaveCarPitSetup($/;"	f
RtSaveCarPitSetupFile	libs/robottools/rttrack.cpp	/^void RtSaveCarPitSetupFile($/;"	f
RtTelemInit	libs/robottools/rttelem.cpp	/^void RtTelemInit(tdble ymin, tdble ymax)$/;"	f
RtTelemNewChannel	libs/robottools/rttelem.cpp	/^void RtTelemNewChannel(const char * name, tdble * var, tdble min, tdble max)$/;"	f
RtTelemShutdown	libs/robottools/rttelem.cpp	/^void RtTelemShutdown(void)$/;"	f
RtTelemStartMonitoring	libs/robottools/rttelem.cpp	/^void RtTelemStartMonitoring(const char * filename)$/;"	f
RtTelemStopMonitoring	libs/robottools/rttelem.cpp	/^void RtTelemStopMonitoring(void)$/;"	f
RtTelemUpdate	libs/robottools/rttelem.cpp	/^void RtTelemUpdate(double time)$/;"	f
RtTrackGetSeg	libs/robottools/rttrack.cpp	/^RtTrackGetSeg(tTrkLocPos *p)$/;"	f
RtTrackGetWidth	libs/robottools/rttrack.cpp	/^RtTrackGetWidth(tTrackSeg *seg, tdble toStart)$/;"	f
RtTrackGlobal2Local	libs/robottools/rttrack.cpp	/^RtTrackGlobal2Local(tTrackSeg *segment, tdble X, tdble Y, tTrkLocPos *p, int type)$/;"	f
RtTrackHeightG	libs/robottools/rttrack.cpp	/^RtTrackHeightG(tTrackSeg *seg, tdble X, tdble Y)$/;"	f
RtTrackHeightL	libs/robottools/rttrack.cpp	/^RtTrackHeightL(tTrkLocPos *p)$/;"	f
RtTrackLocal2Global	libs/robottools/rttrack.cpp	/^RtTrackLocal2Global(tTrkLocPos *p, tdble *X, tdble *Y, int flag)$/;"	f
RtTrackSideNormalG	libs/robottools/rttrack.cpp	/^RtTrackSideNormalG(tTrackSeg *seg, tdble X, tdble Y, int side, t3Dd *norm)$/;"	f
RtTrackSideTgAngleL	libs/robottools/rttrack.cpp	/^RtTrackSideTgAngleL(tTrkLocPos *p)$/;"	f
RtTrackSurfaceNormalL	libs/robottools/rttrack.cpp	/^RtTrackSurfaceNormalL(tTrkLocPos *p, t3Dd *norm)$/;"	f
SBSIZE	drivers/olethros/driver.cpp	/^    static const int SBSIZE = 1024;$/;"	m	namespace:olethros	file:
SCALE	libs/tgfclient/guiobject.cpp	81;"	d	file:
SCALING	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    SCALING = 0x04,$/;"	e	enum:Transform::__anon14
SCx2	modules/simu/simuv2/aero.h	/^    tdble	SCx2;$/;"	m	struct:__anon27
SCx2	modules/simu/simuv3/aero.h	/^    tdble	SCx2;$/;"	m	struct:__anon46
SEC1	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC1" HREF="solid2_toc.html#TOC1">GNU LIBRARY GENERAL PUBLIC LICENSE<\/A><\/H1>$/;"	a
SEC10	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC10" HREF="solid2_toc.html#TOC10">The SOLID API<\/A><\/H1>$/;"	a
SEC11	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC11" HREF="solid2_toc.html#TOC11">Building Shapes<\/A><\/H2>$/;"	a
SEC12	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC12" HREF="solid2_toc.html#TOC12">Creating and Moving Objects<\/A><\/H2>$/;"	a
SEC13	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H3><A NAME="SEC13" HREF="solid2_toc.html#TOC13">Who's Afraid of Quaternions?<\/A><\/H3>$/;"	a
SEC14	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC14" HREF="solid2_toc.html#TOC14">Response Handling<\/A><\/H2>$/;"	a
SEC15	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H3><A NAME="SEC15" HREF="solid2_toc.html#TOC15">Smart Response<\/A><\/H3>$/;"	a
SEC16	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC16" HREF="solid2_toc.html#TOC16">Deformable Models<\/A><\/H2>$/;"	a
SEC17	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC17" HREF="solid2_toc.html#TOC17">Caching<\/A><\/H2>$/;"	a
SEC18	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC18" HREF="solid2_toc.html#TOC18">Projects and other things left to do<\/A><\/H1>$/;"	a
SEC19	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC19" HREF="solid2_toc.html#TOC19">Coming Attractions<\/A><\/H2>$/;"	a
SEC2	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC2" HREF="solid2_toc.html#TOC2">Preamble<\/A><\/H2>$/;"	a
SEC20	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC20" HREF="solid2_toc.html#TOC20">Bug Reports<\/A><\/H1>$/;"	a
SEC3	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC3" HREF="solid2_toc.html#TOC3">TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION<\/A><\/H2>$/;"	a
SEC4	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC4" HREF="solid2_toc.html#TOC4">How to Apply These Terms to Your New Libraries<\/A><\/H2>$/;"	a
SEC5	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC5" HREF="solid2_toc.html#TOC5">Introduction<\/A><\/H1>$/;"	a
SEC6	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC6" HREF="solid2_toc.html#TOC6">Installing SOLID<\/A><\/H1>$/;"	a
SEC7	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC7" HREF="solid2_toc.html#TOC7">Requirements<\/A><\/H2>$/;"	a
SEC8	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC8" HREF="solid2_toc.html#TOC8">Installation<\/A><\/H2>$/;"	a
SEC9	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC9" HREF="solid2_toc.html#TOC9">Trouble in Installation<\/A><\/H1>$/;"	a
SECT_AERODYNAMICS	interfaces/car.h	486;"	d
SECT_BONNET	interfaces/car.h	492;"	d
SECT_BRKSYST	interfaces/car.h	485;"	d
SECT_CAR	interfaces/car.h	460;"	d
SECT_CENTRALDIFFERENTIAL	interfaces/car.h	483;"	d
SECT_CLUTCH	interfaces/car.h	488;"	d
SECT_DRIVER	interfaces/car.h	491;"	d
SECT_DRIVETRAIN	interfaces/car.h	489;"	d
SECT_ENGINE	interfaces/car.h	487;"	d
SECT_EXHAUST	interfaces/car.h	494;"	d
SECT_FRNT	interfaces/car.h	461;"	d
SECT_FRNTARB	interfaces/car.h	464;"	d
SECT_FRNTAXLE	interfaces/car.h	463;"	d
SECT_FRNTDIFFERENTIAL	interfaces/car.h	471;"	d
SECT_FRNTLFTBRAKE	interfaces/car.h	470;"	d
SECT_FRNTLFTSUSP	interfaces/car.h	468;"	d
SECT_FRNTLFTWHEEL	interfaces/car.h	466;"	d
SECT_FRNTRGTBRAKE	interfaces/car.h	469;"	d
SECT_FRNTRGTSUSP	interfaces/car.h	467;"	d
SECT_FRNTRGTWHEEL	interfaces/car.h	465;"	d
SECT_FRNTWING	interfaces/car.h	462;"	d
SECT_GEARBOX	interfaces/car.h	490;"	d
SECT_GROBJECTS	interfaces/car.h	493;"	d
SECT_LIGHT	interfaces/car.h	495;"	d
SECT_REAR	interfaces/car.h	472;"	d
SECT_REARARB	interfaces/car.h	475;"	d
SECT_REARAXLE	interfaces/car.h	474;"	d
SECT_REARDIFFERENTIAL	interfaces/car.h	482;"	d
SECT_REARLFTBRAKE	interfaces/car.h	481;"	d
SECT_REARLFTSUSP	interfaces/car.h	479;"	d
SECT_REARLFTWHEEL	interfaces/car.h	477;"	d
SECT_REARRGTBRAKE	interfaces/car.h	480;"	d
SECT_REARRGTSUSP	interfaces/car.h	478;"	d
SECT_REARRGTWHEEL	interfaces/car.h	476;"	d
SECT_REARWING	interfaces/car.h	473;"	d
SECT_SIMU_SETTINGS	interfaces/car.h	459;"	d
SECT_STEER	interfaces/car.h	484;"	d
SEEK_CUR	windows/include/zconf.h	389;"	d
SEEK_END	windows/include/zconf.h	390;"	d
SEEK_SET	windows/include/zconf.h	388;"	d
SEGMENTS	modules/simu/simuv3/SimulationOptions.h	/^	SEGMENTS \/\/\/< A segmented surface model - not implemented.. yet$/;"	e	enum:AeroFlowModel
SEGMENT_RANGE	modules/simu/simuv3/wheel.h	27;"	d
SEGRANGE	drivers/berniw/pathfinder.h	51;"	d
SEGRANGE	drivers/berniw2/pathfinder.h	51;"	d
SEGRANGE	drivers/berniw3/pathfinder.h	51;"	d
SEGRANGE	drivers/human/pathfinder.h	51;"	d
SEGRANGE	drivers/inferno/pathfinder.h	50;"	d
SEGRANGE	drivers/lliaw/pathfinder.h	50;"	d
SEGRANGE	drivers/tita/pathfinder.h	50;"	d
SEM_COLLISION	interfaces/car.h	666;"	d
SEM_COLLISION_CAR	interfaces/car.h	668;"	d
SEM_COLLISION_XYSCENE	interfaces/car.h	667;"	d
SEM_COLLISION_Z	interfaces/car.h	669;"	d
SEM_COLLISION_Z_CRASH	interfaces/car.h	670;"	d
SERVER_IP	labview/socket.cpp	26;"	d	file:
SERVER_IP	predictor/main.cpp	17;"	d	file:
SERVER_IP	yunseok/tcp_client.cpp	25;"	d	file:
SERVER_IP	yunseok/tcp_client_2.cpp	24;"	d	file:
SET2	libs/txml/xmltok.c	447;"	d	file:
SET2	libs/txml/xmltok.c	455;"	d	file:
SET2	libs/txml/xmltok.c	514;"	d	file:
SET2	libs/txml/xmltok.c	522;"	d	file:
SFG_Display	libs/tgfclient/fg_gm.cpp	/^typedef struct tagSFG_Display SFG_Display;$/;"	t	typeref:struct:tagSFG_Display	file:
SFG_State	libs/tgfclient/fg_gm.cpp	/^typedef struct tagSFG_State SFG_State;$/;"	t	typeref:struct:tagSFG_State	file:
SFG_XYUse	libs/tgfclient/fg_gm.cpp	/^typedef struct tagSFG_XYUse SFG_XYUse;$/;"	t	typeref:struct:tagSFG_XYUse	file:
SGD_180	windows/include/plib/sg.h	1422;"	d
SGD_45	windows/include/plib/sg.h	1419;"	d
SGD_60	windows/include/plib/sg.h	1420;"	d
SGD_90	windows/include/plib/sg.h	1421;"	d
SGD_DEGREES_TO_RADIANS	windows/include/plib/sg.h	1437;"	d
SGD_FOUR	windows/include/plib/sg.h	1418;"	d
SGD_HALF	windows/include/plib/sg.h	1414;"	d
SGD_INSIDE	windows/include/plib/sg.h	1500;"	d
SGD_MAX	windows/include/plib/sg.h	1423;"	d
SGD_ONE	windows/include/plib/sg.h	1415;"	d
SGD_OUTSIDE	windows/include/plib/sg.h	1499;"	d
SGD_PI	windows/include/plib/sg.h	1432;"	d
SGD_PI	windows/include/plib/sg.h	1434;"	d
SGD_RADIANS_TO_DEGREES	windows/include/plib/sg.h	1438;"	d
SGD_STRADDLE	windows/include/plib/sg.h	1501;"	d
SGD_THREE	windows/include/plib/sg.h	1417;"	d
SGD_TWO	windows/include/plib/sg.h	1416;"	d
SGD_W	windows/include/plib/sg.h	1429;"	d
SGD_X	windows/include/plib/sg.h	1426;"	d
SGD_Y	windows/include/plib/sg.h	1427;"	d
SGD_Z	windows/include/plib/sg.h	1428;"	d
SGD_ZERO	windows/include/plib/sg.h	1413;"	d
SGDfloat	windows/include/plib/sg.h	1411;"	d
SG_180	windows/include/plib/sg.h	43;"	d
SG_45	windows/include/plib/sg.h	40;"	d
SG_60	windows/include/plib/sg.h	41;"	d
SG_90	windows/include/plib/sg.h	42;"	d
SG_BOT_PLANE	windows/include/plib/sg.h	1042;"	d
SG_DEGREES_TO_RADIANS	windows/include/plib/sg.h	57;"	d
SG_FAR_PLANE	windows/include/plib/sg.h	1045;"	d
SG_FOUR	windows/include/plib/sg.h	39;"	d
SG_GENERAL_SCALE	windows/include/plib/sg.h	221;"	d
SG_H	windows/include/plib/sg.h	26;"	d
SG_HALF	windows/include/plib/sg.h	35;"	d
SG_IDENTITY	windows/include/plib/sg.h	210;"	d
SG_INSIDE	windows/include/plib/sg.h	127;"	d
SG_LEFT_PLANE	windows/include/plib/sg.h	1040;"	d
SG_MAX	windows/include/plib/sg.h	44;"	d
SG_MIRROR	windows/include/plib/sg.h	212;"	d
SG_NEAR_PLANE	windows/include/plib/sg.h	1044;"	d
SG_NONORTHO	windows/include/plib/sg.h	214;"	d
SG_ONE	windows/include/plib/sg.h	36;"	d
SG_OUTSIDE	windows/include/plib/sg.h	126;"	d
SG_PERLIN_NOISE_LARGE_PWR2	windows/include/plib/sg.h	3034;"	d
SG_PERLIN_NOISE_MOD_MASK	windows/include/plib/sg.h	3033;"	d
SG_PERLIN_NOISE_WRAP_INDEX	windows/include/plib/sg.h	3032;"	d
SG_PI	windows/include/plib/sg.h	52;"	d
SG_PI	windows/include/plib/sg.h	54;"	d
SG_PROJECTION	windows/include/plib/sg.h	216;"	d
SG_RADIANS_TO_DEGREES	windows/include/plib/sg.h	58;"	d
SG_RIGHT_PLANE	windows/include/plib/sg.h	1041;"	d
SG_ROTATION	windows/include/plib/sg.h	211;"	d
SG_SCALE	windows/include/plib/sg.h	213;"	d
SG_STRADDLE	windows/include/plib/sg.h	128;"	d
SG_THREE	windows/include/plib/sg.h	38;"	d
SG_TOP_PLANE	windows/include/plib/sg.h	1043;"	d
SG_TRANSLATION	windows/include/plib/sg.h	215;"	d
SG_TWO	windows/include/plib/sg.h	37;"	d
SG_UNIFORM_SCALE	windows/include/plib/sg.h	220;"	d
SG_W	windows/include/plib/sg.h	49;"	d
SG_X	windows/include/plib/sg.h	46;"	d
SG_Y	windows/include/plib/sg.h	47;"	d
SG_Z	windows/include/plib/sg.h	48;"	d
SG_ZERO	windows/include/plib/sg.h	34;"	d
SGfloat	windows/include/plib/sg.h	32;"	d
SHIFT	drivers/berniw/mycar.cpp	/^const double MyCar::SHIFT = 0.9;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar	file:
SHIFT	drivers/berniw/mycar.h	/^		static const double SHIFT;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar
SHIFT	drivers/berniw2/mycar.cpp	/^const double MyCar::SHIFT = 0.9;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar	file:
SHIFT	drivers/berniw2/mycar.h	/^		static const double SHIFT;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar
SHIFT	drivers/berniw3/mycar.cpp	/^const double MyCar::SHIFT = 0.9;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar	file:
SHIFT	drivers/berniw3/mycar.h	/^		static const double SHIFT;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar
SHIFT	drivers/bt/driver.cpp	/^const float Driver::SHIFT = 0.9f;							\/\/ [-] (% of rpmredline) When do we like to shift gears.$/;"	m	class:Driver	file:
SHIFT	drivers/bt/driver.h	/^		static const float SHIFT;$/;"	m	class:Driver
SHIFT	drivers/damned/driver.cpp	/^const float Driver::SHIFT = 0.9f;							\/\/ [-] (% of rpmredline) When do we like to shift gears.$/;"	m	class:Driver	file:
SHIFT	drivers/damned/driver.h	/^		static const float SHIFT;$/;"	m	class:Driver
SHIFT	drivers/human/mycar.cpp	/^const double MyCar::SHIFT = 0.9;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar	file:
SHIFT	drivers/human/mycar.h	/^		static const double SHIFT;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar
SHIFT	drivers/inferno/mycar.cpp	/^const double MyCar::SHIFT = 0.9;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar	file:
SHIFT	drivers/inferno/mycar.h	/^		static const double SHIFT;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar
SHIFT	drivers/lliaw/mycar.cpp	/^const double MyCar::SHIFT = 0.9;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar	file:
SHIFT	drivers/lliaw/mycar.h	/^		static const double SHIFT;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar
SHIFT	drivers/olethros/driver.cpp	/^    const float Driver::SHIFT = 0.98f;							\/\/\/< [-] (% of rpmredline) When do we like to shift gears.$/;"	m	class:olethros::Driver	file:
SHIFT	drivers/olethros/driver.h	/^	static const float SHIFT;$/;"	m	class:olethros::Driver
SHIFT	drivers/sparkle/driver.cpp	/^const float Driver::SHIFT = 0.9;							\/* [-] (% of rpmredline) *\/$/;"	m	class:Driver	file:
SHIFT	drivers/sparkle/driver.h	/^		static const float SHIFT;$/;"	m	class:Driver
SHIFT	drivers/tita/mycar.cpp	/^const double MyCar::SHIFT = 0.9;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar	file:
SHIFT	drivers/tita/mycar.h	/^		static const double SHIFT;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar
SHIFT_MARGIN	drivers/berniw/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
SHIFT_MARGIN	drivers/berniw/mycar.h	/^		static const double SHIFT_MARGIN;		\/* [m\/s] *\/$/;"	m	class:MyCar
SHIFT_MARGIN	drivers/berniw2/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
SHIFT_MARGIN	drivers/berniw2/mycar.h	/^		static const double SHIFT_MARGIN;		\/* [m\/s] *\/$/;"	m	class:MyCar
SHIFT_MARGIN	drivers/berniw3/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
SHIFT_MARGIN	drivers/berniw3/mycar.h	/^		static const double SHIFT_MARGIN;		\/* [m\/s] *\/$/;"	m	class:MyCar
SHIFT_MARGIN	drivers/bt/driver.cpp	/^const float Driver::SHIFT_MARGIN = 4.0f;					\/\/ [m\/s] Avoid oscillating gear changes.$/;"	m	class:Driver	file:
SHIFT_MARGIN	drivers/bt/driver.h	/^		static const float SHIFT_MARGIN;$/;"	m	class:Driver
SHIFT_MARGIN	drivers/damned/driver.cpp	/^const float Driver::SHIFT_MARGIN = 4.0f;					\/\/ [m\/s] Avoid oscillating gear changes.$/;"	m	class:Driver	file:
SHIFT_MARGIN	drivers/damned/driver.h	/^		static const float SHIFT_MARGIN;$/;"	m	class:Driver
SHIFT_MARGIN	drivers/human/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
SHIFT_MARGIN	drivers/human/mycar.h	/^		static const double SHIFT_MARGIN;		\/* [m\/s] *\/$/;"	m	class:MyCar
SHIFT_MARGIN	drivers/inferno/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
SHIFT_MARGIN	drivers/inferno/mycar.h	/^		static const double SHIFT_MARGIN;			\/\/ [m\/s].$/;"	m	class:MyCar
SHIFT_MARGIN	drivers/lliaw/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
SHIFT_MARGIN	drivers/lliaw/mycar.h	/^		static const double SHIFT_MARGIN;			\/\/ [m\/s].$/;"	m	class:MyCar
SHIFT_MARGIN	drivers/olethros/driver.cpp	/^    const float Driver::SHIFT_MARGIN = 4.0f;						\/\/\/< [m\/s] Avoid oscillating gear changes.$/;"	m	class:olethros::Driver	file:
SHIFT_MARGIN	drivers/olethros/driver.h	/^	static const float SHIFT_MARGIN;$/;"	m	class:olethros::Driver
SHIFT_MARGIN	drivers/sparkle/driver.cpp	/^const float Driver::SHIFT_MARGIN = 4.0;						\/* [m\/s] *\/$/;"	m	class:Driver	file:
SHIFT_MARGIN	drivers/sparkle/driver.h	/^		static const float SHIFT_MARGIN;$/;"	m	class:Driver
SHIFT_MARGIN	drivers/tita/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
SHIFT_MARGIN	drivers/tita/mycar.h	/^		static const double SHIFT_MARGIN;			\/\/ [m\/s].$/;"	m	class:MyCar
SHIP	drivers/berniw/1/Makefile	/^SHIP      = car1-stock1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/10/Makefile	/^SHIP      = car1-trb3.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/2/Makefile	/^SHIP      = car1-stock1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/3/Makefile	/^SHIP      = car1-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/4/Makefile	/^SHIP      = car2-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/5/Makefile	/^SHIP      = car3-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/6/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/8/Makefile	/^SHIP      = car6-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/berniw2/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/10/Makefile	/^SHIP      = car1-trb3.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/2/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/3/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/4/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/5/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/6/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/8/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw2/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/berniw3/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/10/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/2/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/3/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/4/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/5/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/6/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/7/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/8/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/9/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/berniw3/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/bt/0/Makefile	/^SHIP        = default.xml car1-stock1.rgb$/;"	m
SHIP	drivers/bt/0/practice/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/bt/0/qualifying/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/bt/0/race/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/bt/1/Makefile	/^SHIP        = default.xml car1-stock1.rgb$/;"	m
SHIP	drivers/bt/1/practice/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/bt/1/qualifying/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/bt/1/race/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/bt/2/Makefile	/^SHIP        = car1-trb1.rgb default.xml$/;"	m
SHIP	drivers/bt/3/Makefile	/^SHIP        = car2-trb1.rgb default.xml$/;"	m
SHIP	drivers/bt/4/Makefile	/^SHIP        = car3-trb1.rgb default.xml$/;"	m
SHIP	drivers/bt/5/Makefile	/^SHIP        = car4-trb1.rgb default.xml$/;"	m
SHIP	drivers/bt/6/Makefile	/^SHIP        = car5-trb1.rgb default.xml$/;"	m
SHIP	drivers/bt/7/Makefile	/^SHIP        = car6-trb1.rgb default.xml$/;"	m
SHIP	drivers/bt/8/Makefile	/^SHIP        = car7-trb1.rgb default.xml$/;"	m
SHIP	drivers/bt/9/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	drivers/bt/Makefile	/^SHIP        = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/damned/0/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	drivers/damned/1/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	drivers/damned/2/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	drivers/damned/3/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	drivers/damned/4/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	drivers/damned/5/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	drivers/damned/6/Makefile	/^SHIP        = car5-trb1.rgb default.xml$/;"	m
SHIP	drivers/damned/7/Makefile	/^SHIP        = car6-trb1.rgb default.xml$/;"	m
SHIP	drivers/damned/8/Makefile	/^SHIP        = car7-trb1.rgb default.xml$/;"	m
SHIP	drivers/damned/9/Makefile	/^SHIP        = car1-trb3.rgb default.xml$/;"	m
SHIP	drivers/damned/Makefile	/^SHIP        = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/human/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print) $(shell find *.rgb -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/10/Makefile	/^SHIP      = car1-trb3.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/2/Makefile	/^SHIP      = p406.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/3/Makefile	/^SHIP      = car1-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/4/Makefile	/^SHIP      = car2-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/5/Makefile	/^SHIP      = car3-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/6/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/8/Makefile	/^SHIP      = car6-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/inferno2/1/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/10/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/2/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/3/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/4/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/5/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/6/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/7/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/8/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/9/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/inferno2/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/lliaw/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/10/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/2/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/3/Makefile	/^SHIP      = car1-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/4/Makefile	/^SHIP      = car2-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/5/Makefile	/^SHIP      = car3-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/6/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/8/Makefile	/^SHIP      = car6-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/lliaw/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/olethros/0/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	drivers/olethros/1/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	drivers/olethros/2/Makefile	/^SHIP        = car1-trb1.rgb default.xml$/;"	m
SHIP	drivers/olethros/3/Makefile	/^SHIP        = car2-trb1.rgb default.xml$/;"	m
SHIP	drivers/olethros/4/Makefile	/^SHIP        = car3-trb1.rgb default.xml$/;"	m
SHIP	drivers/olethros/5/Makefile	/^SHIP        = car4-trb1.rgb default.xml$/;"	m
SHIP	drivers/olethros/6/Makefile	/^SHIP        = car5-trb1.rgb default.xml$/;"	m
SHIP	drivers/olethros/7/Makefile	/^SHIP        = car6-trb1.rgb default.xml$/;"	m
SHIP	drivers/olethros/8/Makefile	/^SHIP        = car7-trb1.rgb default.xml$/;"	m
SHIP	drivers/olethros/9/Makefile	/^SHIP        = default.xml car1-trb3.rgb$/;"	m
SHIP	drivers/olethros/Makefile	/^SHIP        = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/sparkle/0/Makefile	/^SHIP        = baja-bug.rgb default.xml$/;"	m
SHIP	drivers/sparkle/Makefile	/^SHIP        = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	drivers/tita/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/10/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/2/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/3/Makefile	/^SHIP      = car1-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/4/Makefile	/^SHIP      = car2-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/5/Makefile	/^SHIP      = car3-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/6/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/8/Makefile	/^SHIP      = car6-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	drivers/tita/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	libs/raceengineclient/Makefile	/^SHIP         = raceengine.xml style.xsl$/;"	m
SHIP	libs/tgf/Makefile	/^SHIP    = params.dtd$/;"	m
SHIP	libs/tgfclient/Makefile	/^SHIP    = screen.xml$/;"	m
SHIP	modules/graphic/ssggraph/Makefile	/^SHIP      = graph.xml sound.xml$/;"	m
SHIP	modules/telemetry/Makefile	/^SHIP      = telemetry.sh$/;"	m
SHIP	raceman/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -name '*.xml' -print)$/;"	m
SHIPCREATEDIRS	raceman/Makefile	/^SHIPCREATEDIRS = $(shell find * -maxdepth 0 -name '*.xml' -print | sed -e 's!\\.xml!!' -e 's!^!results\/!')$/;"	m
SHIPDIR	drivers/berniw/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	drivers/berniw/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	drivers/berniw/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	drivers/berniw/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	drivers/berniw/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	drivers/berniw/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	drivers/berniw/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	drivers/berniw/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	drivers/berniw/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	drivers/berniw/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	drivers/berniw/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/berniw2/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	drivers/berniw2/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	drivers/berniw2/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	drivers/berniw2/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	drivers/berniw2/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	drivers/berniw2/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	drivers/berniw2/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	drivers/berniw2/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	drivers/berniw2/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	drivers/berniw2/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	drivers/berniw2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/berniw3/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	drivers/berniw3/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	drivers/berniw3/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	drivers/berniw3/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	drivers/berniw3/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	drivers/berniw3/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	drivers/berniw3/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	drivers/berniw3/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	drivers/berniw3/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	drivers/berniw3/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	drivers/berniw3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/bt/0/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0$/;"	m
SHIPDIR	drivers/bt/0/practice/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0\/practice$/;"	m
SHIPDIR	drivers/bt/0/qualifying/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0\/qualifying$/;"	m
SHIPDIR	drivers/bt/0/race/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0\/race$/;"	m
SHIPDIR	drivers/bt/1/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	drivers/bt/1/practice/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1\/practice$/;"	m
SHIPDIR	drivers/bt/1/qualifying/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1\/qualifying$/;"	m
SHIPDIR	drivers/bt/1/race/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1\/race$/;"	m
SHIPDIR	drivers/bt/2/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	drivers/bt/3/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	drivers/bt/4/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	drivers/bt/5/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	drivers/bt/6/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	drivers/bt/7/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	drivers/bt/8/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	drivers/bt/9/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	drivers/bt/Makefile	/^SHIPDIR     = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/damned/0/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0$/;"	m
SHIPDIR	drivers/damned/1/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	drivers/damned/2/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	drivers/damned/3/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	drivers/damned/4/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	drivers/damned/5/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	drivers/damned/6/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	drivers/damned/7/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	drivers/damned/8/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	drivers/damned/9/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	drivers/damned/Makefile	/^SHIPDIR     = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/human/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/inferno/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	drivers/inferno/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	drivers/inferno/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	drivers/inferno/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	drivers/inferno/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	drivers/inferno/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	drivers/inferno/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	drivers/inferno/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	drivers/inferno/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	drivers/inferno/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	drivers/inferno/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/inferno2/1/Makefile	/^SHIPDIR   = drivers\/inferno2\/1$/;"	m
SHIPDIR	drivers/inferno2/10/Makefile	/^SHIPDIR   = drivers\/inferno2\/10$/;"	m
SHIPDIR	drivers/inferno2/2/Makefile	/^SHIPDIR   = drivers\/inferno2\/2$/;"	m
SHIPDIR	drivers/inferno2/3/Makefile	/^SHIPDIR   = drivers\/inferno2\/3$/;"	m
SHIPDIR	drivers/inferno2/4/Makefile	/^SHIPDIR   = drivers\/inferno2\/4$/;"	m
SHIPDIR	drivers/inferno2/5/Makefile	/^SHIPDIR   = drivers\/inferno2\/5$/;"	m
SHIPDIR	drivers/inferno2/6/Makefile	/^SHIPDIR   = drivers\/inferno2\/6$/;"	m
SHIPDIR	drivers/inferno2/7/Makefile	/^SHIPDIR   = drivers\/inferno2\/7$/;"	m
SHIPDIR	drivers/inferno2/8/Makefile	/^SHIPDIR   = drivers\/inferno2\/8$/;"	m
SHIPDIR	drivers/inferno2/9/Makefile	/^SHIPDIR   = drivers\/inferno2\/9$/;"	m
SHIPDIR	drivers/inferno2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/lliaw/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	drivers/lliaw/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	drivers/lliaw/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	drivers/lliaw/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	drivers/lliaw/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	drivers/lliaw/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	drivers/lliaw/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	drivers/lliaw/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	drivers/lliaw/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	drivers/lliaw/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	drivers/lliaw/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/olethros/0/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0$/;"	m
SHIPDIR	drivers/olethros/1/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	drivers/olethros/2/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	drivers/olethros/3/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	drivers/olethros/4/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	drivers/olethros/5/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	drivers/olethros/6/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	drivers/olethros/7/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	drivers/olethros/8/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	drivers/olethros/9/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	drivers/olethros/Makefile	/^SHIPDIR     = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/sparkle/0/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0$/;"	m
SHIPDIR	drivers/sparkle/Makefile	/^SHIPDIR     = drivers\/${ROBOT}$/;"	m
SHIPDIR	drivers/tita/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	drivers/tita/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	drivers/tita/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	drivers/tita/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	drivers/tita/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	drivers/tita/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	drivers/tita/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	drivers/tita/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	drivers/tita/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	drivers/tita/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	drivers/tita/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	libs/raceengineclient/Makefile	/^SHIPDIR      = config$/;"	m
SHIPDIR	libs/tgf/Makefile	/^SHIPDIR = config$/;"	m
SHIPDIR	libs/tgfclient/Makefile	/^SHIPDIR = config$/;"	m
SHIPDIR	modules/graphic/ssggraph/Makefile	/^SHIPDIR   = config$/;"	m
SHIPDIR	modules/telemetry/Makefile	/^SHIPDIR   = telemetry$/;"	m
SHIPDIR	raceman/Makefile	/^SHIPDIR   = config\/raceman$/;"	m
SHIPSUBDIRS	Makefile	/^SHIPSUBDIRS	= drivers modules libs raceman$/;"	m
SHIPSUBDIRS	drivers/Makefile	/^SHIPSUBDIRS = $(SUBDIRS)$/;"	m
SHIPSUBDIRS	drivers/berniw/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	drivers/berniw2/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	drivers/berniw3/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	drivers/bt/0/Makefile	/^SHIPSUBDIRS = practice qualifying race$/;"	m
SHIPSUBDIRS	drivers/bt/1/Makefile	/^SHIPSUBDIRS = practice qualifying race$/;"	m
SHIPSUBDIRS	drivers/bt/2/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/bt/3/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/bt/4/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/bt/5/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/bt/6/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/bt/7/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/bt/8/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/bt/9/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/bt/Makefile	/^SHIPSUBDIRS = 0 1 2 3 4 5 6 7 8 9$/;"	m
SHIPSUBDIRS	drivers/damned/0/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	drivers/damned/1/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/damned/2/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/damned/3/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/damned/4/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/damned/5/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/damned/6/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/damned/7/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/damned/8/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/damned/9/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/damned/Makefile	/^SHIPSUBDIRS = 0 1 2 3 4 5 6 7 8 9$/;"	m
SHIPSUBDIRS	drivers/inferno/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	drivers/inferno2/1/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/10/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/2/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/3/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/4/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/5/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/6/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/7/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/8/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/9/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/inferno2/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS | grep -v tracksdata)$/;"	m
SHIPSUBDIRS	drivers/lliaw/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	drivers/olethros/0/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/olethros/1/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	drivers/olethros/2/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	drivers/olethros/3/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/olethros/4/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	drivers/olethros/5/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/olethros/6/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/olethros/7/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/olethros/8/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	drivers/olethros/9/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	drivers/olethros/Makefile	/^SHIPSUBDIRS = 0 1 2 3 4 5 6 7 8 9$/;"	m
SHIPSUBDIRS	drivers/sparkle/0/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	drivers/sparkle/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	drivers/tita/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	libs/Makefile	/^SHIPSUBDIRS	= tgf tgfclient raceengineclient learning musicplayer$/;"	m
SHIPSUBDIRS	modules/Makefile	/^SHIPSUBDIRS	= telemetry graphic$/;"	m
SHIPSUBDIRS	modules/graphic/Makefile	/^SHIPSUBDIRS     = $(SUBDIRS)$/;"	m
SIDECOLLDIST	drivers/sparkle/opponent.h	/^		static float SIDECOLLDIST;$/;"	m	class:Opponent
SIDECOLL_MARGIN	drivers/bt/driver.cpp	/^const float Driver::SIDECOLL_MARGIN = 3.0f;					\/\/ [m] Distance between car centers to avoid side collisions.$/;"	m	class:Driver	file:
SIDECOLL_MARGIN	drivers/bt/driver.h	/^		static const float SIDECOLL_MARGIN;$/;"	m	class:Driver
SIDECOLL_MARGIN	drivers/damned/driver.cpp	/^const float Driver::SIDECOLL_MARGIN = 3.0f;					\/\/ [m] Distance between car centers to avoid side collisions.$/;"	m	class:Driver	file:
SIDECOLL_MARGIN	drivers/damned/driver.h	/^		static const float SIDECOLL_MARGIN;$/;"	m	class:Driver
SIDECOLL_MARGIN	drivers/olethros/driver.cpp	/^    const float Driver::SIDECOLL_MARGIN = 3.0f;					\/\/\/< [m] Distance between car centers to avoid side collisions.$/;"	m	class:olethros::Driver	file:
SIDECOLL_MARGIN	drivers/olethros/driver.h	/^	static const float SIDECOLL_MARGIN;$/;"	m	class:olethros::Driver
SIDECOLL_MARGIN	drivers/sparkle/driver.cpp	/^const float Driver::SIDECOLL_MARGIN = 2.0;					\/* [m] *\/$/;"	m	class:Driver	file:
SIDECOLL_MARGIN	drivers/sparkle/driver.h	/^		static const float SIDECOLL_MARGIN;$/;"	m	class:Driver
SIDE_MARGIN	drivers/bt/opponent.cpp	/^const float Opponent::SIDE_MARGIN = 1.0f;				\/\/ [m] savety margin.$/;"	m	class:Opponent	file:
SIDE_MARGIN	drivers/bt/opponent.h	/^		static const float SIDE_MARGIN;$/;"	m	class:Opponent
SIDE_MARGIN	drivers/damned/opponent.cpp	/^const float Opponent::SIDE_MARGIN = 1.0f;				\/\/ [m] savety margin.$/;"	m	class:Opponent	file:
SIDE_MARGIN	drivers/damned/opponent.h	/^		static const float SIDE_MARGIN;$/;"	m	class:Opponent
SIDE_MARGIN	drivers/olethros/opponent.cpp	/^const float Opponent::SIDE_MARGIN = 1.0;				\/\/ [m] safety margin.$/;"	m	class:olethros::Opponent	file:
SIDE_MARGIN	drivers/olethros/opponent.h	/^		static const float SIDE_MARGIN;$/;"	m	class:olethros::Opponent
SIDE_MARGIN	drivers/sparkle/opponent.cpp	/^float Opponent::SIDE_MARGIN = 1.0;		\/* [m] savety margin *\/$/;"	m	class:Opponent	file:
SIDE_MARGIN	drivers/sparkle/opponent.h	/^		static float SIDE_MARGIN;$/;"	m	class:Opponent
SIGN	libs/tgf/tgf.h	79;"	d
SIMPLE	modules/graphic/ssggraph/grmain.h	/^enum EWheelDetail { DETAILED, SIMPLE };$/;"	e	enum:EWheelDetail
SIMPLE	modules/simu/simuv3/SimulationOptions.h	/^	SIMPLE, \/\/\/< A simple model - can exceed theoretical limits$/;"	e	enum:AeroFlowModel
SIMULATION_OPTIONS_H	modules/simu/simuv3/SimulationOptions.h	13;"	d
SIMU_PRMS	drivers/inferno2/inferno2.cpp	221;"	d	file:
SIM_IDENT	interfaces/simu.h	40;"	d
SIM_SUSP_COMP	modules/simu/simuv2/susp.h	57;"	d
SIM_SUSP_COMP	modules/simu/simuv3/susp.h	67;"	d
SIM_SUSP_EXT	modules/simu/simuv2/susp.h	58;"	d
SIM_SUSP_EXT	modules/simu/simuv3/susp.h	68;"	d
SIM_SUSP_OVERCOMP	modules/simu/simuv3/susp.h	69;"	d
SIM_VECT_ACCEL	modules/simu/simuv2/sim.h	125;"	d
SIM_VECT_ACCEL	modules/simu/simuv3/sim.h	151;"	d
SIM_VECT_COLL	modules/simu/simuv2/sim.h	123;"	d
SIM_VECT_COLL	modules/simu/simuv3/sim.h	149;"	d
SIM_VECT_SPD	modules/simu/simuv2/sim.h	124;"	d
SIM_VECT_SPD	modules/simu/simuv3/sim.h	150;"	d
SIM_WHEEL_ACCEL	modules/simu/simuv2/sim.h	127;"	d
SIM_WHEEL_ACCEL	modules/simu/simuv3/sim.h	153;"	d
SIM_WHEEL_SPD	modules/simu/simuv2/sim.h	126;"	d
SIM_WHEEL_SPD	modules/simu/simuv3/sim.h	152;"	d
SIM_WH_BURST	modules/simu/simuv3/wheel.h	54;"	d
SIM_WH_FREE	modules/simu/simuv3/wheel.h	53;"	d
SIM_WH_LOCKED	modules/simu/simuv3/wheel.h	52;"	d
SIM_WH_ONAIR	modules/simu/simuv2/wheel.h	47;"	d
SIM_WH_SPINNING	modules/simu/simuv3/wheel.h	51;"	d
SIM_Z_OFFSET	modules/simu/simuv2/sim.h	129;"	d
SIM_Z_OFFSET	modules/simu/simuv3/sim.h	155;"	d
SINGULAR	libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
SKID_BEGIN	modules/graphic/ssggraph/grskidmarks.h	9;"	d
SKID_RUNNING	modules/graphic/ssggraph/grskidmarks.h	10;"	d
SKID_STOPPED	modules/graphic/ssggraph/grskidmarks.h	11;"	d
SKID_UNUSED	modules/graphic/ssggraph/grskidmarks.h	8;"	d
SLDSP_DEFAULT_DEVICE	windows/include/plib/sl.h	32;"	d
SLDSP_DEFAULT_DEVICE	windows/include/plib/sl.h	34;"	d
SLDSP_DEFAULT_DEVICE	windows/include/plib/sl.h	36;"	d
SLDSP_DEFAULT_DEVICE	windows/include/plib/sl.h	38;"	d
SLDSP_DEFAULT_DEVICE	windows/include/plib/sl.h	40;"	d
SLDSP_DEFAULT_DEVICE	windows/include/plib/sl.h	42;"	d
SLDSP_DEFAULT_DEVICE	windows/include/plib/sl.h	44;"	d
SLDSP_DEFAULT_DEVICE	windows/include/plib/sl.h	46;"	d
SLOW	drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon151
SLOW	drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon195
SLOW	drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon174
SLOW	drivers/human/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon186
SLOW	drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon160
SLOW	drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon206
SLOW	drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon167
SL_DEFAULT_SAMPLING_RATE	windows/include/plib/sl.h	57;"	d
SL_ECHO_ENVELOPE	windows/include/plib/sl.h	/^  SL_ECHO_ENVELOPE  , SL_INVERSE_ECHO_ENVELOPE  ,$/;"	e	enum:slEnvelopeType
SL_EVENT_COMPLETE	windows/include/plib/sl.h	/^  SL_EVENT_COMPLETE,  \/* Sound finished playing *\/$/;"	e	enum:slEvent
SL_EVENT_LOOPED	windows/include/plib/sl.h	/^  SL_EVENT_LOOPED,    \/* Sound looped back to the start *\/$/;"	e	enum:slEvent
SL_EVENT_PREEMPTED	windows/include/plib/sl.h	/^  SL_EVENT_PREEMPTED  \/* Sound was preempted *\/$/;"	e	enum:slEvent
SL_FALSE	windows/include/plib/sl.h	52;"	d
SL_FILTER_ENVELOPE	windows/include/plib/sl.h	/^  SL_FILTER_ENVELOPE, SL_INVERSE_FILTER_ENVELOPE,$/;"	e	enum:slEnvelopeType
SL_INVERSE_ECHO_ENVELOPE	windows/include/plib/sl.h	/^  SL_ECHO_ENVELOPE  , SL_INVERSE_ECHO_ENVELOPE  ,$/;"	e	enum:slEnvelopeType
SL_INVERSE_FILTER_ENVELOPE	windows/include/plib/sl.h	/^  SL_FILTER_ENVELOPE, SL_INVERSE_FILTER_ENVELOPE,$/;"	e	enum:slEnvelopeType
SL_INVERSE_PAN_ENVELOPE	windows/include/plib/sl.h	/^  SL_PAN_ENVELOPE   , SL_INVERSE_PAN_ENVELOPE   ,$/;"	e	enum:slEnvelopeType
SL_INVERSE_PITCH_ENVELOPE	windows/include/plib/sl.h	/^  SL_PITCH_ENVELOPE , SL_INVERSE_PITCH_ENVELOPE ,$/;"	e	enum:slEnvelopeType
SL_INVERSE_VOLUME_ENVELOPE	windows/include/plib/sl.h	/^  SL_VOLUME_ENVELOPE, SL_INVERSE_VOLUME_ENVELOPE,$/;"	e	enum:slEnvelopeType
SL_MAX_CALLBACKS	windows/include/plib/sl.h	450;"	d
SL_MAX_ENVELOPES	windows/include/plib/sl.h	451;"	d
SL_MAX_MIXERINPUTS	windows/include/plib/sl.h	452;"	d
SL_MAX_PRIORITY	windows/include/plib/sl.h	448;"	d
SL_MAX_SAMPLES	windows/include/plib/sl.h	449;"	d
SL_NULL_ENVELOPE	windows/include/plib/sl.h	/^  SL_NULL_ENVELOPE$/;"	e	enum:slEnvelopeType
SL_PAN_ENVELOPE	windows/include/plib/sl.h	/^  SL_PAN_ENVELOPE   , SL_INVERSE_PAN_ENVELOPE   ,$/;"	e	enum:slEnvelopeType
SL_PITCH_ENVELOPE	windows/include/plib/sl.h	/^  SL_PITCH_ENVELOPE , SL_INVERSE_PITCH_ENVELOPE ,$/;"	e	enum:slEnvelopeType
SL_SAMPLE_ABORT	windows/include/plib/sl.h	/^  SL_SAMPLE_ABORT   ,  \/* Abort playing the sound when preempted *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_CONTINUE	windows/include/plib/sl.h	/^  SL_SAMPLE_CONTINUE,  \/* Don't allow yourself to be preempted   *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_DELAY	windows/include/plib/sl.h	/^  SL_SAMPLE_DELAY      \/* Pause until load permits               *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_DONE	windows/include/plib/sl.h	/^  SL_SAMPLE_DONE   ,  \/* Sound is complete *\/$/;"	e	enum:slSampleStatus
SL_SAMPLE_LOOP	windows/include/plib/sl.h	/^  SL_SAMPLE_LOOP,      \/* Loop sound so that it plays forever *\/$/;"	e	enum:slReplayMode
SL_SAMPLE_MUTE	windows/include/plib/sl.h	/^  SL_SAMPLE_MUTE    ,  \/* Continue silently until load permits   *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_ONE_SHOT	windows/include/plib/sl.h	/^  SL_SAMPLE_ONE_SHOT   \/* Play sound just once *\/$/;"	e	enum:slReplayMode
SL_SAMPLE_PAUSED	windows/include/plib/sl.h	/^  SL_SAMPLE_PAUSED    \/* Sound hasn't started playing yet *\/$/;"	e	enum:slSampleStatus
SL_SAMPLE_RESTART	windows/include/plib/sl.h	/^  SL_SAMPLE_RESTART ,  \/* Restart the sound when load permits    *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_RUNNING	windows/include/plib/sl.h	/^  SL_SAMPLE_RUNNING,  \/* Sound has started playing *\/$/;"	e	enum:slSampleStatus
SL_SAMPLE_WAITING	windows/include/plib/sl.h	/^  SL_SAMPLE_WAITING,  \/* Sound hasn't started playing yet *\/$/;"	e	enum:slSampleStatus
SL_TRUE	windows/include/plib/sl.h	51;"	d
SL_USING_OSS_AUDIO	windows/include/plib/slPortability.h	55;"	d
SL_VOLUME_ENVELOPE	windows/include/plib/sl.h	/^  SL_VOLUME_ENVELOPE, SL_INVERSE_VOLUME_ENVELOPE,$/;"	e	enum:slEnvelopeType
SMALL	tools/trackgen/easymesh.cpp	49;"	d	file:
SMALL_MEDIUM	windows/include/zconf.h	255;"	d
SMALL_MEDIUM	windows/include/zconf.h	264;"	d
SMMIXER_DEFAULT_DEVICE	windows/include/plib/sm.h	31;"	d
SMMIXER_DEFAULT_DEVICE	windows/include/plib/sm.h	33;"	d
SMOKE_INIT_SIZE	modules/graphic/ssggraph/grsmoke.h	4;"	d
SMOKE_TYPE_ENGINE	modules/graphic/ssggraph/grsmoke.h	13;"	d
SMOKE_TYPE_TIRE	modules/graphic/ssggraph/grsmoke.h	12;"	d
SM_FALSE	windows/include/plib/sm.h	39;"	d
SM_TRUE	windows/include/plib/sm.h	38;"	d
SOIL_CREATE_NEW_ID	topview/SOIL.h	/^	SOIL_CREATE_NEW_ID = 0$/;"	e	enum:__anon88
SOIL_DDS_CUBEMAP_FACE_ORDER	topview/SOIL.h	128;"	d
SOIL_FLAG_COMPRESS_TO_DXT	topview/SOIL.h	/^	SOIL_FLAG_COMPRESS_TO_DXT = 32,$/;"	e	enum:__anon89
SOIL_FLAG_CoCg_Y	topview/SOIL.h	/^	SOIL_FLAG_CoCg_Y = 256,$/;"	e	enum:__anon89
SOIL_FLAG_DDS_LOAD_DIRECT	topview/SOIL.h	/^	SOIL_FLAG_DDS_LOAD_DIRECT = 64,$/;"	e	enum:__anon89
SOIL_FLAG_INVERT_Y	topview/SOIL.h	/^	SOIL_FLAG_INVERT_Y = 16,$/;"	e	enum:__anon89
SOIL_FLAG_MIPMAPS	topview/SOIL.h	/^	SOIL_FLAG_MIPMAPS = 2,$/;"	e	enum:__anon89
SOIL_FLAG_MULTIPLY_ALPHA	topview/SOIL.h	/^	SOIL_FLAG_MULTIPLY_ALPHA = 8,$/;"	e	enum:__anon89
SOIL_FLAG_NTSC_SAFE_RGB	topview/SOIL.h	/^	SOIL_FLAG_NTSC_SAFE_RGB = 128,$/;"	e	enum:__anon89
SOIL_FLAG_POWER_OF_TWO	topview/SOIL.h	/^	SOIL_FLAG_POWER_OF_TWO = 1,$/;"	e	enum:__anon89
SOIL_FLAG_TEXTURE_RECTANGLE	topview/SOIL.h	/^	SOIL_FLAG_TEXTURE_RECTANGLE = 512$/;"	e	enum:__anon89
SOIL_FLAG_TEXTURE_REPEATS	topview/SOIL.h	/^	SOIL_FLAG_TEXTURE_REPEATS = 4,$/;"	e	enum:__anon89
SOIL_HDR_RGBE	topview/SOIL.h	/^	SOIL_HDR_RGBE = 0,$/;"	e	enum:__anon91
SOIL_HDR_RGBdivA	topview/SOIL.h	/^	SOIL_HDR_RGBdivA = 1,$/;"	e	enum:__anon91
SOIL_HDR_RGBdivA2	topview/SOIL.h	/^	SOIL_HDR_RGBdivA2 = 2$/;"	e	enum:__anon91
SOIL_LOAD_AUTO	topview/SOIL.h	/^	SOIL_LOAD_AUTO = 0,$/;"	e	enum:__anon87
SOIL_LOAD_L	topview/SOIL.h	/^	SOIL_LOAD_L = 1,$/;"	e	enum:__anon87
SOIL_LOAD_LA	topview/SOIL.h	/^	SOIL_LOAD_LA = 2,$/;"	e	enum:__anon87
SOIL_LOAD_RGB	topview/SOIL.h	/^	SOIL_LOAD_RGB = 3,$/;"	e	enum:__anon87
SOIL_LOAD_RGBA	topview/SOIL.h	/^	SOIL_LOAD_RGBA = 4$/;"	e	enum:__anon87
SOIL_SAVE_TYPE_BMP	topview/SOIL.h	/^	SOIL_SAVE_TYPE_BMP = 1,$/;"	e	enum:__anon90
SOIL_SAVE_TYPE_DDS	topview/SOIL.h	/^	SOIL_SAVE_TYPE_DDS = 2$/;"	e	enum:__anon90
SOIL_SAVE_TYPE_TGA	topview/SOIL.h	/^	SOIL_SAVE_TYPE_TGA = 0,$/;"	e	enum:__anon90
SOLIBDIR	libs/client/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	libs/confscreens/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	libs/learning/Makefile	/^SOLIBDIR     = .$/;"	m
SOLIBDIR	libs/musicplayer/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	libs/raceengineclient/Makefile	/^SOLIBDIR     = .$/;"	m
SOLIBDIR	libs/racescreens/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	libs/robottools/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	libs/tgf/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	libs/tgfclient/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	libs/txml/Makefile	/^SOLIBDIR    = .$/;"	m
SOLIBRARY	libs/client/Makefile	/^SOLIBRARY = libclient.so$/;"	m
SOLIBRARY	libs/confscreens/Makefile	/^SOLIBRARY = libconfscreens.so$/;"	m
SOLIBRARY	libs/learning/Makefile	/^SOLIBRARY    = liblearning.so$/;"	m
SOLIBRARY	libs/musicplayer/Makefile	/^SOLIBRARY = libmusicplayer.so$/;"	m
SOLIBRARY	libs/raceengineclient/Makefile	/^SOLIBRARY    = libraceengine.so$/;"	m
SOLIBRARY	libs/racescreens/Makefile	/^SOLIBRARY = libracescreens.so$/;"	m
SOLIBRARY	libs/robottools/Makefile	/^SOLIBRARY = librobottools.so$/;"	m
SOLIBRARY	libs/tgf/Makefile	/^SOLIBRARY = libtgf.so$/;"	m
SOLIBRARY	libs/tgfclient/Makefile	/^SOLIBRARY = libtgfclient.so$/;"	m
SOLIBRARY	libs/txml/Makefile	/^SOLIBRARY   = libtxml.so$/;"	m
SOLIBS	libs/raceengineclient/Makefile	/^SOLIBS      = -lracescreens -lrobottools$/;"	m
SOLIBS	linux/Makefile	/^SOLIBS  =  -lracescreens  \\$/;"	m
SOLIBS	tools/accc/Makefile	/^SOLIBS		= -ltgf -lplibssg -lplibsg -lplibul -ltxml$/;"	m
SOLIBS	tools/nfsperf/Makefile	/^SOLIBS		= -ltgf -ltxml$/;"	m
SOLIBS	tools/texmapper/Makefile	/^SOLIBS    	= -lplibssg -lplibsg -lplibul -ltgf -ltgfclient -lmusicplayer -ltxml -lpng$/;"	m
SOLIBS	tools/trackgen/Makefile	/^SOLIBS       	= -ltgf -ltgfclient -lmusicplayer -lplibssg -lplibsg -lplibul -lrobottools -ltxml$/;"	m
SOUND_DEFINES_H	modules/graphic/ssggraph/sound_defines.h	2;"	d
SOUND_INTERFACE_H	modules/graphic/ssggraph/SoundInterface.h	21;"	d
SOUND_LOG	modules/graphic/ssggraph/SoundInterface.h	25;"	d
SOURCES	drivers/berniw/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	drivers/berniw2/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	drivers/berniw3/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	drivers/bt/Makefile	/^SOURCES     = ${ROBOT}.cpp driver.cpp opponent.cpp spline.cpp pit.cpp learn.cpp strategy.cpp cardata.cpp$/;"	m
SOURCES	drivers/damned/Makefile	/^SOURCES     = ${ROBOT}.cpp driver.cpp opponent.cpp spline.cpp pit.cpp learn.cpp strategy.cpp cardata.cpp$/;"	m
SOURCES	drivers/human/Makefile	/^SOURCES   = ${ROBOT}.cpp pref.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	drivers/inferno/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	drivers/inferno2/Makefile	/^SOURCES   = ${ROBOT}.cpp common.cpp$/;"	m
SOURCES	drivers/lliaw/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	drivers/olethros/Makefile	/^SOURCES     = ${ROBOT}.cpp driver.cpp opponent.cpp spline.cpp pit.cpp learn.cpp strategy.cpp cardata.cpp geometry.cpp Trajectory.cpp TrackData.cpp$/;"	m
SOURCES	drivers/sparkle/Makefile	/^SOURCES     = ${ROBOT}.cpp driver.cpp opponent.cpp spline.cpp pit.cpp$/;"	m
SOURCES	drivers/tita/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	libs/client/Makefile	/^SOURCES   = entry.cpp mainmenu.cpp splash.cpp exitmenu.cpp \\$/;"	m
SOURCES	libs/confscreens/Makefile	/^SOURCES   = controlconfig.cpp  graphconfig.cpp mouseconfig.cpp driverconfig.cpp joystickconfig.cpp\\$/;"	m
SOURCES	libs/learning/Makefile	/^SOURCES      = policy.cpp ann_policy.cpp List.cpp string_utils.cpp Distribution.cpp MathFunctions.cpp ANN.cpp$/;"	m
SOURCES	libs/musicplayer/Makefile	/^SOURCES   = SoundStream.cpp OggSoundStream.cpp OpenALMusicPlayer.cpp musicplayer.cpp$/;"	m
SOURCES	libs/raceengineclient/Makefile	/^SOURCES      = singleplayer.cpp raceinit.cpp racemain.cpp racemanmenu.cpp racestate.cpp racegl.cpp \\$/;"	m
SOURCES	libs/racescreens/Makefile	/^SOURCES   = trackselect.cpp driverselect.cpp results.cpp pitmenu.cpp loadingscreen.cpp racemenu.cpp miscscreens.cpp fileselect.cpp carsetupscreen.cpp$/;"	m
SOURCES	libs/robottools/Makefile	/^SOURCES   = rttrack.cpp rttelem.cpp$/;"	m
SOURCES	libs/tgf/Makefile	/^SOURCES   = 	module.cpp \\$/;"	m
SOURCES	libs/tgfclient/Makefile	/^SOURCES   = 	guimenu.cpp \\$/;"	m
SOURCES	libs/txml/Makefile	/^SOURCES     = xmltok.c xmlrole.c xmlparse.c hashtable.c xml.cpp$/;"	m
SOURCES	libs/txml/gennmtab/Makefile	/^SOURCES = gennmtab.c$/;"	m
SOURCES	linux/Makefile	/^SOURCES = main.cpp linuxspec.cpp$/;"	m
SOURCES	modules/graphic/ssggraph/Makefile	/^SOURCES   = grmain.cpp grboard.cpp ssggraph.cpp grcam.cpp grcar.cpp grscreen.cpp\\$/;"	m
SOURCES	modules/simu/simuv2/Makefile	/^SOURCES		= simu.cpp \\$/;"	m
SOURCES	modules/simu/simuv2/SOLID-2.0/src/Makefile	/^SOURCES      = 	Transform.cpp Convex.cpp Box.cpp Cone.cpp Cylinder.cpp Sphere.cpp \\$/;"	m
SOURCES	modules/simu/simuv3/Makefile	/^SOURCES		= simu.cpp \\$/;"	m
SOURCES	modules/telemetry/Makefile	/^SOURCES   = telemetryitf.cpp telemetry.cpp$/;"	m
SOURCES	modules/track/Makefile	/^SOURCES   = track.cpp trackitf.cpp trackutil.cpp track3.cpp track4.cpp$/;"	m
SOURCES	tools/accc/Makefile	/^SOURCES		= mainaccc.cpp ..\/..\/linux\/linuxspec.cpp ac3dload.cpp ac3dgroup.cpp$/;"	m
SOURCES	tools/nfs2ac/Makefile	/^SOURCES		= mainnfs2ac.cpp$/;"	m
SOURCES	tools/nfsperf/Makefile	/^SOURCES		= mainnfsperf.cpp$/;"	m
SOURCES	tools/texmapper/Makefile	/^SOURCES   	= maintexmapper.cpp ssgSaveAC.cpp$/;"	m
SOURCES	tools/trackgen/Makefile	/^SOURCES      	= maintrackgen.cpp track.cpp easymesh.cpp ..\/..\/linux\/linuxspec.cpp relief.cpp elevation.cpp objects.cpp ac3d.cpp util.cpp raceline.cpp$/;"	m
SPDTGT	drivers/inferno2/inferno2.cpp	230;"	d	file:
SPDTGT2	drivers/inferno2/inferno2.cpp	231;"	d	file:
SPECFILES	tools/package/specfiles/Makefile	/^SPECFILES = $(shell find *.spec -maxdepth 0 -type f -print) build_rpms.sh build_data_rpms.sh$/;"	m
SPEED	drivers/data_list.h	/^enum sensing_data_name{CC_TRIGGER, 	LKAS_TRIGGER, 		SPEED, 		TARGET_SPEED, 		ACCEL_VALUE, $/;"	e	enum:sensing_data_name
SPEEDSQRFACTOR	drivers/berniw/mycar.h	/^		double SPEEDSQRFACTOR;							\/* multiplier for speedsqr *\/$/;"	m	class:MyCar
SPEEDSQRFACTOR	drivers/berniw2/mycar.h	/^		double SPEEDSQRFACTOR;							\/* multiplier for speedsqr *\/$/;"	m	class:MyCar
SPEEDSQRFACTOR	drivers/berniw3/mycar.h	/^		double SPEEDSQRFACTOR;							\/* multiplier for speedsqr *\/$/;"	m	class:MyCar
SPEEDSQRFACTOR	drivers/human/mycar.h	/^		double SPEEDSQRFACTOR;							\/* multiplier for speedsqr *\/$/;"	m	class:MyCar
SPEEDSQRFACTOR	drivers/inferno/mycar.h	/^		double SPEEDSQRFACTOR;							\/\/ Multiplier for speedsqr.$/;"	m	class:MyCar
SPEEDSQRFACTOR	drivers/lliaw/mycar.h	/^		double SPEEDSQRFACTOR;							\/\/ Multiplier for speedsqr.$/;"	m	class:MyCar
SPEEDSQRFACTOR	drivers/tita/mycar.h	/^		double SPEEDSQRFACTOR;							\/\/ Multiplier for speedsqr.$/;"	m	class:MyCar
SPEED_ERROR	drivers/data_list.h	/^			POS_Y, 		SPEED_ERROR,		LATERAL, 	TARGET_WHEEL_SPEED, 	WHEEL_SPEED, 	$/;"	e	enum:sensing_data_name
SPEED_LIMIT_MARGIN	drivers/bt/pit.cpp	/^const float Pit::SPEED_LIMIT_MARGIN = 0.5;		\/\/ [m\/s] savety margin to avoid pit speeding.$/;"	m	class:Pit	file:
SPEED_LIMIT_MARGIN	drivers/bt/pit.h	/^		static const float SPEED_LIMIT_MARGIN;$/;"	m	class:Pit
SPEED_LIMIT_MARGIN	drivers/damned/pit.cpp	/^const float Pit::SPEED_LIMIT_MARGIN = 0.5;		\/\/ [m\/s] savety margin to avoid pit speeding.$/;"	m	class:Pit	file:
SPEED_LIMIT_MARGIN	drivers/damned/pit.h	/^		static const float SPEED_LIMIT_MARGIN;$/;"	m	class:Pit
SPEED_LIMIT_MARGIN	drivers/olethros/pit.cpp	/^const float Pit::SPEED_LIMIT_MARGIN = 0.5;		\/\/ [m\/s] savety margin to avoid pit speeding.$/;"	m	class:olethros::Pit	file:
SPEED_LIMIT_MARGIN	drivers/olethros/pit.h	/^		static const float SPEED_LIMIT_MARGIN;$/;"	m	class:olethros::Pit
SPEED_LIMIT_MARGIN	drivers/sparkle/pit.cpp	/^const float Pit::SPEED_LIMIT_MARGIN = 0.5;      \/* [m\/s] savety margin *\/$/;"	m	class:Pit	file:
SPEED_LIMIT_MARGIN	drivers/sparkle/pit.h	/^		static const float SPEED_LIMIT_MARGIN;$/;"	m	class:Pit
SPEED_OF_SOUND	modules/graphic/ssggraph/sound_defines.h	10;"	d
SPEED_PASS_MARGIN	drivers/bt/opponent.cpp	/^const float Opponent::SPEED_PASS_MARGIN = 5.0f;			\/\/ [m\/s] avoid overlapping opponents to stuck behind me.$/;"	m	class:Opponent	file:
SPEED_PASS_MARGIN	drivers/bt/opponent.h	/^		static const float SPEED_PASS_MARGIN;$/;"	m	class:Opponent
SPEED_PASS_MARGIN	drivers/damned/opponent.cpp	/^const float Opponent::SPEED_PASS_MARGIN = 5.0f;			\/\/ [m\/s] avoid overlapping opponents to stuck behind me.$/;"	m	class:Opponent	file:
SPEED_PASS_MARGIN	drivers/damned/opponent.h	/^		static const float SPEED_PASS_MARGIN;$/;"	m	class:Opponent
SPEED_PASS_MARGIN	drivers/olethros/opponent.cpp	/^const float Opponent::SPEED_PASS_MARGIN = 5.0;			\/\/ [m\/s] avoid overlapping opponents to stuck behind me.$/;"	m	class:olethros::Opponent	file:
SPEED_PASS_MARGIN	drivers/olethros/opponent.h	/^		static const float SPEED_PASS_MARGIN;$/;"	m	class:olethros::Opponent
SPLITX	tools/accc/accc.h	167;"	d
SPLITY	tools/accc/accc.h	168;"	d
SPOOL	interfaces/car.h	/^		NONE = 0, SPOOL = 1, FREE = 2, LIMITED_SLIP = 3, VISCOUS_COUPLER = 4$/;"	e	enum:__anon83::TDiffType
SRCDOC	Makefile	/^SRCDOC		= yes$/;"	m
SSGA_HAVE_PATCH	windows/include/plib/ssgaShapes.h	119;"	d
SSGA_HAVE_TEAPOT	windows/include/plib/ssgaShapes.h	155;"	d
SSGA_MAX_WAVETRAIN	windows/include/plib/ssgaWaveSystem.h	27;"	d
SSGTRAV_CULL	windows/include/plib/ssg.h	54;"	d
SSGTRAV_HOT	windows/include/plib/ssg.h	56;"	d
SSGTRAV_ISECT	windows/include/plib/ssg.h	55;"	d
SSGTRAV_LOS	windows/include/plib/ssg.h	57;"	d
SSGTWEEN_REPEAT	windows/include/plib/ssg.h	1656;"	d
SSGTWEEN_STOP_AT_END	windows/include/plib/ssg.h	1655;"	d
SSG_ANIM_CLOCK	windows/include/plib/ssg.h	/^    SSG_ANIM_CLOCK$/;"	e	enum:ssgAnimTimeMode
SSG_ANIM_FRAME	windows/include/plib/ssg.h	/^    SSG_ANIM_FRAME,$/;"	e	enum:ssgAnimTimeMode
SSG_ANIM_ONESHOT	windows/include/plib/ssg.h	/^  SSG_ANIM_ONESHOT,$/;"	e	enum:ssgAnimDirection
SSG_ANIM_PAUSE	windows/include/plib/ssg.h	/^  SSG_ANIM_PAUSE,$/;"	e	enum:ssgAnimEnum
SSG_ANIM_RESUME	windows/include/plib/ssg.h	/^  SSG_ANIM_RESUME$/;"	e	enum:ssgAnimEnum
SSG_ANIM_SHUTTLE	windows/include/plib/ssg.h	/^  SSG_ANIM_SHUTTLE$/;"	e	enum:ssgAnimDirection
SSG_ANIM_START	windows/include/plib/ssg.h	/^  SSG_ANIM_START,$/;"	e	enum:ssgAnimEnum
SSG_ANIM_STOP	windows/include/plib/ssg.h	/^  SSG_ANIM_STOP,$/;"	e	enum:ssgAnimEnum
SSG_ANIM_SWING	windows/include/plib/ssg.h	/^  SSG_ANIM_SWING,$/;"	e	enum:ssgAnimDirection
SSG_BACKFACE_COLLISIONS_SUPPORTED	windows/include/plib/ssg.h	2873;"	d
SSG_CALLBACK_POSTDRAW	windows/include/plib/ssg.h	769;"	d
SSG_CALLBACK_POSTTRAV	windows/include/plib/ssg.h	773;"	d
SSG_CALLBACK_PREAPPLY	windows/include/plib/ssg.h	779;"	d
SSG_CALLBACK_PREDRAW	windows/include/plib/ssg.h	768;"	d
SSG_CALLBACK_PRETRAV	windows/include/plib/ssg.h	772;"	d
SSG_CLONE_GEOMETRY	windows/include/plib/ssg.h	195;"	d
SSG_CLONE_RECURSIVE	windows/include/plib/ssg.h	194;"	d
SSG_CLONE_STATE	windows/include/plib/ssg.h	197;"	d
SSG_CLONE_STATE_RECURSIVE	windows/include/plib/ssg.h	198;"	d
SSG_CLONE_TEXTURE	windows/include/plib/ssg.h	199;"	d
SSG_CLONE_USERDATA	windows/include/plib/ssg.h	196;"	d
SSG_FILE_MAGIC_NUMBER	windows/include/plib/ssg.h	131;"	d
SSG_FILE_VERSION	windows/include/plib/ssg.h	130;"	d
SSG_GL_ALPHA_TEST	windows/include/plib/ssg.h	191;"	d
SSG_GL_ALPHA_TEST_EN	windows/include/plib/ssg.h	181;"	d
SSG_GL_AMBIENT	windows/include/plib/ssg.h	187;"	d
SSG_GL_BLEND_EN	windows/include/plib/ssg.h	180;"	d
SSG_GL_COLOR_MATERIAL	windows/include/plib/ssg.h	185;"	d
SSG_GL_COLOR_MATERIAL_EN	windows/include/plib/ssg.h	179;"	d
SSG_GL_CULL_FACE_EN	windows/include/plib/ssg.h	178;"	d
SSG_GL_DIFFUSE	windows/include/plib/ssg.h	186;"	d
SSG_GL_EMISSION	windows/include/plib/ssg.h	189;"	d
SSG_GL_LIGHTING_EN	windows/include/plib/ssg.h	182;"	d
SSG_GL_SHADE_MODEL	windows/include/plib/ssg.h	192;"	d
SSG_GL_SHININESS	windows/include/plib/ssg.h	190;"	d
SSG_GL_SPECULAR	windows/include/plib/ssg.h	188;"	d
SSG_GL_TEXTURE	windows/include/plib/ssg.h	184;"	d
SSG_GL_TEXTURE_EN	windows/include/plib/ssg.h	177;"	d
SSG_INSIDE	windows/include/plib/ssg.h	/^  SSG_INSIDE   = SG_INSIDE,$/;"	e	enum:ssgCullResult
SSG_LOAD_BMP_SUPPORTED	windows/include/plib/ssgconf.h	50;"	d
SSG_LOAD_MDL_BGL_TEXTURE_SUPPORTED	windows/include/plib/ssgconf.h	52;"	d
SSG_LOAD_MDL_SUPPORTED	windows/include/plib/ssgconf.h	51;"	d
SSG_LOAD_PCX_SUPPORTED	windows/include/plib/ssgconf.h	54;"	d
SSG_LOAD_PNG_SUPPORTED	windows/include/plib/ssgconf.h	46;"	d
SSG_LOAD_SGI_SUPPORTED	windows/include/plib/ssgconf.h	48;"	d
SSG_LOAD_TGA_SUPPORTED	windows/include/plib/ssgconf.h	49;"	d
SSG_LOAD_XPL_SUPPORTED	windows/include/plib/ssgconf.h	53;"	d
SSG_MAXPATH	windows/include/plib/ssg.h	52;"	d
SSG_MD2_ALL	windows/include/plib/ssg.h	/^	SSG_MD2_ALL,$/;"	e	enum:__anon55
SSG_MD2_ATTACK	windows/include/plib/ssg.h	/^	SSG_MD2_ATTACK,$/;"	e	enum:__anon55
SSG_MD2_CROUCH_DEATH	windows/include/plib/ssg.h	/^	SSG_MD2_CROUCH_DEATH,$/;"	e	enum:__anon55
SSG_MD2_CROUCH_PAIN	windows/include/plib/ssg.h	/^	SSG_MD2_CROUCH_PAIN,$/;"	e	enum:__anon55
SSG_MD2_CROUCH_STAND	windows/include/plib/ssg.h	/^	SSG_MD2_CROUCH_STAND,$/;"	e	enum:__anon55
SSG_MD2_CROUCH_WALK	windows/include/plib/ssg.h	/^	SSG_MD2_CROUCH_WALK,$/;"	e	enum:__anon55
SSG_MD2_DEATH_1	windows/include/plib/ssg.h	/^	SSG_MD2_DEATH_1,$/;"	e	enum:__anon55
SSG_MD2_DEATH_2	windows/include/plib/ssg.h	/^	SSG_MD2_DEATH_2,$/;"	e	enum:__anon55
SSG_MD2_DEATH_3	windows/include/plib/ssg.h	/^	SSG_MD2_DEATH_3,$/;"	e	enum:__anon55
SSG_MD2_FLIPOFF	windows/include/plib/ssg.h	/^	SSG_MD2_FLIPOFF,$/;"	e	enum:__anon55
SSG_MD2_JUMP	windows/include/plib/ssg.h	/^	SSG_MD2_JUMP,$/;"	e	enum:__anon55
SSG_MD2_PAIN_1	windows/include/plib/ssg.h	/^	SSG_MD2_PAIN_1,$/;"	e	enum:__anon55
SSG_MD2_PAIN_2	windows/include/plib/ssg.h	/^	SSG_MD2_PAIN_2,$/;"	e	enum:__anon55
SSG_MD2_PAIN_3	windows/include/plib/ssg.h	/^	SSG_MD2_PAIN_3,$/;"	e	enum:__anon55
SSG_MD2_POINT	windows/include/plib/ssg.h	/^	SSG_MD2_POINT,$/;"	e	enum:__anon55
SSG_MD2_POSE	windows/include/plib/ssg.h	/^	SSG_MD2_POSE$/;"	e	enum:__anon55
SSG_MD2_RUN	windows/include/plib/ssg.h	/^	SSG_MD2_RUN,$/;"	e	enum:__anon55
SSG_MD2_SALUTE	windows/include/plib/ssg.h	/^	SSG_MD2_SALUTE,$/;"	e	enum:__anon55
SSG_MD2_STAND	windows/include/plib/ssg.h	/^	SSG_MD2_STAND,$/;"	e	enum:__anon55
SSG_MD2_TAUNT	windows/include/plib/ssg.h	/^	SSG_MD2_TAUNT,$/;"	e	enum:__anon55
SSG_MD2_WAVE	windows/include/plib/ssg.h	/^	SSG_MD2_WAVE,$/;"	e	enum:__anon55
SSG_OUTSIDE	windows/include/plib/ssg.h	/^  SSG_OUTSIDE  = SG_OUTSIDE,$/;"	e	enum:ssgCullResult
SSG_STRADDLE	windows/include/plib/ssg.h	/^  SSG_STRADDLE = SG_STRADDLE$/;"	e	enum:ssgCullResult
STABLESPEED	drivers/berniw/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;			\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar	file:
STABLESPEED	drivers/berniw/mycar.h	/^		static const double STABLESPEED;		\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar
STABLESPEED	drivers/berniw2/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;			\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar	file:
STABLESPEED	drivers/berniw2/mycar.h	/^		static const double STABLESPEED;		\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar
STABLESPEED	drivers/berniw3/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;			\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar	file:
STABLESPEED	drivers/berniw3/mycar.h	/^		static const double STABLESPEED;		\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar
STABLESPEED	drivers/human/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;			\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar	file:
STABLESPEED	drivers/human/mycar.h	/^		static const double STABLESPEED;		\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar
STABLESPEED	drivers/inferno/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;				\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar	file:
STABLESPEED	drivers/inferno/mycar.h	/^		static const double STABLESPEED;			\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar
STABLESPEED	drivers/lliaw/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;				\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar	file:
STABLESPEED	drivers/lliaw/mycar.h	/^		static const double STABLESPEED;			\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar
STABLESPEED	drivers/tita/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;				\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar	file:
STABLESPEED	drivers/tita/mycar.h	/^		static const double STABLESPEED;			\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar
START	drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon151
START	drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon195
START	drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon174
START	drivers/human/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon186
START	drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon160
START	drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon206
START	drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon167
START_NAME	libs/txml/xmltok_impl.c	1314;"	d	file:
START_NAME	libs/txml/xmltok_impl.c	1331;"	d	file:
START_PROFILE	libs/tgf/tgf.h	561;"	d
START_PROFILE	libs/tgf/tgf.h	601;"	d
STDC	windows/include/zconf.h	169;"	d
STDC	windows/include/zconf.h	178;"	d
STDC	windows/include/zconf.h	181;"	d
STDC	windows/include/zconf.h	184;"	d
STDC	windows/include/zconf.h	187;"	d
STDC	windows/include/zconf.h	191;"	d
STDC99	windows/include/zconf.h	173;"	d
STEERMULT	drivers/inferno2/inferno2.cpp	232;"	d	file:
STEER_ANGLE	drivers/data_list.h	/^			STEER_ANGLE, 	LOOKAHEAD,		TO_LEFT, 	TO_RIGHT, 		TO_MIDDLE,$/;"	e	enum:sensing_data_name
STEER_AVOIDANCE_GAIN	drivers/olethros/driver.cpp	/^    const float Driver::STEER_AVOIDANCE_GAIN = 0.2f; \/\/\/< [lograd\/m] Gain for border avoidance steering$/;"	m	class:olethros::Driver	file:
STEER_AVOIDANCE_GAIN	drivers/olethros/driver.h	/^	static const float STEER_AVOIDANCE_GAIN;$/;"	m	class:olethros::Driver
STEER_DIRECTION_GAIN	drivers/olethros/driver.cpp	/^    const float Driver::STEER_DIRECTION_GAIN = 1.0f; \/\/\/< [-] Gain to apply for basic steerin$/;"	m	class:olethros::Driver	file:
STEER_DIRECTION_GAIN	drivers/olethros/driver.h	/^	static const float STEER_DIRECTION_GAIN;$/;"	m	class:olethros::Driver
STEER_DRIFT_GAIN	drivers/olethros/driver.cpp	/^    const float Driver::STEER_DRIFT_GAIN = 0.01f; \/\/\/< [-] Gain for drift compensation$/;"	m	class:olethros::Driver	file:
STEER_DRIFT_GAIN	drivers/olethros/driver.h	/^	static const float STEER_DRIFT_GAIN;$/;"	m	class:olethros::Driver
STEER_D_CONTROLLER_GAIN	drivers/inferno/mycar.cpp	/^const double MyCar::STEER_D_CONTROLLER_GAIN = 0.1;	\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar	file:
STEER_D_CONTROLLER_GAIN	drivers/inferno/mycar.h	/^		static const double STEER_D_CONTROLLER_GAIN;\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar
STEER_D_CONTROLLER_GAIN	drivers/lliaw/mycar.cpp	/^const double MyCar::STEER_D_CONTROLLER_GAIN = 0.1;	\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar	file:
STEER_D_CONTROLLER_GAIN	drivers/lliaw/mycar.h	/^		static const double STEER_D_CONTROLLER_GAIN;\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar
STEER_D_CONTROLLER_GAIN	drivers/tita/mycar.cpp	/^const double MyCar::STEER_D_CONTROLLER_GAIN = 0.1;	\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar	file:
STEER_D_CONTROLLER_GAIN	drivers/tita/mycar.h	/^		static const double STEER_D_CONTROLLER_GAIN;\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar
STEER_EMERGENCY_GAIN	drivers/olethros/driver.cpp	/^    const float Driver::STEER_EMERGENCY_GAIN = 0.01f; \/\/\/< [-] Gain for emergency steering$/;"	m	class:olethros::Driver	file:
STEER_EMERGENCY_GAIN	drivers/olethros/driver.h	/^	static const float STEER_EMERGENCY_GAIN;$/;"	m	class:olethros::Driver
STEER_MODE	drivers/data_list.h	/^enum actuating_data_name{ACCEL, BRAKE, LEFT_STEER, RIGHT_STEER, STEER_MODE, NUM_DUMMY};$/;"	e	enum:actuating_data_name
STEER_PREDICT_GAIN	drivers/olethros/driver.cpp	/^    const float Driver::STEER_PREDICT_GAIN = 0.1f; \/\/\/< [-] Predictive gain, multiplied with yaw rate.$/;"	m	class:olethros::Driver	file:
STEER_PREDICT_GAIN	drivers/olethros/driver.h	/^	static const float STEER_PREDICT_GAIN;$/;"	m	class:olethros::Driver
STEER_P_CONTROLLER_GAIN	drivers/inferno/mycar.h	/^		double STEER_P_CONTROLLER_GAIN;					\/\/ [-] Output gain of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_GAIN	drivers/lliaw/mycar.h	/^		double STEER_P_CONTROLLER_GAIN;					\/\/ [-] Output gain of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_GAIN	drivers/tita/mycar.h	/^		double STEER_P_CONTROLLER_GAIN;					\/\/ [-] Output gain of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_MAX	drivers/inferno/mycar.h	/^		double STEER_P_CONTROLLER_MAX;					\/\/ [-] Maximum output of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_MAX	drivers/lliaw/mycar.h	/^		double STEER_P_CONTROLLER_MAX;					\/\/ [-] Maximum output of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_MAX	drivers/tita/mycar.h	/^		double STEER_P_CONTROLLER_MAX;					\/\/ [-] Maximum output of p-controller.$/;"	m	class:MyCar
STOP_ACTIVE_PROFILES	libs/tgf/tgf.h	563;"	d
STOP_ACTIVE_PROFILES	libs/tgf/tgf.h	603;"	d
STOP_PROFILE	libs/tgf/tgf.h	562;"	d
STOP_PROFILE	libs/tgf/tgf.h	602;"	d
STREAMSET	windows/include/vorbis/vorbisfile.h	108;"	d
STRINGID	drivers/bt/learn.cpp	27;"	d	file:
STRINGID	drivers/damned/learn.cpp	27;"	d	file:
STRING_POOL	libs/txml/xmlparse.c	/^} STRING_POOL;$/;"	t	typeref:struct:__anon112	file:
STRING_UTILS_INC	libs/learning/string_utils.h	17;"	d
SUBDIRS	Makefile	/^SUBDIRS		= libs linux modules drivers tools$/;"	m
SUBDIRS	drivers/Makefile	/^SUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SUBDIRS	libs/Makefile	/^SUBDIRS		= confscreens racescreens robottools txml tgf tgfclient client raceengineclient learning \\$/;"	m
SUBDIRS	libs/txml/Makefile	/^SUBDIRS = gennmtab$/;"	m
SUBDIRS	modules/Makefile	/^SUBDIRS		= simu track graphic telemetry$/;"	m
SUBDIRS	modules/graphic/Makefile	/^SUBDIRS		= ssggraph$/;"	m
SUBDIRS	modules/simu/Makefile	/^SUBDIRS		= simuv2$/;"	m
SUBDIRS	modules/simu/simuv2/Makefile	/^SUBDIRS		= SOLID-2.0$/;"	m
SUBDIRS	modules/simu/simuv2/SOLID-2.0/Makefile	/^SUBDIRS		= src$/;"	m
SUBDIRS	tools/Makefile	/^SUBDIRS		= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SUBDIRS	tools/package/Makefile	/^SUBDIRS	      = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SURF	tools/accc/ac3dload.cpp	49;"	d	file:
SURF_INCR	tools/trackgen/easymesh.cpp	141;"	d	file:
SYS16BIT	windows/include/zconf.h	151;"	d
Sarsa	libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
SaveANN	libs/learning/ANN.cpp	/^int SaveANN(ANN* ann, FILE* f)$/;"	f
SaveANN	libs/learning/ANN.cpp	/^int SaveANN(ANN* ann, char* filename)$/;"	f
SaveDrvList	libs/confscreens/driverconfig.cpp	/^SaveDrvList(void * \/* dummy *\/)$/;"	f	file:
SaveElevation	tools/trackgen/elevation.cpp	/^void SaveElevation(tTrack *track, void *TrackHandle, char *imgFile, char *meshFile, int dispf)$/;"	f
SaveGraphicOptions	libs/confscreens/graphconfig.cpp	/^static void SaveGraphicOptions(void *prevMenu)$/;"	f	file:
SaveMainTrack	tools/trackgen/track.cpp	/^SaveMainTrack(FILE *curFd, int bump, int raceline)$/;"	f	file:
SaveSimuVersion	libs/confscreens/simuconfig.cpp	/^static void SaveSimuVersion(void * \/* dummy *\/)$/;"	f	file:
Scalar	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	34;"	d
ScrH	libs/tgfclient/gui.cpp	/^static int	ScrW, ScrH, ViewW, ViewH;$/;"	v	file:
ScrW	libs/tgfclient/gui.cpp	/^static int	ScrW, ScrH, ViewW, ViewH;$/;"	v	file:
Screen	libs/tgfclient/fg_gm.cpp	/^	int					Screen;             \/\/ The screen we are about to use.$/;"	m	struct:tagSFG_Display	file:
ScreenHeight	libs/tgfclient/fg_gm.cpp	/^	int					ScreenHeight;		\/\/ The screen's height in pixels.$/;"	m	struct:tagSFG_Display	file:
ScreenWidth	libs/tgfclient/fg_gm.cpp	/^	int					ScreenWidth;		\/\/ The screen's width in pixels.$/;"	m	struct:tagSFG_Display	file:
ScrollBarInfo	libs/tgfclient/tgfclient.h	/^typedef struct ScrollBarInfo$/;"	s
SectBarrier	modules/track/track4.cpp	/^static const char *SectBarrier[2] = {TRK_SECT_RBARRIER, TRK_SECT_LBARRIER};$/;"	v	file:
SectBorder	modules/track/track4.cpp	/^static const char *SectBorder[2]  = {TRK_SECT_RBORDER, TRK_SECT_LBORDER};$/;"	v	file:
SectSide	modules/track/track4.cpp	/^static const char *SectSide[2]    = {TRK_SECT_RSIDE, TRK_SECT_LSIDE};$/;"	v	file:
SecurityR	tools/trackgen/raceline.cpp	/^static const double SecurityR = 100.0; \/\/ Security radius$/;"	v	file:
SegExt	interfaces/track.h	/^typedef struct SegExt$/;"	s
SegLearn	drivers/bt/learn.cpp	/^SegLearn::SegLearn(tTrack* t, tSituation *s, int driverindex)$/;"	f	class:SegLearn
SegLearn	drivers/bt/learn.h	/^class SegLearn {$/;"	c
SegLearn	drivers/damned/learn.cpp	/^SegLearn::SegLearn(tTrack* t, tSituation *s, int driverindex)$/;"	f	class:SegLearn
SegLearn	drivers/damned/learn.h	/^class SegLearn {$/;"	c
SegLearn	drivers/olethros/learn.cpp	/^SegLearn::SegLearn(tTrack* t)$/;"	f	class:SegLearn
SegLearn	drivers/olethros/learn.h	/^class SegLearn {$/;"	c	namespace:olethros
SegLength	tools/trackgen/raceline.cpp	/^static const double SegLength = 2.0;$/;"	v	file:
Segment	drivers/olethros/TrackData.h	/^    Segment (Point left, Point right)$/;"	f	class:Segment
Segment	drivers/olethros/TrackData.h	/^class Segment$/;"	c
SegmentList	drivers/olethros/TrackData.h	/^class SegmentList$/;"	c
SelectAction	libs/learning/ann_policy.cpp	/^int ANN_Policy::SelectAction (real* s, real r, int forced_a)$/;"	f	class:ANN_Policy
SelectAction	libs/learning/policy.cpp	/^int DiscretePolicy::SelectAction (int s, real r, int forced_a)$/;"	f	class:DiscretePolicy
SeqShftAllowNeutral	drivers/human/human.h	/^	int		SeqShftAllowNeutral;$/;"	m	struct:HumanContext
Serror	libs/learning/learn_debug.h	10;"	d
Serror	libs/learning/learn_debug.h	7;"	d
Set	modules/simu/simuv3/Options.h	/^    virtual void Set(T x)$/;"	f	class:Option
Set	modules/simu/simuv3/Options.h	/^    void Set (const char* name, T value)$/;"	f	class:OptionList
Set	modules/simu/simuv3/SimulationOptions.h	/^	void Set (char* name, T value)$/;"	f	class:SimulationOptions
SetBoolFromGfParm	modules/simu/simuv3/SimulationOptions.cpp	/^void SimulationOptions::SetBoolFromGfParm(void* handle, const char* name) {$/;"	f	class:SimulationOptions
SetDataDir	libs/tgf/tgf.cpp	/^void SetDataDir(char *buf)$/;"	f
SetFloatFromGfParm	modules/simu/simuv3/SimulationOptions.cpp	/^void SimulationOptions::SetFloatFromGfParm(void* handle, const char* name) {$/;"	f	class:SimulationOptions
SetFromSkill	modules/simu/simuv3/SimulationOptions.cpp	/^void SimulationOptions::SetFromSkill (int skill)$/;"	f	class:SimulationOptions
SetLibDir	libs/tgf/tgf.cpp	/^void SetLibDir(char *buf)$/;"	f
SetLocalDir	libs/tgf/tgf.cpp	/^void SetLocalDir(char *buf)$/;"	f
SetMaxSoundCar	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^void OpenalSoundInterface::SetMaxSoundCar(CarSoundData** car_sound_data, QueueSoundMap* smap)$/;"	f	class:OpenalSoundInterface
SetMaxSoundCar	modules/graphic/ssggraph/PlibSoundInterface.cpp	/^void PlibSoundInterface::SetMaxSoundCar(CarSoundData** car_sound_data, QueueSoundMap* smap)$/;"	f	class:PlibSoundInterface
SetMaxSoundCar	modules/graphic/ssggraph/SoundInterface.cpp	/^void SoundInterface::SetMaxSoundCar(CarSoundData** car_sound_data, QueueSoundMap* smap)$/;"	f	class:SoundInterface
SetPoint	tools/accc/ac3dload.cpp	54;"	d	file:
SetSafetyThreshold	drivers/olethros/learn.h	/^	void SetSafetyThreshold (float st) {safety_threshold = st;}$/;"	f	class:olethros::SegLearn
SetSingleTextureMode	libs/tgf/tgf.cpp	/^void SetSingleTextureMode (void)$/;"	f
SetStringBufferLength	libs/learning/string_utils.cpp	/^StringBuffer* SetStringBufferLength (StringBuffer* s, unsigned int l)$/;"	f
ShadowAnchor	modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *ShadowAnchor = 0;$/;"	v
Shape	modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^class Shape {$/;"	c
ShapePtr	modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^typedef const Shape *ShapePtr;$/;"	t
ShapeType	modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^enum ShapeType {$/;"	g
SharedMemory_Manager	yunseok/tcp_client.cpp	/^	SharedMemory_Manager() {$/;"	f	class:SharedMemory_Manager
SharedMemory_Manager	yunseok/tcp_client.cpp	/^class SharedMemory_Manager {$/;"	c	file:
SharedSourcePool	modules/graphic/ssggraph/SoundInterface.h	/^		SharedSourcePool(int nbsources):nbsources(nbsources) {$/;"	f	class:SharedSourcePool
SharedSourcePool	modules/graphic/ssggraph/SoundInterface.h	/^class SharedSourcePool {$/;"	c
ShowPaths	drivers/olethros/driver.cpp	/^    void Driver::ShowPaths()$/;"	f	class:olethros::Driver
Side	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^typedef int Side;$/;"	t
SideDistExt	tools/trackgen/raceline.cpp	/^static double SideDistExt = 2.0; \/\/ Security distance wrt outside$/;"	v	file:
SideDistInt	tools/trackgen/raceline.cpp	/^static double SideDistInt = 2.0; \/\/ Security distance wrt inside$/;"	v	file:
SimAdjustPitCarSetupParam	modules/simu/simuv2/simu.cpp	/^bool SimAdjustPitCarSetupParam(tCarPitSetupValue* v)$/;"	f
SimAeroConfig	modules/simu/simuv2/aero.cpp	/^void SimAeroConfig(tCar *car)$/;"	f
SimAeroConfig	modules/simu/simuv3/aero.cpp	/^SimAeroConfig(tCar *car)$/;"	f
SimAeroDamage	modules/simu/simuv3/aero.cpp	/^void SimAeroDamage(tCar *car, sgVec3 poc, tdble F)$/;"	f
SimAeroUpdate	modules/simu/simuv2/aero.cpp	/^void  SimAeroUpdate(tCar *car, tSituation *s)$/;"	f
SimAeroUpdate	modules/simu/simuv3/aero.cpp	/^SimAeroUpdate(tCar *car, tSituation *s)$/;"	f
SimAxleConfig	modules/simu/simuv2/axle.cpp	/^void SimAxleConfig(tCar *car, int index)$/;"	f
SimAxleConfig	modules/simu/simuv3/axle.cpp	/^SimAxleConfig(tCar *car, int index)$/;"	f
SimAxleReConfig	modules/simu/simuv2/axle.cpp	/^void SimAxleReConfig(tCar *car, int index)$/;"	f
SimAxleUpdate	modules/simu/simuv2/axle.cpp	/^void SimAxleUpdate(tCar *car, int index)$/;"	f
SimAxleUpdate	modules/simu/simuv3/axle.cpp	/^SimAxleUpdate(tCar *car, int index)$/;"	f
SimBrakeConfig	modules/simu/simuv2/brake.cpp	/^void SimBrakeConfig(void *hdle, const char *section, tBrake *brake)$/;"	f
SimBrakeConfig	modules/simu/simuv3/brake.cpp	/^SimBrakeConfig(void *hdle, const char *section, tBrake *brake)$/;"	f
SimBrakeSystemConfig	modules/simu/simuv2/brake.cpp	/^void SimBrakeSystemConfig(tCar *car)$/;"	f
SimBrakeSystemConfig	modules/simu/simuv3/brake.cpp	/^SimBrakeSystemConfig(tCar *car)$/;"	f
SimBrakeSystemReConfig	modules/simu/simuv2/brake.cpp	/^void SimBrakeSystemReConfig(tCar *car)$/;"	f
SimBrakeSystemUpdate	modules/simu/simuv2/brake.cpp	/^void SimBrakeSystemUpdate(tCar *car)$/;"	f
SimBrakeSystemUpdate	modules/simu/simuv3/brake.cpp	/^SimBrakeSystemUpdate(tCar *car)$/;"	f
SimBrakeUpdate	modules/simu/simuv2/brake.cpp	/^void SimBrakeUpdate(tCar *car, tWheel *wheel, tBrake *brake)$/;"	f
SimBrakeUpdate	modules/simu/simuv3/brake.cpp	/^SimBrakeUpdate(tCar *car, tWheel *wheel, tBrake *brake)$/;"	f
SimCarAddAngularVelocity	modules/simu/simuv3/car.cpp	/^void SimCarAddAngularVelocity (tCar* car)$/;"	f
SimCarCollideAddDeformation	modules/simu/simuv3/collide.cpp	/^void SimCarCollideAddDeformation(tCar* car, sgVec3 pos, sgVec3 force)$/;"	f
SimCarCollideCars	modules/simu/simuv2/collide.cpp	/^SimCarCollideCars(tSituation *s)$/;"	f
SimCarCollideCars	modules/simu/simuv3/collide.cpp	/^SimCarCollideCars(tSituation *s)$/;"	f
SimCarCollideConfig	modules/simu/simuv2/collide.cpp	/^SimCarCollideConfig(tCar *car, tTrack *track)$/;"	f
SimCarCollideConfig	modules/simu/simuv3/collide.cpp	/^SimCarCollideConfig(tCar *car)$/;"	f
SimCarCollideInit	modules/simu/simuv2/collide.cpp	/^SimCarCollideInit(tTrack *track)$/;"	f
SimCarCollideInit	modules/simu/simuv3/collide.cpp	/^SimCarCollideInit(void)$/;"	f
SimCarCollideResponse	modules/simu/simuv2/collide.cpp	/^static void SimCarCollideResponse(void * \/*dummy*\/, DtObjectRef obj1, DtObjectRef obj2, const DtCollData *collData)$/;"	f	file:
SimCarCollideResponse	modules/simu/simuv3/collide.cpp	/^static void SimCarCollideResponse(void * \/*dummy*\/, DtObjectRef obj1, DtObjectRef obj2, const DtCollData *collData)$/;"	f	file:
SimCarCollideShutdown	modules/simu/simuv2/collide.cpp	/^void SimCarCollideShutdown(int nbcars)$/;"	f
SimCarCollideShutdown	modules/simu/simuv3/collide.cpp	/^SimCarCollideShutdown(int nbcars)$/;"	f
SimCarCollideXYScene	modules/simu/simuv2/collide.cpp	/^void SimCarCollideXYScene(tCar *car)$/;"	f
SimCarCollideXYScene	modules/simu/simuv3/collide.cpp	/^SimCarCollideXYScene(tCar *car)$/;"	f
SimCarCollideZ	modules/simu/simuv2/collide.cpp	/^void SimCarCollideZ(tCar *car)$/;"	f
SimCarCollideZ	modules/simu/simuv3/collide.cpp	/^SimCarCollideZ(tCar *car)$/;"	f
SimCarConfig	modules/simu/simuv2/car.cpp	/^SimCarConfig(tCar *car)$/;"	f
SimCarConfig	modules/simu/simuv3/car.cpp	/^SimCarConfig(tCar *car)$/;"	f
SimCarTable	modules/simu/simuv2/simu.cpp	/^tCar *SimCarTable = 0;$/;"	v
SimCarTable	modules/simu/simuv3/simu.cpp	/^tCar *SimCarTable = 0;$/;"	v
SimCarUpdate	modules/simu/simuv2/car.cpp	/^SimCarUpdate(tCar *car, tSituation * s)$/;"	f
SimCarUpdate	modules/simu/simuv3/car.cpp	/^SimCarUpdate(tCar *car, tSituation * \/* s *\/)$/;"	f
SimCarUpdate2	modules/simu/simuv2/car.cpp	/^SimCarUpdate2(tCar *car, tSituation * \/* s *\/)$/;"	f
SimCarUpdate2	modules/simu/simuv3/car.cpp	/^SimCarUpdate2(tCar *car, tSituation * \/* s *\/)$/;"	f
SimCarUpdateCornerPos	modules/simu/simuv2/car.cpp	/^SimCarUpdateCornerPos(tCar *car)$/;"	f	file:
SimCarUpdateCornerPos	modules/simu/simuv3/car.cpp	/^SimCarUpdateCornerPos(tCar *car)$/;"	f	file:
SimCarUpdateForces	modules/simu/simuv2/car.cpp	/^SimCarUpdateForces(tCar *car)$/;"	f	file:
SimCarUpdateForces	modules/simu/simuv3/car.cpp	/^SimCarUpdateForces(tCar *car)$/;"	f	file:
SimCarUpdatePos	modules/simu/simuv2/car.cpp	/^SimCarUpdatePos(tCar *car)$/;"	f	file:
SimCarUpdatePos	modules/simu/simuv3/car.cpp	/^SimCarUpdatePos(tCar *car)$/;"	f	file:
SimCarUpdateSpeed	modules/simu/simuv2/car.cpp	/^SimCarUpdateSpeed(tCar *car)$/;"	f	file:
SimCarUpdateSpeed	modules/simu/simuv3/car.cpp	/^SimCarUpdateSpeed(tCar *car)$/;"	f	file:
SimCarUpdateWheelPos	modules/simu/simuv2/car.cpp	/^SimCarUpdateWheelPos(tCar *car)$/;"	f
SimCarUpdateWheelPos	modules/simu/simuv3/car.cpp	/^SimCarUpdateWheelPos(tCar *car)$/;"	f
SimCarWallCollideResponse	modules/simu/simuv2/collide.cpp	/^static void SimCarWallCollideResponse(void *clientdata, DtObjectRef obj1, DtObjectRef obj2, const DtCollData *collData)$/;"	f	file:
SimCollideRemoveCar	modules/simu/simuv2/collide.cpp	/^void SimCollideRemoveCar(tCar *car, int nbcars)$/;"	f
SimConfig	modules/simu/simuv2/simu.cpp	/^SimConfig(tCarElt *carElt, RmInfo *info)$/;"	f
SimConfig	modules/simu/simuv3/simu.cpp	/^SimConfig(tCarElt *carElt, tRmInfo* ReInfo)$/;"	f
SimDeltaTime	modules/simu/simuv2/simu.cpp	/^tdble SimDeltaTime;$/;"	v
SimDeltaTime	modules/simu/simuv3/simu.cpp	/^tdble SimDeltaTime;$/;"	v
SimDifferentialConfig	modules/simu/simuv2/differential.cpp	/^void SimDifferentialConfig(void *hdle, const char *section, tDifferential *differential)$/;"	f
SimDifferentialConfig	modules/simu/simuv3/differential.cpp	/^SimDifferentialConfig(void *hdle, const char *section, tDifferential *differential)$/;"	f
SimDifferentialReConfig	modules/simu/simuv2/differential.cpp	/^void SimDifferentialReConfig(tCar* car, int index)$/;"	f
SimDifferentialUpdate	modules/simu/simuv2/differential.cpp	/^SimDifferentialUpdate(tCar *car, tDifferential *differential, int first)$/;"	f
SimDifferentialUpdate	modules/simu/simuv3/differential.cpp	/^SimDifferentialUpdate(tCar *car, tDifferential *differential, int first)$/;"	f
SimEngineConfig	modules/simu/simuv2/engine.cpp	/^SimEngineConfig(tCar *car)$/;"	f
SimEngineConfig	modules/simu/simuv3/engine.cpp	/^SimEngineConfig(tCar *car)$/;"	f
SimEngineShutdown	modules/simu/simuv2/engine.cpp	/^SimEngineShutdown(tCar *car)$/;"	f
SimEngineShutdown	modules/simu/simuv3/engine.cpp	/^SimEngineShutdown(tCar *car)$/;"	f
SimEngineUpdateRpm	modules/simu/simuv2/engine.cpp	/^SimEngineUpdateRpm(tCar *car, tdble axleRpm)$/;"	f
SimEngineUpdateRpm	modules/simu/simuv3/engine.cpp	/^SimEngineUpdateRpm(tCar *car, tdble axleRpm)$/;"	f
SimEngineUpdateTq	modules/simu/simuv2/engine.cpp	/^SimEngineUpdateTq(tCar *car)$/;"	f
SimEngineUpdateTq	modules/simu/simuv3/engine.cpp	/^SimEngineUpdateTq(tCar *car)$/;"	f
SimGearboxUpdate	modules/simu/simuv2/transmission.cpp	/^void SimGearboxUpdate(tCar *car)$/;"	f
SimGearboxUpdate	modules/simu/simuv3/transmission.cpp	/^SimGearboxUpdate(tCar *car)$/;"	f
SimInit	modules/simu/simuv2/simu.cpp	/^SimInit(int nbcars, tTrack* track, tdble fuelFactor, tdble damageFactor)$/;"	f
SimInit	modules/simu/simuv3/simu.cpp	/^SimInit(int nbcars, tTrack* track, tdble fuelFactor, tdble damageFactor)$/;"	f
SimNbCars	modules/simu/simuv2/simu.cpp	/^static int SimNbCars = 0;$/;"	v	file:
SimNbCars	modules/simu/simuv3/simu.cpp	/^static int SimNbCars = 0;$/;"	v	file:
SimReConfig	modules/simu/simuv2/simu.cpp	/^void SimReConfig(tCarElt *carElt)$/;"	f
SimReConfig	modules/simu/simuv3/simu.cpp	/^SimReConfig(tCarElt *carElt)$/;"	f
SimShutdown	modules/simu/simuv2/simu.cpp	/^SimShutdown(void)$/;"	f
SimShutdown	modules/simu/simuv3/simu.cpp	/^SimShutdown(void)$/;"	f
SimSteerConfig	modules/simu/simuv2/steer.cpp	/^void SimSteerConfig(tCar *car)$/;"	f
SimSteerConfig	modules/simu/simuv3/steer.cpp	/^SimSteerConfig(tCar *car)$/;"	f
SimSteerReConfig	modules/simu/simuv2/steer.cpp	/^void SimSteerReConfig(tCar *car)$/;"	f
SimSteerUpdate	modules/simu/simuv2/steer.cpp	/^SimSteerUpdate(tCar *car)$/;"	f
SimSteerUpdate	modules/simu/simuv3/steer.cpp	/^SimSteerUpdate(tCar *car)$/;"	f
SimSuspCheckIn	modules/simu/simuv2/susp.cpp	/^void SimSuspCheckIn(tSuspension *susp)$/;"	f
SimSuspCheckIn	modules/simu/simuv3/susp.cpp	/^SimSuspCheckIn(tSuspension *susp)$/;"	f
SimSuspConfig	modules/simu/simuv2/susp.cpp	/^void SimSuspConfig(void *hdle, const char *section, tSuspension *susp, tdble F0, tdble X0)$/;"	f
SimSuspConfig	modules/simu/simuv3/susp.cpp	/^SimSuspConfig(void *hdle, const char *section, tSuspension *susp, tdble F0, tdble X0)$/;"	f
SimSuspDamage	modules/simu/simuv3/susp.cpp	/^void SimSuspDamage(tSuspension* susp, tdble dmg)$/;"	f
SimSuspReConfig	modules/simu/simuv2/susp.cpp	/^void SimSuspReConfig(tCar* car, int index, tSuspension *susp, tdble F0, tdble X0)$/;"	f
SimSuspThirdReConfig	modules/simu/simuv2/susp.cpp	/^void SimSuspThirdReConfig(tCar* car, int index, tSuspension *susp, tdble F0, tdble X0)$/;"	f
SimSuspUpdate	modules/simu/simuv2/susp.cpp	/^void SimSuspUpdate(tSuspension *susp)$/;"	f
SimSuspUpdate	modules/simu/simuv3/susp.cpp	/^SimSuspUpdate(tSuspension *susp)$/;"	f
SimTelemetry	modules/simu/simuv2/simu.cpp	/^int SimTelemetry;$/;"	v
SimTelemetry	modules/simu/simuv3/simu.cpp	/^int SimTelemetry;$/;"	v
SimTelemetryOut	modules/simu/simuv2/car.cpp	/^SimTelemetryOut(tCar *car)$/;"	f
SimTelemetryOut	modules/simu/simuv3/car.cpp	/^SimTelemetryOut(tCar *car)$/;"	f
SimTransmissionConfig	modules/simu/simuv2/transmission.cpp	/^void SimTransmissionConfig(tCar *car)$/;"	f
SimTransmissionConfig	modules/simu/simuv3/transmission.cpp	/^SimTransmissionConfig(tCar *car)$/;"	f
SimTransmissionReConfig	modules/simu/simuv2/transmission.cpp	/^void SimTransmissionReConfig(tCar *car)$/;"	f
SimTransmissionUpdate	modules/simu/simuv2/transmission.cpp	/^SimTransmissionUpdate(tCar *car)$/;"	f
SimTransmissionUpdate	modules/simu/simuv3/transmission.cpp	/^SimTransmissionUpdate(tCar *car)$/;"	f
SimUpdate	modules/simu/simuv2/simu.cpp	/^SimUpdate(tSituation *s, double deltaTime, int telemetry)$/;"	f
SimUpdate	modules/simu/simuv3/simu.cpp	/^SimUpdate(tSituation *s, double deltaTime, int telemetry)$/;"	f
SimUpdateFreeWheels	modules/simu/simuv2/wheel.cpp	/^SimUpdateFreeWheels(tCar *car, int axlenb)$/;"	f
SimUpdateFreeWheels	modules/simu/simuv3/wheel.cpp	/^SimUpdateFreeWheels(tCar *car, int axlenb)$/;"	f
SimWheelConfig	modules/simu/simuv2/wheel.cpp	/^void SimWheelConfig(tCar *car, int index)$/;"	f
SimWheelConfig	modules/simu/simuv3/wheel.cpp	/^SimWheelConfig(tCar *car, int index)$/;"	f
SimWheelReConfig	modules/simu/simuv2/wheel.cpp	/^void SimWheelReConfig(tCar *car, int index)$/;"	f
SimWheelUpdateForce	modules/simu/simuv2/wheel.cpp	/^void SimWheelUpdateForce(tCar *car, int index)$/;"	f
SimWheelUpdateForce	modules/simu/simuv3/wheel.cpp	/^SimWheelUpdateForce(tCar *car, int index)$/;"	f
SimWheelUpdateRide	modules/simu/simuv2/wheel.cpp	/^void SimWheelUpdateRide(tCar *car, int index)$/;"	f
SimWheelUpdateRide	modules/simu/simuv3/wheel.cpp	/^SimWheelUpdateRide(tCar *car, int index)$/;"	f
SimWheelUpdateRotation	modules/simu/simuv2/wheel.cpp	/^SimWheelUpdateRotation(tCar *car)$/;"	f
SimWheelUpdateRotation	modules/simu/simuv3/wheel.cpp	/^SimWheelUpdateRotation(tCar *car)$/;"	f
SimWingConfig	modules/simu/simuv2/aero.cpp	/^void SimWingConfig(tCar *car, int index)$/;"	f
SimWingConfig	modules/simu/simuv3/aero.cpp	/^SimWingConfig(tCar *car, int index)$/;"	f
SimWingReConfig	modules/simu/simuv2/aero.cpp	/^void SimWingReConfig(tCar *car, int index)$/;"	f
SimWingUpdate	modules/simu/simuv2/aero.cpp	/^void SimWingUpdate(tCar *car, int index, tSituation* s)$/;"	f
SimWingUpdate	modules/simu/simuv3/aero.cpp	/^SimWingUpdate(tCar *car, int index, tSituation* s)$/;"	f
Simple	modules/simu/simuv3/susp.h	/^    Ideal, Simple, Wishbone$/;"	e	enum:SuspensionType
SimpleStrategy	drivers/bt/strategy.cpp	/^SimpleStrategy::SimpleStrategy() :$/;"	f	class:SimpleStrategy
SimpleStrategy	drivers/bt/strategy.h	/^class SimpleStrategy : public AbstractStrategy {$/;"	c
SimpleStrategy	drivers/damned/strategy.cpp	/^SimpleStrategy::SimpleStrategy() :$/;"	f	class:SimpleStrategy
SimpleStrategy	drivers/damned/strategy.h	/^class SimpleStrategy : public AbstractStrategy {$/;"	c
SimpleStrategy	drivers/olethros/strategy.cpp	/^SimpleStrategy::SimpleStrategy() :$/;"	f	class:olethros::SimpleStrategy
SimpleStrategy	drivers/olethros/strategy.h	/^class SimpleStrategy : public AbstractStrategy {$/;"	c	namespace:olethros
SimpleStrategy2	drivers/bt/strategy.h	/^class SimpleStrategy2 : public SimpleStrategy {$/;"	c
SimpleStrategy2	drivers/damned/strategy.h	/^class SimpleStrategy2 : public SimpleStrategy {$/;"	c
Simplex	modules/simu/simuv2/SOLID-2.0/src/Simplex.h	/^  Simplex(const VertexBase& b, int c, const unsigned int v[]) : $/;"	f	class:Simplex
Simplex	modules/simu/simuv2/SOLID-2.0/src/Simplex.h	/^class Simplex : public Polytope {$/;"	c
SimuMenuInit	libs/confscreens/simuconfig.cpp	/^SimuMenuInit(void *prevMenu)$/;"	f
SimuVersionId	libs/confscreens/simuconfig.cpp	/^static int SimuVersionId;$/;"	v	file:
SimulationOptions	modules/simu/simuv3/SimulationOptions.cpp	/^SimulationOptions::SimulationOptions()$/;"	f	class:SimulationOptions
SimulationOptions	modules/simu/simuv3/SimulationOptions.h	/^class SimulationOptions$/;"	c
SingleCardata	drivers/bt/cardata.h	/^class SingleCardata {$/;"	c
SingleCardata	drivers/damned/cardata.h	/^class SingleCardata {$/;"	c
SingleCardata	drivers/olethros/cardata.h	/^	SingleCardata() {$/;"	f	class:olethros::SingleCardata
SingleCardata	drivers/olethros/cardata.h	/^class SingleCardata {$/;"	c	namespace:olethros
SingleList	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^typedef map<DtObjectRef, Response, less<DtObjectRef> > SingleList;$/;"	t
Sinz	modules/simu/simuv2/carstruct.h	/^    tdble	Sinz;$/;"	m	struct:__anon23
Sinz	modules/simu/simuv3/carstruct.h	/^    tdble	Sinz;$/;"	m	struct:__anon42
Situation	interfaces/raceman.h	/^typedef struct Situation {$/;"	s
Size	drivers/olethros/geometry.h	/^	int Size() { return n;}$/;"	f	class:Vector
SkidAnchor	modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *SkidAnchor = 0;$/;"	v
SkidEditId	libs/confscreens/graphconfig.cpp	/^static int	SkidEditId;$/;"	v	file:
SkidValue	libs/confscreens/graphconfig.cpp	/^static int	SkidValue = 20;$/;"	v	file:
SkillId	libs/confscreens/driverconfig.cpp	/^static int SkillId;$/;"	v	file:
SkinFileName	tools/texmapper/maintexmapper.cpp	/^char	*SkinFileName = NULL;$/;"	v
Smessage	libs/learning/learn_debug.h	20;"	d
SmokeAnchor	modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *SmokeAnchor = 0;$/;"	v
SmokeEditId	libs/confscreens/graphconfig.cpp	/^static int	SmokeEditId;$/;"	v	file:
SmokeValue	libs/confscreens/graphconfig.cpp	/^static int	SmokeValue = 300;$/;"	v	file:
Smooth	tools/trackgen/raceline.cpp	/^static void Smooth(int Step)$/;"	f	file:
SmoothMaxGamma	libs/learning/MathFunctions.cpp	/^real SmoothMaxGamma (real f1, real f2, real lambda, real c)$/;"	f
SmoothMaxPNorm	libs/learning/MathFunctions.cpp	/^real SmoothMaxPNorm (real f1, real f2, real p)$/;"	f
Smoothing	tools/nfs2ac/mainnfs2ac.cpp	/^    int    Smoothing;$/;"	m	struct:__anon58	file:
SoftMax	libs/learning/MathFunctions.cpp	/^void SoftMax (int n, real* Q, real* p, real beta)$/;"	f
SoftMin	libs/learning/MathFunctions.cpp	/^void SoftMin (int n, real* Q, real* p, real beta)$/;"	f
SortSingleQueue	modules/graphic/ssggraph/SoundInterface.cpp	/^void SoundInterface::SortSingleQueue (CarSoundData** car_sound_data, QueueSoundMap* smap, int n_cars)$/;"	f	class:SoundInterface
SoundChar	modules/graphic/ssggraph/SoundInterface.h	/^	} SoundChar;$/;"	t	class:OpenalSoundInterface	typeref:struct:OpenalSoundInterface::SoundChar_
SoundChar	modules/graphic/ssggraph/SoundInterface.h	/^	} SoundChar;$/;"	t	class:PlibSoundInterface	typeref:struct:PlibSoundInterface::SoundChar_
SoundChar_	modules/graphic/ssggraph/SoundInterface.h	/^	typedef struct SoundChar_ {$/;"	s	class:OpenalSoundInterface
SoundChar_	modules/graphic/ssggraph/SoundInterface.h	/^	typedef struct SoundChar_ {$/;"	s	class:PlibSoundInterface
SoundFormat	libs/musicplayer/SoundStream.h	/^		enum SoundFormat {$/;"	g	class:SoundStream
SoundInterface	modules/graphic/ssggraph/SoundInterface.cpp	/^SoundInterface::SoundInterface(float sampling_rate, int n_channels)$/;"	f	class:SoundInterface
SoundInterface	modules/graphic/ssggraph/SoundInterface.h	/^class SoundInterface {$/;"	c
SoundMenuInit	libs/confscreens/soundconfig.cpp	/^void * SoundMenuInit(void *prevMenu)$/;"	f
SoundMode	modules/graphic/ssggraph/grsound.cpp	/^enum SoundMode {DISABLED, OPENAL_MODE, PLIB_MODE};$/;"	g	file:
SoundOptionId	libs/confscreens/soundconfig.cpp	/^static int SoundOptionId;$/;"	v	file:
SoundPri	modules/graphic/ssggraph/SoundInterface.h	/^} SoundPri;$/;"	t	typeref:struct:SoundPri_
SoundPriState	modules/graphic/ssggraph/SoundInterface.h	/^enum SoundPriState {$/;"	g
SoundPri_	modules/graphic/ssggraph/SoundInterface.h	/^typedef struct SoundPri_ {$/;"	s
SoundSource	modules/graphic/ssggraph/TorcsSound.cpp	/^SoundSource::SoundSource()$/;"	f	class:SoundSource
SoundSource	modules/graphic/ssggraph/TorcsSound.h	/^class SoundSource {$/;"	c
SoundStream	libs/musicplayer/SoundStream.h	/^		SoundStream(const char* path) {};$/;"	f	class:SoundStream
SoundStream	libs/musicplayer/SoundStream.h	/^class SoundStream$/;"	c
SpeedStrategy	drivers/inferno2/common.cpp	/^SpeedStrategy(tCarElt* car, int idx, tdble Vtarget, tSituation *s, tdble aspect)$/;"	f
Sphere	modules/simu/simuv2/SOLID-2.0/src/Sphere.h	/^  Sphere(Scalar r) : radius(r) {}$/;"	f	class:Sphere
Sphere	modules/simu/simuv2/SOLID-2.0/src/Sphere.h	/^class Sphere : public Convex {$/;"	c
SplashDisplaying	libs/client/splash.cpp	/^static int SplashDisplaying;$/;"	v	file:
SplashScreen	libs/client/splash.cpp	/^int SplashScreen(void)$/;"	f
Spline	drivers/bt/spline.cpp	/^Spline::Spline(int dim, SplinePoint *s)$/;"	f	class:Spline
Spline	drivers/bt/spline.h	/^class Spline {$/;"	c
Spline	drivers/damned/spline.cpp	/^Spline::Spline(int dim, SplinePoint *s)$/;"	f	class:Spline
Spline	drivers/damned/spline.h	/^class Spline {$/;"	c
Spline	drivers/inferno2/common.cpp	/^Spline(tdble p0, tdble p1, tdble pos, tdble start, tdble end)$/;"	f	file:
Spline	drivers/olethros/spline.cpp	/^Spline::Spline(int dim, SplinePoint *s)$/;"	f	class:Spline
Spline	drivers/olethros/spline.h	/^class Spline {$/;"	c
Spline	drivers/sparkle/spline.cpp	/^Spline::Spline(int dim, SplinePoint *s)$/;"	f	class:Spline
Spline	drivers/sparkle/spline.h	/^class Spline {$/;"	c
SplineEquationData	drivers/berniw/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon153
SplineEquationData	drivers/berniw2/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon197
SplineEquationData	drivers/berniw3/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon176
SplineEquationData	drivers/human/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon188
SplineEquationData	drivers/inferno/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon162
SplineEquationData	drivers/lliaw/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon208
SplineEquationData	drivers/tita/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon169
SplineEquationData2	drivers/berniw/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon154
SplineEquationData2	drivers/berniw2/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon198
SplineEquationData2	drivers/berniw3/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon177
SplineEquationData2	drivers/human/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon189
SplineEquationData2	drivers/inferno/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon163
SplineEquationData2	drivers/lliaw/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon209
SplineEquationData2	drivers/tita/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon170
SplinePoint	drivers/bt/spline.h	/^class SplinePoint {$/;"	c
SplinePoint	drivers/damned/spline.h	/^class SplinePoint {$/;"	c
SplinePoint	drivers/olethros/spline.h	/^class SplinePoint {$/;"	c
SplinePoint	drivers/sparkle/spline.h	/^class SplinePoint {$/;"	c
SplitTrack	tools/trackgen/raceline.cpp	/^static void SplitTrack(tTrack *ptrack)$/;"	f	file:
SquareNorm	libs/learning/MathFunctions.cpp	/^real SquareNorm (real* a, real* b, int n)$/;"	f
StartRaceHookActivate	libs/raceengineclient/racemain.cpp	/^static void StartRaceHookActivate(void * \/* dummy *\/)$/;"	f	file:
StartRaceHookHandle	libs/raceengineclient/racemain.cpp	/^static void	*StartRaceHookHandle = 0;$/;"	v	file:
StartRaceHookInit	libs/raceengineclient/racemain.cpp	/^static void* StartRaceHookInit(void)$/;"	f	file:
StepInterpolate	tools/trackgen/raceline.cpp	/^static void StepInterpolate(int iMin, int iMax, int Step)$/;"	f	file:
StopScrHandle	libs/raceengineclient/racemain.cpp	/^static void	*StopScrHandle = 0;$/;"	v	file:
Stopped	modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
StrToBool	modules/simu/simuv3/SimulationOptions.cpp	/^bool SimulationOptions::StrToBool (const char* s, bool dontcare)$/;"	f	class:SimulationOptions
Straight	drivers/berniw/linalg.h	/^        Straight() {}$/;"	f	class:Straight
Straight	drivers/berniw/linalg.h	/^        Straight(const v2d &anchor, const v2d &dir)$/;"	f	class:Straight
Straight	drivers/berniw/linalg.h	/^        Straight(float x, float y, float dx, float dy)$/;"	f	class:Straight
Straight	drivers/berniw/linalg.h	/^class Straight {$/;"	c
Straight	drivers/berniw2/linalg.h	/^        Straight() {}$/;"	f	class:Straight
Straight	drivers/berniw2/linalg.h	/^        Straight(const v2d &anchor, const v2d &dir)$/;"	f	class:Straight
Straight	drivers/berniw2/linalg.h	/^        Straight(float x, float y, float dx, float dy)$/;"	f	class:Straight
Straight	drivers/berniw2/linalg.h	/^class Straight {$/;"	c
Straight	drivers/berniw3/linalg.h	/^        Straight() {}$/;"	f	class:Straight
Straight	drivers/berniw3/linalg.h	/^        Straight(const v2d &anchor, const v2d &dir)$/;"	f	class:Straight
Straight	drivers/berniw3/linalg.h	/^        Straight(float x, float y, float dx, float dy)$/;"	f	class:Straight
Straight	drivers/berniw3/linalg.h	/^class Straight {$/;"	c
Straight	drivers/human/linalg.h	/^        Straight() {}$/;"	f	class:Straight
Straight	drivers/human/linalg.h	/^        Straight(const v2d &anchor, const v2d &dir)$/;"	f	class:Straight
Straight	drivers/human/linalg.h	/^        Straight(float x, float y, float dx, float dy)$/;"	f	class:Straight
Straight	drivers/human/linalg.h	/^class Straight {$/;"	c
Straight	drivers/olethros/linalg.h	/^        Straight() {}$/;"	f	class:Straight
Straight	drivers/olethros/linalg.h	/^        Straight(const v2d &anchor, const v2d &dir)$/;"	f	class:Straight
Straight	drivers/olethros/linalg.h	/^        Straight(float x, float y, float dx, float dy)$/;"	f	class:Straight
Straight	drivers/olethros/linalg.h	/^class Straight {$/;"	c
Straight	drivers/sparkle/linalg.h	/^        Straight() {}$/;"	f	class:Straight
Straight	drivers/sparkle/linalg.h	/^        Straight(const v2d &anchor, const v2d &dir)$/;"	f	class:Straight
Straight	drivers/sparkle/linalg.h	/^        Straight(float x, float y, float dx, float dy)$/;"	f	class:Straight
Straight	drivers/sparkle/linalg.h	/^class Straight {$/;"	c
StringBuffer	libs/learning/string_utils.h	/^} StringBuffer;$/;"	t	typeref:struct:StringBuffer_
StringBuffer_	libs/learning/string_utils.h	/^typedef struct StringBuffer_ {$/;"	s
Sub	drivers/olethros/geometry.cpp	/^void Sub (Vector* A, Vector* B, Vector* R)$/;"	f
Sum	libs/learning/MathFunctions.cpp	/^real Sum (real* a, int n)$/;"	f
SunAnchor	modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *SunAnchor = 0;$/;"	v
SuspSect	modules/simu/simuv2/wheel.cpp	/^static const char *SuspSect[4] = {SECT_FRNTRGTSUSP, SECT_FRNTLFTSUSP, SECT_REARRGTSUSP, SECT_REARLFTSUSP};$/;"	v	file:
SuspSect	modules/simu/simuv3/wheel.cpp	/^static const char *SuspSect[4] = {SECT_FRNTRGTSUSP, SECT_FRNTLFTSUSP, SECT_REARRGTSUSP, SECT_REARLFTSUSP};$/;"	v	file:
Suspension	modules/simu/simuv2/susp.h	/^typedef struct Suspension$/;"	s
Suspension	modules/simu/simuv3/susp.h	/^typedef struct Suspension$/;"	s
SuspensionType	modules/simu/simuv3/susp.h	/^typedef enum SuspensionType {$/;"	g
Swarning	libs/learning/learn_debug.h	11;"	d
Swarning	libs/learning/learn_debug.h	8;"	d
TABLE	modules/graphic/ssggraph/grvtxtable.h	69;"	d
TAG	libs/txml/xmlparse.c	/^} TAG;$/;"	t	typeref:struct:tag	file:
TARGET_SPEED	drivers/data_list.h	/^enum sensing_data_name{CC_TRIGGER, 	LKAS_TRIGGER, 		SPEED, 		TARGET_SPEED, 		ACCEL_VALUE, $/;"	e	enum:sensing_data_name
TARGET_SPEED	yunseok/tcp_client.cpp	/^	ACC, LKAS, TARGET_SPEED$/;"	e	enum:data	file:
TARGET_SPEED	yunseok/tcp_client_2.cpp	/^	ACC, LKAS, TARGET_SPEED$/;"	e	enum:data	file:
TARGET_WHEEL_SPEED	drivers/data_list.h	/^			POS_Y, 		SPEED_ERROR,		LATERAL, 	TARGET_WHEEL_SPEED, 	WHEEL_SPEED, 	$/;"	e	enum:sensing_data_name
TCL_MINSPEED	drivers/sparkle/driver.cpp	/^const float Driver::TCL_MINSPEED = 3.0;						\/* [m\/s] *\/$/;"	m	class:Driver	file:
TCL_MINSPEED	drivers/sparkle/driver.h	/^		static const float TCL_MINSPEED;$/;"	m	class:Driver
TCL_RANGE	drivers/berniw/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_RANGE	drivers/berniw/mycar.h	/^		static const double TCL_RANGE;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_RANGE	drivers/berniw2/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_RANGE	drivers/berniw2/mycar.h	/^		static const double TCL_RANGE;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_RANGE	drivers/berniw3/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_RANGE	drivers/berniw3/mycar.h	/^		static const double TCL_RANGE;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_RANGE	drivers/bt/driver.cpp	/^const float Driver::TCL_RANGE = 10.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
TCL_RANGE	drivers/bt/driver.h	/^		static const float TCL_RANGE;$/;"	m	class:Driver
TCL_RANGE	drivers/damned/driver.cpp	/^const float Driver::TCL_RANGE = 10.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
TCL_RANGE	drivers/damned/driver.h	/^		static const float TCL_RANGE;$/;"	m	class:Driver
TCL_RANGE	drivers/human/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_RANGE	drivers/human/mycar.h	/^		static const double TCL_RANGE;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_RANGE	drivers/inferno/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_RANGE	drivers/inferno/mycar.h	/^		static const double TCL_RANGE;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_RANGE	drivers/lliaw/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_RANGE	drivers/lliaw/mycar.h	/^		static const double TCL_RANGE;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_RANGE	drivers/olethros/driver.cpp	/^    const float Driver::TCL_RANGE = 10.0f;						\/\/\/< [m\/s] range [0..10]$/;"	m	class:olethros::Driver	file:
TCL_RANGE	drivers/olethros/driver.h	/^	static const float TCL_RANGE;$/;"	m	class:olethros::Driver
TCL_RANGE	drivers/sparkle/driver.cpp	/^const float Driver::TCL_RANGE = 0.2;						\/* [-] *\/$/;"	m	class:Driver	file:
TCL_RANGE	drivers/sparkle/driver.h	/^		static const float TCL_RANGE;$/;"	m	class:Driver
TCL_RANGE	drivers/tita/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_RANGE	drivers/tita/mycar.h	/^		static const double TCL_RANGE;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_SLIP	drivers/berniw/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;				\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_SLIP	drivers/berniw/mycar.h	/^		static const double TCL_SLIP;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_SLIP	drivers/berniw2/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;				\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_SLIP	drivers/berniw2/mycar.h	/^		static const double TCL_SLIP;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_SLIP	drivers/berniw3/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;				\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_SLIP	drivers/berniw3/mycar.h	/^		static const double TCL_SLIP;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_SLIP	drivers/bt/driver.cpp	/^const float Driver::TCL_SLIP = 2.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
TCL_SLIP	drivers/bt/driver.h	/^		static const float TCL_SLIP;$/;"	m	class:Driver
TCL_SLIP	drivers/damned/driver.cpp	/^const float Driver::TCL_SLIP = 2.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
TCL_SLIP	drivers/damned/driver.h	/^		static const float TCL_SLIP;$/;"	m	class:Driver
TCL_SLIP	drivers/human/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;				\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_SLIP	drivers/human/mycar.h	/^		static const double TCL_SLIP;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_SLIP	drivers/inferno/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;					\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_SLIP	drivers/inferno/mycar.h	/^		static const double TCL_SLIP;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_SLIP	drivers/lliaw/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;					\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_SLIP	drivers/lliaw/mycar.h	/^		static const double TCL_SLIP;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_SLIP	drivers/olethros/driver.cpp	/^    const float Driver::TCL_SLIP = 2.0f;							\/\/\/< [m\/s] range [0..10]$/;"	m	class:olethros::Driver	file:
TCL_SLIP	drivers/olethros/driver.h	/^	static const float TCL_SLIP;$/;"	m	class:olethros::Driver
TCL_SLIP	drivers/sparkle/driver.cpp	/^const float Driver::TCL_SLIP = 0.8;							\/* [-] range [0.95..0.3] *\/$/;"	m	class:Driver	file:
TCL_SLIP	drivers/sparkle/driver.h	/^		static const float TCL_SLIP;$/;"	m	class:Driver
TCL_SLIP	drivers/tita/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;					\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_SLIP	drivers/tita/mycar.h	/^		static const double TCL_SLIP;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_status	drivers/olethros/driver.h	/^	float TCL_status; \/\/\/< traction control$/;"	m	class:olethros::Driver
TDiffType	interfaces/car.h	/^	enum TDiffType {$/;"	g	struct:__anon83
TEAM_DAMAGE_CHANGE_LEAD	drivers/bt/driver.cpp	/^const int Driver::TEAM_DAMAGE_CHANGE_LEAD = 700;			\/\/ When to change position in the team?$/;"	m	class:Driver	file:
TEAM_DAMAGE_CHANGE_LEAD	drivers/bt/driver.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;$/;"	m	class:Driver
TEAM_DAMAGE_CHANGE_LEAD	drivers/damned/driver.cpp	/^const int Driver::TEAM_DAMAGE_CHANGE_LEAD = 700;			\/\/ When to change position in the team?$/;"	m	class:Driver	file:
TEAM_DAMAGE_CHANGE_LEAD	drivers/damned/driver.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;$/;"	m	class:Driver
TEAM_DAMAGE_CHANGE_LEAD	drivers/inferno/mycar.cpp	/^const int MyCar::TEAM_DAMAGE_CHANGE_LEAD = 1500;	\/\/ When to change position in the team?$/;"	m	class:MyCar	file:
TEAM_DAMAGE_CHANGE_LEAD	drivers/inferno/mycar.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;	\/\/ When to change position in the team? $/;"	m	class:MyCar
TEAM_DAMAGE_CHANGE_LEAD	drivers/lliaw/mycar.cpp	/^const int MyCar::TEAM_DAMAGE_CHANGE_LEAD = 1500;	\/\/ When to change position in the team?$/;"	m	class:MyCar	file:
TEAM_DAMAGE_CHANGE_LEAD	drivers/lliaw/mycar.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;	\/\/ When to change position in the team? $/;"	m	class:MyCar
TEAM_DAMAGE_CHANGE_LEAD	drivers/tita/mycar.cpp	/^const int MyCar::TEAM_DAMAGE_CHANGE_LEAD = 1500;	\/\/ When to change position in the team?$/;"	m	class:MyCar	file:
TEAM_DAMAGE_CHANGE_LEAD	drivers/tita/mycar.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;	\/\/ When to change position in the team? $/;"	m	class:MyCar
TEAM_REAR_DIST	drivers/bt/driver.cpp	/^const float Driver::TEAM_REAR_DIST = 50.0f;					\/\/$/;"	m	class:Driver	file:
TEAM_REAR_DIST	drivers/bt/driver.h	/^		static const float TEAM_REAR_DIST;$/;"	m	class:Driver
TEAM_REAR_DIST	drivers/damned/driver.cpp	/^const float Driver::TEAM_REAR_DIST = 50.0f;					\/\/$/;"	m	class:Driver	file:
TEAM_REAR_DIST	drivers/damned/driver.h	/^		static const float TEAM_REAR_DIST;$/;"	m	class:Driver
TEST_PITSTOPS	drivers/olethros/driver.cpp	46;"	d	file:
TEXREP	tools/accc/ac3dload.cpp	46;"	d	file:
TEXTLINES	libs/racescreens/loadingscreen.cpp	34;"	d	file:
TEXTURE	tools/accc/ac3dload.cpp	45;"	d	file:
TF_PORT	predictor/talker.py	/^TF_PORT = 40000$/;"	v
THNSSBG	modules/graphic/ssggraph/grboard.cpp	233;"	d	file:
THNSSFG	modules/graphic/ssggraph/grboard.cpp	234;"	d	file:
TIMETOCATCH	drivers/berniw/mycar.cpp	/^const double MyCar::TIMETOCATCH = 3.0;			\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar	file:
TIMETOCATCH	drivers/berniw/mycar.h	/^		static const double TIMETOCATCH;		\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar
TIMETOCATCH	drivers/berniw2/mycar.cpp	/^const double MyCar::TIMETOCATCH = 3.0;			\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar	file:
TIMETOCATCH	drivers/berniw2/mycar.h	/^		static const double TIMETOCATCH;		\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar
TIMETOCATCH	drivers/berniw3/mycar.cpp	/^const double MyCar::TIMETOCATCH = 3.0;			\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar	file:
TIMETOCATCH	drivers/berniw3/mycar.h	/^		static const double TIMETOCATCH;		\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar
TIMETOCATCH	drivers/human/mycar.cpp	/^const double MyCar::TIMETOCATCH = 3.0;			\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar	file:
TIMETOCATCH	drivers/human/mycar.h	/^		static const double TIMETOCATCH;		\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar
TIMETOCATCH	drivers/inferno/mycar.cpp	/^const double MyCar::TIMETOCATCH = 2.0;				\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar	file:
TIMETOCATCH	drivers/inferno/mycar.h	/^		static const double TIMETOCATCH;			\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar
TIMETOCATCH	drivers/lliaw/mycar.cpp	/^const double MyCar::TIMETOCATCH = 2.0;				\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar	file:
TIMETOCATCH	drivers/lliaw/mycar.h	/^		static const double TIMETOCATCH;			\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar
TIMETOCATCH	drivers/tita/mycar.cpp	/^const double MyCar::TIMETOCATCH = 2.0;				\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar	file:
TIMETOCATCH	drivers/tita/mycar.h	/^		static const double TIMETOCATCH;			\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar
TIME_MARGIN	drivers/olethros/opponent.cpp	/^const float Opponent::TIME_MARGIN = 2.0;				\/\/ [s] safety margin.$/;"	m	class:olethros::Opponent	file:
TIME_MARGIN	drivers/olethros/opponent.h	/^		static const float TIME_MARGIN;$/;"	m	class:olethros::Opponent
TIREMU	drivers/bt/driver.h	/^		float TIREMU;		\/\/ Friction coefficient of tires.$/;"	m	class:Driver
TIREMU	drivers/damned/driver.h	/^		float TIREMU;		\/\/ Friction coefficient of tires.$/;"	m	class:Driver
TIREMU	drivers/olethros/driver.h	/^	float TIREMU;		\/\/\/< Friction coefficient of tires.$/;"	m	class:olethros::Driver
TIREMU	drivers/sparkle/driver.h	/^		float TIREMU;		\/* friction coefficient of tires *\/$/;"	m	class:Driver
TLM_IDENT	interfaces/telemetry.h	24;"	d
TOC1	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC1" HREF="solid2.html#SEC1">GNU LIBRARY GENERAL PUBLIC LICENSE<\/A>$/;"	a
TOC10	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC10" HREF="solid2.html#SEC10">The SOLID API<\/A>$/;"	a
TOC11	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC11" HREF="solid2.html#SEC11">Building Shapes<\/A>$/;"	a
TOC12	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC12" HREF="solid2.html#SEC12">Creating and Moving Objects<\/A>$/;"	a
TOC13	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC13" HREF="solid2.html#SEC13">Who's Afraid of Quaternions?<\/A>$/;"	a
TOC14	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC14" HREF="solid2.html#SEC14">Response Handling<\/A>$/;"	a
TOC15	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC15" HREF="solid2.html#SEC15">Smart Response<\/A>$/;"	a
TOC16	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC16" HREF="solid2.html#SEC16">Deformable Models<\/A>$/;"	a
TOC17	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC17" HREF="solid2.html#SEC17">Caching<\/A>$/;"	a
TOC18	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC18" HREF="solid2.html#SEC18">Projects and other things left to do<\/A>$/;"	a
TOC19	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC19" HREF="solid2.html#SEC19">Coming Attractions<\/A>$/;"	a
TOC2	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC2" HREF="solid2.html#SEC2">Preamble<\/A>$/;"	a
TOC20	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC20" HREF="solid2.html#SEC20">Bug Reports<\/A>$/;"	a
TOC3	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC3" HREF="solid2.html#SEC3">TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION<\/A>$/;"	a
TOC4	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC4" HREF="solid2.html#SEC4">How to Apply These Terms to Your New Libraries<\/A>$/;"	a
TOC5	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC5" HREF="solid2.html#SEC5">Introduction<\/A>$/;"	a
TOC6	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC6" HREF="solid2.html#SEC6">Installing SOLID<\/A>$/;"	a
TOC7	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC7" HREF="solid2.html#SEC7">Requirements<\/A>$/;"	a
TOC8	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC8" HREF="solid2.html#SEC8">Installation<\/A>$/;"	a
TOC9	modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC9" HREF="solid2.html#SEC9">Trouble in Installation<\/A>$/;"	a
TOOLSCRIPT	linux/Makefile	/^TOOLSCRIPT  = torcs$/;"	m
TOOLSCRIPT	tools/accc/Makefile	/^TOOLSCRIPT	= accc$/;"	m
TOOLSCRIPT	tools/nfs2ac/Makefile	/^TOOLSCRIPT	= nfs2ac$/;"	m
TOOLSCRIPT	tools/nfsperf/Makefile	/^TOOLSCRIPT	= nfsperf$/;"	m
TOOLSCRIPT	tools/texmapper/Makefile	/^TOOLSCRIPT	= texmapper$/;"	m
TOOLSCRIPT	tools/trackgen/Makefile	/^TOOLSCRIPT	= trackgen$/;"	m
TOOLSDIR	linux/Makefile	/^TOOLSDIR    = $/;"	m
TOOLSDIR	tools/accc/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSDIR	tools/nfs2ac/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSDIR	tools/nfsperf/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSDIR	tools/texmapper/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSDIR	tools/trackgen/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSUBDIRS	Makefile	/^TOOLSUBDIRS	= libs tools linux$/;"	m
TOOLSUBDIRS	libs/Makefile	/^TOOLSUBDIRS	= txml$/;"	m
TOOLSUBDIRS	libs/txml/Makefile	/^TOOLSUBDIRS = gennmtab$/;"	m
TOOLSUBDIRS	tools/Makefile	/^TOOLSUBDIRS	= $(SUBDIRS)$/;"	m
TORCS_SOUND_H	modules/graphic/ssggraph/TorcsSound.h	21;"	d
TO_LEFT	drivers/data_list.h	/^			STEER_ANGLE, 	LOOKAHEAD,		TO_LEFT, 	TO_RIGHT, 		TO_MIDDLE,$/;"	e	enum:sensing_data_name
TO_MIDDLE	drivers/data_list.h	/^			STEER_ANGLE, 	LOOKAHEAD,		TO_LEFT, 	TO_RIGHT, 		TO_MIDDLE,$/;"	e	enum:sensing_data_name
TO_RIGHT	drivers/data_list.h	/^			STEER_ANGLE, 	LOOKAHEAD,		TO_LEFT, 	TO_RIGHT, 		TO_MIDDLE,$/;"	e	enum:sensing_data_name
TPRES	drivers/berniw/pathfinder.cpp	/^const double Pathfinder::TPRES = PI\/(NTPARAMS - 1);	\/* resolution of the steps *\/$/;"	m	class:Pathfinder	file:
TPRES	drivers/berniw/pathfinder.h	/^		static const double TPRES;		\/* resolution of the steps *\/$/;"	m	class:Pathfinder
TPRES	drivers/berniw2/pathfinder.cpp	/^const double Pathfinder::TPRES = PI\/(NTPARAMS - 1);	\/* resolution of the steps *\/$/;"	m	class:Pathfinder	file:
TPRES	drivers/berniw2/pathfinder.h	/^		static const double TPRES;		\/* resolution of the steps *\/$/;"	m	class:Pathfinder
TPRES	drivers/berniw3/pathfinder.cpp	/^const double Pathfinder::TPRES = PI\/(NTPARAMS - 1);	\/* resolution of the steps *\/$/;"	m	class:Pathfinder	file:
TPRES	drivers/berniw3/pathfinder.h	/^		static const double TPRES;		\/* resolution of the steps *\/$/;"	m	class:Pathfinder
TPRES	drivers/human/pathfinder.cpp	/^const double Pathfinder::TPRES = PI\/(NTPARAMS - 1);	\/* resolution of the steps *\/$/;"	m	class:Pathfinder	file:
TPRES	drivers/human/pathfinder.h	/^		static const double TPRES;		\/* resolution of the steps *\/$/;"	m	class:Pathfinder
TRACE_GL	modules/graphic/ssggraph/grutil.h	28;"	d
TRACE_GL	modules/graphic/ssggraph/grutil.h	30;"	d
TRACKDATA_H	drivers/olethros/TrackData.h	13;"	d
TRACKDESCFILENAME	drivers/berniw/berniw.h	40;"	d
TRACKDESCFILENAME	drivers/berniw2/berniw.h	40;"	d
TRACKDESCFILENAME	drivers/berniw3/berniw.h	40;"	d
TRACKDESCFILENAME	drivers/inferno/berniw.h	44;"	d
TRACKDESCFILENAME	drivers/lliaw/berniw.h	44;"	d
TRACKDESCFILENAME	drivers/tita/berniw.h	44;"	d
TRACKFILENAME	drivers/berniw/berniw.h	39;"	d
TRACKFILENAME	drivers/berniw2/berniw.h	39;"	d
TRACKFILENAME	drivers/berniw3/berniw.h	39;"	d
TRACKFILENAME	drivers/inferno/berniw.h	43;"	d
TRACKFILENAME	drivers/lliaw/berniw.h	43;"	d
TRACKFILENAME	drivers/tita/berniw.h	43;"	d
TRACKRES	drivers/berniw/trackdesc.h	44;"	d
TRACKRES	drivers/berniw2/trackdesc.h	44;"	d
TRACKRES	drivers/berniw3/trackdesc.h	44;"	d
TRACKRES	drivers/human/trackdesc.h	44;"	d
TRACKRES	drivers/inferno/trackdesc.h	45;"	d
TRACKRES	drivers/lliaw/trackdesc.h	45;"	d
TRACKRES	drivers/tita/trackdesc.h	45;"	d
TRACK_MAP_MASK	modules/graphic/ssggraph/grtrackmap.h	51;"	d
TRACK_MAP_NONE	modules/graphic/ssggraph/grtrackmap.h	42;"	d
TRACK_MAP_NORMAL	modules/graphic/ssggraph/grtrackmap.h	43;"	d
TRACK_MAP_NORMAL_WITH_OPPONENTS	modules/graphic/ssggraph/grtrackmap.h	44;"	d
TRACK_MAP_PAN	modules/graphic/ssggraph/grtrackmap.h	45;"	d
TRACK_MAP_PAN_ALIGNED	modules/graphic/ssggraph/grtrackmap.h	47;"	d
TRACK_MAP_PAN_ALIGNED_WITH_OPPONENTS	modules/graphic/ssggraph/grtrackmap.h	48;"	d
TRACK_MAP_PAN_WITH_OPPONENTS	modules/graphic/ssggraph/grtrackmap.h	46;"	d
TRAJECTORY_H	drivers/olethros/Trajectory.h	13;"	d
TRANSLATION	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    TRANSLATION = 0x01,$/;"	e	enum:Transform::__anon14
TRANS_4WD	modules/simu/simuv2/transmission.h	57;"	d
TRANS_4WD	modules/simu/simuv3/transmission.h	58;"	d
TRANS_CENTRAL_DIFF	modules/simu/simuv2/transmission.h	67;"	d
TRANS_CENTRAL_DIFF	modules/simu/simuv3/transmission.h	68;"	d
TRANS_FRONT_DIFF	modules/simu/simuv2/transmission.h	65;"	d
TRANS_FRONT_DIFF	modules/simu/simuv3/transmission.h	66;"	d
TRANS_FWD	modules/simu/simuv2/transmission.h	56;"	d
TRANS_FWD	modules/simu/simuv3/transmission.h	57;"	d
TRANS_REAR_DIFF	modules/simu/simuv2/transmission.h	66;"	d
TRANS_REAR_DIFF	modules/simu/simuv3/transmission.h	67;"	d
TRANS_RWD	modules/simu/simuv2/transmission.h	55;"	d
TRANS_RWD	modules/simu/simuv3/transmission.h	56;"	d
TRKEXT	linux/osspec.h	26;"	d
TRKEXT	windows/osspec.h	25;"	d
TRK_ATT_3DDESC	interfaces/track.h	56;"	d
TRK_ATT_ALT_MAX	interfaces/track.h	95;"	d
TRK_ATT_ALT_MIN	interfaces/track.h	96;"	d
TRK_ATT_AMBIENT_B	interfaces/track.h	70;"	d
TRK_ATT_AMBIENT_G	interfaces/track.h	69;"	d
TRK_ATT_AMBIENT_R	interfaces/track.h	68;"	d
TRK_ATT_ARC	interfaces/track.h	151;"	d
TRK_ATT_AUTHOR	interfaces/track.h	50;"	d
TRK_ATT_B1	interfaces/track.h	127;"	d
TRK_ATT_B2	interfaces/track.h	130;"	d
TRK_ATT_BANKTYPE	interfaces/track.h	196;"	d
TRK_ATT_BGCLR_B	interfaces/track.h	62;"	d
TRK_ATT_BGCLR_G	interfaces/track.h	61;"	d
TRK_ATT_BGCLR_R	interfaces/track.h	60;"	d
TRK_ATT_BGTYPE	interfaces/track.h	59;"	d
TRK_ATT_BHEIGHT	interfaces/track.h	653;"	d
TRK_ATT_BKE	interfaces/track.h	160;"	d
TRK_ATT_BKGRND	interfaces/track.h	57;"	d
TRK_ATT_BKGRND2	interfaces/track.h	58;"	d
TRK_ATT_BKS	interfaces/track.h	159;"	d
TRK_ATT_BMARGIN	interfaces/track.h	87;"	d
TRK_ATT_BSTEP	interfaces/track.h	88;"	d
TRK_ATT_BUMPNAME	interfaces/track.h	117;"	d
TRK_ATT_BUMPSIZE	interfaces/track.h	122;"	d
TRK_ATT_CAM_FOV	interfaces/track.h	210;"	d
TRK_ATT_CAM_FOVE	interfaces/track.h	211;"	d
TRK_ATT_CAT	interfaces/track.h	52;"	d
TRK_ATT_COLOR	interfaces/track.h	99;"	d
TRK_ATT_DAMMAGE	interfaces/track.h	114;"	d
TRK_ATT_DESCR	interfaces/track.h	51;"	d
TRK_ATT_DH	interfaces/track.h	104;"	d
TRK_ATT_DIFFUSE_B	interfaces/track.h	73;"	d
TRK_ATT_DIFFUSE_G	interfaces/track.h	72;"	d
TRK_ATT_DIFFUSE_R	interfaces/track.h	71;"	d
TRK_ATT_DOVFACTOR	interfaces/track.h	173;"	d
TRK_ATT_DV	interfaces/track.h	105;"	d
TRK_ATT_ELEVATION	interfaces/track.h	94;"	d
TRK_ATT_END	interfaces/track.h	180;"	d
TRK_ATT_ENTRY	interfaces/track.h	177;"	d
TRK_ATT_ENVIND	interfaces/track.h	631;"	d
TRK_ATT_ENVMAP	interfaces/track.h	172;"	d
TRK_ATT_ENVNAME	interfaces/track.h	64;"	d
TRK_ATT_EWIDTH	interfaces/track.h	193;"	d
TRK_ATT_EXIT	interfaces/track.h	178;"	d
TRK_ATT_FINISH	interfaces/track.h	670;"	d
TRK_ATT_FOVFACT	interfaces/track.h	78;"	d
TRK_ATT_FRICTION	interfaces/track.h	110;"	d
TRK_ATT_G1	interfaces/track.h	126;"	d
TRK_ATT_G2	interfaces/track.h	129;"	d
TRK_ATT_GRADE	interfaces/track.h	158;"	d
TRK_ATT_GRPSZ	interfaces/track.h	97;"	d
TRK_ATT_HEIGHT	interfaces/track.h	195;"	d
TRK_ATT_HEIGHT	interfaces/track.h	209;"	d
TRK_ATT_HSPACE	interfaces/track.h	81;"	d
TRK_ATT_ID	interfaces/track.h	161;"	d
TRK_ATT_LBAFRCT	interfaces/track.h	658;"	d
TRK_ATT_LBAFRCT	interfaces/track.h	663;"	d
TRK_ATT_LBAH	interfaces/track.h	657;"	d
TRK_ATT_LBAS	interfaces/track.h	655;"	d
TRK_ATT_LBASURF	interfaces/track.h	659;"	d
TRK_ATT_LBAW	interfaces/track.h	656;"	d
TRK_ATT_LBH	interfaces/track.h	646;"	d
TRK_ATT_LBS	interfaces/track.h	644;"	d
TRK_ATT_LBSURF	interfaces/track.h	647;"	d
TRK_ATT_LBW	interfaces/track.h	645;"	d
TRK_ATT_LEN	interfaces/track.h	182;"	d
TRK_ATT_LG	interfaces/track.h	148;"	d
TRK_ATT_LIPOS_X	interfaces/track.h	75;"	d
TRK_ATT_LIPOS_Y	interfaces/track.h	76;"	d
TRK_ATT_LIPOS_Z	interfaces/track.h	77;"	d
TRK_ATT_LSSURF	interfaces/track.h	638;"	d
TRK_ATT_LST	interfaces/track.h	634;"	d
TRK_ATT_LSW	interfaces/track.h	635;"	d
TRK_ATT_LSWE	interfaces/track.h	637;"	d
TRK_ATT_LSWS	interfaces/track.h	636;"	d
TRK_ATT_MARKS	interfaces/track.h	171;"	d
TRK_ATT_NAME	interfaces/track.h	48;"	d
TRK_ATT_OBJECT	interfaces/track.h	100;"	d
TRK_ATT_OBJMAP	interfaces/track.h	98;"	d
TRK_ATT_ORIENT	interfaces/track.h	89;"	d
TRK_ATT_ORIENTATION	interfaces/track.h	103;"	d
TRK_ATT_ORIENTATION_TYPE	interfaces/track.h	102;"	d
TRK_ATT_PIT_END	interfaces/track.h	624;"	d
TRK_ATT_PIT_ENTRY	interfaces/track.h	621;"	d
TRK_ATT_PIT_EXIT	interfaces/track.h	622;"	d
TRK_ATT_PIT_LEN	interfaces/track.h	627;"	d
TRK_ATT_PIT_SIDE	interfaces/track.h	626;"	d
TRK_ATT_PIT_START	interfaces/track.h	623;"	d
TRK_ATT_PIT_TYPE	interfaces/track.h	625;"	d
TRK_ATT_PIT_WIDTH	interfaces/track.h	628;"	d
TRK_ATT_PROFIL	interfaces/track.h	162;"	d
TRK_ATT_PROFSTEPS	interfaces/track.h	163;"	d
TRK_ATT_PROFSTEPSLEN	interfaces/track.h	164;"	d
TRK_ATT_PROFTGTE	interfaces/track.h	166;"	d
TRK_ATT_PROFTGTEL	interfaces/track.h	168;"	d
TRK_ATT_PROFTGTER	interfaces/track.h	170;"	d
TRK_ATT_PROFTGTS	interfaces/track.h	165;"	d
TRK_ATT_PROFTGTSL	interfaces/track.h	167;"	d
TRK_ATT_PROFTGTSR	interfaces/track.h	169;"	d
TRK_ATT_R1	interfaces/track.h	125;"	d
TRK_ATT_R2	interfaces/track.h	128;"	d
TRK_ATT_RACELINENAME	interfaces/track.h	118;"	d
TRK_ATT_RADIUS	interfaces/track.h	149;"	d
TRK_ATT_RADIUSEND	interfaces/track.h	150;"	d
TRK_ATT_RBAH	interfaces/track.h	662;"	d
TRK_ATT_RBAS	interfaces/track.h	660;"	d
TRK_ATT_RBASURF	interfaces/track.h	664;"	d
TRK_ATT_RBAW	interfaces/track.h	661;"	d
TRK_ATT_RBH	interfaces/track.h	650;"	d
TRK_ATT_RBS	interfaces/track.h	648;"	d
TRK_ATT_RBSURF	interfaces/track.h	651;"	d
TRK_ATT_RBW	interfaces/track.h	649;"	d
TRK_ATT_REBOUND	interfaces/track.h	115;"	d
TRK_ATT_RELIEF	interfaces/track.h	93;"	d
TRK_ATT_RLEXT	interfaces/track.h	140;"	d
TRK_ATT_RLINT	interfaces/track.h	141;"	d
TRK_ATT_RLWIDTHSCALE	interfaces/track.h	142;"	d
TRK_ATT_ROLLRES	interfaces/track.h	111;"	d
TRK_ATT_ROUGHT	interfaces/track.h	112;"	d
TRK_ATT_ROUGHTWL	interfaces/track.h	113;"	d
TRK_ATT_RSSURF	interfaces/track.h	643;"	d
TRK_ATT_RST	interfaces/track.h	639;"	d
TRK_ATT_RSW	interfaces/track.h	640;"	d
TRK_ATT_RSWE	interfaces/track.h	642;"	d
TRK_ATT_RSWS	interfaces/track.h	641;"	d
TRK_ATT_SEED	interfaces/track.h	101;"	d
TRK_ATT_SEGMENT	interfaces/track.h	206;"	d
TRK_ATT_SHIN	interfaces/track.h	74;"	d
TRK_ATT_SIDE	interfaces/track.h	181;"	d
TRK_ATT_SPD_LIM	interfaces/track.h	183;"	d
TRK_ATT_SPEC_B	interfaces/track.h	67;"	d
TRK_ATT_SPEC_G	interfaces/track.h	66;"	d
TRK_ATT_SPEC_R	interfaces/track.h	65;"	d
TRK_ATT_START	interfaces/track.h	179;"	d
TRK_ATT_STEPLEN	interfaces/track.h	132;"	d
TRK_ATT_STYLE	interfaces/track.h	194;"	d
TRK_ATT_SURF	interfaces/track.h	47;"	d
TRK_ATT_SURFRAND	interfaces/track.h	92;"	d
TRK_ATT_SWIDTH	interfaces/track.h	192;"	d
TRK_ATT_TEXLINK	interfaces/track.h	120;"	d
TRK_ATT_TEXMIPMAP	interfaces/track.h	124;"	d
TRK_ATT_TEXSIZE	interfaces/track.h	121;"	d
TRK_ATT_TEXSTARTBOUNDARY	interfaces/track.h	123;"	d
TRK_ATT_TEXTURE	interfaces/track.h	116;"	d
TRK_ATT_TEXTYPE	interfaces/track.h	119;"	d
TRK_ATT_TORIGHT	interfaces/track.h	207;"	d
TRK_ATT_TOSTART	interfaces/track.h	208;"	d
TRK_ATT_TSTEP	interfaces/track.h	86;"	d
TRK_ATT_TYPE	interfaces/track.h	139;"	d
TRK_ATT_VERSION	interfaces/track.h	49;"	d
TRK_ATT_VSPACE	interfaces/track.h	82;"	d
TRK_ATT_WIDTH	interfaces/track.h	46;"	d
TRK_ATT_ZE	interfaces/track.h	153;"	d
TRK_ATT_ZEL	interfaces/track.h	156;"	d
TRK_ATT_ZER	interfaces/track.h	157;"	d
TRK_ATT_ZS	interfaces/track.h	152;"	d
TRK_ATT_ZSL	interfaces/track.h	154;"	d
TRK_ATT_ZSR	interfaces/track.h	155;"	d
TRK_IDENT	interfaces/track.h	40;"	d
TRK_LST_CAM	interfaces/track.h	620;"	d
TRK_LST_ENV	interfaces/track.h	63;"	d
TRK_LST_SEG	interfaces/track.h	630;"	d
TRK_LST_SEGMENTS	interfaces/track.h	138;"	d
TRK_LST_SURF	interfaces/track.h	619;"	d
TRK_SECT_CAM	interfaces/track.h	204;"	d
TRK_SECT_GRAPH	interfaces/track.h	54;"	d
TRK_SECT_HDR	interfaces/track.h	44;"	d
TRK_SECT_LBARRIER	interfaces/track.h	189;"	d
TRK_SECT_LBORDER	interfaces/track.h	187;"	d
TRK_SECT_LSIDE	interfaces/track.h	185;"	d
TRK_SECT_MAIN	interfaces/track.h	137;"	d
TRK_SECT_OBJECTS	interfaces/track.h	108;"	d
TRK_SECT_OBJMAP	interfaces/track.h	106;"	d
TRK_SECT_PITS	interfaces/track.h	175;"	d
TRK_SECT_RBARRIER	interfaces/track.h	190;"	d
TRK_SECT_RBORDER	interfaces/track.h	188;"	d
TRK_SECT_RSIDE	interfaces/track.h	186;"	d
TRK_SECT_SURFACES	interfaces/track.h	107;"	d
TRK_SECT_TERRAIN	interfaces/track.h	84;"	d
TRK_SECT_TURNMARKS	interfaces/track.h	80;"	d
TRK_VAL_ASPHALT	interfaces/track.h	213;"	d
TRK_VAL_BARRIER	interfaces/track.h	218;"	d
TRK_VAL_CCLOCK	interfaces/track.h	91;"	d
TRK_VAL_CLOCK	interfaces/track.h	90;"	d
TRK_VAL_CONCRETE	interfaces/track.h	214;"	d
TRK_VAL_CURB	interfaces/track.h	200;"	d
TRK_VAL_DIRT	interfaces/track.h	217;"	d
TRK_VAL_FENCE	interfaces/track.h	201;"	d
TRK_VAL_GRASS	interfaces/track.h	215;"	d
TRK_VAL_LEVEL	interfaces/track.h	224;"	d
TRK_VAL_LFT	interfaces/track.h	145;"	d
TRK_VAL_LINEAR	interfaces/track.h	220;"	d
TRK_VAL_NO	interfaces/track.h	135;"	d
TRK_VAL_PIT_TYPE_NONE	interfaces/track.h	666;"	d
TRK_VAL_PIT_TYPE_SEP_PATH	interfaces/track.h	668;"	d
TRK_VAL_PIT_TYPE_SIDE	interfaces/track.h	667;"	d
TRK_VAL_PLAN	interfaces/track.h	198;"	d
TRK_VAL_RGT	interfaces/track.h	146;"	d
TRK_VAL_SAND	interfaces/track.h	216;"	d
TRK_VAL_SPLINE	interfaces/track.h	221;"	d
TRK_VAL_STR	interfaces/track.h	144;"	d
TRK_VAL_TANGENT	interfaces/track.h	223;"	d
TRK_VAL_WALL	interfaces/track.h	199;"	d
TRK_VAL_YES	interfaces/track.h	134;"	d
TRUE	tools/accc/accc.h	29;"	d
TRUE	windows/include/plib/ul.h	174;"	d
TRUNC	libs/tgf/profiler.cpp	122;"	d	file:
TR_CS	interfaces/track.h	354;"	d
TR_CURB	interfaces/track.h	311;"	d
TR_EL	interfaces/track.h	335;"	d
TR_ER	interfaces/track.h	336;"	d
TR_FENCE	interfaces/track.h	313;"	d
TR_LAST	interfaces/track.h	378;"	d
TR_LBORDER	interfaces/track.h	300;"	d
TR_LFT	interfaces/track.h	287;"	d
TR_LPOS_MAIN	interfaces/track.h	428;"	d
TR_LPOS_SEGMENT	interfaces/track.h	429;"	d
TR_LPOS_TRACK	interfaces/track.h	430;"	d
TR_LSIDE	interfaces/track.h	298;"	d
TR_MAIN	interfaces/track.h	297;"	d
TR_NORMAL	interfaces/track.h	377;"	d
TR_PIT	interfaces/track.h	384;"	d
TR_PITBUILDING	interfaces/track.h	314;"	d
TR_PITEND	interfaces/track.h	386;"	d
TR_PITENTRY	interfaces/track.h	382;"	d
TR_PITEXIT	interfaces/track.h	383;"	d
TR_PITLANE	interfaces/track.h	380;"	d
TR_PITSTART	interfaces/track.h	385;"	d
TR_PIT_MAXCARPERPIT	interfaces/track.h	446;"	d
TR_PIT_NONE	interfaces/track.h	460;"	d
TR_PIT_ON_SEPARATE_PATH	interfaces/track.h	462;"	d
TR_PIT_ON_TRACK_SIDE	interfaces/track.h	461;"	d
TR_PIT_STATE_FREE	interfaces/track.h	445;"	d
TR_PLAN	interfaces/track.h	310;"	d
TR_RBORDER	interfaces/track.h	301;"	d
TR_RGT	interfaces/track.h	286;"	d
TR_RSIDE	interfaces/track.h	299;"	d
TR_SIDE_LFT	interfaces/track.h	404;"	d
TR_SIDE_RGT	interfaces/track.h	405;"	d
TR_SL	interfaces/track.h	333;"	d
TR_SPEEDLIMIT	interfaces/track.h	381;"	d
TR_SR	interfaces/track.h	334;"	d
TR_START	interfaces/track.h	379;"	d
TR_STR	interfaces/track.h	288;"	d
TR_TOLEFT	interfaces/track.h	416;"	d
TR_TOMIDDLE	interfaces/track.h	415;"	d
TR_TORIGHT	interfaces/track.h	414;"	d
TR_WALL	interfaces/track.h	312;"	d
TR_XE	interfaces/track.h	353;"	d
TR_XS	interfaces/track.h	352;"	d
TR_YL	interfaces/track.h	350;"	d
TR_YR	interfaces/track.h	351;"	d
TR_ZE	interfaces/track.h	349;"	d
TR_ZS	interfaces/track.h	348;"	d
TSTX	modules/track/track3.cpp	32;"	d	file:
TSTX	modules/track/track4.cpp	38;"	d	file:
TSTY	modules/track/track3.cpp	36;"	d	file:
TSTY	modules/track/track4.cpp	43;"	d	file:
TSTZ	modules/track/track3.cpp	40;"	d	file:
TSTZ	modules/track/track4.cpp	48;"	d	file:
TURNSPEED	drivers/berniw/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar	file:
TURNSPEED	drivers/berniw/mycar.h	/^		static const double TURNSPEED;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar
TURNSPEED	drivers/berniw2/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar	file:
TURNSPEED	drivers/berniw2/mycar.h	/^		static const double TURNSPEED;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar
TURNSPEED	drivers/berniw3/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar	file:
TURNSPEED	drivers/berniw3/mycar.h	/^		static const double TURNSPEED;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar
TURNSPEED	drivers/human/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar	file:
TURNSPEED	drivers/human/mycar.h	/^		static const double TURNSPEED;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar
TURNSPEED	drivers/inferno/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;				\/\/ if speed lower than this you can back up [m\/s].$/;"	m	class:MyCar	file:
TURNSPEED	drivers/inferno/mycar.h	/^		static const double TURNSPEED;				\/\/ If speed lower than this you can back up [m\/s].$/;"	m	class:MyCar
TURNSPEED	drivers/lliaw/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;				\/\/ if speed lower than this you can back up [m\/s].$/;"	m	class:MyCar	file:
TURNSPEED	drivers/lliaw/mycar.h	/^		static const double TURNSPEED;				\/\/ If speed lower than this you can back up [m\/s].$/;"	m	class:MyCar
TURNSPEED	drivers/tita/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;				\/\/ if speed lower than this you can back up [m\/s].$/;"	m	class:MyCar	file:
TURNSPEED	drivers/tita/mycar.h	/^		static const double TURNSPEED;				\/\/ If speed lower than this you can back up [m\/s].$/;"	m	class:MyCar
TURNTOL	drivers/berniw/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;				\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar	file:
TURNTOL	drivers/berniw/mycar.h	/^		static const double TURNTOL;			\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar
TURNTOL	drivers/berniw2/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;				\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar	file:
TURNTOL	drivers/berniw2/mycar.h	/^		static const double TURNTOL;			\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar
TURNTOL	drivers/berniw3/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;				\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar	file:
TURNTOL	drivers/berniw3/mycar.h	/^		static const double TURNTOL;			\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar
TURNTOL	drivers/human/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;				\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar	file:
TURNTOL	drivers/human/mycar.h	/^		static const double TURNTOL;			\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar
TURNTOL	drivers/inferno/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;					\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar	file:
TURNTOL	drivers/inferno/mycar.h	/^		static const double TURNTOL;				\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar
TURNTOL	drivers/lliaw/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;					\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar	file:
TURNTOL	drivers/lliaw/mycar.h	/^		static const double TURNTOL;				\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar
TURNTOL	drivers/tita/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;					\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar	file:
TURNTOL	drivers/tita/mycar.h	/^		static const double TURNTOL;				\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar
TWO_PI	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar TWO_PI =        6.28318530717958623200;$/;"	v
T_current	modules/simu/simuv3/wheel.h	/^    tdble   T_current;      \/* Temperature *\/$/;"	m	struct:__anon33
T_operating	modules/simu/simuv3/wheel.h	/^    tdble   T_operating;    \/* Operating temperature *\/$/;"	m	struct:__anon33
T_range	modules/simu/simuv3/wheel.h	/^    tdble   T_range;$/;"	m	struct:__anon33
Tag	modules/graphic/ssggraph/grloadac.cpp	/^struct Tag$/;"	s	file:
TagType	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  enum TagType { LEAF, INTERNAL };$/;"	g	class:BBoxNode
TargetSpeed	drivers/inferno2/inferno2.cpp	/^static tdble	TargetSpeed;$/;"	v	file:
Tex	libs/tgfclient/guifont.h	/^    uint Tex;$/;"	m	struct:__anon137
TexHeight	libs/tgfclient/guifont.h	/^    int TexWidth, TexHeight;$/;"	m	struct:__anon137
TexName	tools/trackgen/easymesh.cpp	/^static const char	*TexName;$/;"	v	file:
TexPage	tools/nfs2ac/mainnfs2ac.cpp	/^    int    TexPage;$/;"	m	struct:__anon58	file:
TexRand	tools/trackgen/easymesh.cpp	/^static tdble	TexRand;$/;"	v	file:
TexSize	tools/trackgen/easymesh.cpp	/^static tdble	TexSize;$/;"	v	file:
TexWidth	libs/tgfclient/guifont.h	/^    int TexWidth, TexHeight;$/;"	m	struct:__anon137
TextureCompressOptionId	libs/confscreens/openglconfig.cpp	/^static int TextureCompressOptionId;$/;"	v	file:
TextureSizeOptionId	libs/confscreens/openglconfig.cpp	/^static int TextureSizeOptionId;$/;"	v	file:
TheBackground	modules/graphic/ssggraph/grscene.cpp	/^static ssgRoot *TheBackground = 0;$/;"	v	file:
ThePits	modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *ThePits = 0;$/;"	v
TheScene	modules/graphic/ssggraph/grscene.cpp	/^ssgRoot *TheScene = 0;$/;"	v
ThedispCam	modules/graphic/ssggraph/grscreen.cpp	/^static class cGrPerspCamera *ThedispCam;	\/* the display camera *\/$/;"	v	typeref:class:cGrPerspCamera	file:
Tlm	modules/telemetry/telemetry.cpp	/^typedef struct Tlm$/;"	s	file:
TlmData	modules/telemetry/telemetry.cpp	/^static tTlm	TlmData;$/;"	v	file:
TlmInit	modules/telemetry/telemetry.cpp	/^TlmInit(tdble ymin, tdble ymax)$/;"	f
TlmNewChannel	modules/telemetry/telemetry.cpp	/^TlmNewChannel(const char *name, tdble *var, tdble min, tdble max)$/;"	f
TlmShutdown	modules/telemetry/telemetry.cpp	/^TlmShutdown(void)$/;"	f
TlmStartMonitoring	modules/telemetry/telemetry.cpp	/^TlmStartMonitoring(const char *filename)$/;"	f
TlmStopMonitoring	modules/telemetry/telemetry.cpp	/^TlmStopMonitoring(void)$/;"	f
TlmUpdate	modules/telemetry/telemetry.cpp	/^TlmUpdate(double time)$/;"	f
ToString	labview/socket.cpp	/^string ToString(T val)$/;"	f
ToString	predictor/main.cpp	/^string ToString(T val) {$/;"	f
ToString	yunseok/tcp_client_2.cpp	/^string ToString(T val) {$/;"	f
TorcsControlMenuInit	libs/confscreens/controlconfig.cpp	/^void * TorcsControlMenuInit(void *prevMenu, int idx)$/;"	f
TorcsDriverMenuInit	libs/confscreens/driverconfig.cpp	/^TorcsDriverMenuInit(void *prevMenu)$/;"	f
TorcsEntry	libs/client/entry.cpp	/^TorcsEntry(void)$/;"	f
TorcsExitMenuInit	libs/client/exitmenu.cpp	/^void * TorcsExitMenuInit(void *menu)$/;"	f
TorcsMainExitMenuInit	libs/client/exitmenu.cpp	/^void * TorcsMainExitMenuInit(void *mainMenu)$/;"	f
TorcsMainMenuActivate	libs/client/mainmenu.cpp	/^TorcsMainMenuActivate(void * \/* dummy *\/)$/;"	f	file:
TorcsMainMenuInit	libs/client/mainmenu.cpp	/^TorcsMainMenuInit(void)$/;"	f
TorcsMainMenuRun	libs/client/mainmenu.cpp	/^TorcsMainMenuRun(void)$/;"	f
TorcsOptionOptionInit	libs/client/optionmenu.cpp	/^TorcsOptionOptionInit(void *precMenu)$/;"	f
TorcsSound	modules/graphic/ssggraph/TorcsSound.h	/^	TorcsSound(int flags = (ACTIVE_VOLUME|ACTIVE_PITCH)):$/;"	f	class:TorcsSound
TorcsSound	modules/graphic/ssggraph/TorcsSound.h	/^class TorcsSound {$/;"	c
Tq	modules/simu/simuv2/brake.h	/^    tdble	Tq;$/;"	m	struct:__anon7
Tq	modules/simu/simuv2/differential.h	/^    tdble	Tq;$/;"	m	struct:__anon9
Tq	modules/simu/simuv2/engine.h	/^    tdble		Tq;	\/* output torque *\/$/;"	m	struct:__anon19
Tq	modules/simu/simuv3/brake.h	/^    tdble	Tq;$/;"	m	struct:__anon29
Tq	modules/simu/simuv3/differential.h	/^    tdble	Tq;$/;"	m	struct:__anon31
Tq	modules/simu/simuv3/engine.h	/^    tdble		Tq;	\/* output torque *\/$/;"	m	struct:__anon38
Tq	modules/simu/simuv3/engine.h	/^    tdble Tq;$/;"	m	struct:__anon36
TqAtMaxPw	modules/simu/simuv2/engine.h	/^	tdble       TqAtMaxPw;$/;"	m	struct:__anon18
TqAtMaxPw	modules/simu/simuv3/engine.h	/^	tdble       TqAtMaxPw;$/;"	m	struct:__anon37
Track	tools/trackgen/maintrackgen.cpp	/^tTrack *Track;$/;"	v
TrackACFilePath	tools/trackgen/maintrackgen.cpp	/^char *TrackACFilePath;	\/\/ Full path to track AC output file to write into (mainly for unittests)$/;"	v
TrackBuildEx	modules/track/track.cpp	/^TrackBuildEx(char *trackfile)$/;"	f
TrackBuildv1	modules/track/track.cpp	/^TrackBuildv1(char *trackfile)$/;"	f
TrackCategory	tools/trackgen/maintrackgen.cpp	/^char *TrackCategory;$/;"	v
TrackData	drivers/olethros/TrackData.cpp	/^TrackData::TrackData()$/;"	f	class:TrackData
TrackData	drivers/olethros/TrackData.h	/^class TrackData$/;"	c
TrackDesc	drivers/berniw/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	drivers/berniw/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	drivers/berniw2/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	drivers/berniw2/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	drivers/berniw3/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	drivers/berniw3/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	drivers/human/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	drivers/human/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	drivers/inferno/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	drivers/inferno/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	drivers/lliaw/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	drivers/lliaw/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	drivers/tita/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	drivers/tita/trackdesc.h	/^class TrackDesc$/;"	c
TrackGlobal2Local	modules/track/trackutil.cpp	/^TrackGlobal2Local(tTrackSeg *segment, tdble X, tdble Y, tTrkLocPos *p, int type)$/;"	f
TrackHandle	modules/track/track.cpp	/^static void	*TrackHandle;$/;"	v	file:
TrackHandle	tools/trackgen/maintrackgen.cpp	/^void *TrackHandle;$/;"	v
TrackHeightG	modules/track/trackutil.cpp	/^TrackHeightG(tTrackSeg *seg, tdble x, tdble y)$/;"	f
TrackHeightL	modules/track/trackutil.cpp	/^TrackHeightL(tTrkLocPos *p)$/;"	f
TrackItf	tools/trackgen/maintrackgen.cpp	/^tTrackItf TrackItf;$/;"	v
TrackLabelId	libs/racescreens/trackselect.cpp	/^static int TrackLabelId;$/;"	v	file:
TrackLocal2Global	modules/track/trackutil.cpp	/^TrackLocal2Global(tTrkLocPos *p, tdble *X, tdble *Y)$/;"	f
TrackName	tools/trackgen/maintrackgen.cpp	/^char *TrackName;$/;"	v
TrackOnly	tools/trackgen/maintrackgen.cpp	/^int TrackOnly;$/;"	v
TrackOwnPit	interfaces/track.h	/^typedef struct TrackOwnPit$/;"	s
TrackRoot	tools/trackgen/objects.cpp	/^static ssgRoot	*TrackRoot = NULL;$/;"	v	file:
TrackSegment	drivers/berniw/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	drivers/berniw/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	drivers/berniw2/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	drivers/berniw2/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	drivers/berniw3/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	drivers/berniw3/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	drivers/human/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	drivers/human/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	drivers/inferno/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	drivers/inferno/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	drivers/lliaw/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	drivers/lliaw/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	drivers/tita/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	drivers/tita/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment2D	drivers/inferno/trackdesc.cpp	/^TrackSegment2D::TrackSegment2D()$/;"	f	class:TrackSegment2D
TrackSegment2D	drivers/inferno/trackdesc.h	/^class TrackSegment2D$/;"	c
TrackSegment2D	drivers/lliaw/trackdesc.cpp	/^TrackSegment2D::TrackSegment2D()$/;"	f	class:TrackSegment2D
TrackSegment2D	drivers/lliaw/trackdesc.h	/^class TrackSegment2D$/;"	c
TrackSegment2D	drivers/tita/trackdesc.cpp	/^TrackSegment2D::TrackSegment2D()$/;"	f	class:TrackSegment2D
TrackSegment2D	drivers/tita/trackdesc.h	/^class TrackSegment2D$/;"	c
TrackShutdown	modules/track/track.cpp	/^TrackShutdown(void)$/;"	f
TrackSideNormal	modules/track/trackutil.cpp	/^TrackSideNormal(tTrackSeg *seg, tdble x, tdble y, int side, t3Dd *norm)$/;"	f
TrackSpline	modules/track/trackutil.cpp	/^TrackSpline(tdble p0, tdble p1, tdble t0, tdble t1, tdble t)$/;"	f
TrackStep	tools/trackgen/easymesh.cpp	/^static tdble	TrackStep;$/;"	v	file:
TrackStep	tools/trackgen/maintrackgen.cpp	/^float TrackStep = 5.0;$/;"	v
TrackStep	tools/trackgen/track.cpp	/^static tdble TrackStep;$/;"	v	file:
TrackSurfaceNormal	modules/track/trackutil.cpp	/^TrackSurfaceNormal(tTrkLocPos *p, t3Dd *norm)$/;"	f
TrackXMLFilePath	tools/trackgen/maintrackgen.cpp	/^char *TrackXMLFilePath; \/\/ Full path to track XML input file to read from (mainly for unittests)$/;"	v
Trajectory	drivers/olethros/Trajectory.h	/^class Trajectory$/;"	c
TransEditId	libs/confscreens/driverconfig.cpp	/^static int TransEditId;$/;"	v	file:
Transform	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Transform() {}$/;"	f	class:Transform
Transform	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Transform(const double m[16]) { setValue(m); }$/;"	f	class:Transform
Transform	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Transform(const float m[16]) { setValue(m); }$/;"	f	class:Transform
Transform	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^class Transform {$/;"	c
Transmission	drivers/human/human.h	/^	int		Transmission;$/;"	m	struct:HumanContext
Tright	drivers/inferno2/inferno2.cpp	/^tdble	Tright[10];$/;"	v
Trightprev	drivers/inferno2/inferno2.cpp	/^static tdble Trightprev[10];$/;"	v	file:
Tuple3	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Tuple3() {}$/;"	f	class:Tuple3
Tuple3	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Tuple3(Scalar x, Scalar y, Scalar z) { setValue(x, y, z); }$/;"	f	class:Tuple3
Tuple3	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Tuple3(const double v[3]) { setValue(v); }$/;"	f	class:Tuple3
Tuple3	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Tuple3(const float v[3]) { setValue(v); }$/;"	f	class:Tuple3
Tuple3	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^class Tuple3 {$/;"	c
Tuple4	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Tuple4() {}$/;"	f	class:Tuple4
Tuple4	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Tuple4(Scalar x, Scalar y, Scalar z, Scalar w) { setValue(x, y, z, w); }$/;"	f	class:Tuple4
Tuple4	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Tuple4(const double v[4]) { setValue(v); }$/;"	f	class:Tuple4
Tuple4	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Tuple4(const float v[4]) { setValue(v); }$/;"	f	class:Tuple4
Tuple4	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^class Tuple4 {$/;"	c
U1	tools/nfs2ac/mainnfs2ac.cpp	/^    float   U1;$/;"	m	struct:__anon58	file:
U2	tools/nfs2ac/mainnfs2ac.cpp	/^    float   U2 ;$/;"	m	struct:__anon58	file:
U3	tools/nfs2ac/mainnfs2ac.cpp	/^    float   U3;$/;"	m	struct:__anon58	file:
UCS2_GET_NAMING	libs/txml/xmltok.c	41;"	d	file:
UL_AGL	windows/include/plib/ul.h	127;"	d
UL_AIX	windows/include/plib/ul.h	85;"	d
UL_BEOS	windows/include/plib/ul.h	65;"	d
UL_BSD	windows/include/plib/ul.h	97;"	d
UL_CGL	windows/include/plib/ul.h	132;"	d
UL_CYGWIN	windows/include/plib/ul.h	56;"	d
UL_DEBUG	windows/include/plib/ul.h	/^  UL_DEBUG,    \/\/ Messages that can safely be ignored.$/;"	e	enum:ulSeverity
UL_FATAL	windows/include/plib/ul.h	/^  UL_FATAL,    \/\/ Errors that we cannot recover from.$/;"	e	enum:ulSeverity
UL_GLX	windows/include/plib/ul.h	121;"	d
UL_GLX	windows/include/plib/ul.h	139;"	d
UL_GLX	windows/include/plib/ul.h	144;"	d
UL_HPUX	windows/include/plib/ul.h	93;"	d
UL_IRIX	windows/include/plib/ul.h	81;"	d
UL_LINUX	windows/include/plib/ul.h	77;"	d
UL_MACINTOSH	windows/include/plib/ul.h	69;"	d
UL_MAC_OSX	windows/include/plib/ul.h	73;"	d
UL_MAX_SEVERITY	windows/include/plib/ul.h	/^  UL_MAX_SEVERITY$/;"	e	enum:ulSeverity
UL_MSVC	windows/include/plib/ul.h	61;"	d
UL_NAME_MAX	windows/include/plib/ul.h	301;"	d
UL_SOLARIS	windows/include/plib/ul.h	89;"	d
UL_WARNING	windows/include/plib/ul.h	/^  UL_WARNING,  \/\/ Messages that are important.$/;"	e	enum:ulSeverity
UL_WGL	windows/include/plib/ul.h	111;"	d
UL_WGL	windows/include/plib/ul.h	116;"	d
UL_WIN32	windows/include/plib/ul.h	55;"	d
UL_WIN32	windows/include/plib/ul.h	60;"	d
UNALIGNED_OK	windows/include/zconf.h	164;"	d
UNSTUCK_TIME_LIMIT	drivers/bt/driver.cpp	/^const float Driver::UNSTUCK_TIME_LIMIT = 2.0f;				\/\/ [s] We try to get unstuck after this time.$/;"	m	class:Driver	file:
UNSTUCK_TIME_LIMIT	drivers/bt/driver.h	/^		static const float UNSTUCK_TIME_LIMIT;$/;"	m	class:Driver
UNSTUCK_TIME_LIMIT	drivers/damned/driver.cpp	/^const float Driver::UNSTUCK_TIME_LIMIT = 2.0f;				\/\/ [s] We try to get unstuck after this time.$/;"	m	class:Driver	file:
UNSTUCK_TIME_LIMIT	drivers/damned/driver.h	/^		static const float UNSTUCK_TIME_LIMIT;$/;"	m	class:Driver
UNSTUCK_TIME_LIMIT	drivers/olethros/driver.cpp	/^    const float Driver::UNSTUCK_TIME_LIMIT = 2.0f;				\/\/\/< [s] We try to get unstuck after this time.$/;"	m	class:olethros::Driver	file:
UNSTUCK_TIME_LIMIT	drivers/olethros/driver.h	/^	static const float UNSTUCK_TIME_LIMIT;$/;"	m	class:olethros::Driver
UNSTUCK_TIME_LIMIT	drivers/sparkle/driver.cpp	/^const float Driver::UNSTUCK_TIME_LIMIT = 2.0;				\/* [s] *\/$/;"	m	class:Driver	file:
UNSTUCK_TIME_LIMIT	drivers/sparkle/driver.h	/^		static const float UNSTUCK_TIME_LIMIT;$/;"	m	class:Driver
USE_FAR_KEYWORD	windows/include/pngconf.h	483;"	d
USE_FAR_KEYWORD	windows/include/pngconf.h	502;"	d
USE_LEARNED_OFFSET_RANGE	drivers/bt/driver.cpp	/^const float Driver::USE_LEARNED_OFFSET_RANGE = 0.2f;		\/\/ [m] if offset < this use the learned stuff$/;"	m	class:Driver	file:
USE_LEARNED_OFFSET_RANGE	drivers/bt/driver.h	/^		static const float USE_LEARNED_OFFSET_RANGE;$/;"	m	class:Driver
USE_LEARNED_OFFSET_RANGE	drivers/damned/driver.cpp	/^const float Driver::USE_LEARNED_OFFSET_RANGE = 0.2f;		\/\/ [m] if offset < this use the learned stuff$/;"	m	class:Driver	file:
USE_LEARNED_OFFSET_RANGE	drivers/damned/driver.h	/^		static const float USE_LEARNED_OFFSET_RANGE;$/;"	m	class:Driver
USE_LEARNED_OFFSET_RANGE	drivers/olethros/driver.cpp	/^    const float Driver::USE_LEARNED_OFFSET_RANGE = 0.2f;			\/\/\/< [m] if offset < this use the learned stuff$/;"	m	class:olethros::Driver	file:
USE_LEARNED_OFFSET_RANGE	drivers/olethros/driver.h	/^	static const float USE_LEARNED_OFFSET_RANGE;$/;"	m	class:olethros::Driver
USE_NEW_ALPHA	drivers/olethros/driver.cpp	/^    const bool Driver::USE_NEW_ALPHA=false;  \/\/\/< Use actual trajectory..$/;"	m	class:olethros::Driver	file:
USE_NEW_ALPHA	drivers/olethros/driver.h	/^	static const bool USE_NEW_ALPHA;$/;"	m	class:olethros::Driver
USE_OPENAL	modules/graphic/ssggraph/SoundInterface.h	23;"	d
USE_OPENAL_DOPPLER	modules/graphic/ssggraph/OpenalSoundInterface.cpp	26;"	d	file:
USE_THICKNESS	modules/simu/simuv3/wheel.h	25;"	d
UTF8_GET_NAMING	libs/txml/xmltok.c	66;"	d	file:
UTF8_GET_NAMING2	libs/txml/xmltok.c	48;"	d	file:
UTF8_GET_NAMING3	libs/txml/xmltok.c	58;"	d	file:
UTF8_INVALID3	libs/txml/xmltok.c	73;"	d	file:
UTF8_INVALID4	libs/txml/xmltok.c	80;"	d	file:
UTF8_cval1	libs/txml/xmltok.c	/^  UTF8_cval1 = 0x00,$/;"	e	enum:__anon120	file:
UTF8_cval2	libs/txml/xmltok.c	/^  UTF8_cval2 = 0xc0,$/;"	e	enum:__anon120	file:
UTF8_cval3	libs/txml/xmltok.c	/^  UTF8_cval3 = 0xe0,$/;"	e	enum:__anon120	file:
UTF8_cval4	libs/txml/xmltok.c	/^  UTF8_cval4 = 0xf0$/;"	e	enum:__anon120	file:
Uchar	windows/include/plib/sl.h	/^typedef unsigned char  Uchar  ;$/;"	t
Uchar	windows/include/plib/sm.h	/^typedef unsigned char  Uchar  ;$/;"	t
UniformDistribution	libs/learning/Distribution.h	/^	UniformDistribution() {m=0.0; s=1.0;}$/;"	f	class:UniformDistribution
UniformDistribution	libs/learning/Distribution.h	/^	UniformDistribution(real mean, real std)$/;"	f	class:UniformDistribution
UniformDistribution	libs/learning/Distribution.h	/^class UniformDistribution : public ParametricDistribution {$/;"	c
UpdateTxTy	tools/trackgen/raceline.cpp	/^static void UpdateTxTy(int i)$/;"	f	file:
UpdtScrollList	libs/confscreens/driverconfig.cpp	/^UpdtScrollList(void)$/;"	f	file:
UseBorder	tools/trackgen/maintrackgen.cpp	/^int	UseBorder = 1;$/;"	v
Ushort	windows/include/plib/sl.h	/^typedef unsigned short Ushort ;$/;"	t
Ushort	windows/include/plib/sm.h	/^typedef unsigned short Ushort ;$/;"	t
V	topview/Camera.hpp	/^	kmuvcl::math::mat4x4f V;$/;"	m	class:kmuvcl::Camera
V1	tools/nfs2ac/mainnfs2ac.cpp	/^    float   V1;$/;"	m	struct:__anon58	file:
V2	tools/nfs2ac/mainnfs2ac.cpp	/^    float   V2;$/;"	m	struct:__anon58	file:
V3	tools/nfs2ac/mainnfs2ac.cpp	/^    float   V3;$/;"	m	struct:__anon58	file:
VAL_DIFF_FREE	interfaces/car.h	604;"	d
VAL_DIFF_LIMITED_SLIP	interfaces/car.h	605;"	d
VAL_DIFF_NONE	interfaces/car.h	602;"	d
VAL_DIFF_SPOOL	interfaces/car.h	603;"	d
VAL_DIFF_VISCOUS_COUPLER	interfaces/car.h	606;"	d
VAL_LIGHT_BRAKE	interfaces/car.h	652;"	d
VAL_LIGHT_BRAKE2	interfaces/car.h	653;"	d
VAL_LIGHT_HEAD1	interfaces/car.h	650;"	d
VAL_LIGHT_HEAD2	interfaces/car.h	651;"	d
VAL_LIGHT_REAR	interfaces/car.h	655;"	d
VAL_LIGHT_REVERSE	interfaces/car.h	654;"	d
VAL_TRANS_4WD	interfaces/car.h	610;"	d
VAL_TRANS_FWD	interfaces/car.h	609;"	d
VAL_TRANS_RWD	interfaces/car.h	608;"	d
VARBUFSIZE	libs/raceengineclient/racemanmenu.cpp	/^const int VARBUFSIZE = 1024;$/;"	v
VGAIN	drivers/inferno2/inferno2.cpp	228;"	d	file:
VGain	drivers/inferno2/inferno2.cpp	/^static tdble VGain[10]     = {0.0005f};$/;"	v	file:
VI	drivers/inferno2/common.cpp	/^static tdble VI[10];$/;"	v	file:
VIRTUAL_BUFFER_SIZE	windows/include/plib/sl.h	99;"	d
VISCOUS_COUPLER	interfaces/car.h	/^		NONE = 0, SPOOL = 1, FREE = 2, LIMITED_SLIP = 3, VISCOUS_COUPLER = 4$/;"	e	enum:__anon83::TDiffType
VInit	libs/tgfclient/screen.cpp	/^static const char *VInit[] = {GFSCR_VAL_VINIT_COMPATIBLE, GFSCR_VAL_VINIT_BEST};$/;"	v	file:
VInitLabelId	libs/tgfclient/screen.cpp	/^static int VInitLabelId;$/;"	v	file:
VInitPrevNext	libs/tgfclient/screen.cpp	/^VInitPrevNext(void *vdelta)$/;"	f	file:
VM	drivers/inferno2/inferno2.cpp	/^tdble VM;$/;"	v
VM1	drivers/inferno2/inferno2.cpp	/^tdble VM1[10] = {15.0};$/;"	v
VM2	drivers/inferno2/inferno2.cpp	/^tdble VM2[10] = {0.0};$/;"	v
VM3	drivers/inferno2/inferno2.cpp	/^tdble VM3[10] = {25.0};$/;"	v
VMAX1	drivers/inferno2/inferno2.cpp	244;"	d	file:
VMAX2	drivers/inferno2/inferno2.cpp	245;"	d	file:
VMAX3	drivers/inferno2/inferno2.cpp	246;"	d	file:
VOLUME_CUTOFF	modules/graphic/ssggraph/SoundInterface.h	49;"	d
VOLUME_SLOT	modules/graphic/ssggraph/TorcsSound.h	23;"	d
VTABLE	libs/txml/xmltok.c	39;"	d	file:
VTABLE1	libs/txml/xmltok.c	26;"	d	file:
VTXARRAY_GUIONS	modules/graphic/ssggraph/grloadac.cpp	928;"	d	file:
VTX_INCR	tools/trackgen/easymesh.cpp	142;"	d	file:
VX_INIT	modules/graphic/ssggraph/grsmoke.h	10;"	d
VY_INIT	modules/graphic/ssggraph/grsmoke.h	9;"	d
VZ_INIT	modules/graphic/ssggraph/grsmoke.h	8;"	d
V_EXPANSION	modules/graphic/ssggraph/grsmoke.h	11;"	d
ValStyle	modules/track/track3.cpp	/^static const char *ValStyle[4] = {TRK_VAL_PLAN, TRK_VAL_WALL, TRK_VAL_CURB, TRK_VAL_FENCE};$/;"	v	file:
ValStyle	modules/track/track4.cpp	/^static const char *ValStyle[] = {TRK_VAL_PLAN, TRK_VAL_CURB, TRK_VAL_WALL, TRK_VAL_FENCE, TRK_VAL_FENCE}; \/\/ TODO: TRK_VAL_FENCE 2 times, remove?$/;"	v	file:
Vector	drivers/olethros/geometry.cpp	/^Vector::Vector (const Vector& rhs)$/;"	f	class:Vector
Vector	drivers/olethros/geometry.cpp	/^Vector::Vector(int N_, enum BoundsCheckingStatus check)$/;"	f	class:Vector
Vector	drivers/olethros/geometry.h	/^class Vector$/;"	c
Vector	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^  Vector() {}$/;"	f	class:Vector
Vector	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^  Vector(Scalar x, Scalar y, Scalar z) : Tuple3(x, y, z) {}$/;"	f	class:Vector
Vector	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^  Vector(const double v[3]) : Tuple3(v) {}$/;"	f	class:Vector
Vector	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^  Vector(const float v[3]) : Tuple3(v) {}$/;"	f	class:Vector
Vector	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^class Vector : public Tuple3 {$/;"	c
VelColl	modules/simu/simuv2/carstruct.h	/^    tPosd	VelColl;	\/* resulting velocity after collision *\/$/;"	m	struct:__anon23
VelColl	modules/simu/simuv3/carstruct.h	/^    tPosd	VelColl;	\/* resulting velocity after collision *\/$/;"	m	struct:__anon42
VertexBase	modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  VertexBase() : base(0) {}$/;"	f	class:VertexBase
VertexBase	modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  VertexBase(const Point *ptr) : base(ptr) {}$/;"	f	class:VertexBase
VertexBase	modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^class VertexBase {$/;"	c
ViewGroup	modules/graphic/ssggraph/grscene.h	/^  GHashTable * ViewGroup;      \/* all object to display group1+group2+group3 for this segment *\/$/;"	m	struct:DistanceOfViewHashing
ViewGroupMap1_num	modules/graphic/ssggraph/grscene.h	/^  int ViewGroupMap1_num;$/;"	m	struct:DistanceOfViewHashing
ViewGroupMap2_num	modules/graphic/ssggraph/grscene.h	/^  int ViewGroupMap2_num;$/;"	m	struct:DistanceOfViewHashing
ViewGroupMap3_num	modules/graphic/ssggraph/grscene.h	/^  int ViewGroupMap3_num;$/;"	m	struct:DistanceOfViewHashing
ViewGroup_num	modules/graphic/ssggraph/grscene.h	/^  int ViewGroup_num;           \/* number of object *\/$/;"	m	struct:DistanceOfViewHashing
ViewH	libs/tgfclient/gui.cpp	/^static int	ScrW, ScrH, ViewW, ViewH;$/;"	v	file:
ViewW	libs/tgfclient/gui.cpp	/^static int	ScrW, ScrH, ViewW, ViewH;$/;"	v	file:
VolumeValue	libs/confscreens/soundconfig.cpp	/^static float VolumeValue = 100.0f;$/;"	v	file:
Vtarget	drivers/human/human.cpp	/^static tdble Vtarget;$/;"	v	file:
W	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon13
W	predictor/predict.py	/^W = tf.Variable(tf.zeros([DATA_SIZE, LABEL_NUM]))$/;"	v
W	predictor/train.py	/^W = tf.Variable(tf.zeros([DATA_SIZE, LABEL_NUM]))$/;"	v
W	predictor/train2.py	/^W = tf.Variable(tf.zeros([DATA_SIZE, LABEL_NUM]))$/;"	v
W	tools/trackgen/easymesh.cpp	57;"	d	file:
W	windows/include/vorbis/codec.h	/^  long  W;$/;"	m	struct:vorbis_block
W	windows/include/vorbis/codec.h	/^  long W;$/;"	m	struct:vorbis_dsp_state
WAIT	tools/trackgen/easymesh.cpp	54;"	d	file:
WALL_HIT_TIME_INVALIDATE	interfaces/raceman.h	/^		WALL_HIT_TIME_INVALIDATE = 2,$/;"	e	enum:RmRaceRules::RmRuleFlags
WGL_3DFX_multisample	windows/include/GL/wglext.h	497;"	d
WGL_ACCELERATION_ARB	windows/include/GL/wglext.h	78;"	d
WGL_ACCELERATION_EXT	windows/include/GL/wglext.h	190;"	d
WGL_ACCUM_ALPHA_BITS_ARB	windows/include/GL/wglext.h	112;"	d
WGL_ACCUM_ALPHA_BITS_EXT	windows/include/GL/wglext.h	220;"	d
WGL_ACCUM_BITS_ARB	windows/include/GL/wglext.h	108;"	d
WGL_ACCUM_BITS_EXT	windows/include/GL/wglext.h	216;"	d
WGL_ACCUM_BLUE_BITS_ARB	windows/include/GL/wglext.h	111;"	d
WGL_ACCUM_BLUE_BITS_EXT	windows/include/GL/wglext.h	219;"	d
WGL_ACCUM_GREEN_BITS_ARB	windows/include/GL/wglext.h	110;"	d
WGL_ACCUM_GREEN_BITS_EXT	windows/include/GL/wglext.h	218;"	d
WGL_ACCUM_RED_BITS_ARB	windows/include/GL/wglext.h	109;"	d
WGL_ACCUM_RED_BITS_EXT	windows/include/GL/wglext.h	217;"	d
WGL_ALPHA_BITS_ARB	windows/include/GL/wglext.h	106;"	d
WGL_ALPHA_BITS_EXT	windows/include/GL/wglext.h	214;"	d
WGL_ALPHA_SHIFT_ARB	windows/include/GL/wglext.h	107;"	d
WGL_ALPHA_SHIFT_EXT	windows/include/GL/wglext.h	215;"	d
WGL_ARB_buffer_region	windows/include/GL/wglext.h	333;"	d
WGL_ARB_extensions_string	windows/include/GL/wglext.h	351;"	d
WGL_ARB_make_current_read	windows/include/GL/wglext.h	371;"	d
WGL_ARB_multisample	windows/include/GL/wglext.h	347;"	d
WGL_ARB_pbuffer	windows/include/GL/wglext.h	381;"	d
WGL_ARB_pixel_format	windows/include/GL/wglext.h	359;"	d
WGL_ARB_pixel_format_float	windows/include/GL/wglext.h	409;"	d
WGL_ARB_render_texture	windows/include/GL/wglext.h	397;"	d
WGL_ATI_pixel_format_float	windows/include/GL/wglext.h	619;"	d
WGL_AUX0_ARB	windows/include/GL/wglext.h	166;"	d
WGL_AUX1_ARB	windows/include/GL/wglext.h	167;"	d
WGL_AUX2_ARB	windows/include/GL/wglext.h	168;"	d
WGL_AUX3_ARB	windows/include/GL/wglext.h	169;"	d
WGL_AUX4_ARB	windows/include/GL/wglext.h	170;"	d
WGL_AUX5_ARB	windows/include/GL/wglext.h	171;"	d
WGL_AUX6_ARB	windows/include/GL/wglext.h	172;"	d
WGL_AUX7_ARB	windows/include/GL/wglext.h	173;"	d
WGL_AUX8_ARB	windows/include/GL/wglext.h	174;"	d
WGL_AUX9_ARB	windows/include/GL/wglext.h	175;"	d
WGL_AUX_BUFFERS_ARB	windows/include/GL/wglext.h	115;"	d
WGL_AUX_BUFFERS_EXT	windows/include/GL/wglext.h	223;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	windows/include/GL/wglext.h	61;"	d
WGL_BACK_LEFT_ARB	windows/include/GL/wglext.h	164;"	d
WGL_BACK_RIGHT_ARB	windows/include/GL/wglext.h	165;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	windows/include/GL/wglext.h	293;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	windows/include/GL/wglext.h	294;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	windows/include/GL/wglext.h	315;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	windows/include/GL/wglext.h	314;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	windows/include/GL/wglext.h	313;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	windows/include/GL/wglext.h	312;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	windows/include/GL/wglext.h	302;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	windows/include/GL/wglext.h	301;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	windows/include/GL/wglext.h	144;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	windows/include/GL/wglext.h	143;"	d
WGL_BLUE_BITS_ARB	windows/include/GL/wglext.h	104;"	d
WGL_BLUE_BITS_EXT	windows/include/GL/wglext.h	212;"	d
WGL_BLUE_SHIFT_ARB	windows/include/GL/wglext.h	105;"	d
WGL_BLUE_SHIFT_EXT	windows/include/GL/wglext.h	213;"	d
WGL_COLOR_BITS_ARB	windows/include/GL/wglext.h	99;"	d
WGL_COLOR_BITS_EXT	windows/include/GL/wglext.h	207;"	d
WGL_CUBE_MAP_FACE_ARB	windows/include/GL/wglext.h	155;"	d
WGL_DEPTH_BITS_ARB	windows/include/GL/wglext.h	113;"	d
WGL_DEPTH_BITS_EXT	windows/include/GL/wglext.h	221;"	d
WGL_DEPTH_BUFFER_BIT_ARB	windows/include/GL/wglext.h	62;"	d
WGL_DEPTH_COMPONENT_NV	windows/include/GL/wglext.h	297;"	d
WGL_DEPTH_FLOAT_EXT	windows/include/GL/wglext.h	247;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	windows/include/GL/wglext.h	295;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	windows/include/GL/wglext.h	261;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	windows/include/GL/wglext.h	262;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	windows/include/GL/wglext.h	263;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	windows/include/GL/wglext.h	264;"	d
WGL_DOUBLE_BUFFER_ARB	windows/include/GL/wglext.h	96;"	d
WGL_DOUBLE_BUFFER_EXT	windows/include/GL/wglext.h	204;"	d
WGL_DRAW_TO_BITMAP_ARB	windows/include/GL/wglext.h	77;"	d
WGL_DRAW_TO_BITMAP_EXT	windows/include/GL/wglext.h	189;"	d
WGL_DRAW_TO_PBUFFER_ARB	windows/include/GL/wglext.h	132;"	d
WGL_DRAW_TO_PBUFFER_EXT	windows/include/GL/wglext.h	235;"	d
WGL_DRAW_TO_WINDOW_ARB	windows/include/GL/wglext.h	76;"	d
WGL_DRAW_TO_WINDOW_EXT	windows/include/GL/wglext.h	188;"	d
WGL_EXT_depth_float	windows/include/GL/wglext.h	483;"	d
WGL_EXT_display_color_table	windows/include/GL/wglext.h	413;"	d
WGL_EXT_extensions_string	windows/include/GL/wglext.h	427;"	d
WGL_EXT_make_current_read	windows/include/GL/wglext.h	435;"	d
WGL_EXT_multisample	windows/include/GL/wglext.h	501;"	d
WGL_EXT_pbuffer	windows/include/GL/wglext.h	445;"	d
WGL_EXT_pixel_format	windows/include/GL/wglext.h	461;"	d
WGL_EXT_swap_control	windows/include/GL/wglext.h	473;"	d
WGL_FLOAT_COMPONENTS_NV	windows/include/GL/wglext.h	311;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	windows/include/GL/wglext.h	60;"	d
WGL_FRONT_LEFT_ARB	windows/include/GL/wglext.h	162;"	d
WGL_FRONT_RIGHT_ARB	windows/include/GL/wglext.h	163;"	d
WGL_FULL_ACCELERATION_ARB	windows/include/GL/wglext.h	118;"	d
WGL_FULL_ACCELERATION_EXT	windows/include/GL/wglext.h	226;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	windows/include/GL/wglext.h	269;"	d
WGL_GAMMA_TABLE_SIZE_I3D	windows/include/GL/wglext.h	268;"	d
WGL_GENERIC_ACCELERATION_ARB	windows/include/GL/wglext.h	117;"	d
WGL_GENERIC_ACCELERATION_EXT	windows/include/GL/wglext.h	225;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	windows/include/GL/wglext.h	278;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	windows/include/GL/wglext.h	277;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	windows/include/GL/wglext.h	281;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	windows/include/GL/wglext.h	279;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	windows/include/GL/wglext.h	280;"	d
WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D	windows/include/GL/wglext.h	275;"	d
WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D	windows/include/GL/wglext.h	274;"	d
WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D	windows/include/GL/wglext.h	276;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	windows/include/GL/wglext.h	273;"	d
WGL_GREEN_BITS_ARB	windows/include/GL/wglext.h	102;"	d
WGL_GREEN_BITS_EXT	windows/include/GL/wglext.h	210;"	d
WGL_GREEN_SHIFT_ARB	windows/include/GL/wglext.h	103;"	d
WGL_GREEN_SHIFT_EXT	windows/include/GL/wglext.h	211;"	d
WGL_I3D_digital_video_control	windows/include/GL/wglext.h	523;"	d
WGL_I3D_gamma	windows/include/GL/wglext.h	533;"	d
WGL_I3D_genlock	windows/include/GL/wglext.h	547;"	d
WGL_I3D_image_buffer	windows/include/GL/wglext.h	577;"	d
WGL_I3D_swap_frame_lock	windows/include/GL/wglext.h	591;"	d
WGL_I3D_swap_frame_usage	windows/include/GL/wglext.h	605;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	windows/include/GL/wglext.h	286;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	windows/include/GL/wglext.h	285;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	windows/include/GL/wglext.h	135;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	windows/include/GL/wglext.h	238;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	windows/include/GL/wglext.h	133;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	windows/include/GL/wglext.h	236;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	windows/include/GL/wglext.h	134;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	windows/include/GL/wglext.h	237;"	d
WGL_MIPMAP_LEVEL_ARB	windows/include/GL/wglext.h	154;"	d
WGL_MIPMAP_TEXTURE_ARB	windows/include/GL/wglext.h	147;"	d
WGL_NEED_PALETTE_ARB	windows/include/GL/wglext.h	79;"	d
WGL_NEED_PALETTE_EXT	windows/include/GL/wglext.h	191;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	windows/include/GL/wglext.h	80;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	windows/include/GL/wglext.h	192;"	d
WGL_NO_ACCELERATION_ARB	windows/include/GL/wglext.h	116;"	d
WGL_NO_ACCELERATION_EXT	windows/include/GL/wglext.h	224;"	d
WGL_NO_TEXTURE_ARB	windows/include/GL/wglext.h	150;"	d
WGL_NUMBER_OVERLAYS_ARB	windows/include/GL/wglext.h	83;"	d
WGL_NUMBER_OVERLAYS_EXT	windows/include/GL/wglext.h	195;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	windows/include/GL/wglext.h	75;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	windows/include/GL/wglext.h	187;"	d
WGL_NUMBER_UNDERLAYS_ARB	windows/include/GL/wglext.h	84;"	d
WGL_NUMBER_UNDERLAYS_EXT	windows/include/GL/wglext.h	196;"	d
WGL_NV_float_buffer	windows/include/GL/wglext.h	623;"	d
WGL_NV_vertex_array_range	windows/include/GL/wglext.h	487;"	d
WGL_OML_sync_control	windows/include/GL/wglext.h	505;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	windows/include/GL/wglext.h	240;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	windows/include/GL/wglext.h	239;"	d
WGL_PBUFFER_HEIGHT_ARB	windows/include/GL/wglext.h	138;"	d
WGL_PBUFFER_HEIGHT_EXT	windows/include/GL/wglext.h	243;"	d
WGL_PBUFFER_LARGEST_ARB	windows/include/GL/wglext.h	136;"	d
WGL_PBUFFER_LARGEST_EXT	windows/include/GL/wglext.h	241;"	d
WGL_PBUFFER_LOST_ARB	windows/include/GL/wglext.h	139;"	d
WGL_PBUFFER_WIDTH_ARB	windows/include/GL/wglext.h	137;"	d
WGL_PBUFFER_WIDTH_EXT	windows/include/GL/wglext.h	242;"	d
WGL_PIXEL_TYPE_ARB	windows/include/GL/wglext.h	98;"	d
WGL_PIXEL_TYPE_EXT	windows/include/GL/wglext.h	206;"	d
WGL_RED_BITS_ARB	windows/include/GL/wglext.h	100;"	d
WGL_RED_BITS_EXT	windows/include/GL/wglext.h	208;"	d
WGL_RED_SHIFT_ARB	windows/include/GL/wglext.h	101;"	d
WGL_RED_SHIFT_EXT	windows/include/GL/wglext.h	209;"	d
WGL_SAMPLES_3DFX	windows/include/GL/wglext.h	252;"	d
WGL_SAMPLES_ARB	windows/include/GL/wglext.h	68;"	d
WGL_SAMPLES_EXT	windows/include/GL/wglext.h	257;"	d
WGL_SAMPLE_BUFFERS_3DFX	windows/include/GL/wglext.h	251;"	d
WGL_SAMPLE_BUFFERS_ARB	windows/include/GL/wglext.h	67;"	d
WGL_SAMPLE_BUFFERS_EXT	windows/include/GL/wglext.h	256;"	d
WGL_SHARE_ACCUM_ARB	windows/include/GL/wglext.h	93;"	d
WGL_SHARE_ACCUM_EXT	windows/include/GL/wglext.h	201;"	d
WGL_SHARE_DEPTH_ARB	windows/include/GL/wglext.h	91;"	d
WGL_SHARE_DEPTH_EXT	windows/include/GL/wglext.h	199;"	d
WGL_SHARE_STENCIL_ARB	windows/include/GL/wglext.h	92;"	d
WGL_SHARE_STENCIL_EXT	windows/include/GL/wglext.h	200;"	d
WGL_STENCIL_BITS_ARB	windows/include/GL/wglext.h	114;"	d
WGL_STENCIL_BITS_EXT	windows/include/GL/wglext.h	222;"	d
WGL_STENCIL_BUFFER_BIT_ARB	windows/include/GL/wglext.h	63;"	d
WGL_STEREO_ARB	windows/include/GL/wglext.h	97;"	d
WGL_STEREO_EXT	windows/include/GL/wglext.h	205;"	d
WGL_SUPPORT_GDI_ARB	windows/include/GL/wglext.h	94;"	d
WGL_SUPPORT_GDI_EXT	windows/include/GL/wglext.h	202;"	d
WGL_SUPPORT_OPENGL_ARB	windows/include/GL/wglext.h	95;"	d
WGL_SUPPORT_OPENGL_EXT	windows/include/GL/wglext.h	203;"	d
WGL_SWAP_COPY_ARB	windows/include/GL/wglext.h	120;"	d
WGL_SWAP_COPY_EXT	windows/include/GL/wglext.h	228;"	d
WGL_SWAP_EXCHANGE_ARB	windows/include/GL/wglext.h	119;"	d
WGL_SWAP_EXCHANGE_EXT	windows/include/GL/wglext.h	227;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	windows/include/GL/wglext.h	81;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	windows/include/GL/wglext.h	193;"	d
WGL_SWAP_METHOD_ARB	windows/include/GL/wglext.h	82;"	d
WGL_SWAP_METHOD_EXT	windows/include/GL/wglext.h	194;"	d
WGL_SWAP_UNDEFINED_ARB	windows/include/GL/wglext.h	121;"	d
WGL_SWAP_UNDEFINED_EXT	windows/include/GL/wglext.h	229;"	d
WGL_TEXTURE_1D_ARB	windows/include/GL/wglext.h	152;"	d
WGL_TEXTURE_2D_ARB	windows/include/GL/wglext.h	153;"	d
WGL_TEXTURE_CUBE_MAP_ARB	windows/include/GL/wglext.h	151;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	windows/include/GL/wglext.h	157;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	windows/include/GL/wglext.h	159;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	windows/include/GL/wglext.h	161;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	windows/include/GL/wglext.h	156;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	windows/include/GL/wglext.h	158;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	windows/include/GL/wglext.h	160;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	windows/include/GL/wglext.h	296;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	windows/include/GL/wglext.h	319;"	d
WGL_TEXTURE_FLOAT_RGB_NV	windows/include/GL/wglext.h	318;"	d
WGL_TEXTURE_FLOAT_RG_NV	windows/include/GL/wglext.h	317;"	d
WGL_TEXTURE_FLOAT_R_NV	windows/include/GL/wglext.h	316;"	d
WGL_TEXTURE_FORMAT_ARB	windows/include/GL/wglext.h	145;"	d
WGL_TEXTURE_RECTANGLE_NV	windows/include/GL/wglext.h	303;"	d
WGL_TEXTURE_RGBA_ARB	windows/include/GL/wglext.h	149;"	d
WGL_TEXTURE_RGB_ARB	windows/include/GL/wglext.h	148;"	d
WGL_TEXTURE_TARGET_ARB	windows/include/GL/wglext.h	146;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	windows/include/GL/wglext.h	89;"	d
WGL_TRANSPARENT_ARB	windows/include/GL/wglext.h	85;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	windows/include/GL/wglext.h	88;"	d
WGL_TRANSPARENT_EXT	windows/include/GL/wglext.h	197;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	windows/include/GL/wglext.h	87;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	windows/include/GL/wglext.h	90;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	windows/include/GL/wglext.h	86;"	d
WGL_TRANSPARENT_VALUE_EXT	windows/include/GL/wglext.h	198;"	d
WGL_TYPE_COLORINDEX_ARB	windows/include/GL/wglext.h	123;"	d
WGL_TYPE_COLORINDEX_EXT	windows/include/GL/wglext.h	231;"	d
WGL_TYPE_RGBA_ARB	windows/include/GL/wglext.h	122;"	d
WGL_TYPE_RGBA_EXT	windows/include/GL/wglext.h	230;"	d
WGL_TYPE_RGBA_FLOAT_ARB	windows/include/GL/wglext.h	179;"	d
WGL_TYPE_RGBA_FLOAT_ATI	windows/include/GL/wglext.h	307;"	d
WGL_WGLEXT_VERSION	windows/include/GL/wglext.h	57;"	d
WHEEL_SPEED	drivers/data_list.h	/^			POS_Y, 		SPEED_ERROR,		LATERAL, 	TARGET_WHEEL_SPEED, 	WHEEL_SPEED, 	$/;"	e	enum:sensing_data_name
WIDTH	drivers/data_list.h	/^			WIDTH, 		FUEL,			ENGINE_RPM, 	GEAR_RATIO, 		GEAR, 		$/;"	e	enum:sensing_data_name
WIDTHDIV	drivers/bt/driver.cpp	/^const float Driver::WIDTHDIV = 3.0f;						\/\/ [-] Defines the percentage of the track to use (2\/WIDTHDIV).$/;"	m	class:Driver	file:
WIDTHDIV	drivers/bt/driver.h	/^		static const float WIDTHDIV;$/;"	m	class:Driver
WIDTHDIV	drivers/damned/driver.cpp	/^const float Driver::WIDTHDIV = 3.0f;						\/\/ [-] Defines the percentage of the track to use (2\/WIDTHDIV).$/;"	m	class:Driver	file:
WIDTHDIV	drivers/damned/driver.h	/^		static const float WIDTHDIV;$/;"	m	class:Driver
WIDTHDIV	drivers/olethros/driver.cpp	/^    const float Driver::WIDTHDIV = 3.0f;							\/\/\/< [-] Defines the percentage of the track to use (2\/WIDTHDIV).$/;"	m	class:olethros::Driver	file:
WIDTHDIV	drivers/olethros/driver.h	/^	static const float WIDTHDIV;$/;"	m	class:olethros::Driver
WIDTHDIV	drivers/sparkle/driver.cpp	/^const float Driver::WIDTHDIV = 3.0;							\/* [-] *\/$/;"	m	class:Driver	file:
WIDTHDIV	drivers/sparkle/driver.h	/^		static const float WIDTHDIV;$/;"	m	class:Driver
WIN32	windows/include/zconf.h	145;"	d
WIN32_LEAN_AND_MEAN	windows/include/GL/glext.h	38;"	d
WIN32_LEAN_AND_MEAN	windows/include/GL/wglext.h	38;"	d
WIN32_LEAN_AND_MEAN	windows/include/plib/ul.h	107;"	d
WINDOWS	windows/include/zconf.h	141;"	d
WINDOWS_AL	windows/include/AL/altypes.h	10;"	d
WINDOWS_AL	windows/include/AL/alut.h	10;"	d
WINGDIAPI	windows/include/GL/glut.h	39;"	d
WINGDIAPI	windows/include/GL/glut.h	593;"	d
WINGDIAPI	windows/osspec.h	42;"	d
WINGDIAPI	windows/osspec.h	43;"	d
W_accel	drivers/olethros/learn.h	/^	float W_accel;$/;"	m	class:olethros::SegLearn
W_brake	drivers/olethros/learn.h	/^	float W_brake;$/;"	m	class:olethros::SegLearn
W_conv1	predictor/predict.py	/^W_conv1 = weight_variable([3, 3, 1, 32])$/;"	v
W_conv1	predictor/train.py	/^W_conv1 = weight_variable([3, 3, 1, 32])$/;"	v
W_conv1	predictor/train2.py	/^W_conv1 = weight_variable([3, 3, 1, 32])$/;"	v
W_conv2	predictor/predict.py	/^W_conv2 = weight_variable([3, 3, 32, 64])$/;"	v
W_conv2	predictor/train.py	/^W_conv2 = weight_variable([3, 3, 32, 64])$/;"	v
W_conv2	predictor/train2.py	/^W_conv2 = weight_variable([3, 3, 32, 64])$/;"	v
W_conv3	predictor/predict.py	/^W_conv3 = weight_variable([3, 3, 64, 128])$/;"	v
W_conv3	predictor/train.py	/^W_conv3 = weight_variable([3, 3, 64, 128])$/;"	v
W_conv3	predictor/train2.py	/^W_conv3 = weight_variable([3, 3, 64, 128])$/;"	v
W_fc1	predictor/predict.py	/^W_fc1 = weight_variable([1*30*128, 256])$/;"	v
W_fc1	predictor/train.py	/^W_fc1 = weight_variable([1*30*128, 256])$/;"	v
W_fc1	predictor/train2.py	/^W_fc1 = weight_variable([1*30*128, 256])$/;"	v
W_fc2	predictor/predict.py	/^W_fc2 = weight_variable([256, LABEL_NUM])$/;"	v
W_fc2	predictor/train.py	/^W_fc2 = weight_variable([256, LABEL_NUM])$/;"	v
W_fc2	predictor/train2.py	/^W_fc2 = weight_variable([256, LABEL_NUM])$/;"	v
WheelDetailOptionId	libs/confscreens/graphconfig.cpp	/^static int WheelDetailOptionId;$/;"	v	file:
WheelSect	modules/simu/simuv2/wheel.cpp	/^static const char *WheelSect[4] = {SECT_FRNTRGTWHEEL, SECT_FRNTLFTWHEEL, SECT_REARRGTWHEEL, SECT_REARLFTWHEEL};$/;"	v	file:
WheelSect	modules/simu/simuv3/wheel.cpp	/^static const char *WheelSect[4] = {SECT_FRNTRGTWHEEL, SECT_FRNTLFTWHEEL, SECT_REARRGTWHEEL, SECT_REARLFTWHEEL};$/;"	v	file:
WheelSoundData	modules/graphic/ssggraph/CarSoundData.h	/^} WheelSoundData;$/;"	t	typeref:struct:WheelSoundData_
WheelSoundData_	modules/graphic/ssggraph/CarSoundData.h	/^typedef struct WheelSoundData_$/;"	s
WidthId	libs/racescreens/trackselect.cpp	/^static int WidthId;$/;"	v	file:
WindowsSpecInit	windows/windowsspec.cpp	/^void WindowsSpecInit(void)$/;"	f
WingSect	modules/simu/simuv2/aero.cpp	/^static const char *WingSect[2] = {SECT_FRNTWING, SECT_REARWING};$/;"	v	file:
WingSect	modules/simu/simuv3/aero.cpp	/^static const char *WingSect[2] = {SECT_FRNTWING, SECT_REARWING};$/;"	v	file:
Winh	modules/graphic/ssggraph/grboard.cpp	/^static int	Winh	= 600;$/;"	v	file:
Winw	modules/graphic/ssggraph/grboard.cpp	/^static int	Winw	= 800;$/;"	v	file:
Winx	modules/graphic/ssggraph/grboard.cpp	/^static int	Winx	= 0;$/;"	v	file:
Winy	modules/graphic/ssggraph/grboard.cpp	/^static int	Winy	= 0;$/;"	v	file:
Wishbone	modules/simu/simuv3/susp.h	/^    Ideal, Simple, Wishbone$/;"	e	enum:SuspensionType
WriteFile	libs/learning/learn_debug.h	27;"	d
WriteToken	drivers/olethros/learn.cpp	/^inline void WriteToken (const char* tag, FILE* f)$/;"	f
WriteToken	libs/learning/ANN.cpp	/^static inline void WriteToken (const char* tag, FILE* f)$/;"	f	file:
X	libs/tgfclient/fg_gm.cpp	/^    int         X, Y;               \/* The two integers...               *\/$/;"	m	struct:tagSFG_XYUse	file:
X	libs/tgfclient/tgfclient.h	/^    int	X;$/;"	m	struct:MouseInfo
X	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon13
XGroupNb	tools/trackgen/easymesh.cpp	/^static int		XGroupNb;$/;"	v	file:
XGroupNb	tools/trackgen/objects.cpp	/^static int		XGroupNb;$/;"	v	file:
XGroupOffset	tools/trackgen/easymesh.cpp	/^static float		XGroupOffset;$/;"	v	file:
XGroupOffset	tools/trackgen/objects.cpp	/^static float		XGroupOffset;$/;"	v	file:
XM	modules/graphic/ssggraph/grboard.cpp	807;"	d	file:
XMLPARSEAPI	libs/txml/xmlparse.h	30;"	d
XMLPARSEAPI	windows/osspec.h	48;"	d
XMLPARSEAPI	windows/osspec.h	49;"	d
XMLTOKAPI	libs/txml/xmltok.h	30;"	d
XML_ATTRIBUTE_VALUE_LITERAL	libs/txml/xmltok.h	104;"	d
XML_CDATA_SECTION_STATE	libs/txml/xmltok.h	101;"	d
XML_CONTENT_STATE	libs/txml/xmltok.h	100;"	d
XML_Char	libs/txml/xmlparse.h	/^typedef char XML_Char;$/;"	t
XML_Char	libs/txml/xmlparse.h	/^typedef unsigned short XML_Char;$/;"	t
XML_Char	libs/txml/xmlparse.h	/^typedef wchar_t XML_Char;$/;"	t
XML_CharacterDataHandler	libs/txml/xmlparse.h	/^typedef void (*XML_CharacterDataHandler)(void *userData,$/;"	t
XML_DefaultCurrent	libs/txml/xmlparse.c	/^void XML_DefaultCurrent(XML_Parser parser)$/;"	f
XML_DefaultHandler	libs/txml/xmlparse.h	/^typedef void (*XML_DefaultHandler)(void *userData,$/;"	t
XML_ENCODE_MAX	libs/txml/xmlparse.c	29;"	d	file:
XML_ENCODE_MAX	libs/txml/xmlparse.c	36;"	d	file:
XML_ENTITY_VALUE_LITERAL	libs/txml/xmltok.h	105;"	d
XML_ERROR_ASYNC_ENTITY	libs/txml/xmlparse.h	/^  XML_ERROR_ASYNC_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF	libs/txml/xmlparse.h	/^  XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_BAD_CHAR_REF	libs/txml/xmlparse.h	/^  XML_ERROR_BAD_CHAR_REF,$/;"	e	enum:XML_Error
XML_ERROR_BINARY_ENTITY_REF	libs/txml/xmlparse.h	/^  XML_ERROR_BINARY_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_DUPLICATE_ATTRIBUTE	libs/txml/xmlparse.h	/^  XML_ERROR_DUPLICATE_ATTRIBUTE,$/;"	e	enum:XML_Error
XML_ERROR_EXTERNAL_ENTITY_HANDLING	libs/txml/xmlparse.h	/^  XML_ERROR_EXTERNAL_ENTITY_HANDLING$/;"	e	enum:XML_Error
XML_ERROR_INCORRECT_ENCODING	libs/txml/xmlparse.h	/^  XML_ERROR_INCORRECT_ENCODING,$/;"	e	enum:XML_Error
XML_ERROR_INVALID_TOKEN	libs/txml/xmlparse.h	/^  XML_ERROR_INVALID_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_JUNK_AFTER_DOC_ELEMENT	libs/txml/xmlparse.h	/^  XML_ERROR_JUNK_AFTER_DOC_ELEMENT,$/;"	e	enum:XML_Error
XML_ERROR_MISPLACED_XML_PI	libs/txml/xmlparse.h	/^  XML_ERROR_MISPLACED_XML_PI,$/;"	e	enum:XML_Error
XML_ERROR_NONE	libs/txml/xmlparse.h	/^  XML_ERROR_NONE,$/;"	e	enum:XML_Error
XML_ERROR_NO_ELEMENTS	libs/txml/xmlparse.h	/^  XML_ERROR_NO_ELEMENTS,$/;"	e	enum:XML_Error
XML_ERROR_NO_MEMORY	libs/txml/xmlparse.h	/^  XML_ERROR_NO_MEMORY,$/;"	e	enum:XML_Error
XML_ERROR_PARAM_ENTITY_REF	libs/txml/xmlparse.h	/^  XML_ERROR_PARAM_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_PARTIAL_CHAR	libs/txml/xmlparse.h	/^  XML_ERROR_PARTIAL_CHAR,$/;"	e	enum:XML_Error
XML_ERROR_RECURSIVE_ENTITY_REF	libs/txml/xmlparse.h	/^  XML_ERROR_RECURSIVE_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_SYNTAX	libs/txml/xmlparse.h	/^  XML_ERROR_SYNTAX,$/;"	e	enum:XML_Error
XML_ERROR_TAG_MISMATCH	libs/txml/xmlparse.h	/^  XML_ERROR_TAG_MISMATCH,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_CDATA_SECTION	libs/txml/xmlparse.h	/^  XML_ERROR_UNCLOSED_CDATA_SECTION,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_TOKEN	libs/txml/xmlparse.h	/^  XML_ERROR_UNCLOSED_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_UNDEFINED_ENTITY	libs/txml/xmlparse.h	/^  XML_ERROR_UNDEFINED_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_UNKNOWN_ENCODING	libs/txml/xmlparse.h	/^  XML_ERROR_UNKNOWN_ENCODING,$/;"	e	enum:XML_Error
XML_Encoding	libs/txml/xmlparse.h	/^} XML_Encoding;$/;"	t	typeref:struct:__anon121
XML_EndElementHandler	libs/txml/xmlparse.h	/^typedef void (*XML_EndElementHandler)(void *userData,$/;"	t
XML_Error	libs/txml/xmlparse.h	/^enum XML_Error {$/;"	g
XML_ErrorString	libs/txml/xmlparse.c	/^const XML_LChar *XML_ErrorString(int code)$/;"	f
XML_ExternalEntityParserCreate	libs/txml/xmlparse.c	/^XML_Parser XML_ExternalEntityParserCreate(XML_Parser oldParser,$/;"	f
XML_ExternalEntityRefHandler	libs/txml/xmlparse.h	/^typedef int (*XML_ExternalEntityRefHandler)(XML_Parser parser,$/;"	t
XML_GetBase	libs/txml/xmlparse.c	/^const XML_Char *XML_GetBase(XML_Parser parser)$/;"	f
XML_GetBuffer	libs/txml/xmlparse.c	/^void *XML_GetBuffer(XML_Parser parser, int len)$/;"	f
XML_GetCurrentByteIndex	libs/txml/xmlparse.c	/^long XML_GetCurrentByteIndex(XML_Parser parser)$/;"	f
XML_GetCurrentColumnNumber	libs/txml/xmlparse.c	/^int XML_GetCurrentColumnNumber(XML_Parser parser)$/;"	f
XML_GetCurrentLineNumber	libs/txml/xmlparse.c	/^int XML_GetCurrentLineNumber(XML_Parser parser)$/;"	f
XML_GetErrorByteIndex	libs/txml/xmlparse.h	370;"	d
XML_GetErrorCode	libs/txml/xmlparse.c	/^enum XML_Error XML_GetErrorCode(XML_Parser parser)$/;"	f
XML_GetErrorColumnNumber	libs/txml/xmlparse.h	369;"	d
XML_GetErrorLineNumber	libs/txml/xmlparse.h	368;"	d
XML_GetUserData	libs/txml/xmlparse.h	276;"	d
XML_LChar	libs/txml/xmlparse.h	/^typedef char XML_LChar;$/;"	t
XML_LChar	libs/txml/xmlparse.h	/^typedef wchar_t XML_LChar;$/;"	t
XML_N_LITERAL_TYPES	libs/txml/xmltok.h	103;"	d
XML_N_STATES	libs/txml/xmltok.h	98;"	d
XML_NotationDeclHandler	libs/txml/xmlparse.h	/^typedef void (*XML_NotationDeclHandler)(void *userData,$/;"	t
XML_PROLOG_STATE	libs/txml/xmltok.h	99;"	d
XML_Parse	libs/txml/xmlparse.c	/^int XML_Parse(XML_Parser parser, const char *s, int len, int isFinal)$/;"	f
XML_ParseBuffer	libs/txml/xmlparse.c	/^int XML_ParseBuffer(XML_Parser parser, int len, int isFinal)$/;"	f
XML_Parser	libs/txml/xmlparse.h	/^typedef void *XML_Parser;$/;"	t
XML_ParserCreate	libs/txml/xmlparse.c	/^XML_Parser XML_ParserCreate(const XML_Char *encodingName)$/;"	f
XML_ParserFree	libs/txml/xmlparse.c	/^void XML_ParserFree(XML_Parser parser)$/;"	f
XML_ProcessingInstructionHandler	libs/txml/xmlparse.h	/^typedef void (*XML_ProcessingInstructionHandler)(void *userData,$/;"	t
XML_ROLE_ATTLIST_ELEMENT_NAME	libs/txml/xmlrole.h	/^  XML_ROLE_ATTLIST_ELEMENT_NAME,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_ENUM_VALUE	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_ENUM_VALUE,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_NAME	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_NAME,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_NOTATION_VALUE	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_NOTATION_VALUE,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_TYPE_CDATA	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_CDATA,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_TYPE_ENTITIES	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_ENTITIES,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_TYPE_ENTITY	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_ENTITY,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_TYPE_ID	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_ID,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_TYPE_IDREF	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_IDREF,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_TYPE_IDREFS	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_IDREFS,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_TYPE_NMTOKEN	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_NMTOKEN,$/;"	e	enum:__anon110
XML_ROLE_ATTRIBUTE_TYPE_NMTOKENS	libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_NMTOKENS,$/;"	e	enum:__anon110
XML_ROLE_CONTENT_ANY	libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ANY,$/;"	e	enum:__anon110
XML_ROLE_CONTENT_ELEMENT	libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ELEMENT,$/;"	e	enum:__anon110
XML_ROLE_CONTENT_ELEMENT_OPT	libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ELEMENT_OPT,$/;"	e	enum:__anon110
XML_ROLE_CONTENT_ELEMENT_PLUS	libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ELEMENT_PLUS,$/;"	e	enum:__anon110
XML_ROLE_CONTENT_ELEMENT_REP	libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ELEMENT_REP,$/;"	e	enum:__anon110
XML_ROLE_CONTENT_EMPTY	libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_EMPTY,$/;"	e	enum:__anon110
XML_ROLE_CONTENT_PCDATA	libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_PCDATA,$/;"	e	enum:__anon110
XML_ROLE_DEFAULT_ATTRIBUTE_VALUE	libs/txml/xmlrole.h	/^  XML_ROLE_DEFAULT_ATTRIBUTE_VALUE,$/;"	e	enum:__anon110
XML_ROLE_DOCTYPE_CLOSE	libs/txml/xmlrole.h	/^  XML_ROLE_DOCTYPE_CLOSE,$/;"	e	enum:__anon110
XML_ROLE_DOCTYPE_NAME	libs/txml/xmlrole.h	/^  XML_ROLE_DOCTYPE_NAME,$/;"	e	enum:__anon110
XML_ROLE_DOCTYPE_PUBLIC_ID	libs/txml/xmlrole.h	/^  XML_ROLE_DOCTYPE_PUBLIC_ID,$/;"	e	enum:__anon110
XML_ROLE_DOCTYPE_SYSTEM_ID	libs/txml/xmlrole.h	/^  XML_ROLE_DOCTYPE_SYSTEM_ID,$/;"	e	enum:__anon110
XML_ROLE_ELEMENT_NAME	libs/txml/xmlrole.h	/^  XML_ROLE_ELEMENT_NAME,$/;"	e	enum:__anon110
XML_ROLE_ENTITY_NOTATION_NAME	libs/txml/xmlrole.h	/^  XML_ROLE_ENTITY_NOTATION_NAME,$/;"	e	enum:__anon110
XML_ROLE_ENTITY_PUBLIC_ID	libs/txml/xmlrole.h	/^  XML_ROLE_ENTITY_PUBLIC_ID,$/;"	e	enum:__anon110
XML_ROLE_ENTITY_SYSTEM_ID	libs/txml/xmlrole.h	/^  XML_ROLE_ENTITY_SYSTEM_ID,$/;"	e	enum:__anon110
XML_ROLE_ENTITY_VALUE	libs/txml/xmlrole.h	/^  XML_ROLE_ENTITY_VALUE,$/;"	e	enum:__anon110
XML_ROLE_ERROR	libs/txml/xmlrole.h	/^  XML_ROLE_ERROR = -1,$/;"	e	enum:__anon110
XML_ROLE_FIXED_ATTRIBUTE_VALUE	libs/txml/xmlrole.h	/^  XML_ROLE_FIXED_ATTRIBUTE_VALUE,$/;"	e	enum:__anon110
XML_ROLE_GENERAL_ENTITY_NAME	libs/txml/xmlrole.h	/^  XML_ROLE_GENERAL_ENTITY_NAME,$/;"	e	enum:__anon110
XML_ROLE_GROUP_CHOICE	libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CHOICE,$/;"	e	enum:__anon110
XML_ROLE_GROUP_CLOSE	libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CLOSE,$/;"	e	enum:__anon110
XML_ROLE_GROUP_CLOSE_OPT	libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CLOSE_OPT,$/;"	e	enum:__anon110
XML_ROLE_GROUP_CLOSE_PLUS	libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CLOSE_PLUS,$/;"	e	enum:__anon110
XML_ROLE_GROUP_CLOSE_REP	libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CLOSE_REP,$/;"	e	enum:__anon110
XML_ROLE_GROUP_OPEN	libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_OPEN,$/;"	e	enum:__anon110
XML_ROLE_GROUP_SEQUENCE	libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_SEQUENCE,$/;"	e	enum:__anon110
XML_ROLE_IMPLIED_ATTRIBUTE_VALUE	libs/txml/xmlrole.h	/^  XML_ROLE_IMPLIED_ATTRIBUTE_VALUE,$/;"	e	enum:__anon110
XML_ROLE_INSTANCE_START	libs/txml/xmlrole.h	/^  XML_ROLE_INSTANCE_START,$/;"	e	enum:__anon110
XML_ROLE_NONE	libs/txml/xmlrole.h	/^  XML_ROLE_NONE = 0,$/;"	e	enum:__anon110
XML_ROLE_NOTATION_NAME	libs/txml/xmlrole.h	/^  XML_ROLE_NOTATION_NAME,$/;"	e	enum:__anon110
XML_ROLE_NOTATION_NO_SYSTEM_ID	libs/txml/xmlrole.h	/^  XML_ROLE_NOTATION_NO_SYSTEM_ID,$/;"	e	enum:__anon110
XML_ROLE_NOTATION_PUBLIC_ID	libs/txml/xmlrole.h	/^  XML_ROLE_NOTATION_PUBLIC_ID,$/;"	e	enum:__anon110
XML_ROLE_NOTATION_SYSTEM_ID	libs/txml/xmlrole.h	/^  XML_ROLE_NOTATION_SYSTEM_ID,$/;"	e	enum:__anon110
XML_ROLE_PARAM_ENTITY_NAME	libs/txml/xmlrole.h	/^  XML_ROLE_PARAM_ENTITY_NAME,$/;"	e	enum:__anon110
XML_ROLE_PARAM_ENTITY_REF	libs/txml/xmlrole.h	/^  XML_ROLE_PARAM_ENTITY_REF$/;"	e	enum:__anon110
XML_ROLE_REQUIRED_ATTRIBUTE_VALUE	libs/txml/xmlrole.h	/^  XML_ROLE_REQUIRED_ATTRIBUTE_VALUE,$/;"	e	enum:__anon110
XML_ROLE_XML_DECL	libs/txml/xmlrole.h	/^  XML_ROLE_XML_DECL,$/;"	e	enum:__anon110
XML_SetBase	libs/txml/xmlparse.c	/^int XML_SetBase(XML_Parser parser, const XML_Char *p)$/;"	f
XML_SetCharacterDataHandler	libs/txml/xmlparse.c	/^void XML_SetCharacterDataHandler(XML_Parser parser,$/;"	f
XML_SetDefaultHandler	libs/txml/xmlparse.c	/^void XML_SetDefaultHandler(XML_Parser parser,$/;"	f
XML_SetElementHandler	libs/txml/xmlparse.c	/^void XML_SetElementHandler(XML_Parser parser,$/;"	f
XML_SetExternalEntityRefHandler	libs/txml/xmlparse.c	/^void XML_SetExternalEntityRefHandler(XML_Parser parser,$/;"	f
XML_SetNotationDeclHandler	libs/txml/xmlparse.c	/^void XML_SetNotationDeclHandler(XML_Parser parser,$/;"	f
XML_SetProcessingInstructionHandler	libs/txml/xmlparse.c	/^void XML_SetProcessingInstructionHandler(XML_Parser parser,$/;"	f
XML_SetUnknownEncodingHandler	libs/txml/xmlparse.c	/^void XML_SetUnknownEncodingHandler(XML_Parser parser,$/;"	f
XML_SetUnparsedEntityDeclHandler	libs/txml/xmlparse.c	/^void XML_SetUnparsedEntityDeclHandler(XML_Parser parser,$/;"	f
XML_SetUserData	libs/txml/xmlparse.c	/^void XML_SetUserData(XML_Parser parser, void *p)$/;"	f
XML_StartElementHandler	libs/txml/xmlparse.h	/^typedef void (*XML_StartElementHandler)(void *userData,$/;"	t
XML_T	libs/txml/xmlparse.c	45;"	d	file:
XML_T	libs/txml/xmlparse.c	47;"	d	file:
XML_TOK_ATTRIBUTE_VALUE_S	libs/txml/xmltok.h	93;"	d
XML_TOK_BOM	libs/txml/xmltok.h	62;"	d
XML_TOK_CDATA_SECT_CLOSE	libs/txml/xmltok.h	96;"	d
XML_TOK_CDATA_SECT_OPEN	libs/txml/xmltok.h	54;"	d
XML_TOK_CHAR_REF	libs/txml/xmltok.h	56;"	d
XML_TOK_CLOSE_BRACKET	libs/txml/xmltok.h	76;"	d
XML_TOK_CLOSE_PAREN	libs/txml/xmltok.h	74;"	d
XML_TOK_CLOSE_PAREN_ASTERISK	libs/txml/xmltok.h	88;"	d
XML_TOK_CLOSE_PAREN_PLUS	libs/txml/xmltok.h	89;"	d
XML_TOK_CLOSE_PAREN_QUESTION	libs/txml/xmltok.h	87;"	d
XML_TOK_COMMA	libs/txml/xmltok.h	90;"	d
XML_TOK_COMMENT	libs/txml/xmltok.h	61;"	d
XML_TOK_COND_SECT_CLOSE	libs/txml/xmltok.h	86;"	d
XML_TOK_COND_SECT_OPEN	libs/txml/xmltok.h	85;"	d
XML_TOK_DATA_CHARS	libs/txml/xmltok.h	52;"	d
XML_TOK_DATA_NEWLINE	libs/txml/xmltok.h	53;"	d
XML_TOK_DECL_CLOSE	libs/txml/xmltok.h	67;"	d
XML_TOK_DECL_OPEN	libs/txml/xmltok.h	66;"	d
XML_TOK_EMPTY_ELEMENT_NO_ATTS	libs/txml/xmltok.h	50;"	d
XML_TOK_EMPTY_ELEMENT_WITH_ATTS	libs/txml/xmltok.h	49;"	d
XML_TOK_END_TAG	libs/txml/xmltok.h	51;"	d
XML_TOK_ENTITY_REF	libs/txml/xmltok.h	55;"	d
XML_TOK_INSTANCE_START	libs/txml/xmltok.h	79;"	d
XML_TOK_INVALID	libs/txml/xmltok.h	42;"	d
XML_TOK_LITERAL	libs/txml/xmltok.h	77;"	d
XML_TOK_NAME	libs/txml/xmltok.h	68;"	d
XML_TOK_NAME_ASTERISK	libs/txml/xmltok.h	83;"	d
XML_TOK_NAME_PLUS	libs/txml/xmltok.h	84;"	d
XML_TOK_NAME_QUESTION	libs/txml/xmltok.h	82;"	d
XML_TOK_NMTOKEN	libs/txml/xmltok.h	69;"	d
XML_TOK_NONE	libs/txml/xmltok.h	37;"	d
XML_TOK_OPEN_BRACKET	libs/txml/xmltok.h	75;"	d
XML_TOK_OPEN_PAREN	libs/txml/xmltok.h	73;"	d
XML_TOK_OR	libs/txml/xmltok.h	71;"	d
XML_TOK_PARAM_ENTITY_REF	libs/txml/xmltok.h	78;"	d
XML_TOK_PARTIAL	libs/txml/xmltok.h	41;"	d
XML_TOK_PARTIAL_CHAR	libs/txml/xmltok.h	40;"	d
XML_TOK_PERCENT	libs/txml/xmltok.h	72;"	d
XML_TOK_PI	libs/txml/xmltok.h	59;"	d
XML_TOK_POUND_NAME	libs/txml/xmltok.h	70;"	d
XML_TOK_PROLOG_S	libs/txml/xmltok.h	65;"	d
XML_TOK_START_TAG_NO_ATTS	libs/txml/xmltok.h	48;"	d
XML_TOK_START_TAG_WITH_ATTS	libs/txml/xmltok.h	47;"	d
XML_TOK_TRAILING_CR	libs/txml/xmltok.h	38;"	d
XML_TOK_TRAILING_RSQB	libs/txml/xmltok.h	34;"	d
XML_TOK_XML_DECL	libs/txml/xmltok.h	60;"	d
XML_UNICODE	libs/txml/xmlparse.h	42;"	d
XML_UTF16_ENCODE_MAX	libs/txml/xmltok.h	110;"	d
XML_UTF8_ENCODE_MAX	libs/txml/xmltok.h	108;"	d
XML_UnknownEncodingHandler	libs/txml/xmlparse.h	/^typedef int (*XML_UnknownEncodingHandler)(void *encodingHandlerData,$/;"	t
XML_UnparsedEntityDeclHandler	libs/txml/xmlparse.h	/^typedef void (*XML_UnparsedEntityDeclHandler)(void *userData,$/;"	t
XML_UseParserAsHandlerArg	libs/txml/xmlparse.c	/^void XML_UseParserAsHandlerArg(XML_Parser parser)$/;"	f
XmlAttributeValueTok	libs/txml/xmltok.h	207;"	d
XmlCdataSectionTok	libs/txml/xmltok.h	198;"	d
XmlCharRefNumber	libs/txml/xmltok.h	227;"	d
XmlContentTok	libs/txml/xmltok.h	195;"	d
XmlConvert	libs/txml/xmlparse.c	30;"	d	file:
XmlConvert	libs/txml/xmlparse.c	37;"	d	file:
XmlEncode	libs/txml/xmlparse.c	32;"	d	file:
XmlEncode	libs/txml/xmlparse.c	39;"	d	file:
XmlEntityValueTok	libs/txml/xmltok.h	210;"	d
XmlGetAttributes	libs/txml/xmltok.h	224;"	d
XmlGetInternalEncoding	libs/txml/xmlparse.c	31;"	d	file:
XmlGetInternalEncoding	libs/txml/xmlparse.c	38;"	d	file:
XmlGetUtf16InternalEncoding	libs/txml/xmltok.c	/^const ENCODING *XmlGetUtf16InternalEncoding(void)$/;"	f
XmlGetUtf8InternalEncoding	libs/txml/xmltok.c	/^const ENCODING *XmlGetUtf8InternalEncoding(void)$/;"	f
XmlInitEncoding	libs/txml/xmltok.c	/^int XmlInitEncoding(INIT_ENCODING *p, const ENCODING **encPtr, const char *name)$/;"	f
XmlInitUnknownEncoding	libs/txml/xmltok.c	/^XmlInitUnknownEncoding(void *mem,$/;"	f
XmlIsPublicId	libs/txml/xmltok.h	236;"	d
XmlLiteralTok	libs/txml/xmltok.h	204;"	d
XmlNameLength	libs/txml/xmltok.h	218;"	d
XmlNameMatchesAscii	libs/txml/xmltok.h	215;"	d
XmlParseXmlDecl	libs/txml/xmltok.c	/^int XmlParseXmlDecl(int isGeneralTextEntity,$/;"	f
XmlParse_INCLUDED	libs/txml/xmlparse.h	23;"	d
XmlPredefinedEntityName	libs/txml/xmltok.h	230;"	d
XmlPrologStateInit	libs/txml/xmlrole.c	/^void XmlPrologStateInit(PROLOG_STATE *state)$/;"	f
XmlPrologTok	libs/txml/xmltok.h	192;"	d
XmlRole_INCLUDED	libs/txml/xmlrole.h	23;"	d
XmlSameName	libs/txml/xmltok.h	213;"	d
XmlSizeOfUnknownEncoding	libs/txml/xmltok.c	/^int XmlSizeOfUnknownEncoding(void)$/;"	f
XmlSkipS	libs/txml/xmltok.h	221;"	d
XmlTok	libs/txml/xmltok.h	189;"	d
XmlTok_INCLUDED	libs/txml/xmltok.h	23;"	d
XmlTokenRole	libs/txml/xmlrole.h	95;"	d
XmlUpdatePosition	libs/txml/xmltok.h	233;"	d
XmlUtf16Convert	libs/txml/xmltok.h	242;"	d
XmlUtf16Encode	libs/txml/xmltok.c	/^int XmlUtf16Encode(int charNum, unsigned short *buf)$/;"	f
XmlUtf8Convert	libs/txml/xmltok.h	239;"	d
XmlUtf8Encode	libs/txml/xmltok.c	/^int XmlUtf8Encode(int c, char *buf)$/;"	f
Y	libs/tgfclient/fg_gm.cpp	/^    int         X, Y;               \/* The two integers...               *\/$/;"	m	struct:tagSFG_XYUse	file:
Y	libs/tgfclient/tgfclient.h	/^    int	Y;$/;"	m	struct:MouseInfo
Y	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon13
YAW_RATE	drivers/data_list.h	/^			PITCH, 		ROLL, 			YAW_RATE, 	DISTANCE, 		POS_X, 		$/;"	e	enum:sensing_data_name
YGroupOffset	tools/trackgen/easymesh.cpp	/^static float		YGroupOffset;$/;"	v	file:
YGroupOffset	tools/trackgen/objects.cpp	/^static float		YGroupOffset;$/;"	v	file:
YM	modules/graphic/ssggraph/grboard.cpp	808;"	d	file:
Yn	drivers/human/pref.cpp	/^const char *Yn[] = { HM_VAL_YES, HM_VAL_NO };$/;"	v
Yn	libs/confscreens/driverconfig.cpp	/^static const char *Yn[] = {HM_VAL_YES, HM_VAL_NO};$/;"	v	file:
Z	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon13
ZCONF_H	windows/include/zconf.h	9;"	d
ZEXPORT	windows/include/zconf.h	297;"	d
ZEXPORT	windows/include/zconf.h	309;"	d
ZEXPORT	windows/include/zconf.h	312;"	d
ZEXPORT	windows/include/zconf.h	322;"	d
ZEXPORTVA	windows/include/zconf.h	299;"	d
ZEXPORTVA	windows/include/zconf.h	301;"	d
ZEXPORTVA	windows/include/zconf.h	310;"	d
ZEXPORTVA	windows/include/zconf.h	313;"	d
ZEXPORTVA	windows/include/zconf.h	325;"	d
ZEXTERN	windows/include/zconf.h	280;"	d
ZEXTERN	windows/include/zconf.h	282;"	d
ZEXTERN	windows/include/zconf.h	319;"	d
ZLIB_H	windows/include/zlib.h	32;"	d
ZLIB_VERNUM	windows/include/zlib.h	41;"	d
ZLIB_VERSION	windows/include/zlib.h	40;"	d
ZLIB_VER_MAJOR	windows/include/zlib.h	42;"	d
ZLIB_VER_MINOR	windows/include/zlib.h	43;"	d
ZLIB_VER_REVISION	windows/include/zlib.h	44;"	d
ZLIB_VER_SUBREVISION	windows/include/zlib.h	45;"	d
Z_ASCII	windows/include/zlib.h	201;"	d
Z_BEST_COMPRESSION	windows/include/zlib.h	188;"	d
Z_BEST_SPEED	windows/include/zlib.h	187;"	d
Z_BINARY	windows/include/zlib.h	199;"	d
Z_BLOCK	windows/include/zlib.h	169;"	d
Z_BUF_ERROR	windows/include/zlib.h	180;"	d
Z_DATA_ERROR	windows/include/zlib.h	178;"	d
Z_DEFAULT_COMPRESSION	windows/include/zlib.h	189;"	d
Z_DEFAULT_STRATEGY	windows/include/zlib.h	196;"	d
Z_DEFLATED	windows/include/zlib.h	205;"	d
Z_ERRNO	windows/include/zlib.h	176;"	d
Z_FILTERED	windows/include/zlib.h	192;"	d
Z_FINISH	windows/include/zlib.h	168;"	d
Z_FIXED	windows/include/zlib.h	195;"	d
Z_FULL_FLUSH	windows/include/zlib.h	167;"	d
Z_HAVE_UNISTD_H	windows/include/zconf.h	360;"	d
Z_HUFFMAN_ONLY	windows/include/zlib.h	193;"	d
Z_MEM_ERROR	windows/include/zlib.h	179;"	d
Z_NEED_DICT	windows/include/zlib.h	175;"	d
Z_NO_COMPRESSION	windows/include/zlib.h	186;"	d
Z_NO_FLUSH	windows/include/zlib.h	164;"	d
Z_NULL	windows/include/zlib.h	208;"	d
Z_OK	windows/include/zlib.h	173;"	d
Z_PARTIAL_FLUSH	windows/include/zlib.h	165;"	d
Z_RLE	windows/include/zlib.h	194;"	d
Z_STREAM_END	windows/include/zlib.h	174;"	d
Z_STREAM_ERROR	windows/include/zlib.h	177;"	d
Z_SYNC_FLUSH	windows/include/zlib.h	166;"	d
Z_TEXT	windows/include/zlib.h	200;"	d
Z_TREES	windows/include/zlib.h	170;"	d
Z_UNKNOWN	windows/include/zlib.h	202;"	d
Z_VERSION_ERROR	windows/include/zlib.h	181;"	d
_AC3DTO3DS	tools/accc/accc.h	52;"	d
_AC3DTOAC3D	tools/accc/accc.h	54;"	d
_AC3DTOAC3DGROUP	tools/accc/accc.h	58;"	d
_AC3DTOAC3DM	tools/accc/accc.h	56;"	d
_AC3DTOAC3DS	tools/accc/accc.h	57;"	d
_AC3DTOOBJ	tools/accc/accc.h	55;"	d
_AC3D_H_	tools/trackgen/ac3d.h	27;"	d
_ACCC_H_	tools/accc/accc.h	26;"	d
_AERO_H_	modules/simu/simuv2/aero.h	21;"	d
_AERO_H_	modules/simu/simuv3/aero.h	21;"	d
_ALCTYPES_H_	windows/include/AL/alctypes.h	2;"	d
_ALGOTABLE_H_	modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	28;"	d
_ALUT_H_	windows/include/AL/alut.h	2;"	d
_AL_TYPES_H_	windows/include/AL/altypes.h	2;"	d
_AXLE_H__	modules/simu/simuv2/axle.h	23;"	d
_AXLE_H__	modules/simu/simuv3/axle.h	23;"	d
_BASIC_H_	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	28;"	d
_BBOXTREE_H_	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	28;"	d
_BBOX_H_	modules/simu/simuv2/SOLID-2.0/src/BBox.h	28;"	d
_BERNIW_H_	drivers/berniw/berniw.h	21;"	d
_BERNIW_H_	drivers/berniw2/berniw.h	21;"	d
_BERNIW_H_	drivers/berniw3/berniw.h	21;"	d
_BERNIW_H_	drivers/inferno/berniw.h	21;"	d
_BERNIW_H_	drivers/lliaw/berniw.h	21;"	d
_BERNIW_H_	drivers/tita/berniw.h	21;"	d
_BOX_H_	modules/simu/simuv2/SOLID-2.0/src/Box.h	28;"	d
_BRAKE_H_	modules/simu/simuv2/brake.h	21;"	d
_BRAKE_H_	modules/simu/simuv3/brake.h	21;"	d
_BT_CARDATA_H_	drivers/bt/cardata.h	26;"	d
_BT_CARDATA_H_	drivers/damned/cardata.h	26;"	d
_CAR__H_	modules/simu/simuv2/carstruct.h	21;"	d
_CAR__H_	modules/simu/simuv3/carstruct.h	21;"	d
_COMMON_H_	drivers/inferno2/common.h	22;"	d
_COMPLEX_H_	modules/simu/simuv2/SOLID-2.0/src/Complex.h	28;"	d
_CONE_H_	modules/simu/simuv2/SOLID-2.0/src/Cone.h	28;"	d
_CONTROLCONFIG_H_	libs/confscreens/controlconfig.h	27;"	d
_CONVEX_H_	modules/simu/simuv2/SOLID-2.0/src/Convex.h	28;"	d
_CYLINDER_H_	modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	28;"	d
_DIFFERENTIAL_H_	modules/simu/simuv2/differential.h	21;"	d
_DIFFERENTIAL_H_	modules/simu/simuv3/differential.h	21;"	d
_DRIVERCONFIG_H_	libs/confscreens/driverconfig.h	23;"	d
_DRIVER_H_	drivers/bt/driver.h	21;"	d
_DRIVER_H_	drivers/damned/driver.h	21;"	d
_DRIVER_H_	drivers/olethros/driver.h	22;"	d
_DRIVER_H_	drivers/sparkle/driver.h	21;"	d
_DispName	libs/confscreens/driverconfig.cpp	97;"	d	file:
_DynGC	interfaces/car.h	232;"	d
_EASYMESH_H_	tools/trackgen/easymesh.h	27;"	d
_ELEVATION_H_	tools/trackgen/elevation.h	27;"	d
_ENCOUNTER_H_	modules/simu/simuv2/SOLID-2.0/src/Encounter.h	28;"	d
_ENGINE_H_	modules/simu/simuv2/engine.h	21;"	d
_ENGINE_H_	modules/simu/simuv3/engine.h	21;"	d
_EXITMENU_H_	libs/client/exitmenu.h	22;"	d
_FG_GM_H_	libs/tgfclient/fg_gm.h	27;"	d
_GNU_SOURCE	tools/accc/ac3dgroup.cpp	30;"	d	file:
_GNU_SOURCE	tools/accc/ac3dload.cpp	32;"	d	file:
_GNU_SOURCE	tools/accc/mainaccc.cpp	31;"	d	file:
_GNU_SOURCE	tools/texmapper/maintexmapper.cpp	26;"	d	file:
_GNU_SOURCE	tools/trackgen/maintrackgen.cpp	32;"	d	file:
_GRAPHCONFIG_H_	libs/confscreens/graphconfig.h	27;"	d
_GRAPHV1_H_	interfaces/graphic.h	22;"	d
_GRBOARD_H_	modules/graphic/ssggraph/grboard.h	21;"	d
_GRCAM_H_	modules/graphic/ssggraph/grcam.h	21;"	d
_GRCARLIGHT_H_	modules/graphic/ssggraph/grcarlight.h	25;"	d
_GRCAR_H_	modules/graphic/ssggraph/grcar.h	23;"	d
_GRFEATURES_H_	libs/tgfclient/glfeatures.h	29;"	d
_GRLOADSGI_H_	modules/graphic/ssggraph/grloadsgi.h	26;"	d
_GRMAIN_H_	modules/graphic/ssggraph/grmain.h	22;"	d
_GRSCENE_H_	modules/graphic/ssggraph/grscene.h	22;"	d
_GRSCREEN_H_	modules/graphic/ssggraph/grscreen.h	21;"	d
_GRSKIDMARKS_H_	modules/graphic/ssggraph/grskidmarks.h	2;"	d
_GRSMOKE_H_	modules/graphic/ssggraph/grsmoke.h	2;"	d
_GRSOUND_H_	modules/graphic/ssggraph/grsound.h	22;"	d
_GRSSGEXT_H_	modules/graphic/ssggraph/grssgext.h	28;"	d
_GRTEXTURE_H_	modules/graphic/ssggraph/grtexture.h	26;"	d
_GRTRACKMAP_H_	modules/graphic/ssggraph/grtrackmap.h	28;"	d
_GRUTIL_H_	modules/graphic/ssggraph/grutil.h	22;"	d
_GRVTXTABLE_H_	modules/graphic/ssggraph/grvtxtable.h	46;"	d
_GUIFONT_H_	libs/tgfclient/guifont.h	20;"	d
_GUI_H__	libs/tgfclient/gui.h	20;"	d
_HUMAN_H_	drivers/human/human.h	27;"	d
_INCLUDED_SSGCONF_H_	windows/include/plib/ssgconf.h	25;"	d
_INCLUDED_SSG_H_	windows/include/plib/ssg.h	26;"	d
_INCLUDED_UL_H_	windows/include/plib/ul.h	38;"	d
_INDEXARRAY_H_	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	28;"	d
_JOYSTICKCONFIG_H_	libs/confscreens/joystickconfig.h	27;"	d
_JS_MAX_AXES	windows/include/plib/js.h	34;"	d
_JS_MAX_BUTTONS	windows/include/plib/js.h	35;"	d
_JS_MAX_HATS	windows/include/plib/js.h	36;"	d
_LARGEFILE64_SOURCE	windows/include/zconf.h	374;"	d
_LINALG_H_	drivers/berniw/linalg.h	21;"	d
_LINALG_H_	drivers/berniw2/linalg.h	21;"	d
_LINALG_H_	drivers/berniw3/linalg.h	21;"	d
_LINALG_H_	drivers/human/linalg.h	21;"	d
_LINALG_H_	drivers/olethros/linalg.h	21;"	d
_LINALG_H_	drivers/sparkle/linalg.h	21;"	d
_LINALG_T_H_	libs/math/linalg_t.h	21;"	d
_LINALG_V2_T_H_	libs/math/v2_t.h	30;"	d
_LINALG_V3_T_H_	libs/math/v3_t.h	29;"	d
_LINALG_V4_T_H_	libs/math/v4_t.h	29;"	d
_LINUXSPEC_H_	linux/linuxspec.h	22;"	d
_MAINMENU_H_	libs/client/mainmenu.h	22;"	d
_MATRIX_H_	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	28;"	d
_MOUSECONFIG_H_	libs/confscreens/mouseconfig.h	27;"	d
_MYCAR2_H_	drivers/human/mycar.h	25;"	d
_MYCAR_H_	drivers/berniw/mycar.h	25;"	d
_MYCAR_H_	drivers/berniw2/mycar.h	25;"	d
_MYCAR_H_	drivers/berniw3/mycar.h	25;"	d
_MYCAR_H_	drivers/inferno/mycar.h	25;"	d
_MYCAR_H_	drivers/lliaw/mycar.h	25;"	d
_MYCAR_H_	drivers/tita/mycar.h	25;"	d
_Name	libs/confscreens/driverconfig.cpp	96;"	d	file:
_OBJECTS_H_	tools/trackgen/objects.h	27;"	d
_OBJECT_H_	modules/simu/simuv2/SOLID-2.0/src/Object.h	28;"	d
_OGG_H	windows/include/ogg/ogg.h	18;"	d
_OLETHROS_CARDATA_H_	drivers/olethros/cardata.h	27;"	d
_OPENGLCONFIG_H_	libs/confscreens/openglconfig.h	26;"	d
_OPPONENT_H_	drivers/bt/opponent.h	21;"	d
_OPPONENT_H_	drivers/damned/opponent.h	21;"	d
_OPPONENT_H_	drivers/olethros/opponent.h	22;"	d
_OPPONENT_H_	drivers/sparkle/opponent.h	21;"	d
_OPTIONMENU_H_	libs/client/optionmenu.h	22;"	d
_OS_TYPES_H	windows/include/ogg/os_types.h	18;"	d
_OS__H_	libs/tgf/os.h	20;"	d
_OV_ENC_H_	windows/include/vorbis/vorbisenc.h	25;"	d
_OV_FILE_H_	windows/include/vorbis/vorbisfile.h	19;"	d
_PATHFINDER_H_	drivers/berniw/pathfinder.h	25;"	d
_PATHFINDER_H_	drivers/berniw2/pathfinder.h	25;"	d
_PATHFINDER_H_	drivers/berniw3/pathfinder.h	25;"	d
_PATHFINDER_H_	drivers/human/pathfinder.h	25;"	d
_PATHFINDER_H_	drivers/inferno/pathfinder.h	25;"	d
_PATHFINDER_H_	drivers/lliaw/pathfinder.h	25;"	d
_PATHFINDER_H_	drivers/tita/pathfinder.h	25;"	d
_PIT_H_	drivers/bt/pit.h	21;"	d
_PIT_H_	drivers/damned/pit.h	21;"	d
_PIT_H_	drivers/olethros/pit.h	21;"	d
_PIT_H_	drivers/sparkle/pit.h	21;"	d
_PLAYERPREF_H_	interfaces/playerpref.h	27;"	d
_POINT_H_	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	28;"	d
_POLYGON_H_	modules/simu/simuv2/SOLID-2.0/src/Polygon.h	28;"	d
_POLYHEDRON_H_	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.h	28;"	d
_POLYTOPE_H_	modules/simu/simuv2/SOLID-2.0/src/Polytope.h	28;"	d
_PREF_H_	drivers/human/pref.h	23;"	d
_QUATERNION_H_	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	28;"	d
_RACEENGINE_H_	libs/raceengineclient/raceengine.h	27;"	d
_RACEGL_H_	libs/raceengineclient/racegl.h	27;"	d
_RACEINIT_H_	libs/raceengineclient/raceinit.h	32;"	d
_RACEMAIN_H_	libs/raceengineclient/racemain.h	27;"	d
_RACEMANMENU_H_	libs/raceengineclient/racemanmenu.h	27;"	d
_RACEMANV1_H_	interfaces/raceman.h	28;"	d
_RACERESULTS_H_	libs/raceengineclient/raceresults.h	27;"	d
_RACESTATE_H_	libs/raceengineclient/racestate.h	27;"	d
_RELIEF_H_	tools/trackgen/relief.h	27;"	d
_RESPONSE_H_	modules/simu/simuv2/SOLID-2.0/src/Response.h	28;"	d
_RESPTABLE_H_	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	28;"	d
_ROBOTTOOLS_H_	libs/robottools/robottools.h	27;"	d
_ROBOTV1_H_	interfaces/robot.h	43;"	d
_SCREEN_PROPERTIES_H_	libs/tgfclient/screen_properties.h	27;"	d
_SEGLEARN_H_	drivers/bt/learn.h	22;"	d
_SEGLEARN_H_	drivers/damned/learn.h	22;"	d
_SEGLEARN_H_	drivers/olethros/learn.h	23;"	d
_SHAPE_H_	modules/simu/simuv2/SOLID-2.0/src/Shape.h	28;"	d
_SHARED_MEMORY_H_	linux/shared_memory.h	3;"	d
_SIMFCT_H_	modules/simu/simuv2/sim.h	21;"	d
_SIMFCT_H_	modules/simu/simuv3/sim.h	21;"	d
_SIMPLEX_H_	modules/simu/simuv2/SOLID-2.0/src/Simplex.h	28;"	d
_SIMUCONFIG_H_	libs/confscreens/simuconfig.h	26;"	d
_SIMUV1_H_	interfaces/simu.h	35;"	d
_SINGLEPLAYER_H_	libs/raceengineclient/singleplayer.h	27;"	d
_SOLID_H_	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	28;"	d
_SOUNDCONFIG_H_	libs/confscreens/soundconfig.h	26;"	d
_SPHERE_H_	modules/simu/simuv2/SOLID-2.0/src/Sphere.h	28;"	d
_SPLASH_H_	libs/client/splash.h	22;"	d
_SPLINE_H_	drivers/berniw/spline.h	21;"	d
_SPLINE_H_	drivers/berniw2/spline.h	21;"	d
_SPLINE_H_	drivers/berniw3/spline.h	21;"	d
_SPLINE_H_	drivers/bt/spline.h	21;"	d
_SPLINE_H_	drivers/damned/spline.h	21;"	d
_SPLINE_H_	drivers/human/spline.h	21;"	d
_SPLINE_H_	drivers/inferno/spline.h	21;"	d
_SPLINE_H_	drivers/lliaw/spline.h	21;"	d
_SPLINE_H_	drivers/olethros/spline.h	21;"	d
_SPLINE_H_	drivers/sparkle/spline.h	21;"	d
_SPLINE_H_	drivers/tita/spline.h	21;"	d
_SSGASHAPES_H_	windows/include/plib/ssgaShapes.h	26;"	d
_SSGAUX_H_	windows/include/plib/ssgAux.h	26;"	d
_SSGA_TYPE_CUBE	windows/include/plib/ssgAux.h	38;"	d
_SSGA_TYPE_CYLINDER	windows/include/plib/ssgAux.h	40;"	d
_SSGA_TYPE_LENSFLARE	windows/include/plib/ssgAux.h	45;"	d
_SSGA_TYPE_PARTICLESYSTEM	windows/include/plib/ssgAux.h	43;"	d
_SSGA_TYPE_PATCH	windows/include/plib/ssgAux.h	41;"	d
_SSGA_TYPE_SHAPE	windows/include/plib/ssgAux.h	37;"	d
_SSGA_TYPE_SPHERE	windows/include/plib/ssgAux.h	39;"	d
_SSGA_TYPE_TEAPOT	windows/include/plib/ssgAux.h	42;"	d
_SSGA_TYPE_WAVESYSTEM	windows/include/plib/ssgAux.h	44;"	d
_SSG_BACKWARDS_REFERENCE	windows/include/plib/ssg.h	87;"	d
_SSG_PUBLIC	tools/texmapper/ssgLocal.h	2;"	d
_SSG_PUBLIC	windows/include/plib/ssg.h	40;"	d
_SSG_TYPE_ANIMTRANSFORM	windows/include/plib/ssg.h	102;"	d
_SSG_TYPE_AXISTRANSFORM	windows/include/plib/ssg.h	101;"	d
_SSG_TYPE_BASE	windows/include/plib/ssg.h	89;"	d
_SSG_TYPE_BASETRANSFORM	windows/include/plib/ssg.h	98;"	d
_SSG_TYPE_BRANCH	windows/include/plib/ssg.h	97;"	d
_SSG_TYPE_COLOURARRAY	windows/include/plib/ssg.h	122;"	d
_SSG_TYPE_CUTOUT	windows/include/plib/ssg.h	109;"	d
_SSG_TYPE_ENTITY	windows/include/plib/ssg.h	92;"	d
_SSG_TYPE_INDEXARRAY	windows/include/plib/ssg.h	123;"	d
_SSG_TYPE_INTERLEAVEDARRAY	windows/include/plib/ssg.h	125;"	d
_SSG_TYPE_INVISIBLE	windows/include/plib/ssg.h	110;"	d
_SSG_TYPE_LEAF	windows/include/plib/ssg.h	93;"	d
_SSG_TYPE_NORMALARRAY	windows/include/plib/ssg.h	120;"	d
_SSG_TYPE_RANGESELECTOR	windows/include/plib/ssg.h	104;"	d
_SSG_TYPE_ROOT	windows/include/plib/ssg.h	108;"	d
_SSG_TYPE_SELECTOR	windows/include/plib/ssg.h	103;"	d
_SSG_TYPE_SIMPLELIST	windows/include/plib/ssg.h	118;"	d
_SSG_TYPE_SIMPLESTATE	windows/include/plib/ssg.h	114;"	d
_SSG_TYPE_STATE	windows/include/plib/ssg.h	113;"	d
_SSG_TYPE_STATESELECTOR	windows/include/plib/ssg.h	115;"	d
_SSG_TYPE_TEXCOORDARRAY	windows/include/plib/ssg.h	121;"	d
_SSG_TYPE_TEXTRANS	windows/include/plib/ssg.h	100;"	d
_SSG_TYPE_TEXTURE	windows/include/plib/ssg.h	128;"	d
_SSG_TYPE_TIMEDSELECTOR	windows/include/plib/ssg.h	105;"	d
_SSG_TYPE_TRANSFORM	windows/include/plib/ssg.h	99;"	d
_SSG_TYPE_TRANSFORMARRAY	windows/include/plib/ssg.h	124;"	d
_SSG_TYPE_TWEEN	windows/include/plib/ssg.h	106;"	d
_SSG_TYPE_TWEENCONTROLLER	windows/include/plib/ssg.h	107;"	d
_SSG_TYPE_VERTEXARRAY	windows/include/plib/ssg.h	119;"	d
_SSG_TYPE_VTABLE	windows/include/plib/ssg.h	94;"	d
_SSG_TYPE_VTXARRAY	windows/include/plib/ssg.h	96;"	d
_SSG_TYPE_VTXTABLE	windows/include/plib/ssg.h	95;"	d
_SSG_USE_DLIST	windows/include/plib/ssgconf.h	29;"	d
_STEER_H_	modules/simu/simuv2/steer.h	21;"	d
_STEER_H_	modules/simu/simuv3/steer.h	21;"	d
_STRAIGHT_2T_H_	libs/math/straight2_t.h	30;"	d
_STRATEGY_H_	drivers/bt/strategy.h	26;"	d
_STRATEGY_H_	drivers/damned/strategy.h	26;"	d
_STRATEGY_H_	drivers/olethros/strategy.h	27;"	d
_SUSP_H__	modules/simu/simuv2/susp.h	21;"	d
_SUSP_H__	modules/simu/simuv3/susp.h	21;"	d
_TELEMETRY_H_	interfaces/telemetry.h	22;"	d
_TLM_H_	modules/telemetry/tlm.h	21;"	d
_TORCSDOC_H_	doc/torcsdoc.h	26;"	d
_TORCS_H_	libs/client/client.h	22;"	d
_TORCS_PORTABILITY_H_	libs/portability/portability.h	21;"	d
_TRACKDESC_H_	drivers/berniw/trackdesc.h	29;"	d
_TRACKDESC_H_	drivers/berniw2/trackdesc.h	29;"	d
_TRACKDESC_H_	drivers/berniw3/trackdesc.h	29;"	d
_TRACKDESC_H_	drivers/human/trackdesc.h	29;"	d
_TRACKDESC_H_	drivers/inferno/trackdesc.h	29;"	d
_TRACKDESC_H_	drivers/lliaw/trackdesc.h	29;"	d
_TRACKDESC_H_	drivers/tita/trackdesc.h	29;"	d
_TRACKGEN_H_	tools/trackgen/trackgen.h	27;"	d
_TRACKINC_H__	modules/track/trackinc.h	22;"	d
_TRACKV1_H_	interfaces/track.h	35;"	d
_TRANSFORM_H_	modules/simu/simuv2/SOLID-2.0/src/Transform.h	28;"	d
_TRANSMISSION_H_	modules/simu/simuv2/transmission.h	27;"	d
_TRANSMISSION_H_	modules/simu/simuv3/transmission.h	27;"	d
_TUPLE3_H_	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	28;"	d
_TUPLE4_H_	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	28;"	d
_UTIL_H_	tools/trackgen/util.h	27;"	d
_VECTOR_H_	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	28;"	d
_VERTEXBASE_H_	modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	28;"	d
_WCHAR_T_DEFINED	windows/include/GL/glut.h	44;"	d
_WHEEL_H__	modules/simu/simuv2/wheel.h	21;"	d
_WHEEL_H__	modules/simu/simuv3/wheel.h	21;"	d
_WINDOWSSPEC_H_	windows/windowsspec.h	21;"	d
_XML_H_	libs/txml/xml.h	8;"	d
__CARV1_H__	interfaces/car.h	29;"	d
__GRMULTI	modules/graphic/ssggraph/grmultitexstate.h	20;"	d
__INCLUDED_JS_H__	windows/include/plib/js.h	25;"	d
__MENU__H__	libs/tgfclient/guimenu.h	21;"	d
__OSSPEC__H__	linux/osspec.h	22;"	d
__OSSPEC__H__	windows/osspec.h	22;"	d
__OggSoundStream_h__	libs/musicplayer/OggSoundStream.h	2;"	d
__OpenALMusicPlayer_h__	libs/musicplayer/OpenALMusicPlayer.h	2;"	d
__RACEMANTOOLS_H__	libs/racescreens/racescreens.h	21;"	d
__REPLAYV1_H__	interfaces/replay.h	22;"	d
__SLPORTABILITY_H__	windows/include/plib/slPortability.h	26;"	d
__SL_H__	windows/include/plib/sl.h	26;"	d
__SM_H__	windows/include/plib/sm.h	26;"	d
__SoundStream_h__	libs/musicplayer/SoundStream.h	2;"	d
__TGFCLIENT__H__	libs/tgfclient/tgfclient.h	28;"	d
__TGF__H__	libs/tgf/tgf.h	28;"	d
__al_h_	windows/include/AL/al.h	2;"	d
__glext_h_	windows/include/GL/glext.h	2;"	d
__glut_h__	windows/include/GL/glut.h	2;"	d
__mb_cur_max	libs/client/errno.cpp	/^    int __mb_cur_max;$/;"	v
__musicplayer_h__	libs/musicplayer/musicplayer.h	2;"	d
__wglext_h_	windows/include/GL/wglext.h	2;"	d
_accelCmd	interfaces/car.h	363;"	d
_accel_x	interfaces/car.h	243;"	d
_accel_y	interfaces/car.h	244;"	d
_accel_z	interfaces/car.h	245;"	d
_bestLapTime	interfaces/car.h	163;"	d
_bonnetPos_x	interfaces/car.h	106;"	d
_bonnetPos_y	interfaces/car.h	107;"	d
_bonnetPos_z	interfaces/car.h	108;"	d
_brakeCmd	interfaces/car.h	364;"	d
_brakeDiskRadius	interfaces/car.h	60;"	d
_brakeTemp	interfaces/car.h	271;"	d
_carHandle	interfaces/car.h	326;"	d
_carName	interfaces/car.h	93;"	d
_category	interfaces/car.h	94;"	d
_clutchCmd	interfaces/car.h	365;"	d
_commitBestLapTime	interfaces/car.h	164;"	d
_corner_x	interfaces/car.h	250;"	d
_corner_y	interfaces/car.h	251;"	d
_curLapTime	interfaces/car.h	166;"	d
_curTime	interfaces/car.h	167;"	d
_currentMinSpeedForLap	interfaces/car.h	170;"	d
_dammage	interfaces/car.h	343;"	d
_debug	interfaces/car.h	340;"	d
_deltaBestLapTime	interfaces/car.h	165;"	d
_dimension	interfaces/car.h	99;"	d
_dimension_x	interfaces/car.h	100;"	d
_dimension_y	interfaces/car.h	101;"	d
_dimension_z	interfaces/car.h	102;"	d
_displayMode	interfaces/raceman.h	172;"	d
_distFromStartLine	interfaces/car.h	180;"	d
_distRaced	interfaces/car.h	179;"	d
_dist_code	windows/include/zconf.h	20;"	d
_driverIndex	interfaces/car.h	324;"	d
_driverType	interfaces/car.h	95;"	d
_drvPos_x	interfaces/car.h	103;"	d
_drvPos_y	interfaces/car.h	104;"	d
_drvPos_z	interfaces/car.h	105;"	d
_engineMaxPw	interfaces/car.h	334;"	d
_engineMaxTq	interfaces/car.h	333;"	d
_enginerpm	interfaces/car.h	328;"	d
_enginerpmMax	interfaces/car.h	330;"	d
_enginerpmMaxPw	interfaces/car.h	332;"	d
_enginerpmMaxTq	interfaces/car.h	331;"	d
_enginerpmRedLine	interfaces/car.h	329;"	d
_event	interfaces/car.h	183;"	d
_exhaustNb	interfaces/car.h	116;"	d
_exhaustPos	interfaces/car.h	117;"	d
_exhaustPower	interfaces/car.h	118;"	d
_fuel	interfaces/car.h	338;"	d
_gear	interfaces/car.h	339;"	d
_gearCmd	interfaces/car.h	366;"	d
_gearNb	interfaces/car.h	336;"	d
_gearOffset	interfaces/car.h	337;"	d
_gearRatio	interfaces/car.h	335;"	d
_iconColor	interfaces/car.h	113;"	d
_laps	interfaces/car.h	171;"	d
_lapsBehindLeader	interfaces/car.h	176;"	d
_lastLapTime	interfaces/car.h	168;"	d
_length	drivers/olethros/TrackData.h	/^    float _length;$/;"	m	class:Point
_length_code	windows/include/zconf.h	21;"	d
_lightCmd	interfaces/car.h	370;"	d
_maxDammage	interfaces/raceman.h	82;"	d
_modName	interfaces/car.h	327;"	d
_msgCmd	interfaces/car.h	368;"	d
_msgColorCmd	interfaces/car.h	369;"	d
_name	interfaces/car.h	91;"	d
_nbPitStops	interfaces/car.h	172;"	d
_ncars	interfaces/raceman.h	78;"	d
_ogg_calloc	windows/include/ogg/os_types.h	23;"	d
_ogg_free	windows/include/ogg/os_types.h	25;"	d
_ogg_malloc	windows/include/ogg/os_types.h	22;"	d
_ogg_realloc	windows/include/ogg/os_types.h	24;"	d
_ov_header_fseek_wrap	windows/include/vorbis/vorbisfile.h	/^static int _ov_header_fseek_wrap(FILE *f,ogg_int64_t off,int whence){$/;"	f
_paramsHandle	interfaces/car.h	325;"	d
_penaltyList	interfaces/car.h	184;"	d
_penaltyTime	interfaces/car.h	185;"	d
_pit	interfaces/car.h	181;"	d
_pitFuel	interfaces/car.h	438;"	d
_pitRepair	interfaces/car.h	439;"	d
_pitStopType	interfaces/car.h	440;"	d
_pitch	interfaces/car.h	237;"	d
_pos	interfaces/car.h	174;"	d
_posMat	interfaces/car.h	252;"	d
_pos_X	interfaces/car.h	233;"	d
_pos_Y	interfaces/car.h	234;"	d
_pos_Z	interfaces/car.h	235;"	d
_raceCmd	interfaces/car.h	367;"	d
_raceNumber	interfaces/car.h	97;"	d
_raceState	interfaces/raceman.h	80;"	d
_raceType	interfaces/raceman.h	81;"	d
_reCarInfo	interfaces/raceman.h	167;"	d
_reCurTime	interfaces/raceman.h	168;"	d
_reFilename	interfaces/raceman.h	164;"	d
_reGameScreen	interfaces/raceman.h	162;"	d
_reGraphicItf	interfaces/raceman.h	160;"	d
_reLastTime	interfaces/raceman.h	171;"	d
_reMenuScreen	interfaces/raceman.h	163;"	d
_reName	interfaces/raceman.h	165;"	d
_reParam	interfaces/raceman.h	157;"	d
_reRaceName	interfaces/raceman.h	166;"	d
_reRacemanItf	interfaces/raceman.h	158;"	d
_reRunning	interfaces/raceman.h	170;"	d
_reSimItf	interfaces/raceman.h	161;"	d
_reState	interfaces/raceman.h	156;"	d
_reTimeMult	interfaces/raceman.h	169;"	d
_reTrackItf	interfaces/raceman.h	159;"	d
_reaction	interfaces/car.h	342;"	d
_refreshDisplay	interfaces/raceman.h	173;"	d
_remainingLaps	interfaces/car.h	173;"	d
_ride	interfaces/car.h	270;"	d
_rimRadius	interfaces/car.h	57;"	d
_roll	interfaces/car.h	236;"	d
_scheduledEventTime	interfaces/car.h	182;"	d
_skid	interfaces/car.h	341;"	d
_skillLevel	interfaces/car.h	96;"	d
_speed_X	interfaces/car.h	248;"	d
_speed_Y	interfaces/car.h	249;"	d
_speed_x	interfaces/car.h	240;"	d
_speed_y	interfaces/car.h	241;"	d
_speed_z	interfaces/car.h	242;"	d
_ssgMaterial	modules/graphic/ssggraph/grloadac.cpp	/^struct _ssgMaterial$/;"	s	file:
_startRank	interfaces/car.h	98;"	d
_statGC	interfaces/car.h	109;"	d
_statGC_x	interfaces/car.h	110;"	d
_statGC_y	interfaces/car.h	111;"	d
_statGC_z	interfaces/car.h	112;"	d
_state	interfaces/car.h	246;"	d
_steerCmd	interfaces/car.h	362;"	d
_steerLock	interfaces/car.h	115;"	d
_strdup	libs/tgf/tgf.h	165;"	d
_tank	interfaces/car.h	114;"	d
_target_speed	interfaces/car.h	231;"	d
_teamname	interfaces/car.h	92;"	d
_tgf_win_calloc	libs/tgf/tgf.cpp	/^void * _tgf_win_calloc(size_t num, size_t size)$/;"	f
_tgf_win_free	libs/tgf/tgf.cpp	/^void _tgf_win_free(void * memblock)$/;"	f
_tgf_win_malloc	libs/tgf/tgf.cpp	/^void * _tgf_win_malloc(size_t size)$/;"	f
_tgf_win_realloc	libs/tgf/tgf.cpp	/^void * _tgf_win_realloc(void * memblock, size_t size)$/;"	f
_tgf_win_strdup	libs/tgf/tgf.cpp	/^char * _tgf_win_strdup(const char * str)$/;"	f
_timeBeforeNext	interfaces/car.h	178;"	d
_timeBehindLeader	interfaces/car.h	175;"	d
_timeBehindPrev	interfaces/car.h	177;"	d
_tireHeight	interfaces/car.h	58;"	d
_tireWidth	interfaces/car.h	59;"	d
_topSpeed	interfaces/car.h	169;"	d
_totLaps	interfaces/raceman.h	79;"	d
_tr_align	windows/include/zconf.h	22;"	d
_tr_flush_block	windows/include/zconf.h	23;"	d
_tr_init	windows/include/zconf.h	24;"	d
_tr_stored_block	windows/include/zconf.h	25;"	d
_tr_tally	windows/include/zconf.h	26;"	d
_trkPos	interfaces/car.h	247;"	d
_tyreCondition	interfaces/car.h	282;"	d
_tyreT_in	interfaces/car.h	279;"	d
_tyreT_mid	interfaces/car.h	280;"	d
_tyreT_out	interfaces/car.h	281;"	d
_ulEndianTest	windows/include/plib/ul.h	/^static const int _ulEndianTest = 1;$/;"	v
_vorbis_codec_h_	windows/include/vorbis/codec.h	19;"	d
_wheelFx	interfaces/car.h	276;"	d
_wheelFy	interfaces/car.h	277;"	d
_wheelFz	interfaces/car.h	278;"	d
_wheelRadius	interfaces/car.h	61;"	d
_wheelSeg	interfaces/car.h	273;"	d
_wheelSlipAccel	interfaces/car.h	275;"	d
_wheelSlipSide	interfaces/car.h	274;"	d
_wheelSpinVel	interfaces/car.h	272;"	d
_yaw	interfaces/car.h	238;"	d
_yaw_rate	interfaces/car.h	239;"	d
a	drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon154
a	drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon153
a	drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon198
a	drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon197
a	drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon177
a	drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon176
a	drivers/human/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon189
a	drivers/human/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon188
a	drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon163
a	drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon162
a	drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon209
a	drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon208
a	drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon170
a	drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon169
a	libs/learning/ANN.h	/^	real a; \/\/\/< learning rate$/;"	m	struct:ANN_
a	libs/learning/ANN.h	/^	real a; \/\/\/< learning rate$/;"	m	struct:Layer_
a	libs/tgfclient/gui.h	/^			struct { float r, g, b, a; };$/;"	m	struct:ForeGroundColor::__anon138::__anon139
a	modules/graphic/ssggraph/QSoundChar.h	/^	float a;$/;"	m	struct:QSoundChar_
a	modules/graphic/ssggraph/SoundInterface.h	/^		float a; \/\/amplitude modulation$/;"	m	struct:OpenalSoundInterface::SoundChar_
a	modules/graphic/ssggraph/SoundInterface.h	/^		float a; \/\/amplitude modulation$/;"	m	struct:PlibSoundInterface::SoundChar_
a	modules/graphic/ssggraph/SoundInterface.h	/^	float a; \/\/\/< amplitude$/;"	m	struct:SoundPri_
a	modules/graphic/ssggraph/TorcsSound.h	/^	float a; \/\/\/< Environmental attenuation$/;"	m	class:SoundSource
a	modules/simu/simuv2/engine.h	/^    tdble a;$/;"	m	struct:__anon17
a	tools/trackgen/easymesh.cpp	/^	int a, b, c, d;       \/* left, right, start and end point *\/$/;"	m	struct:sid	file:
a	topview/topview.cpp	/^	float a;$/;"	m	struct:Color	file:
a	windows/include/plib/sg.h	/^  sgVec3 a ;$/;"	m	struct:sgLineSegment3
a	windows/include/plib/sg.h	/^  sgdVec3 a ;$/;"	m	struct:sgdLineSegment3
aColor	libs/racescreens/driverselect.cpp	/^static float aColor[] = { 1.0, 0.0, 0.0, 1.0 };$/;"	v	file:
aMax	modules/simu/simuv2/car.cpp	/^const tdble aMax = 1.04f; \/\/ 60 degrees DOF limit$/;"	v
abortScr	libs/racescreens/miscscreens.cpp	/^    void	*abortScr;$/;"	m	struct:__anon105	file:
abs_error	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^Scalar abs_error = 1e-10; \/\/ absolute error if the distance is almost zero$/;"	v
absolute	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix Matrix::absolute() const {$/;"	f	class:Matrix
absolute	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix absolute(const Matrix& m) { return m.absolute(); }$/;"	f
acc	libs/tgf/tgf.h	/^    tPosd acc; \/**< acceleration *\/$/;"	m	struct:__anon97
acc	windows/include/plib/ssgaParticleSystem.h	/^  sgVec3 acc ;$/;"	m	class:ssgaParticle
acc_flag	drivers/human/human.cpp	/^static bool* acc_flag;$/;"	v	file:
accel	drivers/berniw/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	drivers/berniw2/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	drivers/berniw3/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	drivers/human/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	drivers/inferno/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	drivers/lliaw/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	drivers/olethros/Trajectory.h	/^    std::vector<float> accel; \/\/\/<  maximum acceleration$/;"	m	class:Trajectory
accel	drivers/olethros/learn.h	/^	float* accel; \/\/\/< Accelerations for each quantum$/;"	m	class:olethros::SegLearn
accel	drivers/tita/mycar.h	/^		double accel;$/;"	m	class:MyCar
accelCmd	interfaces/car.h	/^	tdble accelCmd; \/**< Accelerator command [0.0, 1.0] *\/$/;"	m	struct:__anon81
accel_value	linux/shared_memory.h	/^int accel_value;$/;"	v
accuracy	predictor/train.py	/^accuracy = tf.reduce_mean(tf.cast(correct_prediction, "float"))$/;"	v
accuracy	predictor/train2.py	/^accuracy = tf.reduce_mean(tf.cast(correct_prediction, "float"))$/;"	v
action	modules/graphic/ssggraph/grcam.h	/^    void action(void) {$/;"	f	class:cGrCamera
activate	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::activate(int x, int y, int w, int h)$/;"	f	class:cGrScreen
activateViewport	modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::activateViewport (void)$/;"	f	class:cGrCarCamMirror
active	modules/graphic/ssggraph/grscreen.h	/^		int active;								\/\/ Is the screen activated.$/;"	m	class:cGrScreen
actuating_data_name	drivers/data_list.h	/^enum actuating_data_name{ACCEL, BRAKE, LEFT_STEER, RIGHT_STEER, STEER_MODE, NUM_DUMMY};$/;"	g
add	modules/graphic/ssggraph/grcam.h	/^    void add(tGrCamHead *head) {$/;"	f	class:cGrCamera
add	windows/include/plib/ssg.h	/^  void   add ( float r, float g, float b, float a )$/;"	f	class:ssgColourArray
add	windows/include/plib/ssg.h	/^  void   add ( float u, float v )$/;"	f	class:ssgTexCoordArray
add	windows/include/plib/ssg.h	/^  void   add ( float x, float y, float z )$/;"	f	class:ssgNormalArray
add	windows/include/plib/ssg.h	/^  void   add ( float x, float y, float z )$/;"	f	class:ssgVertexArray
add	windows/include/plib/ssg.h	/^  void   add ( sgMat4  thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgTransformArray
add	windows/include/plib/ssg.h	/^  void   add ( sgVec2   thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgTexCoordArray
add	windows/include/plib/ssg.h	/^  void   add ( sgVec3   thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgNormalArray
add	windows/include/plib/ssg.h	/^  void   add ( sgVec3   thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgVertexArray
add	windows/include/plib/ssg.h	/^  void   add ( sgVec4   thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgColourArray
add	windows/include/plib/ssg.h	/^  void   add ( short    thing ) { raw_add ( (char *) &thing ) ; } ;$/;"	f	class:ssgIndexArray
add	windows/include/plib/ssg.h	/^  void add ( ssgInterleavedArrayElement  thing ) { raw_add ( (char *) &thing ) ; } ;$/;"	f	class:ssgInterleavedArray
add	windows/include/plib/ssg.h	/^  void add ( ssgInterleavedArrayElement *thing ) { raw_add ( (char *)  thing ) ; } ;$/;"	f	class:ssgInterleavedArray
addEntry	modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^  void addEntry(ShapeType type1, ShapeType type2, Function function) { $/;"	f	class:AlgoTable
addForce	windows/include/plib/sg.h	/^  void addForce    ( sgVec3 f ) { sgAddVec3    ( force, f ) ; }$/;"	f	class:sgParticle
addIndex	windows/include/plib/ssg.h	/^	void addIndex ( short i) { indices->add(i); }$/;"	f	class:ssgVtxArray
addPair	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void addPair(ObjectPtr object1, ObjectPtr object2) {$/;"	f
addParam	libs/tgf/params.cpp	/^static struct param *addParam(struct parmHeader *conf, struct section *section,$/;"	f	file:
addParent	windows/include/plib/ssg.h	/^  void addParent    ( ssgEntity *entity ) { parents.addEntity    ( entity ) ; }$/;"	f	class:ssgEntity
addPath	windows/include/plib/ssg.h	/^  void addPath ( ssgEntity *e )$/;"	f	class:ssgHit
addSample	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^TorcsSound* OpenalSoundInterface::addSample (const char* filename, int flags, bool loop, bool static_pool)$/;"	f	class:OpenalSoundInterface
addSample	modules/graphic/ssggraph/PlibSoundInterface.cpp	/^TorcsSound* PlibSoundInterface::addSample (const char* filename, int flags, bool loop, bool static_pool)$/;"	f	class:PlibSoundInterface
addSection	libs/tgf/params.cpp	/^static struct section *addSection(struct parmHeader *conf,$/;"	f	file:
addSides	modules/track/track4.cpp	/^static void addSides(tTrackSeg *curSeg, void *trackHandle, tTrack *theTrack, int curStep, int steps)$/;"	f	file:
addTime	libs/tgf/tgf.h	/^  double addTime;$/;"	m	class:ProfileInstance
addWithin	libs/tgf/params.cpp	/^static void addWithin(struct param *curParam, char *s1) {$/;"	f	file:
additive	windows/include/plib/ssg.h	/^  int additive ;$/;"	m	class:ssgRangeSelector
addr	drivers/human/human.cpp	/^struct sockaddr_in addr;$/;"	v	typeref:struct:sockaddr_in
addr_client_hanieum	drivers/human/human.cpp	/^struct sockaddr_in addr_client_hanieum;$/;"	v	typeref:struct:sockaddr_in
addr_hanieum	drivers/human/human.cpp	/^struct sockaddr_in addr_hanieum;$/;"	v	typeref:struct:sockaddr_in
adjoint	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix Matrix::adjoint() const {$/;"	f	class:Matrix
adjoint	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix adjoint(const Matrix& m) { return m.adjoint(); }$/;"	f
adjustRadius	drivers/berniw/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	drivers/berniw2/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	drivers/berniw3/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	drivers/human/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	drivers/inferno/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	drivers/lliaw/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	drivers/tita/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adler	windows/include/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	windows/include/zconf.h	27;"	d
adler32_combine	windows/include/zconf.h	28;"	d
adler32_combine	windows/include/zlib.h	1579;"	d
adler32_combine64	windows/include/zconf.h	29;"	d
advanceStep	libs/confscreens/joystickconfig.cpp	/^static void advanceStep (void)$/;"	f	file:
aero	modules/simu/simuv2/carstruct.h	/^    tAero		aero;$/;"	m	struct:__anon23
aero	modules/simu/simuv3/carstruct.h	/^    tAero		aero;$/;"	m	struct:__anon42
aero_damage	modules/simu/simuv3/SimulationOptions.h	/^	bool aero_damage; \/\/\/< If true, damage can cause changes to the aerodynamic profile.$/;"	m	class:SimulationOptions
aero_factor	modules/simu/simuv3/SimulationOptions.h	/^	float aero_factor; \/\/\/< Multiplier for aerodynamic downforce. Defaults to 4.0 for all cases apart from pro, where it defaults to 1.0.$/;"	m	class:SimulationOptions
aeroflow_model	modules/simu/simuv3/SimulationOptions.h	/^	enum AeroFlowModel aeroflow_model; \/\/\/< Experimental option$/;"	m	class:SimulationOptions	typeref:enum:SimulationOptions::AeroFlowModel
affine	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point affine(const Point& p1, const Point& p2, Scalar t) {$/;"	f
aheadCarColor	modules/graphic/ssggraph/grtrackmap.cpp	/^GLfloat cGrTrackMap::aheadCarColor[4];$/;"	m	class:cGrTrackMap	file:
aheadCarColor	modules/graphic/ssggraph/grtrackmap.h	/^		static GLfloat aheadCarColor[4];$/;"	m	class:cGrTrackMap
ainfo	windows/include/plib/sl.h	/^  audio_info_t	  ainfo;$/;"	m	class:slDSP
ainfo	windows/include/plib/sl.h	/^  audio_info_t    ainfo;        \/\/ ioctl structure$/;"	m	class:slDSP
airSpeed2	modules/simu/simuv2/carstruct.h	/^    tdble	airSpeed2;	\/* current air speed (squared) for aerodynamic forces *\/$/;"	m	struct:__anon23
airSpeed2	modules/simu/simuv3/carstruct.h	/^    tdble	airSpeed2;	\/* current air speed (squared) for aerodynamic forces *\/$/;"	m	struct:__anon42
alBuffer3f	windows/include/AL/al.h	/^void          (ALAPIENTRY *alBuffer3f)( ALuint bid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	v
alBuffer3i	windows/include/AL/al.h	/^void          (ALAPIENTRY *alBuffer3i)( ALuint bid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	v
alBufferData	windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferData)( ALuint bid, ALenum format, const ALvoid* data, ALsizei size, ALsizei freq );$/;"	v
alBufferf	windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferf)( ALuint bid, ALenum param, ALfloat value);$/;"	v
alBufferfv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferfv)( ALuint bid, ALenum param, const ALfloat* values );$/;"	v
alBufferi	windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferi)( ALuint bid, ALenum param, ALint value);$/;"	v
alBufferiv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferiv)( ALuint bid, ALenum param, const ALint* values );$/;"	v
alDeleteBuffers	windows/include/AL/al.h	/^void          (ALAPIENTRY *alDeleteBuffers)( ALsizei n, const ALuint* buffers );$/;"	v
alDeleteSources	windows/include/AL/al.h	/^void          (ALAPIENTRY *alDeleteSources)( ALsizei n, const ALuint* sources );$/;"	v
alDisable	windows/include/AL/al.h	/^void          (ALAPIENTRY *alDisable)( ALenum capability ); $/;"	v
alDistanceModel	windows/include/AL/al.h	/^void          (ALAPIENTRY *alDistanceModel)( ALenum distanceModel );$/;"	v
alDopplerFactor	windows/include/AL/al.h	/^void          (ALAPIENTRY *alDopplerFactor)( ALfloat value );$/;"	v
alDopplerVelocity	windows/include/AL/al.h	/^void          (ALAPIENTRY *alDopplerVelocity)( ALfloat value );$/;"	v
alEnable	windows/include/AL/al.h	/^void          (ALAPIENTRY *alEnable)( ALenum capability );$/;"	v
alGenBuffers	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGenBuffers)( ALsizei n, ALuint* buffers );$/;"	v
alGenSources	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGenSources)( ALsizei n, ALuint* sources );$/;"	v
alGetBoolean	windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alGetBoolean)( ALenum param );$/;"	v
alGetBooleanv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBooleanv)( ALenum param, ALboolean* data );$/;"	v
alGetBuffer3f	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBuffer3f)( ALuint bid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	v
alGetBuffer3i	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBuffer3i)( ALuint bid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	v
alGetBufferf	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBufferf)( ALuint bid, ALenum param, ALfloat* value );$/;"	v
alGetBufferfv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBufferfv)( ALuint bid, ALenum param, ALfloat* values );$/;"	v
alGetBufferi	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBufferi)( ALuint bid, ALenum param, ALint* value );$/;"	v
alGetBufferiv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBufferiv)( ALuint bid, ALenum param, ALint* values );$/;"	v
alGetDouble	windows/include/AL/al.h	/^ALdouble      (ALAPIENTRY *alGetDouble)( ALenum param );$/;"	v
alGetDoublev	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetDoublev)( ALenum param, ALdouble* data );$/;"	v
alGetEnumValue	windows/include/AL/al.h	/^ALenum        (ALAPIENTRY *alGetEnumValue)( const ALchar* ename );$/;"	v
alGetError	windows/include/AL/al.h	/^ALenum        (ALAPIENTRY *alGetError)( ALvoid );$/;"	v
alGetFloat	windows/include/AL/al.h	/^ALfloat       (ALAPIENTRY *alGetFloat)( ALenum param );$/;"	v
alGetFloatv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetFloatv)( ALenum param, ALfloat* data );$/;"	v
alGetInteger	windows/include/AL/al.h	/^ALint         (ALAPIENTRY *alGetInteger)( ALenum param );$/;"	v
alGetIntegerv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetIntegerv)( ALenum param, ALint* data );$/;"	v
alGetListener3f	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListener3f)( ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3 );$/;"	v
alGetListener3i	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListener3i)( ALenum param, ALint *value1, ALint *value2, ALint *value3 );$/;"	v
alGetListenerf	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListenerf)( ALenum param, ALfloat* value );$/;"	v
alGetListenerfv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListenerfv)( ALenum param, ALfloat* values );$/;"	v
alGetListeneri	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListeneri)( ALenum param, ALint* value );$/;"	v
alGetListeneriv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListeneriv)( ALenum param, ALint* values );$/;"	v
alGetProcAddress	windows/include/AL/al.h	/^void*         (ALAPIENTRY *alGetProcAddress)( const ALchar* fname );$/;"	v
alGetSource3f	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSource3f)( ALuint sid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	v
alGetSource3i	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSource3i)( ALuint sid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	v
alGetSourcef	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSourcef)( ALuint sid, ALenum param, ALfloat* value );$/;"	v
alGetSourcefv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSourcefv)( ALuint sid, ALenum param, ALfloat* values );$/;"	v
alGetSourcei	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSourcei)( ALuint sid, ALenum param, ALint* value );$/;"	v
alGetSourceiv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSourceiv)( ALuint sid, ALenum param, ALint* values );$/;"	v
alGetString	windows/include/AL/al.h	/^const ALchar* (ALAPIENTRY *alGetString)( ALenum param );$/;"	v
alIsBuffer	windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alIsBuffer)( ALuint bid );$/;"	v
alIsEnabled	windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alIsEnabled)( ALenum capability ); $/;"	v
alIsExtensionPresent	windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alIsExtensionPresent)(const ALchar* extname );$/;"	v
alIsSource	windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alIsSource)( ALuint sid ); $/;"	v
alListener3f	windows/include/AL/al.h	/^void          (ALAPIENTRY *alListener3f)( ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	v
alListener3i	windows/include/AL/al.h	/^void          (ALAPIENTRY *alListener3i)( ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	v
alListenerf	windows/include/AL/al.h	/^void          (ALAPIENTRY *alListenerf)( ALenum param, ALfloat value );$/;"	v
alListenerfv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alListenerfv)( ALenum param, const ALfloat* values );$/;"	v
alListeneri	windows/include/AL/al.h	/^void          (ALAPIENTRY *alListeneri)( ALenum param, ALint value );$/;"	v
alListeneriv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alListeneriv)( ALenum param, const ALint* values );$/;"	v
alSource3f	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSource3f)( ALuint sid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	v
alSource3i	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSource3i)( ALuint sid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	v
alSourcePause	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcePause)( ALuint sid );$/;"	v
alSourcePausev	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcePausev)( ALsizei ns, const ALuint *sids );$/;"	v
alSourcePlay	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcePlay)( ALuint sid );$/;"	v
alSourcePlayv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcePlayv)( ALsizei ns, const ALuint *sids );$/;"	v
alSourceQueueBuffers	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceQueueBuffers)( ALuint sid, ALsizei numEntries, const ALuint *bids );$/;"	v
alSourceRewind	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceRewind)( ALuint sid );$/;"	v
alSourceRewindv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceRewindv)( ALsizei ns, const ALuint *sids );$/;"	v
alSourceStop	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceStop)( ALuint sid );$/;"	v
alSourceStopv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceStopv)( ALsizei ns, const ALuint *sids );$/;"	v
alSourceUnqueueBuffers	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceUnqueueBuffers)( ALuint sid, ALsizei numEntries, ALuint *bids );$/;"	v
alSourcef	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcef)( ALuint sid, ALenum param, ALfloat value);$/;"	v
alSourcefv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcefv)( ALuint sid, ALenum param, const ALfloat* values );$/;"	v
alSourcei	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcei)( ALuint sid, ALenum param, ALint value);$/;"	v
alSourceiv	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceiv)( ALuint sid, ALenum param, const ALint* values );$/;"	v
alSpeedOfSound	windows/include/AL/al.h	/^void          (ALAPIENTRY *alSpeedOfSound)( ALfloat value );$/;"	v
alcCaptureCloseDevice	windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcCaptureCloseDevice)( ALCdevice *device );$/;"	v
alcCaptureOpenDevice	windows/include/AL/alc.h	/^ALCAPI ALCdevice *     (ALCAPIENTRY *alcCaptureOpenDevice)( const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize );$/;"	v
alcCaptureSamples	windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcCaptureSamples)( ALCdevice *device, ALCvoid *buffer, ALCsizei samples );$/;"	v
alcCaptureStart	windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcCaptureStart)( ALCdevice *device );$/;"	v
alcCaptureStop	windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcCaptureStop)( ALCdevice *device );$/;"	v
alcCloseDevice	windows/include/AL/alc.h	/^ALCAPI ALCboolean      (ALCAPIENTRY *alcCloseDevice)( ALCdevice *device );$/;"	v
alcCreateContext	windows/include/AL/alc.h	/^ALCAPI ALCcontext *    (ALCAPIENTRY *alcCreateContext)( ALCdevice *device, const ALCint* attrlist );$/;"	v
alcDestroyContext	windows/include/AL/alc.h	/^ALCAPI void	           (ALCAPIENTRY *alcDestroyContext)( ALCcontext *context );$/;"	v
alcGetContextsDevice	windows/include/AL/alc.h	/^ALCAPI ALCdevice *     (ALCAPIENTRY *alcGetContextsDevice)( ALCcontext *context );$/;"	v
alcGetCurrentContext	windows/include/AL/alc.h	/^ALCAPI ALCcontext *    (ALCAPIENTRY *alcGetCurrentContext)( ALCvoid );$/;"	v
alcGetEnumValue	windows/include/AL/alc.h	/^ALCAPI ALCenum         (ALCAPIENTRY *alcGetEnumValue)( ALCdevice *device, const ALCchar *enumname );$/;"	v
alcGetError	windows/include/AL/alc.h	/^ALCAPI ALCenum	       (ALCAPIENTRY *alcGetError)( ALCdevice *device );$/;"	v
alcGetIntegerv	windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcGetIntegerv)( ALCdevice *device, ALCenum param, ALCsizei size, ALCint *dest );$/;"	v
alcGetProcAddress	windows/include/AL/alc.h	/^ALCAPI void *          (ALCAPIENTRY *alcGetProcAddress)( ALCdevice *device, const ALCchar *funcname );$/;"	v
alcGetString	windows/include/AL/alc.h	/^ALCAPI const ALCchar*  (ALCAPIENTRY *alcGetString)( ALCdevice *device, ALCenum param );$/;"	v
alcIsExtensionPresent	windows/include/AL/alc.h	/^ALCAPI ALCboolean      (ALCAPIENTRY *alcIsExtensionPresent)( ALCdevice *device, const ALCchar *extname );$/;"	v
alcMakeContextCurrent	windows/include/AL/alc.h	/^ALCAPI ALCboolean      (ALCAPIENTRY *alcMakeContextCurrent)( ALCcontext *context );$/;"	v
alcOpenDevice	windows/include/AL/alc.h	/^ALCAPI ALCdevice *     (ALCAPIENTRY *alcOpenDevice)( const ALCchar *devicename );$/;"	v
alcProcessContext	windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcProcessContext)( ALCcontext *context );$/;"	v
alcSuspendContext	windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcSuspendContext)( ALCcontext *context );$/;"	v
align	libs/tgfclient/gui.h	/^	int align;$/;"	m	struct:__anon140
align	tools/texmapper/maintexmapper.cpp	/^    sgVec3	align;$/;"	m	struct:Face	file:
alignment_damage	modules/simu/simuv3/SimulationOptions.h	/^	bool alignment_damage; \/\/\/< If true, the suspension can become misaligned from large bumps.$/;"	m	class:SimulationOptions
all_bits	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static int all_bits;  \/\/ all_bits = bits|last_bit $/;"	v	file:
allocDefaultAtts	libs/txml/xmlparse.c	/^  int allocDefaultAtts;$/;"	m	struct:__anon115	file:
alloc_chain	windows/include/vorbis/codec.h	/^struct alloc_chain{$/;"	s
alloc_func	windows/include/zconf.h	111;"	d
alloc_func	windows/include/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
alone	drivers/bt/driver.h	/^		int alone;$/;"	m	class:Driver
alone	drivers/damned/driver.h	/^		int alone;$/;"	m	class:Driver
alone	drivers/olethros/driver.h	/^	int alone; \/\/\/< whether we are alone$/;"	m	class:olethros::Driver
alone_count	drivers/olethros/driver.h	/^	float alone_count; $/;"	m	class:olethros::Driver
alpha	libs/learning/policy.h	/^	real alpha; \/\/\/< learning rate$/;"	m	class:DiscretePolicy
alpha	windows/include/plib/ssg.h	/^	unsigned int alpha ;$/;"	m	struct:ssgTextureInfo
alpha	windows/include/png.h	/^   png_byte alpha; \/* for alpha channel files *\/$/;"	m	struct:png_color_8_struct
alpha	windows/include/png.h	/^   png_uint_16 alpha;$/;"	m	struct:png_sPLT_entry_struct
alpha_clamp	windows/include/plib/ssg.h	/^  float  alpha_clamp ;$/;"	m	class:ssgSimpleState
alutExit	windows/include/AL/alut.h	/^    void 	  (ALUTAPIENTRY *alutExit)( ALvoid );$/;"	v
alutInit	windows/include/AL/alut.h	/^    ALboolean (ALUTAPIENTRY *alutInit)( ALCchar *szDeviceName, ALCdevice **ppDevice, ALCcontext **ppContext );$/;"	v
alutLoadWAVFile	windows/include/AL/alut.h	/^    void      (ALUTAPIENTRY *alutLoadWAVFile)( ALbyte *file,ALenum *format,ALvoid **data,ALsizei *size,ALsizei *freq,ALboolean *loop );$/;"	v
alutLoadWAVMemory	windows/include/AL/alut.h	/^    void      (ALUTAPIENTRY *alutLoadWAVMemory)( ALbyte *memory,ALenum *format,ALvoid **data,ALsizei *size,ALsizei *freq );$/;"	v
alutLoadWAVMemory	windows/include/AL/alut.h	/^    void      (ALUTAPIENTRY *alutLoadWAVMemory)( ALbyte *memory,ALenum *format,ALvoid **data,ALsizei *size,ALsizei *freq,ALboolean *loop );$/;"	v
alutUnloadWAV	windows/include/AL/alut.h	/^    void      (ALUTAPIENTRY *alutUnloadWAV)( ALenum format,ALvoid *data,ALsizei size,ALsizei freq );$/;"	v
amb	modules/graphic/ssggraph/grloadac.cpp	/^  sgVec4 amb ;$/;"	m	struct:_ssgMaterial	file:
amb	tools/accc/accc.h	/^  color_t amb;$/;"	m	struct:mat
ambient	windows/include/plib/ssg.h	/^  sgVec4 ambient ;$/;"	m	class:ssgLight
ambient_colour	windows/include/plib/ssg.h	/^  sgVec4  ambient_colour ;$/;"	m	class:ssgSimpleState
amount_left	windows/include/plib/sl.h	/^  int amount_left ;$/;"	m	class:slScheduler
analysisp	windows/include/vorbis/codec.h	/^  int analysisp;$/;"	m	struct:vorbis_dsp_state
ang	topview/topview.cpp	/^float ang = 0.0f;$/;"	v
angle	drivers/bt/cardata.h	/^		float angle;		\/\/ The angle of the car relative to the track tangent.$/;"	m	class:SingleCardata
angle	drivers/damned/cardata.h	/^		float angle;		\/\/ The angle of the car relative to the track tangent.$/;"	m	class:SingleCardata
angle	drivers/olethros/TrackData.h	/^    float angle;$/;"	m	class:TrackData
angle	drivers/olethros/cardata.h	/^	float angle;		\/\/ The angle of the car relative to the track tangent.$/;"	m	class:olethros::SingleCardata
angle	drivers/sparkle/driver.h	/^		float angle;			\/* the angle of the car relative to the current segment *\/$/;"	m	class:Driver
angle	interfaces/track.h	/^    tdble angle[7];		\/** Rotation angles of the track in rad anti-clockwise:$/;"	m	struct:trackSeg
angle	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar angle(const Vector& v1, const Vector& v2) {$/;"	f
angle	modules/simu/simuv2/aero.h	/^	tdble	angle;$/;"	m	struct:__anon28
angle	modules/simu/simuv3/aero.h	/^	tdble	angle;$/;"	m	struct:__anon47
appendAttributeValue	libs/txml/xmlparse.c	/^appendAttributeValue(XML_Parser parser, const ENCODING *enc, int isCdata,$/;"	f	file:
apply	modules/graphic/ssggraph/grmultitexstate.cpp	/^void grMultiTexState::apply (int unit)$/;"	f	class:grMultiTexState
approxEqual	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline bool approxEqual(const Quaternion& q1, const Quaternion& q2) { $/;"	f
approxEqual	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline bool approxEqual(const Vector& v1, const Vector& v2) { $/;"	f
approxEquals	libs/math/v2_t.h	/^template<class T> inline int v2t<T>::approxEquals(const v2t<T> &cmp, T eps)$/;"	f	class:v2t
approxEquals	libs/math/v3_t.h	/^template<class T> inline int v3t<T>::approxEquals(const v3t<T> &cmp, T eps)$/;"	f	class:v3t
approxEquals	libs/math/v4_t.h	/^template<class T> inline int v4t<T>::approxEquals(const v4t<T> &cmp, T eps)$/;"	f	class:v4t
approxZero	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline bool Quaternion::approxZero() const { return length2() < EPSILON2; }$/;"	f	class:Quaternion
approxZero	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline bool approxZero(const Quaternion& q) { return q.approxZero(); }$/;"	f
approxZero	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline bool Vector::approxZero() const { return length2() < EPSILON2; }$/;"	f	class:Vector
approxZero	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline bool approxZero(const Vector& v) { return v.approxZero(); }$/;"	f
arbSusp	modules/simu/simuv3/axle.h	/^    tSuspension arbSusp;	\/* anti-roll bar *\/$/;"	m	struct:__anon34
arbSuspSpringK	modules/simu/simuv2/axle.h	/^	tdble arbSuspSpringK;$/;"	m	struct:__anon12
arbspring	interfaces/car.h	/^	tCarPitSetupValue arbspring[2];$/;"	m	struct:__anon83
arc	interfaces/track.h	/^    tdble arc;			\/**< Arc in rad of the curve (>0) *\/$/;"	m	struct:trackSeg
arcadeFlag	modules/graphic/ssggraph/grboard.h	/^    int arcadeFlag;$/;"	m	class:cGrBoard
area	tools/trackgen/easymesh.cpp	/^double area(struct nod *na, struct nod *nb, struct nod *nc)$/;"	f
argMax	libs/learning/policy.cpp	/^int DiscretePolicy::argMax(real* Qs) {$/;"	f	class:DiscretePolicy
array	labview/socket.cpp	/^	unsigned short int *array;$/;"	m	union:semun	file:
array	libs/raceengineclient/racemain.h	/^	unsigned short int *array;$/;"	m	union:semun
array	predictor/main.cpp	/^	unsigned short int *array;$/;"	m	union:semun	file:
array	topview/topview.cpp	/^	unsigned short int *array;$/;"	m	union:semun	file:
array	yunseok/tcp_client_2.cpp	/^	unsigned short int *array;$/;"	m	union:semun	file:
ascii_encoding	libs/txml/xmltok.c	/^static const struct normal_encoding ascii_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
ascii_toUtf8	libs/txml/xmltok.c	/^void ascii_toUtf8(const ENCODING *enc,$/;"	f	file:
assignArrays	tools/accc/ac3dgroup.cpp	/^void assignArrays(ob_t *tmpob, ob_t* tmpob2, double **textarray, tcoord_t **vertexarray, char **texture)$/;"	f
atten	windows/include/plib/ssg.h	/^  sgVec3 atten ;$/;"	m	class:ssgLight
attenuation	modules/graphic/ssggraph/CarSoundData.h	/^	float attenuation; \/\/\/< global distance attenuation$/;"	m	class:CarSoundData
attlist0	libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist0	libs/txml/xmlrole.c	/^int attlist0(PROLOG_STATE *state,$/;"	f	file:
attlist1	libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist1	libs/txml/xmlrole.c	/^int attlist1(PROLOG_STATE *state,$/;"	f	file:
attlist2	libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist2	libs/txml/xmlrole.c	/^int attlist2(PROLOG_STATE *state,$/;"	f	file:
attlist3	libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist3	libs/txml/xmlrole.c	/^int attlist3(PROLOG_STATE *state,$/;"	f	file:
attlist4	libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist4	libs/txml/xmlrole.c	/^int attlist4(PROLOG_STATE *state,$/;"	f	file:
attlist5	libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist5	libs/txml/xmlrole.c	/^int attlist5(PROLOG_STATE *state,$/;"	f	file:
attlist6	libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist6	libs/txml/xmlrole.c	/^int attlist6(PROLOG_STATE *state,$/;"	f	file:
attlist7	libs/txml/xmlrole.c	/^  attlist7, attlist8, attlist9,$/;"	v	file:
attlist7	libs/txml/xmlrole.c	/^int attlist7(PROLOG_STATE *state,$/;"	f	file:
attlist8	libs/txml/xmlrole.c	/^  attlist7, attlist8, attlist9,$/;"	v	file:
attlist8	libs/txml/xmlrole.c	/^int attlist8(PROLOG_STATE *state,$/;"	f	file:
attlist9	libs/txml/xmlrole.c	/^  attlist7, attlist8, attlist9,$/;"	v	file:
attlist9	libs/txml/xmlrole.c	/^int attlist9(PROLOG_STATE *state,$/;"	f	file:
attr	libs/txml/xml.h	/^    struct xmlAttribute	*attr;		\/* attributes of this element *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlAttribute
attrMat	tools/accc/ac3dload.cpp	/^int attrMat=0;$/;"	v
attrSurf	tools/accc/ac3dload.cpp	/^int attrSurf=0;$/;"	v
attrSurf	tools/accc/accc.h	/^  int attrSurf;$/;"	m	struct:ob
attributeIds	libs/txml/xmlparse.c	/^  HASH_TABLE attributeIds;$/;"	m	struct:__anon116	file:
attributeValueTok	libs/txml/xmltok_impl.c	/^int PREFIX(attributeValueTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
atts	libs/txml/xmlparse.c	/^  ATTRIBUTE *atts;$/;"	m	struct:__anon117	file:
atts	libs/txml/xmlparse.c	303;"	d	file:
attsSize	libs/txml/xmlparse.c	/^  int attsSize;$/;"	m	struct:__anon117	file:
attsSize	libs/txml/xmlparse.c	304;"	d	file:
audio_offset	windows/include/plib/sl.h	/^  audio_offset_t  audio_offset; \/\/ offset in audiostream$/;"	m	class:slDSP
author	interfaces/track.h	/^    const char *author;	\/**< Author's name *\/$/;"	m	struct:__anon68
autoClutch	drivers/human/human.h	/^	int		autoClutch;$/;"	m	struct:HumanContext
autoreverse	libs/confscreens/driverconfig.cpp	/^    int		autoreverse;$/;"	m	struct:PlayerInfo	file:
avail_in	windows/include/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	windows/include/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
averages	drivers/olethros/learn.h	/^	Averages averages; \/\/\/< holds average measurements$/;"	m	class:olethros::SegLearn
avg_label	predictor/reshape.py	/^        avg_label = 0$/;"	v
avg_label	predictor/reshape.py	/^        avg_label = round(avg_label \/ 30)$/;"	v
ax	libs/confscreens/controlconfig.cpp	/^static float ax[_JS_MAX_AXES * NUM_JOY] = {0};$/;"	v	file:
ax	libs/confscreens/joystickconfig.cpp	/^static float ax[_JS_MAX_AXES * NUM_JOY] = {0};$/;"	v	file:
ax	libs/tgf/tgf.h	/^    tdble	ax;		\/**< angle along x axis *\/$/;"	m	struct:__anon96
ax	libs/tgfclient/tgfclient.h	/^    float	ax[4];		\/**< mouse axis position (mouse considered as a joystick) *\/$/;"	m	struct:__anon135
ax	libs/tgfclient/tgfclient.h	/^    float	ax[_JS_MAX_AXES * NUM_JOY];			\/**< Axis values *\/$/;"	m	struct:__anon134
axCenter	libs/confscreens/controlconfig.cpp	/^static float axCenter[_JS_MAX_AXES * NUM_JOY];$/;"	v	file:
axCenter	libs/confscreens/joystickconfig.cpp	/^static float axCenter[_JS_MAX_AXES * NUM_JOY];$/;"	v	file:
axis	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^  int axis;$/;"	m	class:BBoxCompAxis	file:
axle	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar axle;$/;"	m	class:CarSoundData
axle	modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap axle;$/;"	m	class:SoundInterface
axle	modules/simu/simuv2/carstruct.h	/^    tAxle		axle[2];$/;"	m	struct:__anon23
axle	modules/simu/simuv3/carstruct.h	/^    tAxle		axle[2];$/;"	m	struct:__anon42
axleFz	modules/simu/simuv2/wheel.h	/^    tdble	axleFz;		\/* force from axle (anti-roll bar) *\/$/;"	m	struct:__anon11
axleFz	modules/simu/simuv3/wheel.h	/^    tdble	axleFz;		\/* force from axle (anti-roll bar) *\/$/;"	m	struct:__anon33
axle_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* axle_sound; \/\/\/< axle\/gear spinning sound$/;"	m	class:SoundInterface
ay	libs/tgf/tgf.h	/^    tdble	ay;		\/**< angle along y axis *\/$/;"	m	struct:__anon96
az	libs/tgf/tgf.h	/^    tdble	az;		\/**< angle along z axis *\/$/;"	m	struct:__anon96
b	drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon154
b	drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon153
b	drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon198
b	drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon197
b	drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon177
b	drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon176
b	drivers/human/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon189
b	drivers/human/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon188
b	drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon163
b	drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon162
b	drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon209
b	drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon208
b	drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon170
b	drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon169
b	libs/tgfclient/gui.h	/^			struct { float r, g, b, a; };$/;"	m	struct:ForeGroundColor::__anon138::__anon139
b	modules/simu/simuv2/engine.h	/^    tdble b;$/;"	m	struct:__anon17
b	predictor/predict.py	/^b = tf.Variable(tf.zeros([LABEL_NUM]))$/;"	v
b	predictor/train.py	/^b = tf.Variable(tf.zeros([LABEL_NUM]))$/;"	v
b	predictor/train2.py	/^b = tf.Variable(tf.zeros([LABEL_NUM]))$/;"	v
b	tools/accc/accc.h	/^  double b;$/;"	m	struct:col
b	tools/nfs2ac/mainnfs2ac.cpp	/^    int b;$/;"	m	struct:__anon57	file:
b	tools/trackgen/easymesh.cpp	/^	int a, b, c, d;       \/* left, right, start and end point *\/$/;"	m	struct:sid	file:
b	topview/topview.cpp	/^	float b;$/;"	m	struct:Color	file:
b	windows/include/plib/sg.h	/^  sgVec3 b ;$/;"	m	struct:sgLineSegment3
b	windows/include/plib/sg.h	/^  sgdVec3 b ;$/;"	m	struct:sgdLineSegment3
b1	modules/simu/simuv3/susp.h	/^    tdble C1, b1, v1; \/* coefs for slow *\/$/;"	m	struct:__anon39
b2	modules/simu/simuv2/susp.h	/^    tdble C2, b2;	\/* coefs for fast *\/$/;"	m	struct:__anon20
b2	modules/simu/simuv3/susp.h	/^    tdble C2, b2;     \/* coefs for fast *\/$/;"	m	struct:__anon39
bKeepModules	linux/linuxspec.cpp	/^bool bKeepModules = false;$/;"	v
b_conv1	predictor/predict.py	/^b_conv1 = bias_variable([32])$/;"	v
b_conv1	predictor/train.py	/^b_conv1 = bias_variable([32])$/;"	v
b_conv1	predictor/train2.py	/^b_conv1 = bias_variable([32])$/;"	v
b_conv2	predictor/predict.py	/^b_conv2 = bias_variable([64])$/;"	v
b_conv2	predictor/train.py	/^b_conv2 = bias_variable([64])$/;"	v
b_conv2	predictor/train2.py	/^b_conv2 = bias_variable([64])$/;"	v
b_conv3	predictor/predict.py	/^b_conv3 = bias_variable([128])$/;"	v
b_conv3	predictor/train.py	/^b_conv3 = bias_variable([128])$/;"	v
b_conv3	predictor/train2.py	/^b_conv3 = bias_variable([128])$/;"	v
b_fc1	predictor/predict.py	/^b_fc1 = bias_variable([256])$/;"	v
b_fc1	predictor/train.py	/^b_fc1 = bias_variable([256])$/;"	v
b_fc1	predictor/train2.py	/^b_fc1 = bias_variable([256])$/;"	v
b_fc2	predictor/predict.py	/^b_fc2 = bias_variable([LABEL_NUM])$/;"	v
b_fc2	predictor/train.py	/^b_fc2 = bias_variable([LABEL_NUM])$/;"	v
b_fc2	predictor/train2.py	/^b_fc2 = bias_variable([LABEL_NUM])$/;"	v
b_o_s	windows/include/ogg/ogg.h	/^  int     b_o_s;          \/* set after we've written the initial page$/;"	m	struct:__anon52
b_o_s	windows/include/ogg/ogg.h	/^  long  b_o_s;$/;"	m	struct:__anon53
back	modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat back[6]; \/\/\/< direction of back$/;"	m	class:OpenalTorcsSound
backend_state	windows/include/vorbis/codec.h	/^  void       *backend_state;$/;"	m	struct:vorbis_dsp_state
backfire_loop	modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap backfire_loop;$/;"	m	class:SoundInterface
backfire_loop_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* backfire_loop_sound; \/\/\/< exhaust backfire sound$/;"	m	class:SoundInterface
backfire_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* backfire_sound; \/\/\/< one-off backfire sound$/;"	m	class:SoundInterface
background	interfaces/track.h	/^    const char *background;$/;"	m	struct:__anon67
background2	interfaces/track.h	/^    char		*background2;$/;"	m	struct:__anon67
backward	libs/learning/ANN.h	/^	real (*backward) (LISTITEM* p, real* d, bool use_eligibility, real TD); \/\/\/< partial derivative calculation$/;"	m	struct:Layer_
bang	modules/graphic/ssggraph/CarSoundData.h	/^	bool bang;$/;"	m	class:CarSoundData
bang_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* bang_sound; \/\/\/< sounds when suspension fully compressed$/;"	m	class:SoundInterface
banked_colours	windows/include/plib/ssg.h	/^  ulList *banked_colours   ;$/;"	m	class:ssgTween
banked_normals	windows/include/plib/ssg.h	/^  ulList *banked_normals   ;$/;"	m	class:ssgTween
banked_texcoords	windows/include/plib/ssg.h	/^  ulList *banked_texcoords ;$/;"	m	class:ssgTween
banked_vertices	windows/include/plib/ssg.h	/^  ulList *banked_vertices  ;$/;"	m	class:ssgTween
barrier	interfaces/track.h	/^	tTrackBarrier	*barrier[2]; \/**< Segment barriers *\/$/;"	m	struct:trackSeg
barrierHeight	modules/track/track3.cpp	/^static tdble barrierHeight[2];$/;"	v	file:
barrierHeight	modules/track/track4.cpp	/^static tdble barrierHeight[2];$/;"	v	file:
barrierMaterial	modules/track/track3.cpp	/^static const char *barrierMaterial[2];$/;"	v	file:
barrierMaterial	modules/track/track4.cpp	/^static const char *barrierMaterial[2];$/;"	v	file:
barrierStyle	modules/track/track3.cpp	/^static int barrierStyle[2];$/;"	v	file:
barrierStyle	modules/track/track4.cpp	/^static int barrierStyle[2];$/;"	v	file:
barrierSurface	modules/track/track3.cpp	/^static tTrackSurface *barrierSurface[2];$/;"	v	file:
barrierSurface	modules/track/track4.cpp	/^static tTrackSurface *barrierSurface[2];$/;"	v	file:
barrierWidth	modules/track/track3.cpp	/^static tdble barrierWidth[2];$/;"	v	file:
barrierWidth	modules/track/track4.cpp	/^static tdble barrierWidth[2];$/;"	v	file:
base	libs/txml/xmlparse.c	/^  const XML_Char *base;$/;"	m	struct:__anon111	file:
base	libs/txml/xmlparse.c	/^  const XML_Char *base;$/;"	m	struct:__anon116	file:
base	modules/graphic/ssggraph/grskidmarks.h	/^  ssgVtxTable	*base; \/* to remember the pos of the wheel line before transform *\/$/;"	m	struct:__anon2
base	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  VertexBase base;$/;"	m	class:Complex
base	modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  const VertexBase& base;$/;"	m	class:Polytope
base	modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  const Point *base;$/;"	m	class:VertexBase
base_frequency	modules/graphic/ssggraph/CarSoundData.h	/^	float base_frequency; \/\/\/< engine base frequency for ~ 6000 rpm$/;"	m	class:CarSoundData
baseid	drivers/inferno/pathfinder.h	/^		int baseid;				\/\/ Index of first element.$/;"	m	class:PathSeg
baseid	drivers/lliaw/pathfinder.h	/^		int baseid;				\/\/ Index of first element.$/;"	m	class:PathSeg
baseid	drivers/tita/pathfinder.h	/^		int baseid;				\/\/ Index of first element.$/;"	m	class:PathSeg
baseval	drivers/inferno/pathfinder.h	/^		int baseval;			\/\/ Tracksegid of current buffer start element.$/;"	m	class:PathSeg
baseval	drivers/lliaw/pathfinder.h	/^		int baseval;			\/\/ Tracksegid of current buffer start element.$/;"	m	class:PathSeg
baseval	drivers/tita/pathfinder.h	/^		int baseval;			\/\/ Tracksegid of current buffer start element.$/;"	m	class:PathSeg
basicState	windows/include/plib/ssg.h	/^  ssgSimpleState *basicState   ;$/;"	m	class:ssgContext
basis	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Matrix basis;$/;"	m	class:Transform
batch_mode	libs/learning/ANN.h	/^	bool batch_mode; \/\/\/< do not update weights immediately$/;"	m	struct:Layer_
batch_mode	libs/learning/ANN.h	/^	bool batch_mode; \/\/\/< use batch mode$/;"	m	struct:ANN_
batch_size	predictor/predict.py	/^batch_size = 50$/;"	v
batch_size	predictor/train.py	/^batch_size = 50$/;"	v
batch_size	predictor/train2.py	/^batch_size = 50$/;"	v
bbox	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBox bbox;$/;"	m	class:BBoxNode
bbox	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^BBox Complex::bbox(const Transform& t) const {$/;"	f	class:Complex
bbox	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^BBox Convex::bbox(const Transform& t) const {$/;"	f	class:Convex
bbox	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  BBox bbox;$/;"	m	class:Object
bbox	windows/include/plib/ssg.h	/^  sgBox bbox ;$/;"	m	class:ssgVTable
bbox	windows/include/plib/ssg.h	/^  sgBox bbox ;$/;"	m	class:ssgVtxTable
bboxCompAxis	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^} bboxCompAxis[3] = { X, Y, Z };$/;"	v	typeref:class:BBoxCompAxis
begingroup catcode     12 catcode    12 catcode    12 catcode  _  12 catcode    12 catcode    12 catcode    12 catcode    12 parsearg includezzz	modules/simu/simuv2/SOLID-2.0/doc/texinfo.tex	/^\\def\\include{\\begingroup$/;"	i
behaviour	drivers/berniw/mycar.h	/^		double behaviour[6][12];$/;"	m	class:MyCar
behaviour	drivers/berniw2/mycar.h	/^		double behaviour[6][12];$/;"	m	class:MyCar
behaviour	drivers/berniw3/mycar.h	/^		double behaviour[6][12];$/;"	m	class:MyCar
behaviour	drivers/human/mycar.h	/^		double behaviour[6][12];$/;"	m	class:MyCar
behaviour	drivers/inferno/mycar.h	/^		double behaviour[6][8];$/;"	m	class:MyCar
behaviour	drivers/lliaw/mycar.h	/^		double behaviour[6][8];$/;"	m	class:MyCar
behaviour	drivers/tita/mycar.h	/^		double behaviour[6][8];$/;"	m	class:MyCar
behindCarColor	modules/graphic/ssggraph/grtrackmap.cpp	/^GLfloat cGrTrackMap::behindCarColor[4];$/;"	m	class:cGrTrackMap	file:
behindCarColor	modules/graphic/ssggraph/grtrackmap.h	/^		static GLfloat behindCarColor[4];$/;"	m	class:cGrTrackMap
bellcrank	modules/simu/simuv2/susp.h	/^    tdble bellcrank;  \/* ratio of movement between wheel and suspension *\/$/;"	m	struct:__anon22
bellcrank	modules/simu/simuv3/susp.h	/^    tdble bellcrank;  \/* ratio of movement between wheel and suspension *\/$/;"	m	struct:__anon41
bent_damage_x	modules/simu/simuv3/wheel.h	/^	tdble bent_damage_x;$/;"	m	struct:__anon33
bent_damage_z	modules/simu/simuv3/wheel.h	/^	tdble bent_damage_z;$/;"	m	struct:__anon33
berniw	drivers/berniw/berniw.cpp	/^extern "C" int berniw(tModInfo *modInfo) {$/;"	f
berniw1	libs/raceengineclient/raceengine.cpp	/^tCarElt* berniw1 = new tCarElt();$/;"	v
berniw2	drivers/berniw2/berniw2.cpp	/^extern "C" int berniw2(tModInfo *modInfo) {$/;"	f
berniw2	libs/raceengineclient/raceengine.cpp	/^tCarElt* berniw2 = new tCarElt();$/;"	v
berniw3	drivers/berniw3/berniw3.cpp	/^extern "C" int berniw3(tModInfo *modInfo)$/;"	f
berniw3	libs/raceengineclient/raceengine.cpp	/^tCarElt* berniw3 = new tCarElt();$/;"	v
berniw4	libs/raceengineclient/raceengine.cpp	/^tCarElt* berniw4 = new tCarElt();$/;"	v
berniw5	libs/raceengineclient/raceengine.cpp	/^tCarElt* berniw5 = new tCarElt();$/;"	v
berniw6	libs/raceengineclient/raceengine.cpp	/^tCarElt* berniw6 = new tCarElt();$/;"	v
berniw_speed_down	libs/raceengineclient/raceengine.cpp	/^void berniw_speed_down(void *) {$/;"	f
berniw_speed_up	libs/raceengineclient/raceengine.cpp	/^void berniw_speed_up(void *) {$/;"	f
bestLapTime	interfaces/car.h	/^	double bestLapTime;$/;"	m	struct:__anon77
bgCam	modules/graphic/ssggraph/grscreen.h	/^		class cGrBackgroundCam *bgCam;			\/\/ The background camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrBackgroundCam
bgColor	interfaces/track.h	/^    float		bgColor[3];$/;"	m	struct:__anon67
bgColor	libs/tgfclient/gui.h	/^	float *bgColor;	\/* RGBA *\/$/;"	m	struct:__anon140
bgColor	libs/tgfclient/gui.h	/^    float		*bgColor;	\/* RGBA *\/$/;"	m	struct:__anon148
bgColor	libs/tgfclient/gui.h	/^    float		*bgColor[3];$/;"	m	struct:__anon141
bgColor	libs/tgfclient/gui.h	/^    float		*bgColor[3];$/;"	m	struct:__anon143
bgColor	libs/tgfclient/gui.h	/^    float		*bgColor[3];$/;"	m	struct:__anon145
bgFocusColor	libs/tgfclient/gui.h	/^    float		*bgFocusColor[3];$/;"	m	struct:__anon141
bgFocusColor	libs/tgfclient/gui.h	/^    float		*bgFocusColor[3];$/;"	m	struct:__anon145
bgImage	libs/tgfclient/gui.h	/^    GLuint		bgImage;$/;"	m	struct:__anon148
bgSelectColor	libs/tgfclient/gui.h	/^    float		*bgSelectColor[3];$/;"	m	struct:__anon143
bgcolor	libs/raceengineclient/racegl.cpp	/^static float bgcolor[4] = { 0.0, 0.0, 0.0, 0.0 };$/;"	v	file:
bgtype	interfaces/track.h	/^    int			bgtype;$/;"	m	struct:__anon67
bias	modules/simu/simuv3/differential.h	/^    tdble	bias;$/;"	m	struct:__anon32
bias_variable	predictor/predict.py	/^def bias_variable(shape) :$/;"	f
bias_variable	predictor/train.py	/^def bias_variable(shape) :$/;"	f
bias_variable	predictor/train2.py	/^def bias_variable(shape) :$/;"	f
big2_encoding	libs/txml/xmltok.c	/^static const struct normal_encoding big2_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
bigMsgDisp	libs/raceengineclient/raceengine.cpp	/^static double bigMsgDisp;$/;"	v	file:
bit_depth	windows/include/png.h	/^   png_byte bit_depth;   \/* bit depth of row *\/$/;"	m	struct:png_row_info_struct
bitrate_av_hi	windows/include/vorbis/vorbisenc.h	/^  long   bitrate_av_hi;$/;"	m	struct:ovectl_ratemanage_arg
bitrate_av_lo	windows/include/vorbis/vorbisenc.h	/^  long   bitrate_av_lo;$/;"	m	struct:ovectl_ratemanage_arg
bitrate_av_window	windows/include/vorbis/vorbisenc.h	/^  double bitrate_av_window;$/;"	m	struct:ovectl_ratemanage_arg
bitrate_av_window_center	windows/include/vorbis/vorbisenc.h	/^  double bitrate_av_window_center;$/;"	m	struct:ovectl_ratemanage_arg
bitrate_average_damping	windows/include/vorbis/vorbisenc.h	/^  double bitrate_average_damping;$/;"	m	struct:ovectl_ratemanage2_arg
bitrate_average_kbps	windows/include/vorbis/vorbisenc.h	/^  long   bitrate_average_kbps;$/;"	m	struct:ovectl_ratemanage2_arg
bitrate_hard_max	windows/include/vorbis/vorbisenc.h	/^  long   bitrate_hard_max;$/;"	m	struct:ovectl_ratemanage_arg
bitrate_hard_min	windows/include/vorbis/vorbisenc.h	/^  long   bitrate_hard_min;$/;"	m	struct:ovectl_ratemanage_arg
bitrate_hard_window	windows/include/vorbis/vorbisenc.h	/^  double bitrate_hard_window;$/;"	m	struct:ovectl_ratemanage_arg
bitrate_limit_max_kbps	windows/include/vorbis/vorbisenc.h	/^  long   bitrate_limit_max_kbps;$/;"	m	struct:ovectl_ratemanage2_arg
bitrate_limit_min_kbps	windows/include/vorbis/vorbisenc.h	/^  long   bitrate_limit_min_kbps;$/;"	m	struct:ovectl_ratemanage2_arg
bitrate_limit_reservoir_bias	windows/include/vorbis/vorbisenc.h	/^  double bitrate_limit_reservoir_bias;$/;"	m	struct:ovectl_ratemanage2_arg
bitrate_limit_reservoir_bits	windows/include/vorbis/vorbisenc.h	/^  long   bitrate_limit_reservoir_bits; \/**<Size of the bitrate reservoir in bits *\/$/;"	m	struct:ovectl_ratemanage2_arg
bitrate_lower	windows/include/vorbis/codec.h	/^  long bitrate_lower;$/;"	m	struct:vorbis_info
bitrate_nominal	windows/include/vorbis/codec.h	/^  long bitrate_nominal;$/;"	m	struct:vorbis_info
bitrate_upper	windows/include/vorbis/codec.h	/^  long bitrate_upper;$/;"	m	struct:vorbis_info
bitrate_window	windows/include/vorbis/codec.h	/^  long bitrate_window;$/;"	m	struct:vorbis_info
bits	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static int bits;      \/\/ identifies current simplex$/;"	v	file:
bittrack	windows/include/vorbis/vorbisfile.h	/^  double           bittrack;$/;"	m	struct:OggVorbis_File
black	libs/racescreens/loadingscreen.cpp	/^float black[4] = { 0.0, 0.0, 0.0, 0.0 };$/;"	v
block	libs/txml/xmlparse.c	/^typedef struct block {$/;"	s	file:
blocked	modules/simu/simuv2/carstruct.h	/^    int		blocked;		\/\/ Flag to show if the car has had already a collision in the same timestep.$/;"	m	struct:__anon23
blocked	modules/simu/simuv3/carstruct.h	/^    int		blocked;$/;"	m	struct:__anon42
blocks	libs/txml/xmlparse.c	/^  BLOCK *blocks;$/;"	m	struct:__anon112	file:
blue	windows/include/png.h	/^   png_byte blue;$/;"	m	struct:png_color_8_struct
blue	windows/include/png.h	/^   png_byte blue;$/;"	m	struct:png_color_struct
blue	windows/include/png.h	/^   png_uint_16 blue;$/;"	m	struct:png_color_16_struct
blue	windows/include/png.h	/^   png_uint_16 blue;$/;"	m	struct:png_sPLT_entry_struct
bmode	drivers/berniw/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	drivers/berniw2/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	drivers/berniw3/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	drivers/human/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	drivers/inferno/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	drivers/lliaw/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	drivers/tita/mycar.h	/^		int bmode;$/;"	m	class:MyCar
board	modules/graphic/ssggraph/grscreen.h	/^		class cGrBoard *board;					\/\/ The board.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrBoard
boardCam	modules/graphic/ssggraph/grscreen.h	/^		class cGrOrthoCamera *boardCam;			\/\/ The board camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrOrthoCamera
boardFlag	modules/graphic/ssggraph/grboard.h	/^    int	boardFlag;$/;"	m	class:cGrBoard
body	windows/include/ogg/ogg.h	/^  unsigned char *body;$/;"	m	struct:__anon51
bodyVel	modules/simu/simuv2/wheel.h	/^    t3Dd	bodyVel;	\/* world related *\/$/;"	m	struct:__anon11
bodyVel	modules/simu/simuv3/wheel.h	/^    t3Dd	bodyVel;	\/* world related *\/$/;"	m	struct:__anon33
body_data	windows/include/ogg/ogg.h	/^  unsigned char   *body_data;    \/* bytes from packet bodies *\/$/;"	m	struct:__anon52
body_fill	windows/include/ogg/ogg.h	/^  long    body_fill;             \/* elements stored; fill mark *\/$/;"	m	struct:__anon52
body_len	windows/include/ogg/ogg.h	/^  long body_len;$/;"	m	struct:__anon51
body_returned	windows/include/ogg/ogg.h	/^  long    body_returned;         \/* elements of fill returned *\/$/;"	m	struct:__anon52
body_storage	windows/include/ogg/ogg.h	/^  long    body_storage;          \/* storage elements allocated *\/$/;"	m	struct:__anon52
bodybytes	windows/include/ogg/ogg.h	/^  int bodybytes;$/;"	m	struct:__anon54
bonnetPos	interfaces/car.h	/^	t3Dd bonnetPos; \/**< Bonnet's position *\/$/;"	m	struct:__anon76
bool	windows/include/plib/ul.h	/^typedef int bool ;$/;"	t
borderHeight	modules/track/track3.cpp	/^static tdble borderHeight[2];$/;"	v	file:
borderHeight	modules/track/track4.cpp	/^static tdble borderHeight[2];$/;"	v	file:
borderMaterial	modules/track/track3.cpp	/^static const char *borderMaterial[2];$/;"	v	file:
borderMaterial	modules/track/track4.cpp	/^static const char *borderMaterial[2];$/;"	v	file:
borderStyle	modules/track/track3.cpp	/^static int borderStyle[2];$/;"	v	file:
borderStyle	modules/track/track4.cpp	/^static int borderStyle[2];$/;"	v	file:
borderSurface	modules/track/track3.cpp	/^static tTrackSurface *borderSurface[2];$/;"	v	file:
borderSurface	modules/track/track4.cpp	/^static tTrackSurface *borderSurface[2];$/;"	v	file:
borderWidth	modules/track/track3.cpp	/^static tdble borderWidth[2];$/;"	v	file:
borderWidth	modules/track/track4.cpp	/^static tdble borderWidth[2];$/;"	v	file:
bot	windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
bot	windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
botSpd	interfaces/raceman.h	/^    tdble	botSpd;$/;"	m	struct:__anon72
botdesc	drivers/berniw/berniw.cpp	/^static const char* botdesc[BOTS] = { "berniw 1", "berniw 2", "berniw 3",$/;"	v	file:
botdesc	drivers/berniw2/berniw2.cpp	/^static const char* botdesc[BOTS] = { "berniw two 1", "berniw two 2",$/;"	v	file:
botdesc	drivers/berniw3/berniw3.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botdesc	drivers/bt/bt.cpp	/^static const char* botdesc[NBBOTS] = {$/;"	v	file:
botdesc	drivers/damned/damned.cpp	/^static const char* botdesc[NBBOTS] = {$/;"	v	file:
botdesc	drivers/inferno/inferno.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botdesc	drivers/inferno2/inferno2.cpp	/^static const char* botdesc[10] = {"For Laurence", "For Laurence", "For Laurence", "For Laurence", "For Laurence",$/;"	v	file:
botdesc	drivers/lliaw/lliaw.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botdesc	drivers/olethros/olethros.cpp	/^static const char* botdesc[NBBOTS] = {$/;"	m	namespace:olethros	file:
botdesc	drivers/sparkle/sparkle.cpp	/^static const char* botdesc[NBBOTS] = {$/;"	v	file:
botdesc	drivers/tita/tita.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botname	drivers/berniw/berniw.cpp	/^static const char* botname[BOTS] = { "berniw 1", "berniw 2", "berniw 3",$/;"	v	file:
botname	drivers/berniw2/berniw2.cpp	/^static const char* botname[BOTS] = { "berniw two 1", "berniw two 2",$/;"	v	file:
botname	drivers/berniw3/berniw3.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
botname	drivers/bt/bt.cpp	/^static const char* botname[NBBOTS] = {$/;"	v	file:
botname	drivers/damned/damned.cpp	/^static const char* botname[NBBOTS] = {$/;"	v	file:
botname	drivers/inferno/inferno.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
botname	drivers/inferno2/inferno2.cpp	/^static const char* botname[10] = {"InfHist 1", "InfHist 2", "InfHist 3", "InfHist 4", "InfHist 5",$/;"	v	file:
botname	drivers/lliaw/lliaw.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
botname	drivers/olethros/olethros.cpp	/^static const char* botname[NBBOTS] = {$/;"	m	namespace:olethros	file:
botname	drivers/sparkle/sparkle.cpp	/^static const char* botname[NBBOTS] = {$/;"	v	file:
botname	drivers/tita/tita.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
bottom	modules/graphic/ssggraph/grcam.h	/^    float bottom;$/;"	m	class:cGrOrthoCamera
bottomRadius	modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^  Scalar bottomRadius;$/;"	m	class:Cone
bottom_crash	modules/graphic/ssggraph/CarSoundData.h	/^	bool bottom_crash;$/;"	m	class:CarSoundData
bottom_crash_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* bottom_crash_sound; \/\/\/< bang when crashing from a great height$/;"	m	class:SoundInterface
bounce	windows/include/plib/sg.h	/^  void bounce ( sgVec3 normal, float coefRestitution )$/;"	f	class:sgParticle
bound	tools/trackgen/easymesh.h	/^    int bound;$/;"	m	struct:seg
bowyer	tools/trackgen/easymesh.cpp	/^void bowyer(int n, int spac)$/;"	f
bpp	modules/graphic/ssggraph/grloadsgi.h	/^		char           bpp ;$/;"	m	class:ssgSGIHeader
bps	windows/include/plib/sl.h	/^  int    bps    ;$/;"	m	class:slSample
bps	windows/include/plib/sl.h	/^  int bps ;$/;"	m	class:slDSP
br	tools/trackgen/objects.cpp	/^	ssgBranch	*br;$/;"	m	struct:group	file:
brake	drivers/olethros/learn.h	/^	float brake; \/\/\/< brake input$/;"	m	class:olethros::SegLearn
brake	modules/simu/simuv2/wheel.h	/^    tBrake       brake;		\/* associated brake disk *\/$/;"	m	struct:__anon11
brake	modules/simu/simuv3/wheel.h	/^    tBrake       brake;		\/* associated brake disk *\/$/;"	m	struct:__anon33
brakeCmd	interfaces/car.h	/^	tdble brakeCmd; \/**< Brake command [0.0, 1.0] *\/$/;"	m	struct:__anon81
brakeCoeff	modules/simu/simuv2/engine.h	/^    tdble		brakeCoeff;$/;"	m	struct:__anon19
brakeCoeff	modules/simu/simuv3/engine.h	/^    tdble		brakeCoeff;$/;"	m	struct:__anon38
brakeDiskRadius	interfaces/car.h	/^	tdble brakeDiskRadius; \/**< Brake disk radius *\/$/;"	m	struct:__anon74
brakeForCollision	drivers/olethros/opponent.h	/^		void brakeForCollision () { brake_overtake_filter = 1.0; }$/;"	f	class:olethros::Opponent
brakePressure	interfaces/car.h	/^	tCarPitSetupValue brakePressure;$/;"	m	struct:__anon83
brakeRepartition	interfaces/car.h	/^	tCarPitSetupValue brakeRepartition;$/;"	m	struct:__anon83
brakeState	modules/graphic/ssggraph/grcar.cpp	/^static ssgSimpleState *brakeState = NULL;$/;"	v	file:
brakeTemp	interfaces/car.h	/^	tdble brakeTemp; \/**< brake temperature from 0 (cool) to 1.0 (hot) *\/$/;"	m	struct:__anon79
brake_overtake_filter	drivers/olethros/opponent.h	/^		float brake_overtake_filter; \/\/\/< Check to see.$/;"	m	class:olethros::Opponent
brake_value	linux/shared_memory.h	/^int brake_value;$/;"	v
brakedist	drivers/berniw/pathfinder.h	/^	double brakedist;		\/* distance needed for braking to the speed of this car *\/$/;"	m	struct:__anon156
brakedist	drivers/berniw2/pathfinder.h	/^	double brakedist;		\/* distance needed for braking to the speed of this car *\/$/;"	m	struct:__anon200
brakedist	drivers/berniw3/pathfinder.h	/^	double brakedist;		\/* distance needed for braking to the speed of this car *\/$/;"	m	struct:__anon179
brakedist	drivers/bt/driver.cpp	/^float Driver::brakedist(float allowedspeed, float mu)$/;"	f	class:Driver
brakedist	drivers/damned/driver.cpp	/^float Driver::brakedist(float allowedspeed, float mu)$/;"	f	class:Driver
brakedist	drivers/human/pathfinder.h	/^	double brakedist;		\/* distance needed for braking to the speed of this car *\/$/;"	m	struct:__anon191
brakedist	drivers/inferno/pathfinder.h	/^	double brakedist;		\/\/ distance needed for braking to the speed of this car.$/;"	m	struct:__anon164
brakedist	drivers/lliaw/pathfinder.h	/^	double brakedist;		\/\/ distance needed for braking to the speed of this car.$/;"	m	struct:__anon210
brakedist	drivers/olethros/driver.cpp	/^    float Driver::brakedist(float allowedspeed, float mu)$/;"	f	class:olethros::Driver
brakedist	drivers/sparkle/driver.cpp	/^float Driver::brakedist(float allowedspeed, float mu)$/;"	f	class:Driver
brakedist	drivers/tita/pathfinder.h	/^	double brakedist;		\/\/ distance needed for braking to the speed of this car.$/;"	m	struct:__anon171
branch	tools/texmapper/maintexmapper.cpp	/^    ssgTransform	*branch;$/;"	m	struct:Face	file:
branch	tools/trackgen/relief.cpp	/^    ssgBranch	*branch;$/;"	m	struct:Line	file:
breaklight1	modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*breaklight1 = NULL;$/;"	v
breaklight2	modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*breaklight2 = NULL;$/;"	v
brkColor	modules/graphic/ssggraph/grcar.h	/^    ssgColourArray	*brkColor[4];$/;"	m	struct:__anon5
brkSyst	modules/simu/simuv2/carstruct.h	/^    tBrakeSyst		brkSyst;$/;"	m	struct:__anon23
brkSyst	modules/simu/simuv3/carstruct.h	/^    tBrakeSyst		brkSyst;$/;"	m	struct:__anon42
brkTq	modules/simu/simuv2/differential.h	/^    tdble	brkTq;$/;"	m	struct:__anon9
brkTq	modules/simu/simuv3/differential.h	/^    tdble	brkTq;$/;"	m	struct:__anon31
bsphere	windows/include/plib/ssg.h	/^  sgSphere bsphere ;$/;"	m	class:ssgEntity
bsphere_is_invalid	windows/include/plib/ssg.h	/^  int bsphere_is_invalid ;$/;"	m	class:ssgEntity
bt	drivers/bt/bt.cpp	/^extern "C" int bt(tModInfo *modInfo)$/;"	f
buf	labview/socket.cpp	/^	struct semid_ds *buf;$/;"	m	union:semun	typeref:struct:semun::semid_ds	file:
buf	libs/raceengineclient/racemain.h	/^	struct semid_ds *buf;$/;"	m	union:semun	typeref:struct:semun::semid_ds
buf	libs/txml/xmlparse.c	/^  char *buf;$/;"	m	struct:tag	file:
buf	misc/png2jpg/png2jpg.c	/^static char buf[1024];$/;"	v	file:
buf	predictor/main.cpp	/^	struct semid_ds *buf;$/;"	m	union:semun	typeref:struct:semun::semid_ds	file:
buf	topview/topview.cpp	/^	struct semid_ds *buf;$/;"	m	union:semun	typeref:struct:semun::semid_ds	file:
buf	windows/include/plib/sl.h	/^  char           *buf  ;          \/\/ buffer containing sound data$/;"	m	class:slDSP
buf	yunseok/tcp_client_2.cpp	/^	struct semid_ds *buf;$/;"	m	union:semun	typeref:struct:semun::semid_ds	file:
bufEnd	libs/txml/xmlparse.c	/^  char *bufEnd;$/;"	m	struct:tag	file:
buff	topview/topview.cpp	/^char buff[1024];$/;"	v
buff_info	windows/include/plib/sl.h	/^  audio_buf_info buff_info ;$/;"	m	class:slDSP
buffer	libs/txml/xmlparse.c	/^  char *buffer;$/;"	m	struct:__anon117	file:
buffer	libs/txml/xmlparse.c	286;"	d	file:
buffer	modules/graphic/ssggraph/TorcsSound.h	/^	ALuint buffer; \/\/\/< buffer id$/;"	m	class:OpenalTorcsSound
buffer	windows/include/ogg/ogg.h	/^  unsigned char *buffer;$/;"	m	struct:__anon50
buffer	windows/include/plib/sl.h	/^  Uchar *buffer ;$/;"	m	class:slSample
bufferEnd	libs/txml/xmlparse.c	/^  char *bufferEnd;$/;"	m	struct:__anon117	file:
bufferEnd	libs/txml/xmlparse.c	288;"	d	file:
bufferLim	libs/txml/xmlparse.c	/^  const char *bufferLim;$/;"	m	struct:__anon117	file:
bufferLim	libs/txml/xmlparse.c	291;"	d	file:
bufferPos	windows/include/plib/sl.h	/^  Uchar         *bufferPos       ;  \/* Sample frame to replay next *\/$/;"	m	class:slSamplePlayer
bufferPtr	libs/txml/xmlparse.c	/^  const char *bufferPtr;$/;"	m	struct:__anon117	file:
bufferPtr	libs/txml/xmlparse.c	287;"	d	file:
buffers	libs/musicplayer/OpenALMusicPlayer.h	/^		ALuint buffers[2];							\/\/ front and back buffers$/;"	m	class:OpenALMusicPlayer
buffers	predictor/reshape.py	/^buffers = collections.deque([])$/;"	v
buffers	predictor/talker.py	/^buffers = collections.deque([])$/;"	v
buildWalls	modules/simu/simuv2/collide.cpp	/^void buildWalls(tTrackSeg *start, int side) {$/;"	f
bump	modules/simu/simuv2/susp.h	/^    tDamperDef bump;$/;"	m	struct:__anon21
bump	modules/simu/simuv3/susp.h	/^    tDamperDef bump;$/;"	m	struct:__anon40
bump	tools/trackgen/maintrackgen.cpp	/^int	bump = 0;$/;"	v
bumpLeafCount	windows/include/plib/ssg.h	/^  void bumpLeafCount   ( int i ) {   leaf_count += i ; }$/;"	f	class:ssgStatistics
bumpVertexCount	windows/include/plib/ssg.h	/^  void bumpVertexCount ( int i ) { vertex_count += i ; }$/;"	f	class:ssgStatistics
button	libs/tgfclient/gui.h	/^	tGfuiButton	button;$/;"	m	union:GfuiObject::__anon147
button	libs/tgfclient/tgfclient.h	/^    int		button[3];	\/**< Button state (1 = up) *\/$/;"	m	struct:__anon135
button	libs/tgfclient/tgfclient.h	/^    int	button[3];$/;"	m	struct:MouseInfo
buttonType	libs/tgfclient/gui.h	/^    int			buttonType;$/;"	m	struct:__anon141
buttonType	libs/tgfclient/gui.h	/^    int			buttonType;$/;"	m	struct:__anon142
bytes	windows/include/ogg/ogg.h	/^  long  bytes;$/;"	m	struct:__anon53
bytesPerSample	windows/include/plib/sl.h	/^  float          bytesPerSample ; \/\/ conversions$/;"	m	class:slDSP
bytesPerSecond	windows/include/plib/sl.h	/^  float          bytesPerSecond ;$/;"	m	class:slDSP
c	drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon154
c	drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon153
c	drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon198
c	drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon197
c	drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon177
c	drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon176
c	drivers/human/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon189
c	drivers/human/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon188
c	drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon163
c	drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon162
c	drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon209
c	drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon208
c	drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon170
c	drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon169
c	libs/learning/ANN.h	/^	Connection* c; \/\/\/< connections$/;"	m	struct:Layer_
c	libs/learning/ANN.h	/^	LIST* c; \/\/\/< connection layers$/;"	m	struct:ANN_
c	libs/learning/ANN.h	/^	int c; \/\/\/< connected?$/;"	m	struct:Connection_
c	libs/learning/string_utils.h	/^     char* c; \/\/\/<This is the buffer.$/;"	m	struct:StringBuffer_
c	tools/trackgen/easymesh.cpp	/^	int a, b, c, d;       \/* left, right, start and end point *\/$/;"	m	struct:sid	file:
c0	windows/include/plib/ssgaLensFlare.h	/^  ssgColourArray   *c0 ;$/;"	m	class:ssgaLensFlare
cGrBackgroundCam	modules/graphic/ssggraph/grcam.h	/^    cGrBackgroundCam(class cGrScreen *myscreen)$/;"	f	class:cGrBackgroundCam
cGrBackgroundCam	modules/graphic/ssggraph/grcam.h	/^class cGrBackgroundCam : public cGrPerspCamera$/;"	c
cGrBoard	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::cGrBoard (int myid) {$/;"	f	class:cGrBoard
cGrBoard	modules/graphic/ssggraph/grboard.h	/^class cGrBoard$/;"	c
cGrCamera	modules/graphic/ssggraph/grcam.h	/^    cGrCamera(class cGrScreen *myscreen, int myid = 0, int mydrawCurrent = 0, int mydrawdrv = 0, int mydrawBackground = 0, int mymirrorAllowed = 0) {$/;"	f	class:cGrCamera
cGrCamera	modules/graphic/ssggraph/grcam.h	/^class cGrCamera $/;"	c
cGrCarCamBehind	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamBehind(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamBehind
cGrCarCamBehind	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamBehind : public cGrPerspCamera$/;"	c	file:
cGrCarCamBehind2	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamBehind2(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamBehind2
cGrCarCamBehind2	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamBehind2 : public cGrPerspCamera$/;"	c	file:
cGrCarCamCenter	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamCenter(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamCenter
cGrCarCamCenter	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamCenter : public cGrPerspCamera$/;"	c	file:
cGrCarCamFront	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamFront(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamFront
cGrCarCamFront	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamFront : public cGrPerspCamera$/;"	c	file:
cGrCarCamInside	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamInside(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamInside
cGrCarCamInside	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamInside : public cGrPerspCamera$/;"	c	file:
cGrCarCamInsideFixedCar	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamInsideFixedCar(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamInsideFixedCar
cGrCarCamInsideFixedCar	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamInsideFixedCar : public cGrPerspCamera$/;"	c	file:
cGrCarCamLookAt	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamLookAt(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamLookAt
cGrCarCamLookAt	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamLookAt : public cGrPerspCamera$/;"	c	file:
cGrCarCamMirror	modules/graphic/ssggraph/grcam.h	/^    cGrCarCamMirror(cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamMirror
cGrCarCamMirror	modules/graphic/ssggraph/grcam.h	/^class cGrCarCamMirror : public cGrPerspCamera$/;"	c
cGrCarCamRoadFly	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamRoadFly(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamRoadFly
cGrCarCamRoadFly	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamRoadFly : public cGrPerspCamera$/;"	c	file:
cGrCarCamRoadNoZoom	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamRoadNoZoom(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamRoadNoZoom
cGrCarCamRoadNoZoom	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamRoadNoZoom : public cGrPerspCamera$/;"	c	file:
cGrCarCamRoadZoom	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamRoadZoom(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamRoadZoom
cGrCarCamRoadZoom	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamRoadZoom : public cGrPerspCamera$/;"	c	file:
cGrCarCamRoadZoomTVD	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamRoadZoomTVD(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamRoadZoomTVD
cGrCarCamRoadZoomTVD	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamRoadZoomTVD : public cGrCarCamRoadZoom$/;"	c	file:
cGrCarCamSide	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamSide(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamSide
cGrCarCamSide	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamSide : public cGrPerspCamera$/;"	c	file:
cGrCarCamUp	modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamUp(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamUp
cGrCarCamUp	modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamUp : public cGrPerspCamera$/;"	c	file:
cGrOrthoCamera	modules/graphic/ssggraph/grcam.h	/^    cGrOrthoCamera(class cGrScreen *myscreen, float myleft, float myright, float mybottom, float mytop)$/;"	f	class:cGrOrthoCamera
cGrOrthoCamera	modules/graphic/ssggraph/grcam.h	/^class cGrOrthoCamera : public cGrCamera$/;"	c
cGrPerspCamera	modules/graphic/ssggraph/grcam.cpp	/^cGrPerspCamera::cGrPerspCamera(class cGrScreen *myscreen, int id, int drawCurr, int drawDrv, int drawBG, int mirrorAllowed,$/;"	f	class:cGrPerspCamera
cGrPerspCamera	modules/graphic/ssggraph/grcam.h	/^class cGrPerspCamera : public cGrCamera$/;"	c
cGrScreen	modules/graphic/ssggraph/grscreen.cpp	/^cGrScreen::cGrScreen(int myid)$/;"	f	class:cGrScreen
cGrScreen	modules/graphic/ssggraph/grscreen.h	/^class cGrScreen {$/;"	c
cGrTrackMap	modules/graphic/ssggraph/grtrackmap.cpp	/^cGrTrackMap::cGrTrackMap()$/;"	f	class:cGrTrackMap
cGrTrackMap	modules/graphic/ssggraph/grtrackmap.h	/^class cGrTrackMap$/;"	c
cGuiSetupValue	libs/racescreens/carsetupscreen.cpp	/^		cGuiSetupValue(void* scr, tCarPitSetupValue* v, const char* unit, const char* format, int font, int x, int y, int w, int len):$/;"	f	class:cGuiSetupValue
cGuiSetupValue	libs/racescreens/carsetupscreen.cpp	/^class cGuiSetupValue {$/;"	c	file:
c_index	windows/include/plib/ssg.h	/^  sgVec4 *colours   ; int num_colours   ; unsigned short *c_index ;$/;"	m	class:ssgVTable
ca	drivers/berniw/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	drivers/berniw2/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	drivers/berniw3/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	drivers/human/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	drivers/inferno/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	drivers/lliaw/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	drivers/tita/mycar.h	/^		double ca;$/;"	m	class:MyCar
cache	libs/learning/Distribution.h	/^	bool cache;$/;"	m	class:NormalDistribution
caching	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^bool caching = true;$/;"	v
calc_bbox	tools/texmapper/maintexmapper.cpp	/^void calc_bbox(void)$/;"	f
calc_coord	tools/texmapper/maintexmapper.cpp	/^void calc_coord(void)$/;"	f
calculateAttenuation	modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateAttenuation (tCarElt* car)$/;"	f	class:CarSoundData
calculateBackfireSound	modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateBackfireSound (tCarElt* car)$/;"	f	class:CarSoundData
calculateCollisionSound	modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateCollisionSound (tCarElt* car)$/;"	f	class:CarSoundData
calculateEngineSound	modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateEngineSound (tCarElt* car)$/;"	f	class:CarSoundData
calculateGearChangeSound	modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateGearChangeSound (tCarElt* car) {$/;"	f	class:CarSoundData
calculateTyreSound	modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateTyreSound(tCarElt* car)$/;"	f	class:CarSoundData
calculate_CC	drivers/berniw/berniw.cpp	/^double calculate_CC(bool updown) {$/;"	f
calculate_CC	drivers/berniw2/berniw2.cpp	/^double calculate_CC(bool updown) {$/;"	f
calculate_CC	drivers/berniw3/berniw3.cpp	/^double calculate_CC(bool updown) {$/;"	f
calculate_CC	drivers/human/human.cpp	/^static double calculate_CC(bool updown, tCarElt* car) {$/;"	f	file:
callback	windows/include/plib/sl.h	/^  slCallBack     callback ;$/;"	m	class:slPlayer
callback	windows/include/plib/sl.h	/^  slCallBack callback ;$/;"	m	struct:slPendingCallBack
callbacks	windows/include/vorbis/vorbisfile.h	/^  ov_callbacks callbacks;$/;"	m	struct:OggVorbis_File
calloc	libs/tgf/tgf.h	161;"	d
calloc	libs/txml/xmldef.h	29;"	d
calls	libs/tgf/tgf.h	/^  int calls;$/;"	m	class:ProfileInstance
cam	interfaces/track.h	/^    tRoadCam        *cam;	\/* current camera *\/$/;"	m	struct:trackSeg
camChangeInterval	modules/graphic/ssggraph/grcam.cpp	/^    double camChangeInterval;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
camDraw	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::camDraw(tSituation *s)$/;"	f	class:cGrScreen
camEventInterval	modules/graphic/ssggraph/grcam.cpp	/^    double camEventInterval;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
camber	modules/simu/simuv2/wheel.h	/^    tdble	camber;		\/* camber, negative toward exterior on both sides *\/$/;"	m	struct:__anon11
camber	modules/simu/simuv3/wheel.h	/^    tdble	camber;		\/* camber, negative toward exterior on both sides *\/$/;"	m	struct:__anon33
cameraMatrix	windows/include/plib/ssg.h	/^  sgMat4    cameraMatrix       ;$/;"	m	class:ssgContext
cams	modules/graphic/ssggraph/grscreen.h	/^		tGrCamHead		cams[10];				\/\/ From F2 to F11.$/;"	m	class:cGrScreen
capped	windows/include/plib/ssgaShapes.h	/^  int capped ;$/;"	m	class:ssgaCylinder
capture_count	libs/raceengineclient/raceengine.cpp	/^int capture_count = 0;$/;"	v
car	drivers/bt/cardata.h	/^		tCarElt *car;		\/\/ For identification.$/;"	m	class:SingleCardata
car	drivers/bt/driver.h	/^		tCarElt *car;			\/\/ Pointer to tCarElt struct.$/;"	m	class:Driver
car	drivers/bt/opponent.h	/^		tCarElt *car;$/;"	m	class:Opponent
car	drivers/bt/pit.h	/^		tCarElt *car;$/;"	m	class:Pit
car	drivers/damned/cardata.h	/^		tCarElt *car;		\/\/ For identification.$/;"	m	class:SingleCardata
car	drivers/damned/driver.h	/^		tCarElt *car;			\/\/ Pointer to tCarElt struct.$/;"	m	class:Driver
car	drivers/damned/opponent.h	/^		tCarElt *car;$/;"	m	class:Opponent
car	drivers/damned/pit.h	/^		tCarElt *car;$/;"	m	class:Pit
car	drivers/olethros/cardata.h	/^	tCarElt *car;		\/\/ For identification.$/;"	m	class:olethros::SingleCardata
car	drivers/olethros/driver.h	/^	tCarElt *car;			\/\/\/< Pointer to tCarElt struct.$/;"	m	class:olethros::Driver
car	drivers/olethros/opponent.h	/^		tCarElt *car;$/;"	m	class:olethros::Opponent
car	drivers/olethros/pit.h	/^		tCarElt *car;$/;"	m	class:olethros::Pit
car	drivers/sparkle/driver.h	/^		tCarElt *car;			\/* pointer to tCarElt struct *\/$/;"	m	class:Driver
car	drivers/sparkle/opponent.h	/^		tCarElt *car;$/;"	m	class:Opponent
car	drivers/sparkle/pit.h	/^		tCarElt *car;$/;"	m	class:Pit
car	interfaces/track.h	/^	struct CarElt	*car[TR_PIT_MAXCARPERPIT];	\/**< Car links for pit *\/$/;"	m	struct:TrackOwnPit	typeref:struct:TrackOwnPit::CarElt
car	libs/racescreens/driverselect.cpp	/^	void *car;$/;"	m	struct:DrvElt	file:
carElt	modules/simu/simuv2/carstruct.h	/^    tCarElt	*carElt;$/;"	m	struct:__anon23
carElt	modules/simu/simuv3/carstruct.h	/^    tCarElt	*carElt;$/;"	m	struct:__anon42
carEntity	modules/graphic/ssggraph/grcar.h	/^	ssgEntity       *carEntity;$/;"	m	struct:__anon5
carHandle	interfaces/car.h	/^	void *carHandle; \/**< parameters for car caracteristics *\/$/;"	m	struct:__anon80
carInfo	interfaces/raceman.h	/^    tReCarInfo		*carInfo;$/;"	m	struct:__anon73
carList	interfaces/raceman.h	/^    tCarElt		*carList;	\/**< List of all the cars racing *\/$/;"	m	struct:RmInfo
carName	interfaces/car.h	/^	char carName[MAX_NAME_LEN]; \/**< Car object name *\/$/;"	m	struct:__anon76
carName	libs/raceengineclient/raceresults.cpp	/^	char *carName;$/;"	m	struct:__anon124	file:
carPos	modules/graphic/ssggraph/grcar.h	/^    sgMat4		carPos;$/;"	m	struct:__anon5
carTrackRatioX	modules/graphic/ssggraph/grloadac.cpp	/^double carTrackRatioX=0;$/;"	v
carTrackRatioY	modules/graphic/ssggraph/grloadac.cpp	/^double carTrackRatioY=0;$/;"	v
carTransform	modules/graphic/ssggraph/grcar.h	/^    ssgTransform	*carTransform;$/;"	m	struct:__anon5
car_Position	topview/topview.cpp	/^struct car_Position {$/;"	s	file:
car_positions	topview/topview.cpp	/^car_Position car_positions[10];$/;"	v
car_sound_data	modules/graphic/ssggraph/grsound.cpp	/^static CarSoundData** car_sound_data = NULL;$/;"	v	file:
car_speed	drivers/berniw/berniw.cpp	/^static double car_speed = 0.0;$/;"	v	file:
car_speed	drivers/berniw2/berniw2.cpp	/^static double car_speed = 0.0;$/;"	v	file:
car_speed	drivers/berniw3/berniw3.cpp	/^static double car_speed = 0.0;$/;"	v	file:
car_speed	drivers/human/human.cpp	/^static double car_speed = 0;$/;"	v	file:
car_src	modules/graphic/ssggraph/SoundInterface.h	/^	SoundSource* car_src;$/;"	m	class:OpenalSoundInterface
car_src	modules/graphic/ssggraph/SoundInterface.h	/^	SoundSource* car_src;$/;"	m	class:PlibSoundInterface
cardata	drivers/bt/driver.cpp	/^Cardata *Driver::cardata = NULL;$/;"	m	class:Driver	file:
cardata	drivers/bt/driver.h	/^		static Cardata *cardata;		\/\/ Data about all cars shared by all instances.$/;"	m	class:Driver
cardata	drivers/bt/opponent.h	/^		SingleCardata *cardata;		\/\/ Pointer to global data about this opponent.$/;"	m	class:Opponent
cardata	drivers/damned/driver.cpp	/^Cardata *Driver::cardata = NULL;$/;"	m	class:Driver	file:
cardata	drivers/damned/driver.h	/^		static Cardata *cardata;		\/\/ Data about all cars shared by all instances.$/;"	m	class:Driver
cardata	drivers/damned/opponent.h	/^		SingleCardata *cardata;		\/\/ Pointer to global data about this opponent.$/;"	m	class:Opponent
cardata	drivers/olethros/driver.cpp	/^    Cardata *Driver::cardata = NULL;$/;"	m	class:olethros::Driver	file:
cardata	drivers/olethros/driver.h	/^	static Cardata *cardata;		\/\/\/< Data about all cars shared by all instances.$/;"	m	class:olethros::Driver
cardata	drivers/olethros/opponent.h	/^		SingleCardata *cardata;		\/\/ Pointer to global data about this opponent.$/;"	m	class:olethros::Opponent
cardot	modules/graphic/ssggraph/grtrackmap.cpp	/^GLuint cGrTrackMap::cardot;$/;"	m	class:cGrTrackMap	file:
cardot	modules/graphic/ssggraph/grtrackmap.h	/^		static GLuint cardot;$/;"	m	class:cGrTrackMap
care_about	windows/include/plib/ssg.h	/^  virtual void      care_about ( int mode ) { dont_care &= ~(1<<mode) ; }$/;"	f	class:ssgSimpleState
carinfo	libs/confscreens/driverconfig.cpp	/^    tCarInfo	*carinfo;$/;"	m	struct:PlayerInfo	file:
carmass	drivers/berniw/mycar.h	/^		double carmass;			\/* mass of car without fuel *\/$/;"	m	class:MyCar
carmass	drivers/berniw2/mycar.h	/^		double carmass;			\/* mass of car without fuel *\/$/;"	m	class:MyCar
carmass	drivers/berniw3/mycar.h	/^		double carmass;			\/* mass of car without fuel *\/$/;"	m	class:MyCar
carmass	drivers/human/mycar.h	/^		double carmass;			\/* mass of car without fuel *\/$/;"	m	class:MyCar
carmass	drivers/inferno/mycar.h	/^		double carmass;			\/\/ Mass of car without fuel.$/;"	m	class:MyCar
carmass	drivers/lliaw/mycar.h	/^		double carmass;			\/\/ Mass of car without fuel.$/;"	m	class:MyCar
carmass	drivers/tita/mycar.h	/^		double carmass;			\/\/ Mass of car without fuel.$/;"	m	class:MyCar
cars	interfaces/raceman.h	/^    tCarElt		**cars;		\/**< list of cars *\/ $/;"	m	struct:Situation
cars	modules/graphic/ssggraph/grscreen.h	/^		tCarElt	**cars;			\/\/ List of cars.$/;"	m	class:cGrScreen
carsPerPit	interfaces/track.h	/^	int carsPerPit;$/;"	m	struct:__anon65
cat	libs/confscreens/driverconfig.cpp	/^    tCatInfo		*cat;$/;"	m	struct:tCarInfo	file:
catch_me	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^void catch_me() {}$/;"	f
catchdist	drivers/berniw/pathfinder.h	/^	int catchdist;$/;"	m	struct:__anon156
catchdist	drivers/berniw2/pathfinder.h	/^	int catchdist;$/;"	m	struct:__anon200
catchdist	drivers/berniw3/pathfinder.h	/^	int catchdist;$/;"	m	struct:__anon179
catchdist	drivers/bt/opponent.h	/^		float catchdist;	\/\/ distance needed to catch the opponent (linear estimate).$/;"	m	class:Opponent
catchdist	drivers/damned/opponent.h	/^		float catchdist;	\/\/ distance needed to catch the opponent (linear estimate).$/;"	m	class:Opponent
catchdist	drivers/human/pathfinder.h	/^	int catchdist;$/;"	m	struct:__anon191
catchdist	drivers/inferno/pathfinder.h	/^	int catchdist;			\/\/ roughly estimated distance to catch up with the opponent.$/;"	m	struct:__anon164
catchdist	drivers/lliaw/pathfinder.h	/^	int catchdist;			\/\/ roughly estimated distance to catch up with the opponent.$/;"	m	struct:__anon210
catchdist	drivers/olethros/opponent.h	/^		float catchdist;	\/\/\/< distance needed to catch the opponent (linear estimate).$/;"	m	class:olethros::Opponent
catchdist	drivers/sparkle/opponent.h	/^		float catchdist;	\/* distance needed to catch the opponent *\/$/;"	m	class:Opponent
catchdist	drivers/tita/pathfinder.h	/^	int catchdist;			\/\/ roughly estimated distance to catch up with the opponent.$/;"	m	struct:__anon171
catchsegid	drivers/berniw/pathfinder.h	/^	int catchsegid;			\/* segment, where i expect (or better guess!) to catch opponent *\/$/;"	m	struct:__anon156
catchsegid	drivers/berniw2/pathfinder.h	/^	int catchsegid;			\/* segment, where i expect (or better guess!) to catch opponent *\/$/;"	m	struct:__anon200
catchsegid	drivers/berniw3/pathfinder.h	/^	int catchsegid;			\/* segment, where i expect (or better guess!) to catch opponent *\/$/;"	m	struct:__anon179
catchsegid	drivers/human/pathfinder.h	/^	int catchsegid;			\/* segment, where i expect (or better guess!) to catch opponent *\/$/;"	m	struct:__anon191
catchsegid	drivers/inferno/pathfinder.h	/^	int catchsegid;			\/\/ segment, where i expect (or better guess!) to catch opponent.$/;"	m	struct:__anon164
catchsegid	drivers/lliaw/pathfinder.h	/^	int catchsegid;			\/\/ segment, where i expect (or better guess!) to catch opponent.$/;"	m	struct:__anon210
catchsegid	drivers/tita/pathfinder.h	/^	int catchsegid;			\/\/ segment, where i expect (or better guess!) to catch opponent.$/;"	m	struct:__anon171
category	interfaces/car.h	/^	char category[MAX_NAME_LEN]; \/**< Car's category *\/$/;"	m	struct:__anon76
category	interfaces/track.h	/^    const char *category;	\/**< Category of the track *\/$/;"	m	struct:__anon68
catfile	tools/nfsperf/mainnfsperf.cpp	/^char	*catfile = NULL;$/;"	v
cb	windows/include/plib/ssg.h	/^  void setCreateBranchCallback ( ssgBranch *(*cb)(char *) )$/;"	f	class:ssgLoaderOptions
cb	windows/include/plib/ssg.h	/^  void setCreateStateCallback ( ssgState *(*cb)(char *) )$/;"	f	class:ssgLoaderOptions
cb	windows/include/plib/ssg.h	/^inline void ssgSetAppStateCallback ( ssgState *(*cb)(char *) )$/;"	f
cc	modules/graphic/ssggraph/SoundInterface.h	/^	ALCcontext* cc;$/;"	m	class:OpenalSoundInterface
cdataSectionProcessor	libs/txml/xmlparse.c	/^enum XML_Error cdataSectionProcessor(XML_Parser parser,$/;"	f	file:
cdataSectionProcessor	libs/txml/xmlparse.c	/^static Processor cdataSectionProcessor;$/;"	v	file:
cdataSectionTok	libs/txml/xmltok_impl.c	/^int PREFIX(cdataSectionTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
center	interfaces/track.h	/^    t3Dd center;		\/**< Center of the curve *\/$/;"	m	struct:trackSeg
center	modules/graphic/ssggraph/grcam.h	/^    sgVec3 center;$/;"	m	class:cGrCamera
center	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Point center;$/;"	m	class:BBox
center	windows/include/plib/js.h	/^  float center    [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
center	windows/include/plib/sg.h	/^  sgVec3  center ;$/;"	m	class:sgSphere
center	windows/include/plib/sg.h	/^  sgdVec3  center ;$/;"	m	class:sgdSphere
center	windows/include/plib/ssgaShapes.h	/^  sgVec3 center ;$/;"	m	class:ssgaShape
centerW	windows/include/vorbis/codec.h	/^  long centerW;$/;"	m	struct:vorbis_dsp_state
centerx	topview/topview.cpp	/^float eyex = 0.0f, eyey = 0.0f, eyez = 1000.0f, centerx = 0.0f, centery = 0.0f,$/;"	v
centery	topview/topview.cpp	/^float eyex = 0.0f, eyey = 0.0f, eyez = 1000.0f, centerx = 0.0f, centery = 0.0f,$/;"	v
centerz	topview/topview.cpp	/^		centerz = 0.0f, upx = 0.0f, upy = 1.0f, upz = 0.0f;$/;"	v
cgcorr_b	drivers/berniw/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	drivers/berniw2/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	drivers/berniw3/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	drivers/human/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	drivers/inferno/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	drivers/lliaw/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	drivers/tita/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgh	drivers/berniw/mycar.h	/^		double cgh;			\/* height of center of gravity *\/$/;"	m	class:AbstractCar
cgh	drivers/berniw2/mycar.h	/^		double cgh;			\/* height of center of gravity *\/$/;"	m	class:AbstractCar
cgh	drivers/berniw3/mycar.h	/^		double cgh;			\/* height of center of gravity *\/$/;"	m	class:AbstractCar
cgh	drivers/human/mycar.h	/^		double cgh;			\/* height of center of gravity *\/$/;"	m	class:AbstractCar
cgh	drivers/inferno/mycar.h	/^		double cgh;		\/\/ Height of center of gravity.$/;"	m	class:AbstractCar
cgh	drivers/lliaw/mycar.h	/^		double cgh;		\/\/ Height of center of gravity.$/;"	m	class:AbstractCar
cgh	drivers/tita/mycar.h	/^		double cgh;		\/\/ Height of center of gravity.$/;"	m	class:AbstractCar
chai	tools/trackgen/easymesh.cpp	/^struct chai {$/;"	s	file:
chain	tools/trackgen/easymesh.cpp	/^} *chain;$/;"	v	typeref:struct:chai
chain	tools/trackgen/easymesh.h	/^    int chain;            \/* on which chains is the node *\/$/;"	m	struct:nod
chain	tools/trackgen/easymesh.h	/^    int chain;$/;"	m	struct:seg
chanList	modules/telemetry/telemetry.cpp	/^    tChannel	*chanList;$/;"	m	struct:Tlm	file:
changeBase	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^void Complex::changeBase(const Point *ptr) {$/;"	f	class:Complex
changeMenuMusicState	libs/confscreens/soundconfig.cpp	/^static void changeMenuMusicState(void *vp)$/;"	f	file:
changeMode	libs/raceengineclient/raceengine.cpp	/^static void changeMode() {$/;"	f	file:
changeMode_CC	libs/raceengineclient/raceengine.cpp	/^void changeMode_CC(void *) {$/;"	f
changeMode_LKAS	libs/raceengineclient/raceengine.cpp	/^void changeMode_LKAS(void *) {$/;"	f
changeSoundState	libs/confscreens/soundconfig.cpp	/^static void changeSoundState(void *vp)$/;"	f	file:
changeTextureCompressState	libs/confscreens/openglconfig.cpp	/^static void changeTextureCompressState(void *vp)$/;"	f	file:
changeTextureSizeState	libs/confscreens/openglconfig.cpp	/^static void changeTextureSizeState(void *vp)$/;"	f	file:
changeWheelDetailState	libs/confscreens/graphconfig.cpp	/^static void changeWheelDetailState(void *vp)$/;"	f	file:
change_count_l	drivers/human/human.cpp	/^static int change_count_l;$/;"	v	file:
change_count_r	drivers/human/human.cpp	/^static int change_count_r;$/;"	v	file:
changed	drivers/berniw/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	drivers/berniw2/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	drivers/berniw3/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	drivers/human/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	drivers/inferno/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	drivers/lliaw/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	drivers/tita/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
channels	windows/include/png.h	/^   png_byte channels;    \/* number of channels (1, 2, 3, or 4) *\/$/;"	m	struct:png_row_info_struct
channels	windows/include/vorbis/codec.h	/^  int channels;$/;"	m	struct:vorbis_info
charRefNumber	libs/txml/xmltok.h	/^  int (*charRefNumber)(const ENCODING *enc, const char *ptr);$/;"	m	struct:encoding
charRefNumber	libs/txml/xmltok_impl.c	/^int PREFIX(charRefNumber)(const ENCODING *enc, const char *ptr)$/;"	f	file:
characterDataHandler	libs/txml/xmlparse.c	/^  XML_CharacterDataHandler characterDataHandler;$/;"	m	struct:__anon117	file:
characterDataHandler	libs/txml/xmlparse.c	263;"	d	file:
charf	windows/include/zconf.h	/^typedef char  FAR charf;$/;"	t
charf	windows/include/zconf.h	112;"	d
check	drivers/bt/learn.h	/^		bool check;$/;"	m	class:SegLearn
check	drivers/damned/learn.h	/^		bool check;$/;"	m	class:SegLearn
check	drivers/olethros/learn.h	/^	bool check; \/\/\/< whether we should update radius$/;"	m	class:olethros::SegLearn
check	libs/musicplayer/OpenALMusicPlayer.cpp	/^bool OpenALMusicPlayer::check()$/;"	f	class:OpenALMusicPlayer
checkAndSetMaximum	modules/graphic/ssggraph/grtrackmap.cpp	/^inline void cGrTrackMap::checkAndSetMaximum(float &currentmax, float &value)$/;"	f	class:cGrTrackMap
checkAndSetMinimum	modules/graphic/ssggraph/grtrackmap.cpp	/^inline void cGrTrackMap::checkAndSetMinimum(float &currentmin, float &value)$/;"	f	class:cGrTrackMap
checkCharRefNumber	libs/txml/xmltok.c	/^int checkCharRefNumber(int result)$/;"	f	file:
checkCompressARBAvailable	libs/tgfclient/glfeatures.cpp	/^void checkCompressARBAvailable(bool &result)$/;"	f
checkCompressARBEnabled	libs/tgfclient/glfeatures.cpp	/^void checkCompressARBEnabled(bool &result)$/;"	f
checkDispList	tools/trackgen/track.cpp	/^void checkDispList($/;"	f
checkDispList2	tools/trackgen/track.cpp	/^void checkDispList2($/;"	f
checkDispList3	tools/trackgen/track.cpp	/^void checkDispList3($/;"	f
checkGLFeatures	libs/tgfclient/glfeatures.cpp	/^void checkGLFeatures(void) {$/;"	f
checkMustSmoothVector	tools/accc/ac3dload.cpp	/^int checkMustSmoothVector(point_t *n1, point_t *n2,point_t *t1, point_t *t2)$/;"	f
checkPiTarget	libs/txml/xmltok_impl.c	/^int PREFIX(checkPiTarget)(const ENCODING *enc, const char *ptr, const char *end, int *tokPtr)$/;"	f	file:
checking_bounds	drivers/olethros/geometry.h	/^	enum BoundsCheckingStatus checking_bounds;$/;"	m	class:Vector	typeref:enum:Vector::BoundsCheckingStatus
ci	modules/simu/simuv2/SOLID-2.0/src/Polygon.h	/^  mutable int ci;$/;"	m	class:Polygon
circles	tools/trackgen/easymesh.cpp	/^void circles(int e)$/;"	f
ck	windows/include/plib/ssg.h	/^  static ulClock ck ;$/;"	m	class:ssgTimedSelector
classify	tools/trackgen/easymesh.cpp	/^void classify(void)$/;"	f
cleanObject	modules/simu/simuv2/SOLID-2.0/src/RespTable.cpp	/^void RespTable::cleanObject(DtObjectRef obj) {$/;"	f	class:RespTable
cleanUnusedSection	libs/tgf/params.cpp	/^static void cleanUnusedSection(struct parmHeader *conf,$/;"	f	file:
client_data	modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  void *client_data;$/;"	m	class:Response
clipPlane	windows/include/plib/ssg.h	/^  sgVec4 clipPlane [ 6 ] ;$/;"	m	class:ssgContext
clist	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec4         *clist    [ MAX_MATERIALS ] ;$/;"	v	file:
clone	modules/graphic/ssggraph/grcarlight.cpp	/^ssgBase *ssgVtxTableCarlight::clone(int clone_flags)$/;"	f	class:ssgVtxTableCarlight
clone	modules/graphic/ssggraph/grshadow.cpp	/^ssgBase *ssgVtxTableShadow::clone ( int clone_flags )$/;"	f	class:ssgVtxTableShadow
clone	modules/graphic/ssggraph/grsmoke.cpp	/^ssgBase *ssgVtxTableSmoke::clone ( int clone_flags )$/;"	f	class:ssgVtxTableSmoke
clone	modules/graphic/ssggraph/grvtxtable.cpp	/^ssgBase *grVtxTable::clone (int clone_flags)$/;"	f	class:grVtxTable
close_func	windows/include/vorbis/vorbisfile.h	/^  int    (*close_func) (void *datasource);$/;"	m	struct:__anon48
closest	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline bool closest(Vector& v) {$/;"	f
closestAxis	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline int Vector::closestAxis() const {$/;"	f	class:Vector
closest_points	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^void closest_points(const Convex& a, const Convex& b,$/;"	f
clothlength	drivers/berniw/pathfinder.cpp	/^double Pathfinder::clothlength(double beta, double y)$/;"	f	class:Pathfinder
clothlength	drivers/berniw2/pathfinder.cpp	/^double Pathfinder::clothlength(double beta, double y)$/;"	f	class:Pathfinder
clothlength	drivers/berniw3/pathfinder.cpp	/^double Pathfinder::clothlength(double beta, double y)$/;"	f	class:Pathfinder
clothlength	drivers/human/pathfinder.cpp	/^double Pathfinder::clothlength(double beta, double y)$/;"	f	class:Pathfinder
clothparam	drivers/berniw/pathfinder.cpp	/^double Pathfinder::clothparam(double alpha)$/;"	f	class:Pathfinder
clothparam	drivers/berniw2/pathfinder.cpp	/^double Pathfinder::clothparam(double alpha)$/;"	f	class:Pathfinder
clothparam	drivers/berniw3/pathfinder.cpp	/^double Pathfinder::clothparam(double alpha)$/;"	f	class:Pathfinder
clothparam	drivers/human/pathfinder.cpp	/^double Pathfinder::clothparam(double alpha)$/;"	f	class:Pathfinder
clothsigma	drivers/berniw/pathfinder.cpp	/^double Pathfinder::clothsigma(double beta, double y)$/;"	f	class:Pathfinder
clothsigma	drivers/berniw2/pathfinder.cpp	/^double Pathfinder::clothsigma(double beta, double y)$/;"	f	class:Pathfinder
clothsigma	drivers/berniw3/pathfinder.cpp	/^double Pathfinder::clothsigma(double beta, double y)$/;"	f	class:Pathfinder
clothsigma	drivers/human/pathfinder.cpp	/^double Pathfinder::clothsigma(double beta, double y)$/;"	f	class:Pathfinder
clr	modules/graphic/ssggraph/grskidmarks.h	/^  ssgColourArray        **clr;$/;"	m	struct:__anon1
clrClipPlane	windows/include/plib/ssg.h	/^  void clrClipPlane ( int i )$/;"	f	class:ssgContext
clrTraversalMaskBits	windows/include/plib/ssg.h	/^  void clrTraversalMaskBits ( int t ) { traversal_mask &= ~t ; }$/;"	f	class:ssgEntity
clutch	modules/simu/simuv2/transmission.h	/^    tClutch	clutch;$/;"	m	struct:__anon26
clutch	modules/simu/simuv3/transmission.h	/^    tClutch	clutch;$/;"	m	struct:__anon45
clutchCmd	interfaces/car.h	/^	tdble clutchCmd; \/**< Clutch command [0.0, 1.0] *\/$/;"	m	struct:__anon81
clutchdelay	drivers/human/human.h	/^	tdble	clutchdelay;$/;"	m	struct:HumanContext
clutchtime	drivers/bt/driver.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:Driver
clutchtime	drivers/damned/driver.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:Driver
clutchtime	drivers/human/human.h	/^	tdble	clutchtime;$/;"	m	struct:HumanContext
clutchtime	drivers/inferno/mycar.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:MyCar
clutchtime	drivers/lliaw/mycar.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:MyCar
clutchtime	drivers/olethros/driver.h	/^	float clutchtime;		\/\/\/< Clutch timer.$/;"	m	class:olethros::Driver
clutchtime	drivers/tita/mycar.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:MyCar
cmdfile	modules/telemetry/telemetry.cpp	/^    char	*cmdfile;$/;"	m	struct:Tlm	file:
cobound	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.h	/^  IndexArray *cobound;$/;"	m	class:Polyhedron
codec_setup	windows/include/vorbis/codec.h	/^  void *codec_setup;$/;"	m	struct:vorbis_info
coeff	modules/simu/simuv2/brake.h	/^    tdble	coeff;$/;"	m	struct:__anon7
coeff	modules/simu/simuv2/brake.h	/^    tdble	coeff;$/;"	m	struct:__anon8
coeff	modules/simu/simuv3/brake.h	/^    tdble	coeff;$/;"	m	struct:__anon29
coeff	modules/simu/simuv3/brake.h	/^    tdble	coeff;$/;"	m	struct:__anon30
col	tools/accc/accc.h	/^typedef struct col$/;"	s
col	windows/include/plib/ssgaParticleSystem.h	/^  sgVec4 col ;$/;"	m	class:ssgaParticle
coll_data	modules/simu/simuv2/SOLID-2.0/src/Response.cpp	/^DtCollData Response::coll_data;$/;"	m	class:Response	file:
coll_data	modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  static DtCollData coll_data;$/;"	m	class:Response
collapseObject	tools/accc/mainaccc.cpp	/^int collapseObject=0;$/;"	v
collcar	drivers/berniw/pathfinder.h	/^	OtherCar* collcar;		\/* pointers to the cars *\/$/;"	m	struct:__anon156
collcar	drivers/berniw2/pathfinder.h	/^	OtherCar* collcar;		\/* pointers to the cars *\/$/;"	m	struct:__anon200
collcar	drivers/berniw3/pathfinder.h	/^	OtherCar* collcar;		\/* pointers to the cars *\/$/;"	m	struct:__anon179
collcar	drivers/human/pathfinder.h	/^	OtherCar* collcar;		\/* pointers to the cars *\/$/;"	m	struct:__anon191
collcar	drivers/inferno/pathfinder.h	/^	OtherCar* collcar;		\/\/ pointer to the car.$/;"	m	struct:__anon164
collcar	drivers/lliaw/pathfinder.h	/^	OtherCar* collcar;		\/\/ pointer to the car.$/;"	m	struct:__anon210
collcar	drivers/tita/pathfinder.h	/^	OtherCar* collcar;		\/\/ pointer to the car.$/;"	m	struct:__anon171
collcars	drivers/berniw/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	drivers/berniw2/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	drivers/berniw3/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	drivers/human/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	drivers/inferno/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	drivers/lliaw/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	drivers/tita/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collision	drivers/berniw/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	drivers/berniw2/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	drivers/berniw3/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	drivers/human/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	drivers/inferno/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	drivers/lliaw/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	drivers/tita/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	interfaces/car.h	/^	int collision; \/**< Collision value for graphics and sound, clearing is managed by consumers *\/$/;"	m	struct:__anon80
collision	modules/simu/simuv2/carstruct.h	/^    int		collision;$/;"	m	struct:__anon23
collision	modules/simu/simuv3/carstruct.h	/^    int		collision;$/;"	m	struct:__anon42
collisionAware	modules/simu/simuv2/carstruct.h	/^    int		collisionAware;$/;"	m	struct:__anon23
collisionAware	modules/simu/simuv3/carstruct.h	/^    int		collisionAware;$/;"	m	struct:__anon42
collision_count	interfaces/car.h	/^	int collision_count;$/;"	m	struct:tCollisionState_
collision_state	interfaces/car.h	/^	tCollisionState collision_state; \/**< collision state *\/$/;"	m	struct:__anon80
collpos	interfaces/car.h	/^	t3Dd collpos; \/**< Collision position, useful for sound*\/$/;"	m	struct:__anon80
collpos	modules/simu/simuv2/carstruct.h	/^    t3Dd	collpos;$/;"	m	struct:__anon23
collpos	modules/simu/simuv3/carstruct.h	/^    t3Dd	collpos;$/;"	m	struct:__anon42
color	drivers/human/human.cpp	/^static float color[] = { 0.0, 0.0, 1.0, 1.0 };$/;"	v	file:
color	libs/confscreens/driverconfig.cpp	/^    float	color[4];$/;"	m	struct:PlayerInfo	file:
color	tools/trackgen/objects.cpp	/^	unsigned int	color;$/;"	m	struct:objdef	file:
color	topview/topview.cpp	/^	Color color;$/;"	m	struct:Particle	file:
color_t	tools/accc/accc.h	/^} color_t;$/;"	t	typeref:struct:col
color_type	windows/include/png.h	/^   png_byte color_type;  \/* color type of row *\/$/;"	m	struct:png_row_info_struct
colormap	modules/graphic/ssggraph/grloadsgi.h	/^		int            colormap ;$/;"	m	class:ssgSGIHeader
colour	windows/include/plib/ssg.h	/^  sgVec4 colour ;$/;"	m	struct:ssgInterleavedArrayElement
colour	windows/include/plib/ssgaShapes.h	/^  sgVec4 colour ;$/;"	m	class:ssgaShape
colourTable	windows/include/plib/ssgaFire.h	/^  float *colourTable ;$/;"	m	class:ssgaFire
colour_material_mode	windows/include/plib/ssg.h	/^  int colour_material_mode ;$/;"	m	class:ssgSimpleState
colours	windows/include/plib/ssg.h	/^  sgVec4 *colours   ; int num_colours   ; unsigned short *c_index ;$/;"	m	class:ssgVTable
colours	windows/include/plib/ssg.h	/^  ssgColourArray   *colours   ;$/;"	m	class:ssgVtxTable
colours	windows/include/plib/ssgaWaveSystem.h	/^  sgVec4 *colours   ;$/;"	m	class:ssgaWaveSystem
columnNumber	libs/txml/xmltok.h	/^  unsigned long columnNumber;$/;"	m	struct:position
comm_max	windows/include/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s
comment	windows/include/plib/sl.h	/^  char  *comment;$/;"	m	class:slSample
comment	windows/include/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s
comment_lengths	windows/include/vorbis/codec.h	/^  int   *comment_lengths;$/;"	m	struct:vorbis_comment
comments	windows/include/vorbis/codec.h	/^  int    comments;$/;"	m	struct:vorbis_comment
commitBestLapTime	interfaces/car.h	/^	bool commitBestLapTime; \/* If a rule violation happens (e.g. cutting a corner) the laptime is not commited (false) *\/$/;"	m	struct:__anon77
commonSideInit	modules/track/track4.cpp	/^static tTrackSeg* commonSideInit($/;"	f	file:
commonState	modules/graphic/ssggraph/grcar.cpp	/^static ssgSimpleState *commonState = NULL;$/;"	v	file:
common_drive	drivers/human/human.cpp	/^static void common_drive(int index, tCarElt* car, tSituation *s) {$/;"	f	file:
common_point	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool common_point(const BBoxNode *a, const BBoxNode *b,$/;"	f
common_point	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool common_point(const BBoxNode *tree, const Convex& c, const BBox& bb, $/;"	f
common_point	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool common_point(const Complex& a, const Complex& b, $/;"	f
common_point	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool common_point(const Complex& a, const Convex& b, $/;"	f
common_point	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^bool common_point(const Convex& a, const Convex& b, const Transform& b2a,$/;"	f
common_point	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^bool common_point(const Convex& a, const Convex& b,$/;"	f
common_point	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool common_point(const Object& a, const Object& b, Vector& v, Point& pa, Point& pb) {$/;"	f
common_pointComplexComplex	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool common_pointComplexComplex(const Shape& a, const Shape& b, $/;"	f
common_pointComplexConvex	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool common_pointComplexConvex(const Shape& a, const Shape& b, $/;"	f
common_pointConvexConvex	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool common_pointConvexConvex(const Shape& a, const Shape& b, $/;"	f
common_pointInitialize	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^Common_pointTable *common_pointInitialize() {$/;"	f
comp	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Scalar comp[3];                            $/;"	m	class:Tuple3
comp	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Scalar comp[4];                            $/;"	m	class:Tuple4
comparCars	modules/graphic/ssggraph/grscreen.cpp	/^comparCars(const void *car1, const void *car2)$/;"	f	file:
complete	libs/txml/xmlparse.c	/^  int complete;$/;"	m	struct:__anon116	file:
complexList	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^ComplexList complexList;$/;"	v
compress	windows/include/zconf.h	30;"	d
compress2	windows/include/zconf.h	31;"	d
compressARBAvailable	libs/tgfclient/glfeatures.cpp	/^static bool compressARBAvailable;$/;"	v	file:
compressARBEnabled	libs/tgfclient/glfeatures.cpp	/^static bool compressARBEnabled;$/;"	v	file:
compressBound	windows/include/zconf.h	32;"	d
compression	windows/include/png.h	/^   int  compression;       \/* compression value:$/;"	m	struct:png_text_struct
computeNorm	tools/accc/ac3dload.cpp	/^int computeNorm( point_t *pv1, point_t *pv2, point_t *pv3, point_t *norm)$/;"	f
computeObjectTriNorm	tools/accc/ac3dload.cpp	/^void computeObjectTriNorm(ob_t *object )$/;"	f
computeRadius	drivers/bt/driver.cpp	/^void Driver::computeRadius(float *radius)$/;"	f	class:Driver
computeRadius	drivers/damned/driver.cpp	/^void Driver::computeRadius(float *radius)$/;"	f	class:Driver
computeRadius	drivers/olethros/driver.cpp	/^    void Driver::computeRadius(float *radius)$/;"	f	class:olethros::Driver
computeSaveAC3D	tools/accc/ac3dload.cpp	/^void computeSaveAC3D( char *OutputFilename, ob_t *object)$/;"	f
computeSaveAC3DM	tools/accc/ac3dload.cpp	/^void computeSaveAC3DM( char *OutputFilename, ob_t *object)$/;"	f
computeSaveAC3DStrip	tools/accc/ac3dload.cpp	/^void computeSaveAC3DStrip( char *OutputFilename, ob_t *object)$/;"	f
computeSaveOBJ	tools/accc/ac3dload.cpp	/^void computeSaveOBJ( char *OutputFilename, ob_t *object)$/;"	f
computeTriNorm	tools/accc/ac3dload.cpp	/^void computeTriNorm(ob_t *object )$/;"	f
computeWeight	drivers/berniw/pathfinder.cpp	/^double Pathfinder::computeWeight(double x, double len)$/;"	f	class:Pathfinder
computeWeight	drivers/berniw2/pathfinder.cpp	/^double Pathfinder::computeWeight(double x, double len)$/;"	f	class:Pathfinder
computeWeight	drivers/berniw3/pathfinder.cpp	/^double Pathfinder::computeWeight(double x, double len)$/;"	f	class:Pathfinder
computeWeight	drivers/human/pathfinder.cpp	/^double Pathfinder::computeWeight(double x, double len)$/;"	f	class:Pathfinder
compute_det	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^void compute_det() {$/;"	f
compute_loop_time	windows/include/plib/ssg.h	/^  void compute_loop_time ()$/;"	f	class:ssgTimedSelector
compute_points	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline void compute_points(int bits, Point& p1, Point& p2) {$/;"	f
compute_vector	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline void compute_vector(int bits, Vector& v) {$/;"	f
condition	interfaces/car.h	/^	tdble condition;$/;"	m	struct:__anon79
condition	modules/simu/simuv3/wheel.h	/^    tdble   condition;      \/* Tyre condition *\/$/;"	m	struct:__anon33
conf	libs/tgf/params.cpp	/^	struct parmHeader *conf; \/**< Header of the parameter set *\/$/;"	m	struct:parmHandle	typeref:struct:parmHandle::parmHeader	file:
confMask	libs/racescreens/racescreens.h	/^	unsigned int confMask;	\/**< Tell what to configure *\/$/;"	m	struct:__anon103
confMax	libs/learning/policy.cpp	/^int DiscretePolicy::confMax(real* Qs, real* vQs, real p) {$/;"	f	class:DiscretePolicy
confSample	libs/learning/policy.cpp	/^int DiscretePolicy::confSample(real* Qs, real* vQs) {$/;"	f	class:DiscretePolicy
confidence	libs/learning/policy.h	/^	bool confidence; \/\/\/< Confidence estimates option$/;"	m	class:DiscretePolicy
confidence_distribution	libs/learning/policy.h	/^	enum ConfidenceDistribution confidence_distribution; \/\/\/< Distribution to use for confidence sampling$/;"	m	class:DiscretePolicy	typeref:enum:DiscretePolicy::ConfidenceDistribution
confidence_eligibility	libs/learning/policy.h	/^	bool confidence_eligibility; \/\/\/< Apply eligibility traces to confidence$/;"	m	class:DiscretePolicy
confidence_uses_gibbs	libs/learning/policy.h	/^	bool confidence_uses_gibbs; \/\/\/< Additional gibbs sampling for confidence$/;"	m	class:DiscretePolicy
config	interfaces/simu.h	/^	tfSimConfig		config;$/;"	m	struct:__anon85
config	windows/include/plib/sl.h	/^  ALconfig        config;       \/\/ configuration stuff$/;"	m	class:slDSP
configHookActivate	libs/raceengineclient/racemanmenu.cpp	/^configHookActivate(void * \/* dummy *\/)$/;"	f	file:
configHookHandle	libs/raceengineclient/racemanmenu.cpp	/^static void	*configHookHandle = 0;$/;"	v	file:
conjugate	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion Quaternion::conjugate() const {$/;"	f	class:Quaternion
conjugate	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline void Quaternion::conjugate() {$/;"	f	class:Quaternion
connection	windows/include/plib/ul.h	/^    CFragConnectionID connection;$/;"	m	class:ulDynamicLibrary
const	windows/include/zconf.h	196;"	d
contentProcessor	libs/txml/xmlparse.c	/^enum XML_Error contentProcessor(XML_Parser parser,$/;"	f	file:
contentProcessor	libs/txml/xmlparse.c	/^static Processor contentProcessor;$/;"	v	file:
contentTok	libs/txml/xmltok_impl.c	/^int PREFIX(contentTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
context	libs/musicplayer/OpenALMusicPlayer.h	/^		ALCcontext* context;$/;"	m	class:OpenALMusicPlayer
control	windows/include/plib/ssg.h	/^  void control ( ssgAnimEnum m )$/;"	f	class:ssgTimedSelector
control_points	windows/include/plib/ssgaShapes.h	/^  sgVec9 control_points[4][4] ;$/;"	m	class:ssgaPatch
conv2d	predictor/predict.py	/^def conv2d(x, W) :$/;"	f
conv2d	predictor/train.py	/^def conv2d(x, W) :$/;"	f
conv2d	predictor/train2.py	/^def conv2d(x, W) :$/;"	f
convert	libs/txml/xmlparse.h	/^  int (*convert)(void *data, const char *s);$/;"	m	struct:__anon121
convert	libs/txml/xmltok.c	/^  int (*convert)(void *userData, const char *p);$/;"	m	struct:unknown_encoding	file:
convertDelimiter	windows/main.cpp	/^static void convertDelimiter(char* buf, const int bufsize)$/;"	f	file:
copyEngPri	modules/graphic/ssggraph/CarSoundData.h	/^	void copyEngPri (SoundPri& epri) 	{epri = eng_pri;}$/;"	f	class:CarSoundData
copyFileIfNotExists	windows/main.cpp	/^static void copyFileIfNotExists(const char* filepath)$/;"	f	file:
copy_from	modules/graphic/ssggraph/grcarlight.cpp	/^void ssgVtxTableCarlight::copy_from(ssgVtxTableCarlight *src, int clone_flags)$/;"	f	class:ssgVtxTableCarlight
copy_from	modules/graphic/ssggraph/grshadow.cpp	/^void ssgVtxTableShadow::copy_from ( ssgVtxTableShadow *src, int clone_flags )$/;"	f	class:ssgVtxTableShadow
copy_from	modules/graphic/ssggraph/grsmoke.cpp	/^void ssgVtxTableSmoke::copy_from ( ssgVtxTableSmoke *src, int clone_flags )$/;"	f	class:ssgVtxTableSmoke
copy_from	modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::copy_from (grVtxTable *src, int clone_flags)$/;"	f	class:grVtxTable
corner	interfaces/car.h	/^	tPosd corner[4]; \/**< car's corners position *\/$/;"	m	struct:__anon80
corner	interfaces/car.h	/^	tPosd corner[4];$/;"	m	struct:__anon78
corner	modules/simu/simuv2/carstruct.h	/^    tDynPt	corner[4];	\/* x,y,z for static relative pos, ax,ay,az for dyn. world coord *\/$/;"	m	struct:__anon23
corner	modules/simu/simuv3/carstruct.h	/^    tDynPt	corner[4];	\/* x,y,z for static relative pos, ax,ay,az for dyn. world coord *\/$/;"	m	struct:__anon42
correctPath	drivers/berniw/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	drivers/berniw2/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	drivers/berniw3/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	drivers/human/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	drivers/inferno/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	drivers/lliaw/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	drivers/tita/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correct_prediction	predictor/train.py	/^correct_prediction = tf.equal(tf.argmax(y_conv,1), tf.argmax(y_,1))$/;"	v
correct_prediction	predictor/train2.py	/^correct_prediction = tf.equal(tf.argmax(y_conv,1), tf.argmax(y_,1))$/;"	v
corrupted	windows/include/plib/ssgaShapes.h	/^  int corrupted ;$/;"	m	class:ssgaShape
cosalpha	drivers/berniw/linalg.h	/^inline float v2d::cosalpha(const v2d &p2, const v2d &c) const$/;"	f	class:v2d
cosalpha	drivers/berniw/pathfinder.h	/^	double cosalpha;		\/* cos(alpha) from angle between my ond opponent *\/$/;"	m	struct:__anon156
cosalpha	drivers/berniw/trackdesc.h	/^		static inline double cosalpha(v3d* a, v3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	drivers/berniw2/linalg.h	/^inline float v2d::cosalpha(const v2d &p2, const v2d &c) const$/;"	f	class:v2d
cosalpha	drivers/berniw2/pathfinder.h	/^	double cosalpha;		\/* cos(alpha) from angle between my ond opponent *\/$/;"	m	struct:__anon200
cosalpha	drivers/berniw2/trackdesc.h	/^		static inline double cosalpha(v3d* a, v3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	drivers/berniw3/linalg.h	/^inline float v2d::cosalpha(const v2d &p2, const v2d &c) const$/;"	f	class:v2d
cosalpha	drivers/berniw3/pathfinder.h	/^	double cosalpha;		\/* cos(alpha) from angle between my ond opponent *\/$/;"	m	struct:__anon179
cosalpha	drivers/berniw3/trackdesc.h	/^		static inline double cosalpha(v3d* a, v3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	drivers/human/linalg.h	/^inline float v2d::cosalpha(const v2d &p2, const v2d &c) const$/;"	f	class:v2d
cosalpha	drivers/human/pathfinder.h	/^	double cosalpha;		\/* cos(alpha) from angle between my ond opponent *\/$/;"	m	struct:__anon191
cosalpha	drivers/human/trackdesc.h	/^		static inline double cosalpha(v3d* a, v3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	drivers/inferno/pathfinder.h	/^	double cosalpha;		\/\/ cos(alpha) from angle between my ond opponent.$/;"	m	struct:__anon164
cosalpha	drivers/inferno/trackdesc.h	/^		static inline double cosalpha(vec3d* a, vec3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	drivers/lliaw/pathfinder.h	/^	double cosalpha;		\/\/ cos(alpha) from angle between my ond opponent.$/;"	m	struct:__anon210
cosalpha	drivers/lliaw/trackdesc.h	/^		static inline double cosalpha(vec3d* a, vec3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	drivers/olethros/linalg.h	/^inline float v2d::cosalpha(const v2d &p2, const v2d &c) const$/;"	f	class:v2d
cosalpha	drivers/sparkle/linalg.h	/^inline float v2d::cosalpha(const v2d &p2, const v2d &c) const$/;"	f	class:v2d
cosalpha	drivers/tita/pathfinder.h	/^	double cosalpha;		\/\/ cos(alpha) from angle between my ond opponent.$/;"	m	struct:__anon171
cosalpha	drivers/tita/trackdesc.h	/^		static inline double cosalpha(vec3d* a, vec3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	libs/math/v2_t.h	/^template<class T> inline T v2t<T>::cosalpha(const v2t<T> &p2, const v2t<T> &c) const$/;"	f	class:v2t
count	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  int count;$/;"	m	class:Complex
count	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  int count;$/;"	m	class:IndexArray
count	modules/simu/simuv2/car.cpp	/^static int count = 0;$/;"	v	file:
countRec	tools/trackgen/relief.cpp	/^countRec(ssgEntity *e, int *nb_vert, int *nb_seg)$/;"	f	file:
countSegments	drivers/berniw/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	drivers/berniw2/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	drivers/berniw3/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	drivers/human/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	drivers/inferno/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	drivers/lliaw/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	drivers/tita/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countTriangles	tools/texmapper/ssgSaveAC.cpp	/^static int countTriangles ( ssgEntity *e )$/;"	f	file:
countVertices	tools/texmapper/ssgSaveAC.cpp	/^static int countVertices ( ssgEntity *e )$/;"	f	file:
count__	drivers/human/human.cpp	/^int count__ = 0;$/;"	v
counter	windows/include/plib/sl.h	/^   int            counter;       \/\/ counter-written packets$/;"	m	class:slDSP
counter	windows/include/plib/sl.h	/^  long            counter;      \/\/ counter-written packets$/;"	m	class:slDSP
counter	windows/include/plib/sl.h	/^  long            counter;$/;"	m	class:slDSP
counterFlag	modules/graphic/ssggraph/grboard.h	/^    int counterFlag;$/;"	m	class:cGrBoard
cp	drivers/berniw/pathfinder.h	/^		tParam cp[NTPARAMS];			\/* holds values needed for clothiod *\/$/;"	m	class:Pathfinder
cp	drivers/berniw2/pathfinder.h	/^		tParam cp[NTPARAMS];			\/* holds values needed for clothiod *\/$/;"	m	class:Pathfinder
cp	drivers/berniw3/pathfinder.h	/^		tParam cp[NTPARAMS];			\/* holds values needed for clothiod *\/$/;"	m	class:Pathfinder
cp	drivers/human/pathfinder.h	/^		tParam cp[NTPARAMS];			\/* holds values needed for clothiod *\/$/;"	m	class:Pathfinder
crash	modules/graphic/ssggraph/CarSoundData.h	/^	bool crash;$/;"	m	class:CarSoundData
crash_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* crash_sound[NB_CRASH_SOUND]; \/\/\/< list of crash sounds$/;"	m	class:SoundInterface
crc32	windows/include/zconf.h	33;"	d
crc32_combine	windows/include/zconf.h	34;"	d
crc32_combine	windows/include/zlib.h	1580;"	d
crc32_combine64	windows/include/zconf.h	35;"	d
create	libs/tgfclient/guifont.cpp	/^void GfuiFontClass::create(int point_size)$/;"	f	class:GfuiFontClass
createBranch	windows/include/plib/ssg.h	/^  virtual ssgBranch* createBranch ( char* text ) const$/;"	f	class:ssgLoaderOptions
createIn	libs/tgf/params.cpp	/^static void createIn(char *buf, const int BUFSIZE, withinHead* head) {$/;"	f	file:
createIndent	libs/tgf/params.cpp	/^static void createIndent(char *buf, const int BUFSIZE, const int blanks) {$/;"	f	file:
createParmHeader	libs/tgf/params.cpp	/^static struct parmHeader* createParmHeader(const char *file) {$/;"	f	file:
createSimpleState	windows/include/plib/ssg.h	/^  virtual ssgSimpleState* createSimpleState ( char* tfname ) const$/;"	f	class:ssgLoaderOptions
createState	windows/include/plib/ssg.h	/^  virtual ssgState* createState ( char* tfname ) const$/;"	f	class:ssgLoaderOptions
createTexture	modules/graphic/ssggraph/grssgext.h	/^		ssgTexture* createTexture(char* tfname, int wrapu = TRUE, int wrapv = TRUE, int mipmap = TRUE) {$/;"	f	class:ssgLoaderOptionsEx
create_branch_cb	windows/include/plib/ssg.h	/^  ssgBranch *(*create_branch_cb)(char *) ;$/;"	m	class:ssgLoaderOptions
create_error	windows/include/plib/ssgaParticleSystem.h	/^  float create_error ;$/;"	m	class:ssgaParticleSystem
create_rate	windows/include/plib/ssgaParticleSystem.h	/^  float create_rate ;$/;"	m	class:ssgaParticleSystem
create_shader_from_file	topview/topview.cpp	/^GLuint create_shader_from_file(const std::string& filename,$/;"	f
create_state_cb	windows/include/plib/ssg.h	/^  ssgState *(*create_state_cb)( char *) ;$/;"	m	class:ssgLoaderOptions
cross	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector cross(const Vector& v1, const Vector& v2) {$/;"	f
cross	topview/operator.hpp	/^    vec<3,T> cross(const vec<3, T>& u, const vec<3, T>& v)$/;"	f	namespace:kmuvcl::math
crossProduct	drivers/berniw/linalg.h	/^inline void v3d::crossProduct(const v3d* b, v3d* r) {$/;"	f	class:v3d
crossProduct	drivers/berniw2/linalg.h	/^inline void v3d::crossProduct(const v3d* b, v3d* r) {$/;"	f	class:v3d
crossProduct	drivers/berniw3/linalg.h	/^inline void v3d::crossProduct(const v3d* b, v3d* r) {$/;"	f	class:v3d
crossProduct	libs/math/v3_t.h	/^template<class T> inline v3t<T> crossProduct(const v3t<T>& a, const v3t<T>& b)$/;"	f
crossProduct	libs/math/v3_t.h	/^template<class T> inline void v3t<T>::crossProduct(const v3t<T>& b, v3t<T>& r) const$/;"	f	class:v3t
cross_entropy	predictor/train.py	/^cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits=y_conv, labels=y_))$/;"	v
cross_entropy	predictor/train2.py	/^cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits=y_conv, labels=y_))$/;"	v
ctrl	interfaces/car.h	/^	tCarCtrl ctrl; \/**< private *\/$/;"	m	struct:CarElt
ctrl	modules/simu/simuv2/carstruct.h	/^    tCarCtrl	*ctrl;$/;"	m	struct:__anon23
ctrl	modules/simu/simuv3/carstruct.h	/^    tCarCtrl	*ctrl;$/;"	m	struct:__anon42
ctrlCheck	modules/simu/simuv2/simu.cpp	/^ctrlCheck(tCar *car)$/;"	f	file:
ctrlCheck	modules/simu/simuv3/simu.cpp	/^ctrlCheck(tCar *car)$/;"	f	file:
cull	modules/graphic/ssggraph/grssgext.h	/^  void cull  ( sgFrustum *f, sgMat4 m, int test_needed )$/;"	f	class:ssgBranchCb
cullFace	windows/include/plib/ssg.h	/^  int       cullFace           ;$/;"	m	class:ssgContext
cull_face	windows/include/plib/ssg.h	/^  int cull_face ;$/;"	m	class:ssgLeaf
cullfaceIsEnabled	windows/include/plib/ssg.h	/^  int  cullfaceIsEnabled  () { return cullFace   ; }$/;"	f	class:ssgContext
cullfaceOverridden	windows/include/plib/ssg.h	/^  int  cullfaceOverridden () { return ovCullface ; }$/;"	f	class:ssgContext
curCam	modules/graphic/ssggraph/grscreen.h	/^		class cGrPerspCamera *curCam;			\/\/ The current camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrPerspCamera
curCamHead	modules/graphic/ssggraph/grscreen.h	/^		int	curCamHead;							\/\/ The current camera list.$/;"	m	class:cGrScreen
curCar	modules/graphic/ssggraph/grscreen.h	/^		tCarElt	*curCar;		\/\/ Current car viewed.$/;"	m	class:cGrScreen
curCrashSnd	modules/graphic/ssggraph/SoundInterface.h	/^	int curCrashSnd; \/\/\/< holds current crash sound used - the sound cycles$/;"	m	class:SoundInterface
curDepth	libs/tgfclient/screen.cpp	/^static int	curDepth = 0;$/;"	v	file:
curElem	libs/tgf/hash.cpp	/^	tHashElem *curElem;$/;"	m	struct:HashHeader	file:
curI	modules/simu/simuv2/transmission.h	/^    tdble	curI;$/;"	m	struct:__anon26
curI	modules/simu/simuv2/wheel.h	/^    tdble  	curI;       	\/* Current inertia for the wheel (including transmission) *\/$/;"	m	struct:__anon11
curI	modules/simu/simuv3/transmission.h	/^    tdble	curI;$/;"	m	struct:__anon45
curI	modules/simu/simuv3/wheel.h	/^    tdble  	curI;       	\/* Current inertia for the wheel (including transmission) *\/$/;"	m	struct:__anon33
curId	libs/tgfclient/gui.h	/^    int			curId;$/;"	m	struct:__anon148
curIndex	libs/tgf/hash.cpp	/^	int curIndex;$/;"	m	struct:HashHeader	file:
curLapTime	interfaces/car.h	/^	double curLapTime;$/;"	m	struct:__anon77
curMaxFreq	libs/tgfclient/screen.cpp	/^static int	curMaxFreq = 75;$/;"	v	file:
curMode	libs/tgfclient/screen.cpp	/^static int	curMode = 0;$/;"	v	file:
curNum	libs/tgf/tgf.h	/^    int		curNum;$/;"	m	struct:__anon99
curOption	libs/confscreens/soundconfig.cpp	/^static int curOption = 0;$/;"	v	file:
curOptionMenuMusic	libs/confscreens/soundconfig.cpp	/^static int curOptionMenuMusic = 0;$/;"	v	file:
curOptionTextComp	libs/confscreens/openglconfig.cpp	/^static int curOptionTextComp = 0;$/;"	v	file:
curOptionTextSize	libs/confscreens/openglconfig.cpp	/^static int curOptionTextSize = 0;$/;"	v	file:
curOptionWheelDetail	libs/confscreens/graphconfig.cpp	/^static int curOptionWheelDetail = 0;$/;"	v	file:
curOverallRatio	modules/simu/simuv2/transmission.h	/^    tdble	curOverallRatio;$/;"	m	struct:__anon26
curOverallRatio	modules/simu/simuv3/transmission.h	/^    tdble	curOverallRatio;$/;"	m	struct:__anon45
curParam	libs/tgf/params.cpp	/^	struct param *curParam; \/**< Current parameter *\/$/;"	m	struct:parmOutput	typeref:struct:parmOutput::param	file:
curPlayer	libs/confscreens/driverconfig.cpp	/^static tPlayerInfo	*curPlayer;$/;"	v	file:
curProfile	libs/tgf/tgf.h	/^  ProfileInstance * curProfile;$/;"	m	class:Profiler
curRes	libs/tgfclient/screen.cpp	/^static int	curRes = 0;$/;"	v	file:
curSection	libs/tgf/params.cpp	/^	struct section *curSection; \/**< Current section *\/$/;"	m	struct:parmOutput	typeref:struct:parmOutput::section	file:
curSection	libs/tgf/params.cpp	/^	struct section *curSection; \/**< Current section, for iterations, see @ref GfParmListSeekFirst and @ref GfParmListSeekNext *\/$/;"	m	struct:parmHandle	typeref:struct:parmHandle::section	file:
curSubSection	libs/tgf/params.cpp	/^	struct section *curSubSection; \/**< Current subsection, for iterations, see @ref GfParmListSeekFirst and @ref GfParmListSeekNext *\/$/;"	m	struct:section	typeref:struct:section::section	file:
curTime	interfaces/car.h	/^	double curTime;$/;"	m	struct:__anon77
curTime	interfaces/raceman.h	/^    double		curTime;$/;"	m	struct:__anon73
curTrack	drivers/human/human.cpp	/^static tTrack *curTrack;$/;"	v	file:
curVInit	libs/tgfclient/screen.cpp	/^static int curVInit = 0;$/;"	v	file:
curVersion	libs/confscreens/simuconfig.cpp	/^static int curVersion = 0;$/;"	v	file:
cur_col	modules/graphic/ssggraph/grsmoke.h	/^  sgVec3 cur_col;$/;"	m	class:ssgVtxTableSmoke
cur_dist_l	drivers/human/human.cpp	/^static double cur_dist_l;$/;"	v	file:
cur_dist_r	drivers/human/human.cpp	/^static double cur_dist_r;$/;"	v	file:
cur_life	modules/graphic/ssggraph/grsmoke.h	/^  double cur_life;$/;"	m	class:ssgVtxTableSmoke
cur_rc_sig	drivers/human/human.cpp	/^static bool cur_rc_sig;$/;"	v	file:
cur_speed	drivers/human/human.cpp	/^double cur_speed;$/;"	v
curidx	drivers/inferno2/inferno2.cpp	/^static int	curidx;$/;"	v	file:
curmod	libs/raceengineclient/raceinit.cpp	/^	tModList *curmod;$/;"	m	struct:__anon125	file:
curr	libs/learning/List.h	/^	LISTITEM* curr; \/\/\/< current item$/;"	m	struct:List
curr	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  Transform curr;$/;"	m	class:Object
curr	windows/include/plib/ssg.h	/^  int   curr  ;$/;"	m	class:ssgTimedSelector
currTime	windows/include/plib/sl.h	/^  UnsignedWide   currTime ;$/;"	m	class:slDSP
curr_bank	windows/include/plib/ssg.h	/^  float curr_bank ;$/;"	m	class:ssgAnimTransform
curr_bank	windows/include/plib/ssg.h	/^  float curr_bank ;$/;"	m	class:ssgTweenController
curr_bank	windows/include/plib/ssg.h	/^  int curr_bank ;$/;"	m	class:ssgTween
curr_header	windows/include/plib/sl.h	/^   int            curr_header;   \/\/ index of actual wavehdr$/;"	m	class:slDSP
curr_vertex	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.h	/^  mutable unsigned int curr_vertex;$/;"	m	class:Polyhedron
current	modules/graphic/ssggraph/grcam.cpp	/^    int		current;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
current	modules/graphic/ssggraph/grcam.cpp	/^    int current;$/;"	m	class:cGrCarCamRoadFly	file:
current	windows/include/plib/sl.h	/^  static slScheduler *current ;$/;"	m	class:slScheduler
currentCapture	interfaces/raceman.h	/^    int		currentCapture;$/;"	m	struct:RmMovieCapture
currentCarColor	modules/graphic/ssggraph/grtrackmap.cpp	/^GLfloat cGrTrackMap::currentCarColor[4];$/;"	m	class:cGrTrackMap	file:
currentCarColor	modules/graphic/ssggraph/grtrackmap.h	/^		static GLfloat currentCarColor[4];$/;"	m	class:cGrTrackMap
currentCmd	windows/include/plib/sl.h	/^  SndCommand     currentCmd   ;   \/\/ command we are sending to chnl$/;"	m	class:slDSP
currentComplex	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^Complex *currentComplex = 0;$/;"	v
currentFrame	interfaces/raceman.h	/^    int		currentFrame;$/;"	m	struct:RmMovieCapture
currentKey	drivers/human/human.cpp	/^static int currentKey[256];$/;"	v	file:
currentMinSpeedForLap	interfaces/car.h	/^	tdble currentMinSpeedForLap;\/\/ Min speed on current lap, reset on start line crossing$/;"	m	struct:__anon77
currentObject	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^Object *currentObject = 0;$/;"	v
currentOwner	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* currentOwner;$/;"	m	struct:sharedSource
currentSKey	drivers/human/human.cpp	/^static int currentSKey[256];$/;"	v	file:
currentState	windows/include/plib/ssg.h	/^  ssgSimpleState *currentState ;$/;"	m	class:ssgContext
currentTime	interfaces/raceman.h	/^    double		currentTime;	\/**< current time in sec since the beginning of the simulation *\/$/;"	m	struct:Situation
currentType	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtPolyType currentType;$/;"	v
current_allowed_speed	drivers/olethros/driver.h	/^	float current_allowed_speed;$/;"	m	class:olethros::Driver
current_branch	modules/graphic/ssggraph/grloadac.cpp	/^static ssgBranch	*current_branch   = NULL ;$/;"	v	file:
current_colour	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec4		*current_colour   = NULL ;$/;"	v	file:
current_data	modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_data     = NULL ;$/;"	v	file:
current_flags	modules/graphic/ssggraph/grloadac.cpp	/^static int current_flags    = -1 ;$/;"	v	file:
current_link	windows/include/vorbis/vorbisfile.h	/^  int              current_link;$/;"	m	struct:OggVorbis_File
current_material	modules/graphic/ssggraph/grloadac.cpp	/^static _ssgMaterial	*current_material = NULL ;$/;"	v	file:
current_matrix	modules/graphic/ssggraph/grloadac.cpp	/^static sgMat4 current_matrix ;$/;"	v	file:
current_mode	drivers/human/human.cpp	/^static short current_mode = 0;$/;"	v	file:
current_options	modules/graphic/ssggraph/grloadac.cpp	/^static ssgLoaderOptions	*current_options  = NULL ;$/;"	v	file:
current_serialno	windows/include/vorbis/vorbisfile.h	/^  long             current_serialno;$/;"	m	struct:OggVorbis_File
current_speed	libs/raceengineclient/raceengine.cpp	/^static double current_speed = 0;$/;"	v	file:
current_tbase	modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_tbase    = NULL ;$/;"	v	file:
current_tfname	modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_tfname   = NULL ;$/;"	v	file:
current_time	drivers/human/human.cpp	/^static long current_time;$/;"	v	file:
current_time	libs/raceengineclient/raceengine.cpp	/^long current_time;$/;"	v
current_tshad	modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_tshad    = NULL ;$/;"	v	file:
current_tskids	modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_tskids   = NULL ;$/;"	v	file:
current_ttiled	modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_ttiled   = NULL ;$/;"	v	file:
current_v	drivers/human/human.cpp	/^	v3d current_v;$/;"	m	struct:__anon183	file:
current_val	libs/raceengineclient/raceengine.cpp	/^struct timeval current_val;$/;"	v	typeref:struct:timeval
currentpathseg	drivers/berniw/mycar.h	/^		PathSeg* currentpathseg;$/;"	m	class:MyCar
currentpathseg	drivers/berniw2/mycar.h	/^		PathSeg* currentpathseg;$/;"	m	class:MyCar
currentpathseg	drivers/berniw3/mycar.h	/^		PathSeg* currentpathseg;$/;"	m	class:MyCar
currentpathseg	drivers/human/mycar.h	/^		PathSeg* currentpathseg;$/;"	m	class:MyCar
currentpathsegid	drivers/inferno/mycar.h	/^		int currentpathsegid;$/;"	m	class:MyCar
currentpathsegid	drivers/lliaw/mycar.h	/^		int currentpathsegid;$/;"	m	class:MyCar
currentpathsegid	drivers/tita/mycar.h	/^		int currentpathsegid;$/;"	m	class:MyCar
currentpos	drivers/berniw/mycar.h	/^		v3d currentpos;$/;"	m	class:AbstractCar
currentpos	drivers/berniw2/mycar.h	/^		v3d currentpos;$/;"	m	class:AbstractCar
currentpos	drivers/berniw3/mycar.h	/^		v3d currentpos;$/;"	m	class:AbstractCar
currentpos	drivers/human/mycar.h	/^		v3d currentpos;$/;"	m	class:AbstractCar
currentpos	drivers/inferno/mycar.h	/^		vec2d currentpos;$/;"	m	class:AbstractCar
currentpos	drivers/lliaw/mycar.h	/^		vec2d currentpos;$/;"	m	class:AbstractCar
currentpos	drivers/tita/mycar.h	/^		vec2d currentpos;$/;"	m	class:AbstractCar
currentseg	drivers/berniw/mycar.h	/^		TrackSegment* currentseg;$/;"	m	class:MyCar
currentseg	drivers/berniw2/mycar.h	/^		TrackSegment* currentseg;$/;"	m	class:MyCar
currentseg	drivers/berniw3/mycar.h	/^		TrackSegment* currentseg;$/;"	m	class:MyCar
currentseg	drivers/human/mycar.h	/^		TrackSegment* currentseg;$/;"	m	class:MyCar
currentseg	drivers/inferno/mycar.h	/^		TrackSegment2D* currentseg;$/;"	m	class:MyCar
currentseg	drivers/lliaw/mycar.h	/^		TrackSegment2D* currentseg;$/;"	m	class:MyCar
currentseg	drivers/tita/mycar.h	/^		TrackSegment2D* currentseg;$/;"	m	class:MyCar
currentsegid	drivers/berniw/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	drivers/berniw2/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	drivers/berniw3/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	drivers/human/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	drivers/inferno/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	drivers/lliaw/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	drivers/tita/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsimtime	drivers/bt/driver.cpp	/^double Driver::currentsimtime;$/;"	m	class:Driver	file:
currentsimtime	drivers/bt/driver.h	/^		static double currentsimtime;	\/\/ Store time to avoid useless updates.$/;"	m	class:Driver
currentsimtime	drivers/damned/driver.cpp	/^double Driver::currentsimtime;$/;"	m	class:Driver	file:
currentsimtime	drivers/damned/driver.h	/^		static double currentsimtime;	\/\/ Store time to avoid useless updates.$/;"	m	class:Driver
currentsimtime	drivers/olethros/driver.cpp	/^    double Driver::currentsimtime;$/;"	m	class:olethros::Driver	file:
currentsimtime	drivers/olethros/driver.h	/^	static double currentsimtime;	\/\/\/< Store time to avoid useless updates.$/;"	m	class:olethros::Driver
currentspeedsqr	drivers/bt/driver.h	/^		float currentspeedsqr;	\/\/ Square of the current speed_x.$/;"	m	class:Driver
currentspeedsqr	drivers/damned/driver.h	/^		float currentspeedsqr;	\/\/ Square of the current speed_x.$/;"	m	class:Driver
currentspeedsqr	drivers/olethros/driver.h	/^	float currentspeedsqr;	\/\/\/< Square of the current speed_x.$/;"	m	class:olethros::Driver
currentspeedsqr	drivers/sparkle/driver.h	/^		float currentspeedsqr;	\/* square of the current speed_x *\/$/;"	m	class:Driver
currenttime	drivers/berniw/berniw.cpp	/^static double currenttime;$/;"	v	file:
currenttime	drivers/berniw2/berniw2.cpp	/^static double currenttime;$/;"	v	file:
currenttime	drivers/berniw3/berniw3.cpp	/^static double currenttime;$/;"	v	file:
currenttime	drivers/human/human.cpp	/^static double currenttime;$/;"	v	file:
currenttime	drivers/inferno/inferno.cpp	/^static double currenttime;$/;"	v	file:
currenttime	drivers/lliaw/lliaw.cpp	/^static double currenttime;$/;"	v	file:
currenttime	drivers/tita/tita.cpp	/^static double currenttime;$/;"	v	file:
currenttime	modules/graphic/ssggraph/grcam.cpp	/^    double currenttime;$/;"	m	class:cGrCarCamRoadFly	file:
cursorColor	libs/tgfclient/gui.h	/^    float		*cursorColor[3];$/;"	m	struct:__anon145
cursorIdx	libs/tgfclient/gui.h	/^    int			cursorIdx;$/;"	m	struct:__anon145
cursorx	libs/tgfclient/gui.h	/^    int			cursorx;$/;"	m	struct:__anon145
cursory1	libs/tgfclient/gui.h	/^    int			cursory1;$/;"	m	struct:__anon145
cursory2	libs/tgfclient/gui.h	/^    int			cursory2;$/;"	m	struct:__anon145
curvature	drivers/berniw/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	drivers/berniw2/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	drivers/berniw3/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	drivers/human/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	drivers/inferno/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	drivers/lliaw/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	drivers/tita/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curve	modules/simu/simuv2/engine.h	/^    tEngineCurve	curve;$/;"	m	struct:__anon19
curve	modules/simu/simuv3/engine.h	/^    tEngineCurve	curve;$/;"	m	struct:__anon38
cutoff	windows/include/plib/ssg.h	/^  float  cutoff ;$/;"	m	class:ssgLight
cw	drivers/berniw/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	drivers/berniw2/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	drivers/berniw3/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	drivers/human/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	drivers/inferno/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	drivers/lliaw/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	drivers/tita/mycar.h	/^		double cw;$/;"	m	class:MyCar
d	drivers/berniw/linalg.h	/^        v2d d;          \/* direction of the straight *\/$/;"	m	class:Straight
d	drivers/berniw/pathfinder.h	/^		v3d d;			\/* direction vector of dynamic trajectory *\/$/;"	m	class:PathSeg
d	drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon154
d	drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon153
d	drivers/berniw2/linalg.h	/^        v2d d;          \/* direction of the straight *\/$/;"	m	class:Straight
d	drivers/berniw2/pathfinder.h	/^		v3d d;			\/* direction vector of dynamic trajectory *\/$/;"	m	class:PathSeg
d	drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon198
d	drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon197
d	drivers/berniw3/linalg.h	/^        v2d d;          \/* direction of the straight *\/$/;"	m	class:Straight
d	drivers/berniw3/pathfinder.h	/^		v3d d;			\/* direction vector of dynamic trajectory *\/$/;"	m	class:PathSeg
d	drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon177
d	drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon176
d	drivers/human/linalg.h	/^        v2d d;          \/* direction of the straight *\/$/;"	m	class:Straight
d	drivers/human/pathfinder.h	/^		v3d d;			\/* direction vector of dynamic trajectory *\/$/;"	m	class:PathSeg
d	drivers/human/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon189
d	drivers/human/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon188
d	drivers/inferno/pathfinder.h	/^				vec2d d;		\/\/ Direction vector of dynamic trajectory.$/;"	m	class:PathSeg::pseg
d	drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon163
d	drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon162
d	drivers/lliaw/pathfinder.h	/^				vec2d d;		\/\/ Direction vector of dynamic trajectory.$/;"	m	class:PathSeg::pseg
d	drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon209
d	drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon208
d	drivers/olethros/linalg.h	/^        v2d d;          \/* direction of the straight *\/$/;"	m	class:Straight
d	drivers/sparkle/linalg.h	/^        v2d d;          \/* direction of the straight *\/$/;"	m	class:Straight
d	drivers/tita/pathfinder.h	/^				vec2d d;		\/\/ Direction vector of dynamic trajectory.$/;"	m	class:PathSeg::pseg
d	drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon170
d	drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon169
d	libs/learning/ANN.h	/^	real* d; \/\/\/< delta vector$/;"	m	struct:ANN_
d	libs/learning/ANN.h	/^	real* d; \/\/\/< derivatives$/;"	m	struct:Layer_
d	libs/learning/Distribution.h	/^	int d; \/\/\/< number of dimensions$/;"	m	class:MultinomialGaussian
d	libs/math/straight2_t.h	/^		v2t<T> d;	\/\/ Direction of the straight.$/;"	m	class:straight2t
d	tools/trackgen/easymesh.cpp	/^	int a, b, c, d;       \/* left, right, start and end point *\/$/;"	m	struct:sid	file:
d1	tools/accc/mainaccc.cpp	/^int d1=0;$/;"	v
d2	tools/accc/mainaccc.cpp	/^int d2=0;$/;"	v
d3	libs/racescreens/carsetupscreen.cpp	/^static const char* d3 = "%3.0f";$/;"	v	file:
d3	tools/accc/mainaccc.cpp	/^int d3=0;$/;"	v
d5	libs/racescreens/carsetupscreen.cpp	/^static const char* d5 = "%5.0f";$/;"	v	file:
dSlipMax	modules/simu/simuv2/differential.h	/^    tdble	dSlipMax;$/;"	m	struct:__anon10
dSlipMax	modules/simu/simuv3/differential.h	/^    tdble	dSlipMax;$/;"	m	struct:__anon32
dTqMax	modules/simu/simuv2/differential.h	/^    tdble	dTqMax;$/;"	m	struct:__anon10
dTqMax	modules/simu/simuv3/differential.h	/^    tdble	dTqMax;$/;"	m	struct:__anon32
dTqMin	modules/simu/simuv2/differential.h	/^    tdble	dTqMin;$/;"	m	struct:__anon10
dTqMin	modules/simu/simuv3/differential.h	/^    tdble	dTqMin;$/;"	m	struct:__anon32
dX	tools/trackgen/elevation.cpp	/^static tdble	kX, kY, dX, dY;$/;"	v	file:
dY	tools/trackgen/elevation.cpp	/^static tdble	kX, kY, dX, dY;$/;"	v	file:
dZ	tools/trackgen/elevation.cpp	/^static tdble	kZ, dZ;$/;"	v	file:
d_isdir	windows/include/plib/ul.h	/^  bool d_isdir ;$/;"	m	struct:ulDirEnt
d_name	windows/include/plib/ul.h	/^  char d_name [ UL_NAME_MAX+1 ];$/;"	m	struct:ulDirEnt
damageFactor	interfaces/raceman.h	/^	tdble damageFactor;$/;"	m	struct:RmRaceRules
damageRepairFactor	interfaces/raceman.h	/^	tdble damageRepairFactor;$/;"	m	struct:RmRaceRules
dammage	interfaces/car.h	/^	int dammage;$/;"	m	struct:__anon80
dammage	modules/simu/simuv2/carstruct.h	/^    int		dammage;$/;"	m	struct:__anon23
dammage	modules/simu/simuv3/carstruct.h	/^    int		dammage;$/;"	m	struct:__anon42
damned	drivers/damned/damned.cpp	/^extern "C" int damned(tModInfo *modInfo)$/;"	f
damp	modules/graphic/ssggraph/grcam.cpp	/^    float damp;$/;"	m	class:cGrCarCamRoadFly	file:
damper	modules/simu/simuv2/susp.h	/^    tDamper damper;$/;"	m	struct:Suspension
damper	modules/simu/simuv3/susp.h	/^    tDamper damper;$/;"	m	struct:Suspension
damperForce	modules/simu/simuv2/susp.cpp	/^static tdble damperForce(tSuspension *susp)$/;"	f	file:
damperForce	modules/simu/simuv3/susp.cpp	/^damperForce(tSuspension *susp)$/;"	f	file:
damping	windows/include/plib/sg.h	/^  float damping    ;$/;"	m	class:sgSpringDamper
data	drivers/bt/cardata.h	/^		SingleCardata *data;	\/\/ Array with car data.$/;"	m	class:Cardata
data	drivers/damned/cardata.h	/^		SingleCardata *data;	\/\/ Array with car data.$/;"	m	class:Cardata
data	drivers/olethros/cardata.h	/^	SingleCardata *data;	\/\/ Array with car data.$/;"	m	class:olethros::Cardata
data	libs/tgf/hash.cpp	/^	const void *data;$/;"	m	struct:HashElem	file:
data	libs/txml/xmlparse.h	/^  void *data;$/;"	m	struct:__anon121
data	modules/simu/simuv2/engine.h	/^    tEngineCurveElem	*data;$/;"	m	struct:__anon18
data	modules/simu/simuv3/engine.h	/^    tEngineCurveElem	*data;$/;"	m	struct:__anon37
data	predictor/reshape.py	/^    data = ""$/;"	v
data	predictor/reshape.py	/^    data = f_read.readline()[:]$/;"	v
data	predictor/talker.py	/^    data = ""$/;"	v
data	predictor/talker.py	/^    data = str(sock.recv(BUFFER_SIZE))$/;"	v
data	predictor/test_server.py	/^        data = "3\/"$/;"	v
data	tools/accc/accc.h	/^  char * data;$/;"	m	struct:ob
data	windows/include/ogg/ogg.h	/^  unsigned char *data;$/;"	m	struct:__anon54
data	windows/include/png.h	/^    png_byte *data;$/;"	m	struct:png_unknown_chunk_t
data	yunseok/tcp_client.cpp	/^enum data {$/;"	g	file:
data	yunseok/tcp_client_2.cpp	/^enum data {$/;"	g	file:
dataBuf	libs/txml/xmlparse.c	/^  XML_Char *dataBuf;$/;"	m	struct:__anon117	file:
dataBuf	libs/txml/xmlparse.c	292;"	d	file:
dataBufEnd	libs/txml/xmlparse.c	/^  XML_Char *dataBufEnd;$/;"	m	struct:__anon117	file:
dataBufEnd	libs/txml/xmlparse.c	293;"	d	file:
dataDir	libs/tgf/tgf.cpp	/^static char *dataDir = strdup("");$/;"	v	file:
dataSet	predictor/train.py	/^dataSet = np.loadtxt(FILE_PATH, delimiter=' ', dtype=np.float32)$/;"	v
dataSet	predictor/train2.py	/^dataSet = np.loadtxt(FILE_PATH, delimiter=' ', dtype=np.float32)$/;"	v
data_f	predictor/reshape.py	/^    data_f = data.split("\/")$/;"	v
data_f	predictor/talker.py	/^    data_f = data.split('#')$/;"	v
data_type	windows/include/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s
dataoffsets	windows/include/vorbis/vorbisfile.h	/^  ogg_int64_t     *dataoffsets;$/;"	m	struct:OggVorbis_File
datasource	windows/include/vorbis/vorbisfile.h	/^  void            *datasource; \/* Pointer to a FILE *, etc. *\/$/;"	m	struct:OggVorbis_File
day	windows/include/png.h	/^   png_byte day;     \/* day of month, 1 - 31 *\/$/;"	m	struct:png_time_struct
dbgmsg	libs/learning/learn_debug.h	18;"	d
deRef	windows/include/plib/ssg.h	/^  void deRef () { assert ( refc > 0 ) ; refc-- ; }$/;"	f	class:ssgBase
deadBeefCheck	windows/include/plib/ssg.h	/^  void deadBeefCheck () { assert ( type != (int) 0xDeadBeef ) ; }$/;"	f	class:ssgBase
deadZone	drivers/human/pref.h	/^    tdble	deadZone;	\/* dead zone (% of the available zone) *\/$/;"	m	struct:__anon185
deadZoneName	drivers/human/pref.h	/^    const char	*deadZoneName;	\/* Name of the dead zone attribute *\/$/;"	m	struct:__anon185
dead_band	windows/include/plib/js.h	/^  float dead_band [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
debug	interfaces/car.h	/^	int debug;$/;"	m	struct:__anon80
debugFlag	modules/graphic/ssggraph/grboard.h	/^    int debugFlag;$/;"	m	class:cGrBoard
declAttributeId	libs/txml/xmlparse.c	/^  ATTRIBUTE_ID *declAttributeId;$/;"	m	struct:__anon117	file:
declAttributeId	libs/txml/xmlparse.c	299;"	d	file:
declAttributeIsCdata	libs/txml/xmlparse.c	/^  char declAttributeIsCdata;$/;"	m	struct:__anon117	file:
declAttributeIsCdata	libs/txml/xmlparse.c	300;"	d	file:
declClose	libs/txml/xmlrole.c	/^  declClose,$/;"	v	file:
declClose	libs/txml/xmlrole.c	/^int declClose(PROLOG_STATE *state,$/;"	f	file:
declElementType	libs/txml/xmlparse.c	/^  ELEMENT_TYPE *declElementType;$/;"	m	struct:__anon117	file:
declElementType	libs/txml/xmlparse.c	298;"	d	file:
declEntity	libs/txml/xmlparse.c	/^  ENTITY *declEntity;$/;"	m	struct:__anon117	file:
declEntity	libs/txml/xmlparse.c	295;"	d	file:
declNotationName	libs/txml/xmlparse.c	/^  const XML_Char *declNotationName;$/;"	m	struct:__anon117	file:
declNotationName	libs/txml/xmlparse.c	296;"	d	file:
declNotationPublicId	libs/txml/xmlparse.c	/^  const XML_Char *declNotationPublicId;$/;"	m	struct:__anon117	file:
declNotationPublicId	libs/txml/xmlparse.c	297;"	d	file:
defaultAtts	libs/txml/xmlparse.c	/^  DEFAULT_ATTRIBUTE *defaultAtts;$/;"	m	struct:__anon115	file:
defaultHandler	libs/txml/xmlparse.c	/^  XML_DefaultHandler defaultHandler;$/;"	m	struct:__anon117	file:
defaultHandler	libs/txml/xmlparse.c	265;"	d	file:
defaultResp	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  Response defaultResp;$/;"	m	class:RespTable
defaultTextSize	libs/confscreens/openglconfig.cpp	/^static const int defaultTextSize = 64; \/\/ In case everything goes wrong.$/;"	v	file:
defineAttribute	libs/txml/xmlparse.c	/^defineAttribute(ELEMENT_TYPE *type, ATTRIBUTE_ID *attId, int isCdata, const XML_Char *value)$/;"	f	file:
deflate	windows/include/zconf.h	36;"	d
deflateBound	windows/include/zconf.h	37;"	d
deflateCopy	windows/include/zconf.h	38;"	d
deflateEnd	windows/include/zconf.h	39;"	d
deflateInit	windows/include/zlib.h	1546;"	d
deflateInit2	windows/include/zlib.h	1550;"	d
deflateInit2_	windows/include/zconf.h	40;"	d
deflateInit_	windows/include/zconf.h	41;"	d
deflateParams	windows/include/zconf.h	42;"	d
deflatePrime	windows/include/zconf.h	43;"	d
deflateReset	windows/include/zconf.h	44;"	d
deflateSetDictionary	windows/include/zconf.h	45;"	d
deflateSetHeader	windows/include/zconf.h	46;"	d
deflateTune	windows/include/zconf.h	47;"	d
deflate_copyright	windows/include/zconf.h	48;"	d
degenerate	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline bool degenerate(const Vector& w) {$/;"	f
degs	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar degs(Scalar x) { return x * DEGS_PER_RAD; }$/;"	f
delete_shared_memory	libs/raceengineclient/racemain.cpp	/^void delete_shared_memory() {$/;"	f
delete_shared_memory	topview/topview.cpp	/^void delete_shared_memory() {$/;"	f
delta	windows/include/plib/ul.h	/^  double delta ;$/;"	m	class:ulClock
deltaBestLapTime	interfaces/car.h	/^	double deltaBestLapTime;$/;"	m	struct:__anon77
deltaFrame	interfaces/raceman.h	/^    double	deltaFrame;$/;"	m	struct:RmMovieCapture
deltaHeight	tools/trackgen/objects.cpp	/^	tdble		deltaHeight;$/;"	m	struct:objdef	file:
deltaSimu	interfaces/raceman.h	/^    double	deltaSimu;$/;"	m	struct:RmMovieCapture
deltaTime	interfaces/raceman.h	/^    double		deltaTime;$/;"	m	struct:Situation
deltaVert	tools/trackgen/objects.cpp	/^	tdble		deltaVert;$/;"	m	struct:objdef	file:
delta_time	drivers/olethros/learn.h	/^	double delta_time; \/\/\/< dt for friction estimate$/;"	m	class:olethros::SegLearn
delta_vector	libs/learning/ann_policy.h	/^	real* delta_vector; \/\/\/< Scratch vector for TD error$/;"	m	class:ANN_Policy
deltapitch	drivers/berniw/mycar.h	/^		double deltapitch;		\/* angle between road and car *\/$/;"	m	class:MyCar
deltapitch	drivers/berniw2/mycar.h	/^		double deltapitch;		\/* angle between road and car *\/$/;"	m	class:MyCar
deltapitch	drivers/berniw3/mycar.h	/^		double deltapitch;		\/* angle between road and car *\/$/;"	m	class:MyCar
deltapitch	drivers/human/mycar.h	/^		double deltapitch;		\/* angle between road and car *\/$/;"	m	class:MyCar
deltapitch	drivers/inferno/mycar.h	/^		double deltapitch;		\/\/ Angle of attack between road and car.$/;"	m	class:MyCar
deltapitch	drivers/lliaw/mycar.h	/^		double deltapitch;		\/\/ Angle of attack between road and car.$/;"	m	class:MyCar
deltapitch	drivers/tita/mycar.h	/^		double deltapitch;		\/\/ Angle of attack between road and car.$/;"	m	class:MyCar
depth	windows/include/plib/ssg.h	/^	unsigned int depth ;$/;"	m	struct:ssgTextureInfo
depth	windows/include/png.h	/^   png_byte depth;           \/* depth of palette samples *\/$/;"	m	struct:png_sPLT_struct
derr	drivers/olethros/learn.h	/^		float derr; \/\/\/< steering error$/;"	m	class:olethros::SegLearn::Averages
derror	drivers/berniw/mycar.h	/^		double derror;			\/* distance to desired trajectory *\/$/;"	m	class:MyCar
derror	drivers/berniw2/mycar.h	/^		double derror;			\/* distance to desired trajectory *\/$/;"	m	class:MyCar
derror	drivers/berniw3/mycar.h	/^		double derror;			\/* distance to desired trajectory *\/$/;"	m	class:MyCar
derror	drivers/human/mycar.h	/^		double derror;			\/* distance to desired trajectory *\/$/;"	m	class:MyCar
derror	drivers/inferno/mycar.h	/^		double derror;			\/\/ Distance to desired trajectory.$/;"	m	class:MyCar
derror	drivers/lliaw/mycar.h	/^		double derror;			\/\/ Distance to desired trajectory.$/;"	m	class:MyCar
derror	drivers/olethros/learn.h	/^	float* derror; \/\/\/< Steering control for each quantum$/;"	m	class:olethros::SegLearn
derror	drivers/tita/mycar.h	/^		double derror;			\/\/ Distance to desired trajectory.$/;"	m	class:MyCar
derrorsgn	drivers/berniw/mycar.h	/^		double derrorsgn;		\/* on which side of the trajectory am i left -1 or 1 right *\/$/;"	m	class:MyCar
derrorsgn	drivers/berniw2/mycar.h	/^		double derrorsgn;		\/* on which side of the trajectory am i left -1 or 1 right *\/$/;"	m	class:MyCar
derrorsgn	drivers/berniw3/mycar.h	/^		double derrorsgn;		\/* on which side of the trajectory am i left -1 or 1 right *\/$/;"	m	class:MyCar
derrorsgn	drivers/human/mycar.h	/^		double derrorsgn;		\/* on which side of the trajectory am i left -1 or 1 right *\/$/;"	m	class:MyCar
derrorsgn	drivers/inferno/mycar.h	/^		double derrorsgn;		\/\/ On which side of the trajectory am i left -1 or 1 right.$/;"	m	class:MyCar
derrorsgn	drivers/lliaw/mycar.h	/^		double derrorsgn;		\/\/ On which side of the trajectory am i left -1 or 1 right.$/;"	m	class:MyCar
derrorsgn	drivers/tita/mycar.h	/^		double derrorsgn;		\/\/ On which side of the trajectory am i left -1 or 1 right.$/;"	m	class:MyCar
desactivate	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::desactivate(void)$/;"	f	class:cGrScreen
desc	libs/tgf/tgf.h	/^    char		*desc;		\/**< description of the module (can be long) *\/$/;"	m	struct:ModInfo
descr	libs/tgfclient/control.cpp	/^    const char *descr;$/;"	m	struct:__anon149	file:
descr	libs/tgfclient/gui.h	/^    char		*descr;$/;"	m	struct:GfuiKey
destpathseg	drivers/berniw/mycar.h	/^		PathSeg* destpathseg;$/;"	m	class:MyCar
destpathseg	drivers/berniw2/mycar.h	/^		PathSeg* destpathseg;$/;"	m	class:MyCar
destpathseg	drivers/berniw3/mycar.h	/^		PathSeg* destpathseg;$/;"	m	class:MyCar
destpathseg	drivers/human/mycar.h	/^		PathSeg* destpathseg;$/;"	m	class:MyCar
destpathsegid	drivers/inferno/mycar.h	/^		int destpathsegid;$/;"	m	class:MyCar
destpathsegid	drivers/lliaw/mycar.h	/^		int destpathsegid;$/;"	m	class:MyCar
destpathsegid	drivers/tita/mycar.h	/^		int destpathsegid;$/;"	m	class:MyCar
destseg	drivers/berniw/mycar.h	/^		TrackSegment* destseg;$/;"	m	class:MyCar
destseg	drivers/berniw2/mycar.h	/^		TrackSegment* destseg;$/;"	m	class:MyCar
destseg	drivers/berniw3/mycar.h	/^		TrackSegment* destseg;$/;"	m	class:MyCar
destseg	drivers/human/mycar.h	/^		TrackSegment* destseg;$/;"	m	class:MyCar
destseg	drivers/inferno/mycar.h	/^		TrackSegment2D* destseg;$/;"	m	class:MyCar
destseg	drivers/lliaw/mycar.h	/^		TrackSegment2D* destseg;$/;"	m	class:MyCar
destseg	drivers/tita/mycar.h	/^		TrackSegment2D* destseg;$/;"	m	class:MyCar
destsegid	drivers/berniw/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	drivers/berniw2/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	drivers/berniw3/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	drivers/human/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	drivers/inferno/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	drivers/lliaw/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	drivers/tita/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
det	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static Scalar det[16][4]; \/\/ cached sub-determinants$/;"	v	file:
determinant	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Scalar Matrix::determinant() const { $/;"	f	class:Matrix
determinant	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Scalar determinant(const Matrix& m) { return m.determinant(); }$/;"	f
dev	modules/graphic/ssggraph/SoundInterface.h	/^	ALCdevice* dev;$/;"	m	class:OpenalSoundInterface
device	libs/musicplayer/OpenALMusicPlayer.h	/^		ALCdevice* device;$/;"	m	class:OpenALMusicPlayer
devices	windows/include/plib/sm.h	/^  int devices ;$/;"	m	class:smMixer
diamond	tools/trackgen/easymesh.cpp	/^void diamond(void)$/;"	f
diffSegId	drivers/berniw/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	drivers/berniw2/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	drivers/berniw3/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	drivers/human/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	drivers/inferno/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	drivers/lliaw/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	drivers/tita/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffType	interfaces/car.h	/^	TDiffType diffType[3];$/;"	m	struct:__anon83
differential	modules/simu/simuv2/transmission.h	/^    tDifferential	differential[3];$/;"	m	struct:__anon26
differential	modules/simu/simuv3/transmission.h	/^    tDifferential	differential[3];$/;"	m	struct:__anon45
difflockinginputbraketq	interfaces/car.h	/^	tCarPitSetupValue difflockinginputbraketq[3];$/;"	m	struct:__anon83
difflockinginputtq	interfaces/car.h	/^	tCarPitSetupValue difflockinginputtq[3];$/;"	m	struct:__anon83
diffmaxtqbias	interfaces/car.h	/^	tCarPitSetupValue diffmaxtqbias[3];$/;"	m	struct:__anon83
diffmintqbias	interfaces/car.h	/^	tCarPitSetupValue diffmintqbias[3];$/;"	m	struct:__anon83
diffratio	interfaces/car.h	/^	tCarPitSetupValue diffratio[3];$/;"	m	struct:__anon83
diffslipbias	interfaces/car.h	/^	tCarPitSetupValue diffslipbias[3];$/;"	m	struct:__anon83
diffuse	windows/include/plib/ssg.h	/^  sgVec4 diffuse ;$/;"	m	class:ssgLight
diffuse_colour	windows/include/plib/ssg.h	/^  sgVec4  diffuse_colour ;$/;"	m	class:ssgSimpleState
digitXCenter	modules/graphic/ssggraph/grcar.h	/^    tdble		digitXCenter, digitYCenter;$/;"	m	struct:__anon4
digitYCenter	modules/graphic/ssggraph/grcar.h	/^    tdble		digitXCenter, digitYCenter;$/;"	m	struct:__anon4
digital	modules/graphic/ssggraph/grcar.h	/^    int			digital;$/;"	m	struct:__anon4
dim	drivers/bt/spline.h	/^		int dim;$/;"	m	class:Spline
dim	drivers/damned/spline.h	/^		int dim;$/;"	m	class:Spline
dim	drivers/olethros/spline.h	/^		int dim;$/;"	m	class:Spline
dim	drivers/sparkle/spline.h	/^		int dim;$/;"	m	class:Spline
dim	modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short dim ;$/;"	m	class:ssgSGIHeader
dimension	interfaces/car.h	/^	t3Dd dimension; \/**< Car's mesures *\/$/;"	m	struct:__anon76
dimension	modules/simu/simuv2/carstruct.h	/^    t3Dd	dimension;	\/* car's mesures *\/$/;"	m	struct:__anon23
dimension	modules/simu/simuv3/carstruct.h	/^    t3Dd	dimension;	\/* car's mesures *\/$/;"	m	struct:__anon42
dir	drivers/berniw/mycar.h	/^		v3d dir;$/;"	m	class:AbstractCar
dir	drivers/berniw2/mycar.h	/^		v3d dir;$/;"	m	class:AbstractCar
dir	drivers/berniw3/mycar.h	/^		v3d dir;$/;"	m	class:AbstractCar
dir	drivers/human/mycar.h	/^		v3d dir;$/;"	m	class:AbstractCar
dir	drivers/inferno/mycar.h	/^		vec2d dir;$/;"	m	class:AbstractCar
dir	drivers/lliaw/mycar.h	/^		vec2d dir;$/;"	m	class:AbstractCar
dir	drivers/tita/mycar.h	/^		vec2d dir;$/;"	m	class:AbstractCar
dirGetList	libs/tgf/os.h	/^    tfDirGetList		dirGetList;$/;"	m	struct:__anon92
dirGetListFiltered	libs/tgf/os.h	/^    tfDirGetListFiltered	dirGetListFiltered;$/;"	m	struct:__anon92
dirVector	drivers/berniw/linalg.h	/^inline void v3d::dirVector(const v3d* b, v3d* r) {$/;"	f	class:v3d
dirVector	drivers/berniw2/linalg.h	/^inline void v3d::dirVector(const v3d* b, v3d* r) {$/;"	f	class:v3d
dirVector	drivers/berniw3/linalg.h	/^inline void v3d::dirVector(const v3d* b, v3d* r) {$/;"	f	class:v3d
dirVector	libs/math/v3_t.h	/^template<class T> inline void v3t<T>::dirVector(const v3t<T>* b, v3t<T>* r)$/;"	f	class:v3t
dirVector2D	drivers/berniw/trackdesc.h	/^		static inline void dirVector2D(v3d* a, v3d* b, v3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	drivers/berniw2/trackdesc.h	/^		static inline void dirVector2D(v3d* a, v3d* b, v3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	drivers/berniw3/trackdesc.h	/^		static inline void dirVector2D(v3d* a, v3d* b, v3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	drivers/human/trackdesc.h	/^		static inline void dirVector2D(v3d* a, v3d* b, v3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	drivers/inferno/trackdesc.h	/^		static inline void dirVector2D(const vec2d* a, const vec2d* b, vec2d* r) { r->x = a->x - b->x; r->y = a->y - b->y; }$/;"	f	class:TrackDesc
dirVector2D	drivers/inferno/trackdesc.h	/^		static inline void dirVector2D(const vec3d* a, const vec3d* b, vec3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	drivers/lliaw/trackdesc.h	/^		static inline void dirVector2D(const vec2d* a, const vec2d* b, vec2d* r) { r->x = a->x - b->x; r->y = a->y - b->y; }$/;"	f	class:TrackDesc
dirVector2D	drivers/lliaw/trackdesc.h	/^		static inline void dirVector2D(const vec3d* a, const vec3d* b, vec3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	drivers/tita/trackdesc.h	/^		static inline void dirVector2D(const vec2d* a, const vec2d* b, vec2d* r) { r->x = a->x - b->x; r->y = a->y - b->y; }$/;"	f	class:TrackDesc
dirVector2D	drivers/tita/trackdesc.h	/^		static inline void dirVector2D(const vec3d* a, const vec3d* b, vec3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
direc_vec	drivers/human/human.cpp	/^direct_vec direc_vec;$/;"	v
direc_vec_o	drivers/human/human.cpp	/^direct_vec direc_vec_o;$/;"	v
direct_vec	drivers/human/human.cpp	/^} direct_vec;$/;"	t	typeref:struct:__anon183	file:
direction	windows/include/plib/ssg.h	/^  sgVec3 direction ;$/;"	m	class:ssgLight
direction_vector	windows/include/plib/sg.h	/^  sgVec3 direction_vector ;  \/* Should be a unit vector *\/$/;"	m	struct:sgLine3
direction_vector	windows/include/plib/sg.h	/^  sgdVec3 direction_vector ;  \/* Should be a unit vector *\/$/;"	m	struct:sgdLine3
disabled	libs/tgfclient/gui.h	/^    unsigned char	*disabled;$/;"	m	struct:__anon142
dispCam	modules/graphic/ssggraph/grscreen.h	/^		class cGrPerspCamera *dispCam;			\/\/ The display camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrPerspCamera
dispElt	tools/trackgen/track.cpp	/^typedef struct dispElt {$/;"	s	file:
dispInfo	libs/tgfclient/guimenu.cpp	/^dispInfo(void *cbinfo)$/;"	f	file:
dispList	tools/trackgen/track.cpp	/^	tDispElt *dispList;$/;"	m	struct:group	file:
dispName	libs/tgf/tgf.h	/^	char *dispName;			\/**< Name to display on screen *\/$/;"	m	struct:FList
display	libs/musicplayer/OggSoundStream.cpp	/^void OggSoundStream::display()$/;"	f	class:OggSoundStream
display	libs/tgfclient/fg_gm.cpp	/^	Display*			display;            \/\/ The display we are being run in.$/;"	m	struct:tagSFG_Display	file:
display	modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::display (void)$/;"	f	class:cGrCarCamMirror
display	modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::display($/;"	f	class:cGrTrackMap
displayMode	interfaces/raceman.h	/^    int			displayMode;$/;"	m	struct:__anon73
dispname	libs/confscreens/driverconfig.cpp	/^    char	*dispname;$/;"	m	struct:tInfo	file:
dist	drivers/berniw/linalg.h	/^inline float Straight::dist(const v2d &s) const$/;"	f	class:Straight
dist	drivers/berniw/linalg.h	/^inline float v2d::dist(const v2d &p) const$/;"	f	class:v2d
dist	drivers/berniw/pathfinder.h	/^		inline double dist(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y) + sqr(a->z-b->z)); }$/;"	f	class:Pathfinder
dist	drivers/berniw/pathfinder.h	/^	double dist;			\/* #segments from me to the other car *\/$/;"	m	struct:__anon156
dist	drivers/berniw2/linalg.h	/^inline float Straight::dist(const v2d &s) const$/;"	f	class:Straight
dist	drivers/berniw2/linalg.h	/^inline float v2d::dist(const v2d &p) const$/;"	f	class:v2d
dist	drivers/berniw2/pathfinder.h	/^		inline double dist(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y) + sqr(a->z-b->z)); }$/;"	f	class:Pathfinder
dist	drivers/berniw2/pathfinder.h	/^	double dist;			\/* #segments from me to the other car *\/$/;"	m	struct:__anon200
dist	drivers/berniw3/linalg.h	/^inline float Straight::dist(const v2d &s) const$/;"	f	class:Straight
dist	drivers/berniw3/linalg.h	/^inline float v2d::dist(const v2d &p) const$/;"	f	class:v2d
dist	drivers/berniw3/pathfinder.h	/^		inline double dist(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y) + sqr(a->z-b->z)); }$/;"	f	class:Pathfinder
dist	drivers/berniw3/pathfinder.h	/^	double dist;			\/* #segments from me to the other car *\/$/;"	m	struct:__anon179
dist	drivers/human/linalg.h	/^inline float Straight::dist(const v2d &s) const$/;"	f	class:Straight
dist	drivers/human/linalg.h	/^inline float v2d::dist(const v2d &p) const$/;"	f	class:v2d
dist	drivers/human/pathfinder.h	/^		inline double dist(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y) + sqr(a->z-b->z)); }$/;"	f	class:Pathfinder
dist	drivers/human/pathfinder.h	/^	double dist;			\/* #segments from me to the other car *\/$/;"	m	struct:__anon191
dist	drivers/inferno/pathfinder.h	/^		inline double dist(const vec2d* a, const vec2d* b) const { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist	drivers/inferno/pathfinder.h	/^	double dist;			\/\/ #segments from me to the other car.$/;"	m	struct:__anon164
dist	drivers/lliaw/pathfinder.h	/^		inline double dist(const vec2d* a, const vec2d* b) const { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist	drivers/lliaw/pathfinder.h	/^	double dist;			\/\/ #segments from me to the other car.$/;"	m	struct:__anon210
dist	drivers/olethros/linalg.h	/^inline float Straight::dist(const v2d &s) const$/;"	f	class:Straight
dist	drivers/olethros/linalg.h	/^inline float v2d::dist(const v2d &p) const$/;"	f	class:v2d
dist	drivers/sparkle/linalg.h	/^inline float Straight::dist(const v2d &s) const$/;"	f	class:Straight
dist	drivers/sparkle/linalg.h	/^inline float v2d::dist(const v2d &p) const$/;"	f	class:v2d
dist	drivers/tita/pathfinder.h	/^		inline double dist(const vec2d* a, const vec2d* b) const { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist	drivers/tita/pathfinder.h	/^	double dist;			\/\/ #segments from me to the other car.$/;"	m	struct:__anon171
dist	libs/math/straight2_t.h	/^template<class T> inline T straight2t<T>::dist(const v2t<T> &s) const$/;"	f	class:straight2t
dist	libs/math/v2_t.h	/^template<class T> inline T v2t<T>::dist(const v2t<T> &p) const$/;"	f	class:v2t
dist	libs/math/v4_t.h	/^template<class T> inline T v4t<T>::dist(const v4t<T> &p) const$/;"	f	class:v4t
dist	modules/graphic/ssggraph/grcam.cpp	/^    float dist;$/;"	m	class:cGrCarCamBehind	file:
dist	modules/graphic/ssggraph/grcam.cpp	/^    float dist;$/;"	m	class:cGrCarCamBehind2	file:
dist	modules/graphic/ssggraph/grcam.cpp	/^    float dist;$/;"	m	class:cGrCarCamFront	file:
dist	tools/trackgen/easymesh.cpp	/^double dist(struct nod *na, struct nod *nb)$/;"	f
dist2D	drivers/berniw/pathfinder.h	/^		inline double dist2D(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	drivers/berniw2/pathfinder.h	/^		inline double dist2D(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	drivers/berniw3/pathfinder.h	/^		inline double dist2D(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	drivers/human/pathfinder.h	/^		inline double dist2D(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	drivers/inferno/pathfinder.h	/^		inline double dist2D(vec2d* a, vec2d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	drivers/lliaw/pathfinder.h	/^		inline double dist2D(vec2d* a, vec2d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	drivers/tita/pathfinder.h	/^		inline double dist2D(vec2d* a, vec2d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
distFromStart	modules/graphic/ssggraph/grcar.h	/^    tdble               distFromStart;$/;"	m	struct:__anon5
distFromStartLine	interfaces/car.h	/^	tdble distFromStartLine;$/;"	m	struct:__anon77
distGFromPoint	drivers/berniw/trackdesc.h	/^inline double TrackDesc::distGFromPoint(v3d* r1, v3d* rdir, v3d* p) {$/;"	f	class:TrackDesc
distGFromPoint	drivers/berniw2/trackdesc.h	/^inline double TrackDesc::distGFromPoint(v3d* r1, v3d* rdir, v3d* p) {$/;"	f	class:TrackDesc
distGFromPoint	drivers/berniw3/trackdesc.h	/^inline double TrackDesc::distGFromPoint(v3d* r1, v3d* rdir, v3d* p) {$/;"	f	class:TrackDesc
distGFromPoint	drivers/human/trackdesc.h	/^inline double TrackDesc::distGFromPoint(v3d* r1, v3d* rdir, v3d* p) {$/;"	f	class:TrackDesc
distGFromPoint	drivers/inferno/trackdesc.h	/^inline double TrackDesc::distGFromPoint(vec2d* r1, vec2d* rdir, vec2d* p) {$/;"	f	class:TrackDesc
distGFromPoint	drivers/lliaw/trackdesc.h	/^inline double TrackDesc::distGFromPoint(vec2d* r1, vec2d* rdir, vec2d* p) {$/;"	f	class:TrackDesc
distGFromPoint	drivers/tita/trackdesc.h	/^inline double TrackDesc::distGFromPoint(vec2d* r1, vec2d* rdir, vec2d* p) {$/;"	f	class:TrackDesc
distRaced	interfaces/car.h	/^	tdble distRaced;$/;"	m	struct:__anon77
distSplit	tools/accc/mainaccc.cpp	/^int distSplit=0;$/;"	v
distToLeft	drivers/inferno/trackdesc.h	/^		inline double distToLeft(const vec2d* p) const{ return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y)); }$/;"	f	class:TrackSegment2D
distToLeft	drivers/lliaw/trackdesc.h	/^		inline double distToLeft(const vec2d* p) const{ return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y)); }$/;"	f	class:TrackSegment2D
distToLeft	drivers/tita/trackdesc.h	/^		inline double distToLeft(const vec2d* p) const{ return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y)); }$/;"	f	class:TrackSegment2D
distToLeft3D	drivers/berniw/trackdesc.h	/^		inline double distToLeft3D(v3d* p) { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	drivers/berniw2/trackdesc.h	/^		inline double distToLeft3D(v3d* p) { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	drivers/berniw3/trackdesc.h	/^		inline double distToLeft3D(v3d* p) { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	drivers/human/trackdesc.h	/^		inline double distToLeft3D(v3d* p) { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	drivers/inferno/trackdesc.h	/^		inline double distToLeft3D(const vec3d* p) const { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	drivers/lliaw/trackdesc.h	/^		inline double distToLeft3D(const vec3d* p) const { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	drivers/tita/trackdesc.h	/^		inline double distToLeft3D(const vec3d* p) const { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToMiddle	drivers/berniw/trackdesc.h	/^		inline double distToMiddle(int id, v3d* p) { return (*p - *ts[id].getMiddle())*(*ts[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	drivers/berniw2/trackdesc.h	/^		inline double distToMiddle(int id, v3d* p) { return (*p - *ts[id].getMiddle())*(*ts[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	drivers/berniw3/trackdesc.h	/^		inline double distToMiddle(int id, v3d* p) { return (*p - *ts[id].getMiddle())*(*ts[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	drivers/human/trackdesc.h	/^		inline double distToMiddle(int id, v3d* p) { return (*p - *ts[id].getMiddle())*(*ts[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	drivers/inferno/trackdesc.h	/^		inline double distToMiddle(const vec2d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	drivers/inferno/trackdesc.h	/^		inline double distToMiddle(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	drivers/inferno/trackdesc.h	/^		inline double distToMiddle(int id, const vec2d* p) { return (*p - *ts2d[id].getMiddle())*(*ts2d[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	drivers/lliaw/trackdesc.h	/^		inline double distToMiddle(const vec2d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	drivers/lliaw/trackdesc.h	/^		inline double distToMiddle(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	drivers/lliaw/trackdesc.h	/^		inline double distToMiddle(int id, const vec2d* p) { return (*p - *ts2d[id].getMiddle())*(*ts2d[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	drivers/tita/trackdesc.h	/^		inline double distToMiddle(const vec2d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	drivers/tita/trackdesc.h	/^		inline double distToMiddle(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	drivers/tita/trackdesc.h	/^		inline double distToMiddle(int id, const vec2d* p) { return (*p - *ts2d[id].getMiddle())*(*ts2d[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle2D	drivers/berniw/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	drivers/berniw2/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	drivers/berniw3/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	drivers/human/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	drivers/inferno/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	drivers/lliaw/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	drivers/tita/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/berniw/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/berniw/trackdesc.h	/^		inline double distToMiddle3D(v3d* p) { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/berniw2/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/berniw2/trackdesc.h	/^		inline double distToMiddle3D(v3d* p) { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/berniw3/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/berniw3/trackdesc.h	/^		inline double distToMiddle3D(v3d* p) { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/human/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/human/trackdesc.h	/^		inline double distToMiddle3D(v3d* p) { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/inferno/trackdesc.h	/^		inline double distToMiddle3D(const vec3d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/inferno/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) const { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/lliaw/trackdesc.h	/^		inline double distToMiddle3D(const vec3d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/lliaw/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) const { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/tita/trackdesc.h	/^		inline double distToMiddle3D(const vec3d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	drivers/tita/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) const { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddleSqr	drivers/inferno/trackdesc.h	/^		inline double distToMiddleSqr(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y); }$/;"	f	class:TrackSegment2D
distToMiddleSqr	drivers/lliaw/trackdesc.h	/^		inline double distToMiddleSqr(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y); }$/;"	f	class:TrackSegment2D
distToMiddleSqr	drivers/tita/trackdesc.h	/^		inline double distToMiddleSqr(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y); }$/;"	f	class:TrackSegment2D
distToMiddleSqr3D	drivers/berniw/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	drivers/berniw2/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	drivers/berniw3/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	drivers/human/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	drivers/inferno/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	drivers/lliaw/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	drivers/tita/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToOptPath	drivers/inferno/pathfinder.h	/^inline double Pathfinder::distToOptPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToOptPath	drivers/lliaw/pathfinder.h	/^inline double Pathfinder::distToOptPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToOptPath	drivers/tita/pathfinder.h	/^inline double Pathfinder::distToOptPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToPath	drivers/berniw/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, v3d* p)$/;"	f	class:Pathfinder
distToPath	drivers/berniw2/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, v3d* p)$/;"	f	class:Pathfinder
distToPath	drivers/berniw3/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, v3d* p)$/;"	f	class:Pathfinder
distToPath	drivers/human/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, v3d* p)$/;"	f	class:Pathfinder
distToPath	drivers/inferno/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToPath	drivers/lliaw/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToPath	drivers/tita/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToRight	drivers/inferno/trackdesc.h	/^		inline double distToRight(const vec2d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y)); }$/;"	f	class:TrackSegment2D
distToRight	drivers/lliaw/trackdesc.h	/^		inline double distToRight(const vec2d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y)); }$/;"	f	class:TrackSegment2D
distToRight	drivers/tita/trackdesc.h	/^		inline double distToRight(const vec2d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y)); }$/;"	f	class:TrackSegment2D
distToRight3D	drivers/berniw/trackdesc.h	/^		inline double distToRight3D(v3d* p) { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	drivers/berniw2/trackdesc.h	/^		inline double distToRight3D(v3d* p) { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	drivers/berniw3/trackdesc.h	/^		inline double distToRight3D(v3d* p) { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	drivers/human/trackdesc.h	/^		inline double distToRight3D(v3d* p) { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	drivers/inferno/trackdesc.h	/^		inline double distToRight3D(const vec3d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	drivers/lliaw/trackdesc.h	/^		inline double distToRight3D(const vec3d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	drivers/tita/trackdesc.h	/^		inline double distToRight3D(const vec3d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToStart	drivers/human/human.h	/^	tdble	distToStart;$/;"	m	struct:HumanContext
dist_min	tools/accc/accc.h	/^  double dist_min;$/;"	m	struct:ob
dist_raced	topview/topview.cpp	/^	double dist_raced;$/;"	m	struct:car_Position	file:
dist_to_left	topview/topview.cpp	/^	double dist_to_left;$/;"	m	struct:car_Position	file:
dist_to_ocar	drivers/berniw/berniw.cpp	/^static double* dist_to_ocar;$/;"	v	file:
dist_to_ocar	drivers/berniw2/berniw2.cpp	/^static double* dist_to_ocar;$/;"	v	file:
dist_to_ocar	drivers/berniw3/berniw3.cpp	/^static double* dist_to_ocar;$/;"	v	file:
dist_to_ocar	drivers/human/human.cpp	/^static double* dist_to_ocar;$/;"	v	file:
dist_to_ocar_dlane	drivers/human/human.cpp	/^static double* dist_to_ocar_dlane;$/;"	v	file:
distance	drivers/bt/opponent.h	/^		float distance;		\/\/ approximation of the real distance, negative if the opponent is behind.$/;"	m	class:Opponent
distance	drivers/damned/opponent.h	/^		float distance;		\/\/ approximation of the real distance, negative if the opponent is behind.$/;"	m	class:Opponent
distance	drivers/olethros/opponent.h	/^		float distance;		\/\/\/< approximation of the real distance, negative if the opponent is behind.$/;"	m	class:olethros::Opponent
distance	drivers/sparkle/opponent.h	/^		float distance;		\/* approximation of the real distance *\/$/;"	m	class:Opponent
distance	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Scalar distance(const Point& p1, const Point& p2) { $/;"	f
distance2	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Scalar distance2(const Point& p1, const Point& p2) { $/;"	f
disttomiddle	drivers/berniw/pathfinder.h	/^	double disttomiddle;	\/* distance to middle (for prediction) *\/$/;"	m	struct:__anon156
disttomiddle	drivers/berniw2/pathfinder.h	/^	double disttomiddle;	\/* distance to middle (for prediction) *\/$/;"	m	struct:__anon200
disttomiddle	drivers/berniw3/pathfinder.h	/^	double disttomiddle;	\/* distance to middle (for prediction) *\/$/;"	m	struct:__anon179
disttomiddle	drivers/human/pathfinder.h	/^	double disttomiddle;	\/* distance to middle (for prediction) *\/$/;"	m	struct:__anon191
disttomiddle	drivers/inferno/pathfinder.h	/^		float* disttomiddle;	\/\/ Distance of path point to middle.$/;"	m	class:PathSegOpt
disttomiddle	drivers/inferno/pathfinder.h	/^	double disttomiddle;	\/\/ distance to middle (for prediction).$/;"	m	struct:__anon164
disttomiddle	drivers/lliaw/pathfinder.h	/^		float* disttomiddle;	\/\/ Distance of path point to middle.$/;"	m	class:PathSegOpt
disttomiddle	drivers/lliaw/pathfinder.h	/^	double disttomiddle;	\/\/ distance to middle (for prediction).$/;"	m	struct:__anon210
disttomiddle	drivers/tita/pathfinder.h	/^		float* disttomiddle;	\/\/ Distance of path point to middle.$/;"	m	class:PathSegOpt
disttomiddle	drivers/tita/pathfinder.h	/^	double disttomiddle;	\/\/ distance to middle (for prediction).$/;"	m	struct:__anon171
disttopath	drivers/berniw/pathfinder.h	/^	double disttopath;		\/* distance to my path *\/$/;"	m	struct:__anon156
disttopath	drivers/berniw2/pathfinder.h	/^	double disttopath;		\/* distance to my path *\/$/;"	m	struct:__anon200
disttopath	drivers/berniw3/pathfinder.h	/^	double disttopath;		\/* distance to my path *\/$/;"	m	struct:__anon179
disttopath	drivers/human/pathfinder.h	/^	double disttopath;		\/* distance to my path *\/$/;"	m	struct:__anon191
disttopath	drivers/inferno/pathfinder.h	/^	double disttopath;		\/\/ distance to my path.$/;"	m	struct:__anon164
disttopath	drivers/lliaw/pathfinder.h	/^	double disttopath;		\/\/ distance to my path.$/;"	m	struct:__anon210
disttopath	drivers/tita/pathfinder.h	/^	double disttopath;		\/\/ distance to my path.$/;"	m	struct:__anon171
distx	modules/graphic/ssggraph/grcam.cpp	/^    float distx;$/;"	m	class:cGrCarCamSide	file:
disty	modules/graphic/ssggraph/grcam.cpp	/^    float disty;$/;"	m	class:cGrCarCamSide	file:
distz	modules/graphic/ssggraph/grcam.cpp	/^    float distz;$/;"	m	class:cGrCarCamCenter	file:
distz	modules/graphic/ssggraph/grcam.cpp	/^    float distz;$/;"	m	class:cGrCarCamSide	file:
distz	modules/graphic/ssggraph/grcam.cpp	/^    float distz;$/;"	m	class:cGrCarCamUp	file:
dlist	windows/include/plib/ssg.h	/^  GLuint dlist ;$/;"	m	class:ssgLeaf
dllname	libs/confscreens/driverconfig.cpp	32;"	d	file:
dm	drivers/olethros/learn.h	/^	float dm; \/\/\/< global friction coefficient 1$/;"	m	class:olethros::SegLearn
dm2	drivers/olethros/learn.h	/^	float dm2; \/\/\/< gloabal friction coefficient 2$/;"	m	class:olethros::SegLearn
dm3	drivers/olethros/learn.h	/^	float dm3; \/\/\/< global friction coefficient 3$/;"	m	class:olethros::SegLearn
dname	libs/racescreens/driverselect.cpp	/^	char *dname;$/;"	m	struct:DrvElt	file:
doCdataSection	libs/txml/xmlparse.c	/^enum XML_Error doCdataSection(XML_Parser parser,$/;"	f	file:
doContent	libs/txml/xmlparse.c	/^doContent(XML_Parser parser,$/;"	f	file:
doCrease	tools/accc/ac3dload.cpp	/^int doCrease(char *Line, ob_t *object, mat_t *material)$/;"	f
doData	tools/accc/ac3dload.cpp	/^int doData(char *Line, ob_t *object, mat_t *material)$/;"	f
doGetSurf	tools/accc/ac3dload.cpp	/^int doGetSurf(char *Line, ob_t *object, mat_t *material)$/;"	f
doGetVertex	tools/accc/ac3dload.cpp	/^int doGetVertex(char *Line, ob_t *object, mat_t *material)$/;"	f
doKids	tools/accc/ac3dload.cpp	/^int doKids(char *Line, ob_t *object, mat_t *material)$/;"	f
doLoc	tools/accc/ac3dload.cpp	/^int doLoc(char *Line, ob_t *object, mat_t *material)$/;"	f
doMat	tools/accc/ac3dload.cpp	/^int doMat(char *Line, ob_t *object, mat_t *material)$/;"	f
doMaterial	tools/accc/ac3dload.cpp	/^int doMaterial(char *Line, ob_t *object, mat_t *material)$/;"	f
doMipMap	modules/graphic/ssggraph/grtexture.cpp	/^bool doMipMap(const char *tfname, int mipmap)$/;"	f
doName	tools/accc/ac3dload.cpp	/^int doName(char *Line, ob_t *object, mat_t *material)$/;"	f
doNumsurf	tools/accc/ac3dload.cpp	/^int doNumsurf(char *Line, ob_t *object, mat_t *material)$/;"	f
doNumvert	tools/accc/ac3dload.cpp	/^int doNumvert(char *Line, ob_t *object, mat_t *material)$/;"	f
doObject	tools/accc/ac3dload.cpp	/^int doObject(char *Line, ob_t *object, mat_t *material)$/;"	f
doRefs	tools/accc/ac3dload.cpp	/^int doRefs(char *Line, ob_t *object, mat_t *material)$/;"	f
doSurf	tools/accc/ac3dload.cpp	/^int doSurf(char *Line, ob_t *object, mat_t *material)$/;"	f
doTexrep	tools/accc/ac3dload.cpp	/^int doTexrep(char *Line, ob_t *object, mat_t *material)$/;"	f
doTexture	tools/accc/ac3dload.cpp	/^int doTexture(char *Line, ob_t *object, mat_t *material)$/;"	f
doVerb	tools/accc/ac3dload.cpp	/^	int  (*doVerb)(char *Line,  ob_t *object, mat_t *material);$/;"	m	struct:verbaction	file:
do_data	modules/graphic/ssggraph/grloadac.cpp	/^static int do_data     ( char *s )$/;"	f	file:
do_kids	modules/graphic/ssggraph/grloadac.cpp	/^static int do_kids ( char *s )$/;"	f	file:
do_loc	modules/graphic/ssggraph/grloadac.cpp	/^static int do_loc      ( char *s )$/;"	f	file:
do_mat	modules/graphic/ssggraph/grloadac.cpp	/^static int do_mat ( char *s )$/;"	f	file:
do_material	modules/graphic/ssggraph/grloadac.cpp	/^static int do_material ( char *s )$/;"	f	file:
do_name	modules/graphic/ssggraph/grloadac.cpp	/^static int do_name ( char *s )$/;"	f	file:
do_numsurf	modules/graphic/ssggraph/grloadac.cpp	/^static int do_numsurf  ( char *s )$/;"	f	file:
do_numvert	modules/graphic/ssggraph/grloadac.cpp	/^static int do_numvert  ( char *s )$/;"	f	file:
do_obj_group	modules/graphic/ssggraph/grloadac.cpp	/^static int do_obj_group ( char * ) { return OBJ_GROUP ; }$/;"	f	file:
do_obj_light	modules/graphic/ssggraph/grloadac.cpp	/^static int do_obj_light ( char * ) { return OBJ_LIGHT ; }$/;"	f	file:
do_obj_poly	modules/graphic/ssggraph/grloadac.cpp	/^static int do_obj_poly  ( char * ) { return OBJ_POLY  ; }$/;"	f	file:
do_obj_world	modules/graphic/ssggraph/grloadac.cpp	/^static int do_obj_world ( char * ) { return OBJ_WORLD ; } $/;"	f	file:
do_object	modules/graphic/ssggraph/grloadac.cpp	/^static int do_object   ( char * s  )$/;"	f	file:
do_refs	modules/graphic/ssggraph/grloadac.cpp	/^static int do_refs( char *s )$/;"	f	file:
do_rot	modules/graphic/ssggraph/grloadac.cpp	/^static int do_rot ( char *s )$/;"	f	file:
do_surf	modules/graphic/ssggraph/grloadac.cpp	/^static int do_surf     ( char *s )$/;"	f	file:
do_texoff	modules/graphic/ssggraph/grloadac.cpp	/^static int do_texoff ( char *s )$/;"	f	file:
do_texrep	modules/graphic/ssggraph/grloadac.cpp	/^static int do_texrep ( char *s )$/;"	f	file:
do_texture	modules/graphic/ssggraph/grloadac.cpp	/^static int do_texture  ( char *s )$/;"	f	file:
do_url	modules/graphic/ssggraph/grloadac.cpp	/^static int do_url      ( char *s )$/;"	f	file:
doctype0	libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype0	libs/txml/xmlrole.c	/^int doctype0(PROLOG_STATE *state,$/;"	f	file:
doctype1	libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype1	libs/txml/xmlrole.c	/^int doctype1(PROLOG_STATE *state,$/;"	f	file:
doctype2	libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype2	libs/txml/xmlrole.c	/^int doctype2(PROLOG_STATE *state,$/;"	f	file:
doctype3	libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype3	libs/txml/xmlrole.c	/^int doctype3(PROLOG_STATE *state,$/;"	f	file:
doctype4	libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype4	libs/txml/xmlrole.c	/^int doctype4(PROLOG_STATE *state,$/;"	f	file:
doctype5	libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype5	libs/txml/xmlrole.c	/^int doctype5(PROLOG_STATE *state,$/;"	f	file:
done	windows/include/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s
dont_care	windows/include/plib/ssg.h	/^  int    dont_care ; $/;"	m	class:ssgSimpleState
dont_care_about	windows/include/plib/ssg.h	/^  virtual void dont_care_about ( int mode ) { dont_care |=  (1<<mode) ; }$/;"	f	class:ssgSimpleState
dot	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar dot(const Quaternion& q1, const Quaternion& q2) {$/;"	f
dot	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar dot(const Vector& v1, const Vector& v2) {$/;"	f
dot	topview/operator.hpp	/^    T dot(const vec<N, T>& u, const vec<N, T>& v)$/;"	f	namespace:kmuvcl::math
drag	modules/simu/simuv2/aero.h	/^    tdble	drag;		\/* drag force along car x axis *\/$/;"	m	struct:__anon27
drag	modules/simu/simuv3/aero.h	/^    tdble	drag;		\/* drag force along car x axis *\/$/;"	m	struct:__anon46
drag_collision	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar drag_collision;$/;"	m	class:CarSoundData
draw	modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw ()$/;"	f	class:grVtxTable
draw	tools/texmapper/maintexmapper.cpp	/^void draw(void)$/;"	f
drawBackground	modules/graphic/ssggraph/grcam.h	/^    int			drawBackground;	\/* flag to draw the background *\/$/;"	m	class:cGrCamera
drawCar	modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawCar(tCarElt *currentCar, GLfloat* color, int x, int y)$/;"	f	class:cGrTrackMap
drawCars	modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawCars(tCarElt *currentCar, tSituation *s, int x, int y)$/;"	f	class:cGrTrackMap
drawCurrent	modules/graphic/ssggraph/grcam.h	/^    int			drawCurrent;	\/* flag to draw the current car *\/$/;"	m	class:cGrCamera
drawCurrent	modules/graphic/ssggraph/grscreen.h	/^		int drawCurrent;						\/\/ Should the current car be drawn.$/;"	m	class:cGrScreen
drawDriver	modules/graphic/ssggraph/grcam.h	/^    int			drawDriver;	\/* flag to draw the driver *\/$/;"	m	class:cGrCamera
drawHighlight	modules/graphic/ssggraph/grcarlight.h	/^  virtual void drawHighlight ( sgVec4 colour ){ssgVtxTable::drawHighlight(colour);} $/;"	f	class:ssgVtxTableCarlight
drawHighlight	modules/graphic/ssggraph/grcarlight.h	/^  virtual void drawHighlight ( sgVec4 colour, int i ){ssgVtxTable::drawHighlight(colour,i);} $/;"	f	class:ssgVtxTableCarlight
drawHighlight	modules/graphic/ssggraph/grshadow.h	/^  virtual void drawHighlight ( sgVec4 colour ){ssgVtxTable::drawHighlight(colour);} $/;"	f	class:ssgVtxTableShadow
drawHighlight	modules/graphic/ssggraph/grshadow.h	/^  virtual void drawHighlight ( sgVec4 colour, int i ){ssgVtxTable::drawHighlight(colour,i);} $/;"	f	class:ssgVtxTableShadow
drawHighlight	modules/graphic/ssggraph/grsmoke.h	/^  virtual void drawHighlight ( sgVec4 colour ){ssgVtxTable::drawHighlight(colour);} $/;"	f	class:ssgVtxTableSmoke
drawHighlight	modules/graphic/ssggraph/grsmoke.h	/^  virtual void drawHighlight ( sgVec4 colour, int i ){ssgVtxTable::drawHighlight(colour,i);} $/;"	f	class:ssgVtxTableSmoke
drawHighlight	modules/graphic/ssggraph/grvtxtable.h	/^  virtual void drawHighlight ( sgVec4 colour ){ssgVtxTable::drawHighlight(colour);}  \/* doesn't not work *\/$/;"	f	class:grVtxTable
drawHighlight	modules/graphic/ssggraph/grvtxtable.h	/^  virtual void drawHighlight ( sgVec4 colour, int i ){ssgVtxTable::drawHighlight(colour,i);} \/* doesn't work also *\/$/;"	f	class:grVtxTable
drawTrackNormal	modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawTrackNormal(int x, int y)$/;"	f	class:cGrTrackMap
drawTrackPanning	modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawTrackPanning($/;"	f	class:cGrTrackMap
drawTrackPanningAligned	modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawTrackPanningAligned($/;"	f	class:cGrTrackMap
draw_Particle	topview/topview.cpp	/^void draw_Particle(Particle& p) {$/;"	f
draw_ac	tools/trackgen/easymesh.cpp	/^draw_ac(FILE *ac_file, const char *name)$/;"	f	file:
draw_geometry	modules/graphic/ssggraph/grcarlight.cpp	/^void ssgVtxTableCarlight::draw_geometry ()$/;"	f	class:ssgVtxTableCarlight
draw_geometry	modules/graphic/ssggraph/grshadow.cpp	/^void ssgVtxTableShadow::draw_geometry ()$/;"	f	class:ssgVtxTableShadow
draw_geometry	modules/graphic/ssggraph/grsmoke.cpp	/^void ssgVtxTableSmoke::draw_geometry ()$/;"	f	class:ssgVtxTableSmoke
draw_geometry_array	modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw_geometry_array ()$/;"	f	class:grVtxTable
draw_geometry_for_a_car	modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw_geometry_for_a_car ()$/;"	f	class:grVtxTable
draw_geometry_for_a_car_array	modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw_geometry_for_a_car_array ()$/;"	f	class:grVtxTable
draw_geometry_multi	modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw_geometry_multi ()$/;"	f	class:grVtxTable
drive	drivers/berniw/berniw.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation) {$/;"	f	file:
drive	drivers/berniw2/berniw2.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation) {$/;"	f	file:
drive	drivers/berniw3/berniw3.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation) {$/;"	f	file:
drive	drivers/bt/bt.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	file:
drive	drivers/bt/driver.cpp	/^void Driver::drive(tSituation *s)$/;"	f	class:Driver
drive	drivers/damned/damned.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	file:
drive	drivers/damned/driver.cpp	/^void Driver::drive(tSituation *s)$/;"	f	class:Driver
drive	drivers/inferno/inferno.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
drive	drivers/inferno2/inferno2.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	file:
drive	drivers/lliaw/lliaw.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
drive	drivers/olethros/driver.cpp	/^    void Driver::drive(tSituation *s)$/;"	f	class:olethros::Driver
drive	drivers/olethros/olethros.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	namespace:olethros
drive	drivers/sparkle/driver.cpp	/^void Driver::drive(tSituation *s)$/;"	f	class:Driver
drive	drivers/sparkle/sparkle.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	file:
drive	drivers/tita/tita.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
driveI	modules/simu/simuv2/transmission.h	/^    tdble	driveI[MAX_GEARS];		\/* Inertia (including engine) *\/$/;"	m	struct:__anon26
driveI	modules/simu/simuv3/transmission.h	/^    tdble	driveI[MAX_GEARS];		\/* Inertia (including engine) *\/$/;"	m	struct:__anon45
driveTq	modules/simu/simuv2/wheel.h	/^    tdble  	driveTq;   	\/* engine torque *\/$/;"	m	struct:__anon11
driveTq	modules/simu/simuv3/wheel.h	/^    tdble  	driveTq;   	\/* engine torque *\/$/;"	m	struct:__anon33
drive_at	drivers/human/human.cpp	/^static void drive_at(int index, tCarElt* car, tSituation *s) {$/;"	f	file:
drive_mt	drivers/human/human.cpp	/^static void drive_mt(int index, tCarElt* car, tSituation *s) {$/;"	f	file:
driver	drivers/bt/bt.cpp	/^static Driver *driver[NBBOTS];$/;"	v	file:
driver	drivers/damned/damned.cpp	/^static Driver *driver[NBBOTS];$/;"	v	file:
driver	drivers/olethros/olethros.cpp	/^static Driver *driver[NBBOTS];$/;"	m	namespace:olethros	file:
driver	drivers/sparkle/sparkle.cpp	/^static Driver *driver[NBBOTS];$/;"	v	file:
driverIndex	interfaces/car.h	/^	int driverIndex; \/**< index when multiple drivers are in the same dll *\/$/;"	m	struct:__anon80
driverSection	libs/confscreens/joystickconfig.cpp	/^static const char* driverSection;$/;"	v	file:
driverSelector	modules/graphic/ssggraph/grcar.h	/^    ssgSelector		*driverSelector;$/;"	m	struct:__anon5
driverSelectorinsg	modules/graphic/ssggraph/grcar.h	/^	bool driverSelectorinsg;$/;"	m	struct:__anon5
driverType	interfaces/car.h	/^	int driverType; \/**< Driver type *\/$/;"	m	struct:__anon76
driver_intent	interfaces/car.h	/^	int driver_intent; \/\/ 0 : straight 1 : left turn 2: right turn$/;"	m	struct:__anon78
driver_intent	topview/topview.cpp	/^	int driver_intent;$/;"	m	struct:car_Position	file:
driversPits	interfaces/track.h	/^	tTrackOwnPit *driversPits;	\/**< List of pits by driver *\/$/;"	m	struct:__anon65
driversPitsNb	interfaces/track.h	/^	int driversPitsNb;			\/**< Number of drivers *\/$/;"	m	struct:__anon65
drivespeed	drivers/human/human.cpp	/^tdble drivespeed = 0.0;$/;"	v
drivetrain	drivers/berniw/mycar.h	/^		int drivetrain;			\/* RWD, FWD or 4WD *\/$/;"	m	class:MyCar
drivetrain	drivers/berniw2/mycar.h	/^		int drivetrain;			\/* RWD, FWD or 4WD *\/$/;"	m	class:MyCar
drivetrain	drivers/berniw3/mycar.h	/^		int drivetrain;			\/* RWD, FWD or 4WD *\/$/;"	m	class:MyCar
drivetrain	drivers/human/human.h	/^	int		drivetrain;$/;"	m	struct:HumanContext
drivetrain	drivers/human/mycar.h	/^		int drivetrain;			\/* RWD, FWD or 4WD *\/$/;"	m	class:MyCar
drivetrain	drivers/inferno/mycar.h	/^		int drivetrain;			\/\/ RWD, FWD or 4WD.$/;"	m	class:MyCar
drivetrain	drivers/lliaw/mycar.h	/^		int drivetrain;			\/\/ RWD, FWD or 4WD.$/;"	m	class:MyCar
drivetrain	drivers/tita/mycar.h	/^		int drivetrain;			\/\/ RWD, FWD or 4WD.$/;"	m	class:MyCar
drvIdx	libs/raceengineclient/raceresults.cpp	/^	int		drvIdx;$/;"	m	struct:__anon124	file:
drvPos	interfaces/car.h	/^	t3Dd drvPos; \/**< Driver's position *\/$/;"	m	struct:__anon76
ds	libs/raceengineclient/racemanmenu.cpp	/^static tRmDrvSelect ds;$/;"	v	file:
ds	libs/racescreens/driverselect.cpp	/^static tRmDrvSelect	*ds;$/;"	v	file:
dt	drivers/berniw/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	drivers/berniw2/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	drivers/berniw3/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	drivers/human/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	drivers/inferno/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	drivers/lliaw/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	drivers/olethros/driver.h	/^	float dt; \/\/\/< delta time$/;"	m	class:olethros::Driver
dt	drivers/tita/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	modules/graphic/ssggraph/grsmoke.h	/^  double dt;$/;"	m	class:ssgVtxTableSmoke
dtBegin	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtBegin(DtPolyType type) { currentType = type; }$/;"	f
dtBox	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtBox(DtScalar x, DtScalar y, DtScalar z) {$/;"	f
dtChangeVertexBase	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtChangeVertexBase(DtShapeRef shape, const Point *base) { $/;"	f
dtClearDefaultResponse	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtClearDefaultResponse() {$/;"	f
dtClearObjectResponse	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtClearObjectResponse(DtObjectRef object) {$/;"	f
dtClearPairResponse	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtClearPairResponse(DtObjectRef object1, DtObjectRef object2) {$/;"	f
dtCone	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtCone(DtScalar radius, DtScalar height) {$/;"	f
dtCreateObject	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtCreateObject(DtObjectRef object, DtShapeRef shape) {$/;"	f
dtCylinder	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtCylinder(DtScalar radius, DtScalar height) {$/;"	f
dtDeleteObject	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtDeleteObject(DtObjectRef object) {$/;"	f
dtDeleteShape	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtDeleteShape(DtShapeRef shape) { $/;"	f
dtDisableCaching	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtDisableCaching() { caching = false; }$/;"	f
dtEnableCaching	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtEnableCaching() {$/;"	f
dtEnd	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtEnd() { $/;"	f
dtEndComplexShape	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtEndComplexShape() {$/;"	f
dtLoadIdentity	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtLoadIdentity() { $/;"	f
dtLoadMatrixd	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtLoadMatrixd(const double *m) { $/;"	f
dtLoadMatrixf	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtLoadMatrixf(const float *m) { $/;"	f
dtMultMatrixd	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtMultMatrixd(const double *m) { $/;"	f
dtMultMatrixf	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtMultMatrixf(const float *m) { $/;"	f
dtNewComplexShape	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtNewComplexShape() {$/;"	f
dtProceed	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtProceed() {$/;"	f
dtResetObjectResponse	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtResetObjectResponse(DtObjectRef object) {$/;"	f
dtResetPairResponse	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtResetPairResponse(DtObjectRef object1, DtObjectRef object2) {$/;"	f
dtRotate	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtRotate(DtScalar x, DtScalar y, DtScalar z, DtScalar w) {$/;"	f
dtScale	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtScale(DtScalar x, DtScalar y, DtScalar z) {$/;"	f
dtSelectObject	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSelectObject(DtObjectRef object) {$/;"	f
dtSetDefaultResponse	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSetDefaultResponse(DtResponse response, DtResponseType type,$/;"	f
dtSetObjectResponse	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSetObjectResponse(DtObjectRef object, DtResponse response, $/;"	f
dtSetPairResponse	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSetPairResponse(DtObjectRef object1, DtObjectRef object2, $/;"	f
dtSetTolerance	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSetTolerance(DtScalar tol) { rel_error = tol; }$/;"	f
dtSphere	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtSphere(DtScalar radius) {$/;"	f
dtTest	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtCount dtTest() {$/;"	f
dtTranslate	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtTranslate(DtScalar x, DtScalar y, DtScalar z) {$/;"	f
dtVertex	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertex(DtScalar x, DtScalar y, DtScalar z) {$/;"	f
dtVertexBase	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertexBase(const Point *base) { $/;"	f
dtVertexIndex	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertexIndex(DtIndex index) { indexBuf.push_back(index); }$/;"	f
dtVertexIndices	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertexIndices(DtPolyType type, DtCount count, $/;"	f
dtVertexRange	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertexRange(DtPolyType type, DtIndex first, DtCount count) {$/;"	f
dtan	libs/learning/ANN.cpp	/^real dtan(real x)$/;"	f
dtan_d	libs/learning/ANN.cpp	/^real dtan_d(real x)$/;"	f
dtd	libs/tgf/params.cpp	/^	char *dtd; \/**< Optional DTD location *\/$/;"	m	struct:parmHeader	file:
dtd	libs/txml/xmlparse.c	/^  DTD dtd;$/;"	m	struct:__anon117	file:
dtd	libs/txml/xmlparse.c	294;"	d	file:
dtdCopy	libs/txml/xmlparse.c	/^static int dtdCopy(DTD *newDtd, const DTD *oldDtd)$/;"	f	file:
dtdDestroy	libs/txml/xmlparse.c	/^static void dtdDestroy(DTD *p)$/;"	f	file:
dtdInit	libs/txml/xmlparse.c	/^static int dtdInit(DTD *p)$/;"	f	file:
dtm	drivers/olethros/learn.h	/^		float dtm; \/\/\/< path error$/;"	m	class:olethros::SegLearn::Averages
dummy	windows/include/zlib.h	/^    struct internal_state {int dummy;};$/;"	m	struct:internal_state
dumpUpdate	windows/include/plib/sl.h	/^  void dumpUpdate () { realUpdate ( SL_TRUE  ) ; }$/;"	f	class:slScheduler
dw	drivers/olethros/Trajectory.h	/^    std::vector<float> dw; \/\/\/< parameter steps$/;"	m	class:Trajectory
dw	libs/learning/ANN.h	/^	real dw; \/\/\/< Weight-change$/;"	m	struct:Connection_
dw2	drivers/olethros/Trajectory.h	/^    std::vector<float> dw2; \/\/\/<  parameter gradients$/;"	m	class:Trajectory
dx	libs/tgfclient/guifont.h	/^    float dx, dy;$/;"	m	struct:__anon136
dy	libs/tgfclient/guifont.h	/^    float dx, dy;$/;"	m	struct:__anon136
dynamic_angles	modules/simu/simuv3/susp.h	/^    t3Dd dynamic_angles;$/;"	m	struct:Suspension
dynpath	drivers/inferno/mycar.h	/^		PathSeg* dynpath;$/;"	m	class:MyCar
dynpath	drivers/lliaw/mycar.h	/^		PathSeg* dynpath;$/;"	m	class:MyCar
dynpath	drivers/tita/mycar.h	/^		PathSeg* dynpath;$/;"	m	class:MyCar
e	libs/learning/ANN.h	/^	real e; \/\/\/< eligibility;$/;"	m	struct:Connection_
e	libs/learning/policy.h	/^ 	real** e; \/\/\/< eligibility trace$/;"	m	class:DiscretePolicy
e1	drivers/berniw/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e1	drivers/berniw2/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e1	drivers/berniw3/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e1	drivers/human/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e1	drivers/inferno/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e1	drivers/lliaw/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e1	drivers/tita/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e3	drivers/berniw/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e3	drivers/berniw2/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e3	drivers/berniw3/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e3	drivers/human/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e3	drivers/inferno/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e3	drivers/lliaw/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e3	drivers/tita/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
eGreedy	libs/learning/policy.cpp	/^int DiscretePolicy::eGreedy(real* Qs) {$/;"	f	class:DiscretePolicy
eSuspensionType	modules/simu/simuv3/susp.h	/^} eSuspensionType;$/;"	t	typeref:enum:SuspensionType
e_o_s	windows/include/ogg/ogg.h	/^  int     e_o_s;          \/* set when we have buffered the last packet in the$/;"	m	struct:__anon52
e_o_s	windows/include/ogg/ogg.h	/^  long  e_o_s;$/;"	m	struct:__anon53
ea	tools/trackgen/easymesh.cpp	/^	int ea, eb;           \/* left and right element *\/$/;"	m	struct:sid	file:
eb	tools/trackgen/easymesh.cpp	/^	int ea, eb;           \/* left and right element *\/$/;"	m	struct:sid	file:
edgeDn	drivers/human/human.cpp	/^	int edgeDn;$/;"	m	struct:__anon184	file:
edgeFlatten	windows/include/plib/ssgaWaveSystem.h	/^  float edgeFlatten ;$/;"	m	class:ssgaWaveSystem
edgeUp	drivers/human/human.cpp	/^	int edgeUp;$/;"	m	struct:__anon184	file:
edgedn	libs/tgfclient/tgfclient.h	/^    int		edgedn[3];	\/**< Button transition from up to down *\/$/;"	m	struct:__anon135
edgedn	libs/tgfclient/tgfclient.h	/^    int		edgedn[GFCTRL_JOY_MAXBUTTON * NUM_JOY];	\/**< Button transition from up to down *\/$/;"	m	struct:__anon134
edgeup	libs/tgfclient/tgfclient.h	/^    int		edgeup[3];	\/**< Button transition from down (pressed) to up *\/$/;"	m	struct:__anon135
edgeup	libs/tgfclient/tgfclient.h	/^    int		edgeup[GFCTRL_JOY_MAXBUTTON * NUM_JOY];	\/**< Button transition from down (pressed) to up *\/$/;"	m	struct:__anon134
editBoxValues	libs/confscreens/controlconfig.cpp	/^static EditboxValue editBoxValues[] = {$/;"	v	file:
editbox	libs/tgfclient/gui.h	/^	tGfuiEditbox	editbox;$/;"	m	union:GfuiObject::__anon147
efficiency	modules/simu/simuv2/differential.h	/^    tdble	efficiency;$/;"	m	struct:__anon10
efficiency	modules/simu/simuv3/aero.h	/^    tdble efficiency;$/;"	m	struct:__anon47
efficiency	modules/simu/simuv3/differential.h	/^    tdble	efficiency;$/;"	m	struct:__anon32
efficiency	modules/simu/simuv3/susp.h	/^	tdble efficiency;$/;"	m	struct:__anon40
ei	tools/trackgen/easymesh.cpp	/^	int ei, ej, ek;$/;"	m	struct:ele	file:
ej	tools/trackgen/easymesh.cpp	/^	int ei, ej, ek;$/;"	m	struct:ele	file:
ek	tools/trackgen/easymesh.cpp	/^	int ei, ej, ek;$/;"	m	struct:ele	file:
ele	tools/trackgen/easymesh.cpp	/^struct ele {$/;"	s	file:
elem	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Mat3 elem;$/;"	m	class:Matrix
elem	tools/trackgen/easymesh.cpp	/^elem[MAX_NODES*2];$/;"	v	typeref:struct:ele
element0	libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element0	libs/txml/xmlrole.c	/^int element0(PROLOG_STATE *state,$/;"	f	file:
element1	libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element1	libs/txml/xmlrole.c	/^int element1(PROLOG_STATE *state,$/;"	f	file:
element2	libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element2	libs/txml/xmlrole.c	/^int element2(PROLOG_STATE *state,$/;"	f	file:
element3	libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element3	libs/txml/xmlrole.c	/^int element3(PROLOG_STATE *state,$/;"	f	file:
element4	libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element4	libs/txml/xmlrole.c	/^int element4(PROLOG_STATE *state,$/;"	f	file:
element5	libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element5	libs/txml/xmlrole.c	/^int element5(PROLOG_STATE *state,$/;"	f	file:
element6	libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element6	libs/txml/xmlrole.c	/^int element6(PROLOG_STATE *state,$/;"	f	file:
element7	libs/txml/xmlrole.c	/^  element7,$/;"	v	file:
element7	libs/txml/xmlrole.c	/^int element7(PROLOG_STATE *state,$/;"	f	file:
elementTypes	libs/txml/xmlparse.c	/^  HASH_TABLE elementTypes;$/;"	m	struct:__anon116	file:
elig	drivers/olethros/learn.h	/^	float* elig; \/\/\/< Eligibility of previously visited quantums for updates$/;"	m	class:olethros::SegLearn
eligibility	libs/learning/ann_policy.h	/^	bool eligibility; \/\/\/< eligibility option$/;"	m	class:ANN_Policy
eligibility_traces	libs/learning/ANN.h	/^	bool eligibility_traces; \/\/\/< use eligibility$/;"	m	struct:ANN_
elts	libs/tgfclient/gui.h	/^    tGfuiListElement	*elts;$/;"	m	struct:__anon143
emis	modules/graphic/ssggraph/grloadac.cpp	/^  sgVec4 emis ;$/;"	m	struct:_ssgMaterial	file:
emis	tools/accc/accc.h	/^  color_t emis;$/;"	m	struct:mat
emission_colour	windows/include/plib/ssg.h	/^  sgVec4 emission_colour ;$/;"	m	class:ssgSimpleState
empty	windows/include/plib/sg.h	/^  void empty  (void)	   { radius = - SG_ONE ; }$/;"	f	class:sgSphere
empty	windows/include/plib/sg.h	/^  void empty  (void)       { radius = - SGD_ONE ; }$/;"	f	class:sgdSphere
empty	windows/include/plib/sg.h	/^  void empty (void) $/;"	f	class:sgBox
empty	windows/include/plib/sg.h	/^  void empty (void)$/;"	f	class:sgdBox
emptyBSphere	windows/include/plib/ssg.h	/^  void emptyBSphere  ()              { bsphere.empty  ()    ; }$/;"	f	class:ssgEntity
empty_log	libs/learning/policy.cpp	/^void empty_log(const char* s, ...)$/;"	f
empty_log	modules/graphic/ssggraph/SoundInterface.h	/^static void empty_log(const char* s, ...)$/;"	f
enableLoadButtons	libs/racescreens/carsetupscreen.cpp	/^static void enableLoadButtons()$/;"	f	file:
enabled	interfaces/raceman.h	/^	int enabled;$/;"	m	struct:RmRaceRules
enabled	interfaces/raceman.h	/^    int		enabled;$/;"	m	struct:RmMovieCapture
enabled	libs/tgfclient/gui.h	/^    unsigned char	*enabled;$/;"	m	struct:__anon142
enabledClipPlanes	windows/include/plib/ssg.h	/^  int enabledClipPlanes ;$/;"	m	class:ssgContext
enables	windows/include/plib/ssg.h	/^  int    enables   ; $/;"	m	class:ssgSimpleState
enc	libs/txml/xmltok.c	/^  ENCODING enc;$/;"	m	struct:normal_encoding	file:
encPtr	libs/txml/xmltok.h	/^  const ENCODING **encPtr;$/;"	m	struct:__anon119
enclose	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void enclose(const BBox& a, const BBox& b) {$/;"	f	class:BBox
encoding	libs/txml/xmlparse.c	/^  const ENCODING *encoding;$/;"	m	struct:__anon117	file:
encoding	libs/txml/xmlparse.c	270;"	d	file:
encoding	libs/txml/xmltok.h	/^struct encoding {$/;"	s
end	libs/txml/gennmtab.c	/^  int end;$/;"	m	struct:range	file:
end	libs/txml/gennmtab/gennmtab.c	/^  int end;$/;"	m	struct:range	file:
end	libs/txml/hashtable.h	/^  NAMED **end;$/;"	m	struct:__anon108
end	libs/txml/xmlparse.c	/^  const XML_Char *end;$/;"	m	struct:__anon112	file:
end	windows/include/plib/ssg.h	/^  int   end   ;$/;"	m	class:ssgTimedSelector
end	windows/include/vorbis/vorbisfile.h	/^  ogg_int64_t      end;$/;"	m	struct:OggVorbis_File
endElement	libs/txml/xml.cpp	/^endElement(void *userData, const char * \/* name *\/)$/;"	f	file:
endElementHandler	libs/txml/xmlparse.c	/^  XML_EndElementHandler endElementHandler;$/;"	m	struct:__anon117	file:
endElementHandler	libs/txml/xmlparse.c	262;"	d	file:
endLoad	windows/include/plib/ssg.h	/^  virtual void endLoad ()$/;"	f	class:ssgLoaderOptions
endRace	drivers/bt/bt.cpp	/^static void endRace(int index, tCarElt *car, tSituation *s)$/;"	f	file:
endRace	drivers/bt/driver.cpp	/^void Driver::endRace(tSituation *s)$/;"	f	class:Driver
endRace	drivers/damned/damned.cpp	/^static void endRace(int index, tCarElt *car, tSituation *s)$/;"	f	file:
endRace	drivers/damned/driver.cpp	/^void Driver::endRace(tSituation *s)$/;"	f	class:Driver
endRace	drivers/olethros/driver.cpp	/^    void Driver::endRace(tSituation *s)$/;"	f	class:olethros::Driver
endRace	drivers/olethros/olethros.cpp	/^static void endRace(int index, tCarElt *car, tSituation *s)$/;"	f	namespace:olethros
endRace	drivers/sparkle/driver.cpp	/^void Driver::endRace(tSituation *s)$/;"	f	class:Driver
endRace	drivers/sparkle/sparkle.cpp	/^static void endRace(int index, tCarElt *car, tSituation *s)$/;"	f	file:
endWidth	interfaces/track.h	/^    tdble endWidth;		\/**< Width of the end of the segment *\/$/;"	m	struct:trackSeg
endbit	windows/include/ogg/ogg.h	/^  int  endbit;$/;"	m	struct:__anon50
endbyte	windows/include/ogg/ogg.h	/^  long endbyte;$/;"	m	struct:__anon50
endid	drivers/inferno/pathfinder.h	/^		int endid;			\/\/ Id of last pit Segment.$/;"	m	class:PathSegPit
endid	drivers/lliaw/pathfinder.h	/^		int endid;			\/\/ Id of last pit Segment.$/;"	m	class:PathSegPit
endid	drivers/tita/pathfinder.h	/^		int endid;			\/\/ Id of last pit Segment.$/;"	m	class:PathSegPit
endofprog	libs/client/exitmenu.cpp	/^endofprog(void * \/* dummy *\/)$/;"	f	file:
endpointList	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^static EndpointList endpointList[3];$/;"	v	file:
eng_pri	modules/graphic/ssggraph/CarSoundData.h	/^	SoundPri eng_pri;$/;"	m	class:CarSoundData
engine	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar engine;$/;"	m	class:CarSoundData
engine	modules/simu/simuv2/carstruct.h	/^    tEngine		engine;$/;"	m	struct:__anon23
engine	modules/simu/simuv3/carstruct.h	/^    tEngine		engine;$/;"	m	struct:__anon42
engineMaxPw	interfaces/car.h	/^	tdble engineMaxPw;$/;"	m	struct:__anon80
engineMaxTq	interfaces/car.h	/^	tdble engineMaxTq;$/;"	m	struct:__anon80
engine_backfire	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar engine_backfire;$/;"	m	class:CarSoundData
engine_sound	modules/graphic/ssggraph/CarSoundData.h	/^	TorcsSound* engine_sound;$/;"	m	class:CarSoundData
enginerpm	interfaces/car.h	/^	tdble enginerpm;$/;"	m	struct:__anon80
enginerpmMax	interfaces/car.h	/^	tdble enginerpmMax;$/;"	m	struct:__anon80
enginerpmMaxPw	interfaces/car.h	/^	tdble enginerpmMaxPw;$/;"	m	struct:__anon80
enginerpmMaxTq	interfaces/car.h	/^	tdble enginerpmMaxTq;$/;"	m	struct:__anon80
enginerpmRedLine	interfaces/car.h	/^	tdble enginerpmRedLine;$/;"	m	struct:__anon80
engpri	modules/graphic/ssggraph/SoundInterface.h	/^	SoundPri* engpri; \/\/\/< the engine priority, used for sorting$/;"	m	class:SoundInterface
engpri	modules/graphic/ssggraph/SoundInterface.h	/^	SoundPri* engpri;$/;"	m	class:PlibSoundInterface
entity	windows/include/plib/ssg.h	/^  ssgEntity **entity     ;$/;"	m	struct:ssgEntityBinding
entity0	libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity0	libs/txml/xmlrole.c	/^int entity0(PROLOG_STATE *state,$/;"	f	file:
entity1	libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity1	libs/txml/xmlrole.c	/^int entity1(PROLOG_STATE *state,$/;"	f	file:
entity2	libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity2	libs/txml/xmlrole.c	/^int entity2(PROLOG_STATE *state,$/;"	f	file:
entity3	libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity3	libs/txml/xmlrole.c	/^int entity3(PROLOG_STATE *state,$/;"	f	file:
entity4	libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity4	libs/txml/xmlrole.c	/^int entity4(PROLOG_STATE *state,$/;"	f	file:
entity5	libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity5	libs/txml/xmlrole.c	/^int entity5(PROLOG_STATE *state,$/;"	f	file:
entity6	libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity6	libs/txml/xmlrole.c	/^int entity6(PROLOG_STATE *state,$/;"	f	file:
entity7	libs/txml/xmlrole.c	/^  entity7, entity8, entity9,$/;"	v	file:
entity7	libs/txml/xmlrole.c	/^int entity7(PROLOG_STATE *state,$/;"	f	file:
entity8	libs/txml/xmlrole.c	/^  entity7, entity8, entity9,$/;"	v	file:
entity8	libs/txml/xmlrole.c	/^int entity8(PROLOG_STATE *state,$/;"	f	file:
entity9	libs/txml/xmlrole.c	/^  entity7, entity8, entity9,$/;"	v	file:
entity9	libs/txml/xmlrole.c	/^int entity9(PROLOG_STATE *state,$/;"	f	file:
entityValueTok	libs/txml/xmltok_impl.c	/^int PREFIX(entityValueTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
entity_list	windows/include/plib/ssg.h	/^  ssgEntity **entity_list ;  \/* The list. *\/$/;"	m	class:ssgList
entity_list	windows/include/plib/ul.h	/^  void **entity_list ;  \/* The list. *\/$/;"	m	class:ulList
entries	windows/include/png.h	/^   png_sPLT_entryp entries;  \/* palette entries *\/$/;"	m	struct:png_sPLT_struct
env	interfaces/track.h	/^    const char		**env;$/;"	m	struct:__anon67
env	windows/include/plib/sl.h	/^  slEnvelope    *env            [ SL_MAX_ENVELOPES ] ;$/;"	m	class:slPlayer
envAngle	modules/graphic/ssggraph/grcar.h	/^    tdble               envAngle;$/;"	m	struct:__anon5
envIndex	interfaces/track.h	/^    int		envIndex;	\/* Environment mapping image index *\/$/;"	m	struct:trackSeg
envIndex	modules/track/track3.cpp	/^static int envIndex;$/;"	v	file:
envIndex	modules/track/track4.cpp	/^static int envIndex;$/;"	v	file:
envSelector	modules/graphic/ssggraph/grcar.h	/^    ssgStateSelector	*envSelector;$/;"	m	struct:__anon5
env_start_time	windows/include/plib/sl.h	/^  int            env_start_time [ SL_MAX_ENVELOPES ] ;$/;"	m	class:slPlayer
env_type	windows/include/plib/sl.h	/^  slEnvelopeType env_type       [ SL_MAX_ENVELOPES ] ;$/;"	m	class:slPlayer
envnb	interfaces/track.h	/^    int			envnb;$/;"	m	struct:__anon67
eofflag	windows/include/vorbis/codec.h	/^  int         eofflag;$/;"	m	struct:vorbis_block
eofflag	windows/include/vorbis/codec.h	/^  int  eofflag;$/;"	m	struct:vorbis_dsp_state
epilogProcessor	libs/txml/xmlparse.c	/^enum XML_Error epilogProcessor(XML_Parser parser,$/;"	f	file:
epilogProcessor	libs/txml/xmlparse.c	/^static Processor epilogProcessor;$/;"	v	file:
eqz	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline bool   eqz(Scalar x) { return fabs(x) <= EPSILON; }$/;"	f
erase	tools/trackgen/easymesh.cpp	/^void erase()$/;"	f
errno	libs/client/errno.cpp	/^    int errno;$/;"	v
error	libs/learning/ANN.h	/^	real* error; \/\/\/< errors$/;"	m	struct:ANN_
error	libs/txml/xmlrole.c	/^  error;$/;"	v	file:
error	libs/txml/xmlrole.c	/^int error(PROLOG_STATE *state,$/;"	f	file:
error	windows/include/plib/js.h	/^  int          error        ;$/;"	m	class:jsJoystick
error	windows/include/plib/sl.h	/^  int error ;$/;"	m	class:slDSP
error	windows/include/plib/sm.h	/^  int error ;$/;"	m	class:smMixer
error	windows/include/plib/ul.h	/^    OSStatus          error;$/;"	m	class:ulDynamicLibrary
errorCode	libs/txml/xmlparse.c	/^  enum XML_Error errorCode;$/;"	m	struct:__anon117	typeref:enum:__anon117::XML_Error	file:
errorCode	libs/txml/xmlparse.c	280;"	d	file:
errorString	libs/musicplayer/OggSoundStream.cpp	/^const char* OggSoundStream::errorString(int code)$/;"	f	class:OggSoundStream
error_base	libs/tgfclient/fg_gm.cpp	/^	int					error_base;			\/\/ Base error number of the extension.$/;"	m	struct:tagSFG_Display	file:
eval	libs/learning/policy.h	/^	real* eval; \/\/\/< evaluation of current aciton$/;"	m	class:DiscretePolicy
evalUnit	libs/tgf/params.cpp	/^static void evalUnit(char *unit, tdble *dest, int flg) {$/;"	f	file:
evaluate	drivers/bt/spline.cpp	/^float Spline::evaluate(float z)$/;"	f	class:Spline
evaluate	drivers/damned/spline.cpp	/^float Spline::evaluate(float z)$/;"	f	class:Spline
evaluate	drivers/olethros/spline.cpp	/^float Spline::evaluate(float z)$/;"	f	class:Spline
evaluate	drivers/sparkle/spline.cpp	/^float Spline::evaluate(float z)$/;"	f	class:Spline
event	interfaces/car.h	/^	int event;$/;"	m	struct:__anon77
event	modules/graphic/ssggraph/grcam.cpp	/^    int		event;$/;"	m	struct:__anon3	file:
event	windows/include/plib/sl.h	/^  slEvent    event    ;$/;"	m	struct:slPendingCallBack
eventEndPtr	libs/txml/xmlparse.c	/^  const char *eventEndPtr;$/;"	m	struct:__anon117	file:
eventEndPtr	libs/txml/xmlparse.c	282;"	d	file:
eventPtr	libs/txml/xmlparse.c	/^  const char *eventPtr;$/;"	m	struct:__anon117	file:
eventPtr	libs/txml/xmlparse.c	281;"	d	file:
event_base	libs/tgfclient/fg_gm.cpp	/^	int					event_base;			\/\/ Base event number of the extension.$/;"	m	struct:tagSFG_Display	file:
execlp	windows/osspec.h	39;"	d
exhaustNb	interfaces/car.h	/^	int exhaustNb; \/**< Number of exhaust pipes (max 2) *\/$/;"	m	struct:__anon75
exhaustPos	interfaces/car.h	/^	t3Dd exhaustPos[2]; \/**< Position of exhaust pipes *\/$/;"	m	struct:__anon75
exhaustPower	interfaces/car.h	/^	tdble exhaustPower; \/**< Power of the flames (from 1 to 3) *\/$/;"	m	struct:__anon75
exhaust_pressure	modules/simu/simuv2/engine.h	/^	tdble       exhaust_pressure;$/;"	m	struct:__anon19
exhaust_pressure	modules/simu/simuv3/engine.h	/^	tdble       exhaust_pressure;$/;"	m	struct:__anon38
exhaust_refract	modules/simu/simuv2/engine.h	/^	tdble       exhaust_refract;$/;"	m	struct:__anon19
exhaust_refract	modules/simu/simuv3/engine.h	/^	tdble       exhaust_refract;$/;"	m	struct:__anon38
exitMainMenuHandle	libs/client/exitmenu.cpp	/^static void *exitMainMenuHandle = NULL;$/;"	v	file:
exitMenuInit	libs/client/exitmenu.cpp	/^void * exitMenuInit(void *menu, void *menuHandle)$/;"	f
exitmenuHandle	libs/client/exitmenu.cpp	/^static void *exitmenuHandle = NULL;$/;"	v	file:
expected_V	libs/learning/policy.h	/^	real expected_V; \/\/\/< Expected state return$/;"	m	class:DiscretePolicy
expected_r	libs/learning/policy.h	/^	real expected_r; \/\/\/< Expected reward$/;"	m	class:DiscretePolicy
expectedfuelperlap	drivers/olethros/strategy.h	/^	float expectedfuelperlap;		\/\/ Expected fuel per lap (may be very inaccurate).$/;"	m	class:olethros::SimpleStrategy
exponent	windows/include/plib/ssg.h	/^  float  exponent ;$/;"	m	class:ssgLight
ext	interfaces/track.h	/^    tSegExt		*ext;$/;"	m	struct:trackSeg
extSndHeader	windows/include/plib/sl.h	/^  ExtSoundHeader extSndHeader ;   \/\/ sound header for bufferCmd$/;"	m	class:slDSP
extendBSphere	windows/include/plib/ssg.h	/^  void extendBSphere ( sgBox    *b ) { bsphere.extend ( b ) ; }$/;"	f	class:ssgEntity
extendBSphere	windows/include/plib/ssg.h	/^  void extendBSphere ( sgSphere *s ) { bsphere.extend ( s ) ; }$/;"	f	class:ssgEntity
extendBSphere	windows/include/plib/ssg.h	/^  void extendBSphere ( sgVec3    v ) { bsphere.extend ( v ) ; }$/;"	f	class:ssgEntity
extendedEnvCoord	tools/accc/mainaccc.cpp	/^int extendedEnvCoord=0;$/;"	v
extendedStrips	tools/accc/mainaccc.cpp	/^int extendedStrips=0;$/;"	v
extendedTriangles	tools/accc/mainaccc.cpp	/^int extendedTriangles=0;$/;"	v
extent	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Vector extent;$/;"	m	class:BBox
extent	modules/simu/simuv2/SOLID-2.0/src/Box.h	/^  Vector extent;$/;"	m	class:Box
externalEntityContentProcessor	libs/txml/xmlparse.c	/^enum XML_Error externalEntityContentProcessor(XML_Parser parser,$/;"	f	file:
externalEntityContentProcessor	libs/txml/xmlparse.c	/^static Processor externalEntityContentProcessor;$/;"	v	file:
externalEntityInitProcessor	libs/txml/xmlparse.c	/^enum XML_Error externalEntityInitProcessor(XML_Parser parser,$/;"	f	file:
externalEntityInitProcessor	libs/txml/xmlparse.c	/^static Processor externalEntityInitProcessor;$/;"	v	file:
externalEntityInitProcessor2	libs/txml/xmlparse.c	/^enum XML_Error externalEntityInitProcessor2(XML_Parser parser,$/;"	f	file:
externalEntityInitProcessor2	libs/txml/xmlparse.c	/^static Processor externalEntityInitProcessor2;$/;"	v	file:
externalEntityInitProcessor3	libs/txml/xmlparse.c	/^enum XML_Error externalEntityInitProcessor3(XML_Parser parser,$/;"	f	file:
externalEntityInitProcessor3	libs/txml/xmlparse.c	/^static Processor externalEntityInitProcessor3;$/;"	v	file:
externalEntityRefHandler	libs/txml/xmlparse.c	/^  XML_ExternalEntityRefHandler externalEntityRefHandler;$/;"	m	struct:__anon117	file:
externalEntityRefHandler	libs/txml/xmlparse.c	268;"	d	file:
external_property_index	windows/include/plib/ssg.h	/^  int external_property_index ;$/;"	m	class:ssgState
extra	windows/include/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s
extra_len	windows/include/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s
extra_max	windows/include/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s
eye	modules/graphic/ssggraph/grcam.h	/^    sgVec3 eye;$/;"	m	class:cGrCamera
eyex	topview/topview.cpp	/^float eyex = 0.0f, eyey = 0.0f, eyez = 1000.0f, centerx = 0.0f, centery = 0.0f,$/;"	v
eyey	topview/topview.cpp	/^float eyex = 0.0f, eyey = 0.0f, eyez = 1000.0f, centerx = 0.0f, centery = 0.0f,$/;"	v
eyez	topview/topview.cpp	/^float eyex = 0.0f, eyey = 0.0f, eyez = 1000.0f, centerx = 0.0f, centery = 0.0f,$/;"	v
f	libs/learning/ANN.h	/^	real (*f) (real x); \/\/\/< activation function$/;"	m	struct:Layer_
f	modules/graphic/ssggraph/QSoundChar.h	/^	float f;$/;"	m	struct:QSoundChar_
f	modules/graphic/ssggraph/SoundInterface.h	/^		float f; \/\/frequency modulation$/;"	m	struct:OpenalSoundInterface::SoundChar_
f	modules/graphic/ssggraph/SoundInterface.h	/^		float f; \/\/frequency modulation$/;"	m	struct:PlibSoundInterface::SoundChar_
f	modules/graphic/ssggraph/TorcsSound.h	/^    float f; \/\/\/< Environmental frequency shift$/;"	m	class:SoundSource
f	predictor/reshape.py	/^f = open("data5.txt", 'w')$/;"	v
f43	libs/racescreens/carsetupscreen.cpp	/^static const char* f43 = "%4.3f";$/;"	v	file:
f52	libs/racescreens/carsetupscreen.cpp	/^static const char* f52 = "%5.2f";$/;"	v	file:
fStartTime	libs/tgf/tgf.h	/^  double fStartTime;$/;"	m	class:Profiler
f_d	libs/learning/ANN.h	/^	real (*f_d) (real x); \/\/\/< derivative of activation function$/;"	m	struct:Layer_
f_output	drivers/human/human.cpp	/^ofstream f_output;$/;"	v
f_output_string	drivers/human/human.cpp	/^static std::string f_output_string;$/;"	v	file:
f_read	predictor/reshape.py	/^f_read = open("data.txt", 'r');$/;"	v
faceName	tools/texmapper/maintexmapper.cpp	/^    const char *faceName;$/;"	m	struct:Face	file:
faces	tools/texmapper/maintexmapper.cpp	/^    tRingListHead	faces;$/;"	m	struct:__anon59	file:
factor	modules/graphic/ssggraph/grcarlight.h	/^  double factor;$/;"	m	class:ssgVtxTableCarlight
factor	modules/graphic/ssggraph/grshadow.h	/^  float factor;$/;"	m	class:ssgVtxTableShadow
fakeCrossProduct	libs/math/v2_t.h	/^template<class T> inline T v2t<T>::fakeCrossProduct(const v2t<T>* b) const$/;"	f	class:v2t
false	windows/include/plib/ul.h	/^const   int false = 0 ;$/;"	v
far_dist	tools/accc/mainaccc.cpp	/^int far_dist=10000;$/;"	v
fctInit	libs/tgf/tgf.h	/^    tfModPrivInit	fctInit;	\/**< init function *\/$/;"	m	struct:ModInfo
fd	windows/include/plib/sl.h	/^  int fd ;$/;"	m	class:slDSP
fd	windows/include/plib/sm.h	/^  int fd ;$/;"	m	class:smMixer
feedBack	modules/simu/simuv2/differential.h	/^    tDynAxis	feedBack;$/;"	m	struct:__anon10
feedBack	modules/simu/simuv2/wheel.h	/^    tDynAxis	feedBack;$/;"	m	struct:__anon11
feedBack	modules/simu/simuv3/differential.h	/^    tDynAxis	feedBack;$/;"	m	struct:__anon32
feedBack	modules/simu/simuv3/wheel.h	/^    tDynAxis	feedBack;$/;"	m	struct:__anon33
ffar	modules/graphic/ssggraph/grcam.h	/^    float ffar;$/;"	m	class:cGrPerspCamera
ffar	windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
ffar	windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
fgColor	libs/tgfclient/gui.h	/^	ForeGroundColor fgColor;$/;"	m	struct:__anon140
fgColor	libs/tgfclient/gui.h	/^    float		*fgColor[3];$/;"	m	struct:__anon141
fgColor	libs/tgfclient/gui.h	/^    float		*fgColor[3];$/;"	m	struct:__anon143
fgColor	libs/tgfclient/gui.h	/^    float		*fgColor[3];$/;"	m	struct:__anon145
fgColor1	libs/tgfclient/guihelp.cpp	/^static float	*fgColor1 = &(GfuiColor[GFUI_HELPCOLOR1][0]);$/;"	v	file:
fgColor2	libs/tgfclient/guihelp.cpp	/^static float	*fgColor2 = &(GfuiColor[GFUI_HELPCOLOR2][0]);$/;"	v	file:
fgDisplay	libs/tgfclient/fg_gm.cpp	/^static SFG_Display fgDisplay;$/;"	v	file:
fgFocusColor	libs/tgfclient/gui.h	/^    float		*fgFocusColor[3];$/;"	m	struct:__anon141
fgFocusColor	libs/tgfclient/gui.h	/^    float		*fgFocusColor[3];$/;"	m	struct:__anon145
fgInitDone	libs/tgfclient/fg_gm.cpp	/^static int fgInitDone = 0;$/;"	v	file:
fgInitialize	libs/tgfclient/fg_gm.cpp	/^static void fgInitialize(void)$/;"	f	file:
fgSelectColor	libs/tgfclient/gui.h	/^    float		*fgSelectColor[3];$/;"	m	struct:__anon143
fgState	libs/tgfclient/fg_gm.cpp	/^static SFG_State fgState;$/;"	v	file:
fghChangeDisplayMode	libs/tgfclient/fg_gm.cpp	/^static int fghChangeDisplayMode( int \/* haveToTest *\/ )$/;"	f	file:
fghCheckDisplayMode	libs/tgfclient/fg_gm.cpp	/^static int fghCheckDisplayMode( int width, int height, int depth, int refresh )$/;"	f	file:
fghRememberState	libs/tgfclient/fg_gm.cpp	/^static void fghRememberState( void )$/;"	f	file:
fghRestoreState	libs/tgfclient/fg_gm.cpp	/^static void fghRestoreState( void )$/;"	f	file:
fglutEnterGameMode	libs/tgfclient/fg_gm.cpp	/^int fglutEnterGameMode( void )$/;"	f
fglutGameModeString	libs/tgfclient/fg_gm.cpp	/^void fglutGameModeString( const char* string )$/;"	f
fglutLeaveGameMode	libs/tgfclient/fg_gm.cpp	/^void fglutLeaveGameMode( void )$/;"	f
file	modules/telemetry/telemetry.cpp	/^    FILE	*file;	\/* associated file *\/$/;"	m	struct:Tlm	file:
fileL0	tools/accc/mainaccc.cpp	/^char *fileL0=NULL;$/;"	v
fileL1	tools/accc/mainaccc.cpp	/^char *fileL1=NULL;$/;"	v
fileL2	tools/accc/mainaccc.cpp	/^char *fileL2=NULL;$/;"	v
fileL3	tools/accc/mainaccc.cpp	/^char *fileL3=NULL;$/;"	v
fileScrollList	libs/racescreens/fileselect.cpp	/^static int fileScrollList;$/;"	v	file:
filename	drivers/bt/learn.h	/^		char filename[1024];$/;"	m	class:SegLearn
filename	drivers/damned/learn.h	/^		char filename[1024];$/;"	m	class:SegLearn
filename	interfaces/raceman.h	/^    char		*filename;$/;"	m	struct:__anon73
filename	interfaces/track.h	/^    char	  *filename;	\/**< Filename of the track description *\/$/;"	m	struct:__anon68
filename	libs/tgf/params.cpp	/^	char *filename; \/**< Name of the configuration file *\/$/;"	m	struct:parmHeader	file:
filename	libs/tgf/params.cpp	/^	char *filename; \/**< Name of the output file *\/$/;"	m	struct:parmOutput	file:
filename	windows/include/plib/ssg.h	/^  char *filename ; $/;"	m	class:ssgTexture
fill	windows/include/ogg/ogg.h	/^  int fill;$/;"	m	struct:__anon54
filterABS	drivers/bt/driver.cpp	/^float Driver::filterABS(float brake)$/;"	f	class:Driver
filterABS	drivers/damned/driver.cpp	/^float Driver::filterABS(float brake)$/;"	f	class:Driver
filterABS	drivers/olethros/driver.cpp	/^    float Driver::filterABS(float brake)$/;"	f	class:olethros::Driver
filterABS	drivers/sparkle/driver.cpp	/^float Driver::filterABS(float brake)$/;"	f	class:Driver
filterAPit	drivers/olethros/driver.cpp	/^    float Driver::filterAPit(float accel)$/;"	f	class:olethros::Driver
filterBColl	drivers/bt/driver.cpp	/^float Driver::filterBColl(float brake)$/;"	f	class:Driver
filterBColl	drivers/damned/driver.cpp	/^float Driver::filterBColl(float brake)$/;"	f	class:Driver
filterBColl	drivers/olethros/driver.cpp	/^    float Driver::filterBColl(float brake)$/;"	f	class:olethros::Driver
filterBColl	drivers/sparkle/driver.cpp	/^float Driver::filterBColl(float brake)$/;"	f	class:Driver
filterBPit	drivers/bt/driver.cpp	/^float Driver::filterBPit(float brake)$/;"	f	class:Driver
filterBPit	drivers/damned/driver.cpp	/^float Driver::filterBPit(float brake)$/;"	f	class:Driver
filterBPit	drivers/olethros/driver.cpp	/^    float Driver::filterBPit(float brake)$/;"	f	class:olethros::Driver
filterBPit	drivers/sparkle/driver.cpp	/^float Driver::filterBPit(float brake)$/;"	f	class:Driver
filterBrakeSpeed	drivers/bt/driver.cpp	/^float Driver::filterBrakeSpeed(float brake)$/;"	f	class:Driver
filterBrakeSpeed	drivers/damned/driver.cpp	/^float Driver::filterBrakeSpeed(float brake)$/;"	f	class:Driver
filterBrakeSpeed	drivers/olethros/driver.cpp	/^    float Driver::filterBrakeSpeed(float brake)$/;"	f	class:olethros::Driver
filterBrakeSpeed	drivers/sparkle/driver.cpp	/^float Driver::filterBrakeSpeed(float brake)$/;"	f	class:Driver
filterOverlap	drivers/bt/driver.cpp	/^float Driver::filterOverlap(float accel)$/;"	f	class:Driver
filterOverlap	drivers/damned/driver.cpp	/^float Driver::filterOverlap(float accel)$/;"	f	class:Driver
filterOverlap	drivers/olethros/driver.cpp	/^    float Driver::filterOverlap(float accel)$/;"	f	class:olethros::Driver
filterSColl	drivers/bt/driver.cpp	/^float Driver::filterSColl(float steer)$/;"	f	class:Driver
filterSColl	drivers/damned/driver.cpp	/^float Driver::filterSColl(float steer)$/;"	f	class:Driver
filterSColl	drivers/olethros/driver.cpp	/^    float Driver::filterSColl(float steer)$/;"	f	class:olethros::Driver
filterSColl	drivers/sparkle/driver.cpp	/^float Driver::filterSColl(float steer)$/;"	f	class:Driver
filterTCL	drivers/bt/driver.cpp	/^float Driver::filterTCL(float accel)$/;"	f	class:Driver
filterTCL	drivers/damned/driver.cpp	/^float Driver::filterTCL(float accel)$/;"	f	class:Driver
filterTCL	drivers/olethros/driver.cpp	/^    float Driver::filterTCL(float accel)$/;"	f	class:olethros::Driver
filterTCL	drivers/sparkle/driver.cpp	/^float Driver::filterTCL(float accel)$/;"	f	class:Driver
filterTCL_4WD	drivers/bt/driver.cpp	/^float Driver::filterTCL_4WD()$/;"	f	class:Driver
filterTCL_4WD	drivers/damned/driver.cpp	/^float Driver::filterTCL_4WD()$/;"	f	class:Driver
filterTCL_4WD	drivers/olethros/driver.cpp	/^    float Driver::filterTCL_4WD()$/;"	f	class:olethros::Driver
filterTCL_4WD	drivers/sparkle/driver.cpp	/^float Driver::filterTCL_4WD()$/;"	f	class:Driver
filterTCL_FWD	drivers/bt/driver.cpp	/^float Driver::filterTCL_FWD()$/;"	f	class:Driver
filterTCL_FWD	drivers/damned/driver.cpp	/^float Driver::filterTCL_FWD()$/;"	f	class:Driver
filterTCL_FWD	drivers/olethros/driver.cpp	/^    float Driver::filterTCL_FWD()$/;"	f	class:olethros::Driver
filterTCL_FWD	drivers/sparkle/driver.cpp	/^float Driver::filterTCL_FWD()$/;"	f	class:Driver
filterTCL_RWD	drivers/bt/driver.cpp	/^float Driver::filterTCL_RWD()$/;"	f	class:Driver
filterTCL_RWD	drivers/damned/driver.cpp	/^float Driver::filterTCL_RWD()$/;"	f	class:Driver
filterTCL_RWD	drivers/olethros/driver.cpp	/^    float Driver::filterTCL_RWD()$/;"	f	class:olethros::Driver
filterTCL_RWD	drivers/sparkle/driver.cpp	/^float Driver::filterTCL_RWD()$/;"	f	class:Driver
filterTrk	drivers/bt/driver.cpp	/^float Driver::filterTrk(float accel)$/;"	f	class:Driver
filterTrk	drivers/damned/driver.cpp	/^float Driver::filterTrk(float accel)$/;"	f	class:Driver
filterTrk	drivers/olethros/driver.cpp	/^    float Driver::filterTrk(tSituation* s, float accel)$/;"	f	class:olethros::Driver
filterTrk	drivers/sparkle/driver.cpp	/^float Driver::filterTrk(float accel)$/;"	f	class:Driver
find	modules/simu/simuv2/SOLID-2.0/src/RespTable.cpp	/^const Response& RespTable::find(DtObjectRef obj1, DtObjectRef obj2) const {$/;"	f	class:RespTable
findCar	drivers/bt/cardata.cpp	/^SingleCardata *Cardata::findCar(tCarElt *car)$/;"	f	class:Cardata
findCar	drivers/damned/cardata.cpp	/^SingleCardata *Cardata::findCar(tCarElt *car)$/;"	f	class:Cardata
findCar	drivers/olethros/cardata.cpp	/^SingleCardata *Cardata::findCar(tCarElt *car)$/;"	f	class:olethros::Cardata
findDistmin	tools/accc/ac3dload.cpp	/^double  findDistmin(ob_t *ob1, ob_t *ob2)$/;"	f
findEncoding	libs/txml/xmltok.c	/^const ENCODING *findEncoding(const ENCODING *enc, const char *ptr, const char *end)$/;"	f	file:
findEndSegId	drivers/berniw/pathfinder.cpp	/^int Pathfinder::findEndSegId(int id)$/;"	f	class:Pathfinder
findEndSegId	drivers/berniw2/pathfinder.cpp	/^int Pathfinder::findEndSegId(int id)$/;"	f	class:Pathfinder
findEndSegId	drivers/berniw3/pathfinder.cpp	/^int Pathfinder::findEndSegId(int id)$/;"	f	class:Pathfinder
findEndSegId	drivers/human/pathfinder.cpp	/^int Pathfinder::findEndSegId(int id)$/;"	f	class:Pathfinder
findIndice	tools/accc/ac3dload.cpp	/^int findIndice(int indice,int *oldva,int  n)$/;"	f
findPoint	tools/accc/ac3dload.cpp	/^int findPoint(point_t *vertexArray,int sizeVertexArray, point_t *theVertex)$/;"	f
findStartSegId	drivers/berniw/pathfinder.cpp	/^int Pathfinder::findStartSegId(int id)$/;"	f	class:Pathfinder
findStartSegId	drivers/berniw2/pathfinder.cpp	/^int Pathfinder::findStartSegId(int id)$/;"	f	class:Pathfinder
findStartSegId	drivers/berniw3/pathfinder.cpp	/^int Pathfinder::findStartSegId(int id)$/;"	f	class:Pathfinder
findStartSegId	drivers/human/pathfinder.cpp	/^int Pathfinder::findStartSegId(int id)$/;"	f	class:Pathfinder
find_prim	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool find_prim(const BBoxNode *a, const BBoxNode *b,$/;"	f
find_prim	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool find_prim(const BBoxNode *tree, const Convex& c, const BBox& bb, $/;"	f
find_prim	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool find_prim(const Complex& a, const Complex& b, $/;"	f
find_prim	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool find_prim(const Complex& a, const Convex& b, $/;"	f
finish	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^void Complex::finish(int n, const Polytope **p) {$/;"	f	class:Complex
finite	drivers/olethros/learn.cpp	30;"	d	file:
fireCount	modules/graphic/ssggraph/grcar.h	/^    int			fireCount;$/;"	m	struct:__anon5
firstTime	drivers/human/human.cpp	/^static int firstTime = 0;$/;"	v	file:
firstVisible	libs/tgfclient/gui.h	/^    int			firstVisible;$/;"	m	struct:__anon143
first_time	windows/include/plib/ssg.h	/^  int    first_time ;$/;"	m	class:ssgBaseTransform
firsttime	windows/include/plib/ssg.h	/^  void firsttime ()$/;"	f	class:ssgBaseTransform
fitBBox	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^void BBoxLeaf::fitBBox() { $/;"	f	class:BBoxLeaf
fixedid	modules/simu/simuv2/collide.cpp	/^static unsigned int fixedid;$/;"	v	file:
fixedobjects	modules/simu/simuv2/collide.cpp	/^static DtShapeRef fixedobjects[100];$/;"	v	file:
flag	libs/tgf/params.cpp	/^	int flag; \/**< Flag (@ref PARM_HANDLE_FLAG_PARSE_ERROR, @ref PARM_HANDLE_FLAG_PRIVATE) *\/$/;"	m	struct:parmHandle	file:
flag_data_name	drivers/data_list.h	/^enum flag_data_name{CC,LKAS};$/;"	g
flags	modules/graphic/ssggraph/TorcsSound.h	/^	int flags; \/\/\/< Flags relating to what effects are to be used.$/;"	m	class:TorcsSound
floor_bits	windows/include/vorbis/codec.h	/^  long floor_bits;$/;"	m	struct:vorbis_block
floor_bits	windows/include/vorbis/codec.h	/^  ogg_int64_t floor_bits;$/;"	m	struct:vorbis_dsp_state
fnear	modules/graphic/ssggraph/grcam.h	/^    float fnear;$/;"	m	class:cGrPerspCamera
focus	libs/tgfclient/gui.h	/^    int		focus;$/;"	m	struct:GfuiObject
focusMode	libs/tgfclient/gui.h	/^    int		focusMode;$/;"	m	struct:GfuiObject
focused	libs/tgfclient/gui.h	/^    unsigned char	*focused;$/;"	m	struct:__anon142
fogend	modules/graphic/ssggraph/grcam.h	/^    float fogend;$/;"	m	class:cGrPerspCamera
fogstart	modules/graphic/ssggraph/grcam.h	/^    float fogstart;$/;"	m	class:cGrPerspCamera
font	libs/tgfclient/gui.h	/^	GfuiFontClass *font;		\/* ttf font *\/$/;"	m	struct:__anon140
font	libs/tgfclient/gui.h	/^    GfuiFontClass	*font;$/;"	m	struct:__anon143
font	libs/tgfclient/guifont.h	/^    GLFONT	*font;$/;"	m	class:GfuiFontClass
force	interfaces/car.h	/^	sgVec3 force;$/;"	m	struct:tCollisionState_
force	modules/simu/simuv2/axle.h	/^    tdble	force[2]; \/* right and left *\/$/;"	m	struct:__anon12
force	modules/simu/simuv2/susp.h	/^    tdble force;        \/* generated force *\/$/;"	m	struct:Suspension
force	modules/simu/simuv3/axle.h	/^    tdble	force[2]; \/* right and left *\/$/;"	m	struct:__anon34
force	modules/simu/simuv3/susp.h	/^    tdble force;        \/* generated force *\/$/;"	m	struct:Suspension
force	windows/include/plib/sg.h	/^  sgVec3 force ;$/;"	m	class:sgParticle
forced_learning	libs/learning/policy.h	/^	bool forced_learning; \/\/\/< Force agent to take supplied action$/;"	m	class:DiscretePolicy
forces	modules/simu/simuv2/aero.h	/^    t3Dd	forces;$/;"	m	struct:__anon28
forces	modules/simu/simuv2/wheel.h	/^    t3Dd	forces;		\/* forces acting on car *\/$/;"	m	struct:__anon11
forces	modules/simu/simuv3/aero.h	/^    t3Dd	forces;$/;"	m	struct:__anon47
forces	modules/simu/simuv3/wheel.h	/^    t3Dd	forces;		\/* forces acting on car, using car's FOR *\/$/;"	m	struct:__anon33
format	libs/musicplayer/OggSoundStream.h	/^		SoundFormat		format;$/;"	m	class:OggSoundStream
format	libs/racescreens/carsetupscreen.cpp	/^		const char* format;$/;"	m	class:cGuiSetupValue	file:
forward	libs/learning/ANN.h	/^	void (*forward) (struct Layer_* current_layer, bool stochastic); \/\/\/< forward calculation$/;"	m	struct:Layer_
foundNear	tools/accc/ac3dload.cpp	/^int foundNear(ob_t *object, ob_t *allobjects, int dist,int print)$/;"	f
fourStateHdle	libs/racescreens/miscscreens.cpp	/^static void *fourStateHdle = 0;$/;"	v	file:
fovy	modules/graphic/ssggraph/grcam.h	/^    float fovy;$/;"	m	class:cGrPerspCamera
fovydflt	modules/graphic/ssggraph/grcam.h	/^    float fovydflt;$/;"	m	class:cGrPerspCamera
fovymax	modules/graphic/ssggraph/grcam.h	/^    float fovymax;$/;"	m	class:cGrPerspCamera
fovymin	modules/graphic/ssggraph/grcam.h	/^    float fovymin;$/;"	m	class:cGrPerspCamera
fps	interfaces/raceman.h	/^    unsigned long	fps;$/;"	m	struct:__anon70
free	libs/tgf/tgf.h	163;"	d
free	libs/txml/xmldef.h	30;"	d
freeBlocks	libs/txml/xmlparse.c	/^  BLOCK *freeBlocks;$/;"	m	struct:__anon112	file:
freeCarIndex	interfaces/track.h	/^	int freeCarIndex;	\/\/ Index of next free car entry (look at the next line).$/;"	m	struct:TrackOwnPit
freeI	modules/simu/simuv2/transmission.h	/^    tdble	freeI[MAX_GEARS];		\/* Inertia when clutch is applied (wheels side) *\/$/;"	m	struct:__anon26
freeI	modules/simu/simuv3/transmission.h	/^    tdble	freeI[MAX_GEARS];		\/* Inertia when clutch is applied (wheels side) *\/$/;"	m	struct:__anon45
freeSeg	modules/track/track.cpp	/^freeSeg(tTrackSeg *seg)$/;"	f	file:
freeTagList	libs/txml/xmlparse.c	/^  TAG *freeTagList;$/;"	m	struct:__anon117	file:
freeTagList	libs/txml/xmlparse.c	301;"	d	file:
free_base	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  bool free_base;$/;"	m	class:Complex
free_func	windows/include/zconf.h	113;"	d
free_func	windows/include/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
free_node	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^BBoxInternal *free_node;$/;"	v
free_obj	libs/learning/List.h	/^	void (*free_obj) (void* obj); \/\/\/< free hook$/;"	m	struct:ListItem
freeobject	tools/accc/ac3dload.cpp	/^int freeobject(ob_t *o)$/;"	f
freez	libs/tgf/tgf.h	68;"	d
freez	tools/accc/accc.h	166;"	d
frequency	windows/include/png.h	/^   png_uint_16 frequency;$/;"	m	struct:png_sPLT_entry_struct
front	modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat front[6]; \/\/\/< direction of front $/;"	m	class:OpenalTorcsSound
frontlight1	modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*frontlight1 = NULL;$/;"	v
frontlight2	modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*frontlight2 = NULL;$/;"	v
frustum	topview/transform.hpp	/^        mat<4, 4, T> frustum(T left, T right, T bottom, T top, T nearVal, T farVal)$/;"	f	namespace:kmuvcl::math
frustum	windows/include/plib/ssg.h	/^  sgFrustum      *frustum      ;$/;"	m	class:ssgContext
fs	libs/raceengineclient/racemanmenu.cpp	/^static tRmFileSelect fs;$/;"	v	file:
fuel	interfaces/car.h	/^	tdble fuel; \/**< remaining fuel (liters) *\/$/;"	m	struct:__anon80
fuel	interfaces/car.h	/^	tdble fuel;$/;"	m	struct:__anon84
fuel	interfaces/raceman.h	/^    tdble	fuel;$/;"	m	struct:__anon72
fuel	modules/simu/simuv2/carstruct.h	/^    tdble	fuel;		\/* current fuel load *\/$/;"	m	struct:__anon23
fuel	modules/simu/simuv3/carstruct.h	/^    tdble	fuel;		\/* current fuel load *\/$/;"	m	struct:__anon42
fuelFactor	interfaces/raceman.h	/^	tdble fuelFactor;$/;"	m	struct:RmRaceRules
fuelId	libs/racescreens/pitmenu.cpp	/^static int fuelId;$/;"	v	file:
fuel_consumption	modules/simu/simuv3/carstruct.h	/^    tdble       fuel_consumption; \/* average fuel consumption *\/$/;"	m	struct:__anon42
fuel_prev	modules/simu/simuv3/carstruct.h	/^    tdble       fuel_prev; \/* average fuel consumption *\/$/;"	m	struct:__anon42
fuel_time	modules/simu/simuv3/carstruct.h	/^    tdble       fuel_time; \/* average fuel consumption *\/$/;"	m	struct:__anon42
fuelchecked	drivers/berniw/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	drivers/berniw2/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	drivers/berniw3/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	drivers/human/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	drivers/inferno/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	drivers/lliaw/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	drivers/olethros/strategy.h	/^	bool fuelchecked;				\/\/ Fuel statistics updated.$/;"	m	class:olethros::SimpleStrategy
fuelchecked	drivers/sparkle/pit.h	/^		bool fuelchecked;       \/* fuel statistics updated *\/$/;"	m	class:Pit
fuelchecked	drivers/tita/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelcons	modules/simu/simuv2/engine.h	/^    tdble		fuelcons;$/;"	m	struct:__anon19
fuelcons	modules/simu/simuv3/engine.h	/^    tdble		fuelcons;$/;"	m	struct:__anon38
fuelperlap	drivers/berniw/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	drivers/berniw2/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	drivers/berniw3/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	drivers/human/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	drivers/inferno/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	drivers/lliaw/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	drivers/olethros/strategy.h	/^	float fuelperlap;				\/\/ The maximum amount of fuel we needed for a lap.$/;"	m	class:olethros::SimpleStrategy
fuelperlap	drivers/sparkle/pit.h	/^		float fuelperlap;       \/* the maximum amount of fuel we needed for a lap *\/$/;"	m	class:Pit
fuelperlap	drivers/tita/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fullName	libs/tgf/params.cpp	/^	char *fullName; \/**< Name of the parameter including the full section name ('\/' separated) *\/$/;"	m	struct:param	file:
fullName	libs/tgf/params.cpp	/^	char *fullName; \/**< Name of the section including full path ('\/' separated) *\/$/;"	m	struct:section	file:
func	modules/graphic/ssggraph/grloadac.cpp	/^  int (*func) ( char *s ) ;$/;"	m	struct:Tag	file:
fx	modules/simu/simuv3/susp.h	/^    tdble fx; \/\/ pure elastic collision $/;"	m	struct:Suspension
fy	modules/simu/simuv3/susp.h	/^    tdble fy; \/\/ pure elastic collision$/;"	m	struct:Suspension
g	drivers/berniw/berniw.h	/^static const double g = 9.81;$/;"	v
g	drivers/berniw2/berniw.h	/^static const double g = 9.81;$/;"	v
g	drivers/berniw3/berniw.h	/^static const double g = 9.81;$/;"	v
g	drivers/human/human.cpp	/^static const double g = 9.81;$/;"	v	file:
g	drivers/human/pathfinder.cpp	/^static const double g = 9.81;$/;"	v	file:
g	drivers/inferno/berniw.h	/^static const double g = 9.81;$/;"	v
g	drivers/lliaw/berniw.h	/^static const double g = 9.81;$/;"	v
g	drivers/tita/berniw.h	/^static const double g = 9.81;$/;"	v
g	libs/tgfclient/gui.h	/^			struct { float r, g, b, a; };$/;"	m	struct:ForeGroundColor::__anon138::__anon139
g	tools/accc/accc.h	/^  double g;$/;"	m	struct:col
g	topview/topview.cpp	/^	float g;$/;"	m	struct:Color	file:
gain	modules/graphic/ssggraph/grcam.cpp	/^    float gain;$/;"	m	class:cGrCarCamRoadFly	file:
gameScreen	interfaces/raceman.h	/^    void		*gameScreen;$/;"	m	struct:__anon73
gamma	libs/learning/policy.h	/^	real gamma; \/\/\/< Future discount parameter$/;"	m	class:DiscretePolicy
gamma	misc/png2jpg/png2jpg.c	/^static float	gamma;$/;"	v	file:
gear	interfaces/car.h	/^	int gear; \/**< [-1,6] for gear selection *\/$/;"	m	struct:__anon81
gear	interfaces/car.h	/^	int gear; \/**< current gear *\/$/;"	m	struct:__anon80
gear	modules/simu/simuv2/transmission.h	/^    int		gear;$/;"	m	struct:__anon24
gear	modules/simu/simuv3/transmission.h	/^    int		gear;$/;"	m	struct:__anon43
gearEff	modules/simu/simuv2/transmission.h	/^    tdble	gearEff[MAX_GEARS];		\/* Gear Efficiency *\/$/;"	m	struct:__anon26
gearEff	modules/simu/simuv3/transmission.h	/^    tdble	gearEff[MAX_GEARS];		\/* Gear Efficiency *\/$/;"	m	struct:__anon45
gearMax	modules/simu/simuv2/transmission.h	/^    int		gearMax;$/;"	m	struct:__anon24
gearMax	modules/simu/simuv3/transmission.h	/^    int		gearMax;$/;"	m	struct:__anon43
gearMin	modules/simu/simuv2/transmission.h	/^    int		gearMin;$/;"	m	struct:__anon24
gearMin	modules/simu/simuv3/transmission.h	/^    int		gearMin;$/;"	m	struct:__anon43
gearNb	interfaces/car.h	/^	int gearNb; \/**< incl reverse and neutral *\/$/;"	m	struct:__anon80
gearOffset	interfaces/car.h	/^	int gearOffset; \/**< gearRatio[gear + gearOffset] is the ratio for gear *\/$/;"	m	struct:__anon80
gearRatio	interfaces/car.h	/^	tdble gearRatio[MAX_GEARS]; \/**< including final drive *\/$/;"	m	struct:__anon80
gearStr	modules/graphic/ssggraph/grboard.cpp	/^static const char *gearStr[MAX_GEARS] = {"R", "N", "1", "2", "3", "4", "5", "6", "7", "8"};$/;"	v	file:
gear_change_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* gear_change_sound; \/\/\/< sound when changing gears$/;"	m	class:SoundInterface
gear_changing	modules/graphic/ssggraph/CarSoundData.h	/^	bool gear_changing;$/;"	m	class:CarSoundData
gearbox	modules/simu/simuv2/transmission.h	/^    tGearbox	gearbox;$/;"	m	struct:__anon26
gearbox	modules/simu/simuv3/transmission.h	/^    tGearbox	gearbox;$/;"	m	struct:__anon45
gearname	modules/simu/simuv2/transmission.cpp	/^static const char *gearname[MAX_GEARS] = {"r", "n", "1", "2", "3", "4", "5", "6", "7", "8"};$/;"	v	file:
gearname	modules/simu/simuv3/transmission.cpp	/^static const char *gearname[MAX_GEARS] = {"r", "n", "1", "2", "3", "4", "5", "6", "7", "8"};$/;"	v	file:
gears	tools/nfsperf/mainnfsperf.cpp	/^const char	*gears[] = {"r", "n", "1", "2", "3", "4", "5", "6", "7", "8", "9"};$/;"	v
gearsratio	interfaces/car.h	/^	tCarPitSetupValue gearsratio[MAX_GEARS - 2];	\/\/ without reverse\/neutral$/;"	m	struct:__anon83
genRec	tools/trackgen/relief.cpp	/^genRec(ssgEntity *e)$/;"	f	file:
generalEntities	libs/txml/xmlparse.c	/^  HASH_TABLE generalEntities;$/;"	m	struct:__anon116	file:
generate	libs/learning/Distribution.cpp	/^real DiscreteDistribution::generate()$/;"	f	class:DiscreteDistribution
generate	libs/learning/Distribution.cpp	/^real ExponentialDistribution::generate()$/;"	f	class:ExponentialDistribution
generate	libs/learning/Distribution.cpp	/^real LaplacianDistribution::generate()$/;"	f	class:LaplacianDistribution
generate	libs/learning/Distribution.cpp	/^real NormalDistribution::generate()$/;"	f	class:NormalDistribution
generate	libs/learning/Distribution.cpp	/^real UniformDistribution::generate()$/;"	f	class:UniformDistribution
generateRaceLine	tools/trackgen/raceline.cpp	/^void generateRaceLine(tTrack *pTrack, const double lSideDistExt, const double lSideDistInt)$/;"	f
generate_mesh	tools/trackgen/easymesh.cpp	/^generate_mesh(void)$/;"	f	file:
get	windows/include/plib/ssg.h	/^  float *get ( unsigned int n ) { return (float *) raw_get ( n ) ; }$/;"	f	class:ssgColourArray
get	windows/include/plib/ssg.h	/^  float *get ( unsigned int n ) { return (float *) raw_get ( n ) ; }$/;"	f	class:ssgNormalArray
get	windows/include/plib/ssg.h	/^  float *get ( unsigned int n ) { return (float *) raw_get ( n ) ; }$/;"	f	class:ssgTexCoordArray
get	windows/include/plib/ssg.h	/^  float *get ( unsigned int n ) { return (float *) raw_get ( n ) ; }$/;"	f	class:ssgVertexArray
get	windows/include/plib/ssg.h	/^  sgMat4 *get ( unsigned int n ) { return (sgMat4 *) raw_get ( n ) ; }$/;"	f	class:ssgTransformArray
get	windows/include/plib/ssg.h	/^  short *get ( unsigned int n ) { return (short *) raw_get ( n ) ; }$/;"	f	class:ssgIndexArray
get	windows/include/plib/ssg.h	/^  ssgInterleavedArrayElement *get ( unsigned int n ) { return (ssgInterleavedArrayElement *) raw_get ( n ) ; }$/;"	f	class:ssgInterleavedArray
get	windows/include/plib/ssg.h	/^  ssgSimpleState* get ( unsigned int n )$/;"	f	class:ssgSimpleStateArray
get	windows/include/plib/ssg.h	/^  ssgTexture* get ( unsigned int n )$/;"	f	class:ssgTextureArray
getAbsTime	windows/include/plib/ul.h	/^  double getAbsTime   () const { return now   ; }$/;"	f	class:ulClock
getAccel	drivers/bt/driver.cpp	/^float Driver::getAccel()$/;"	f	class:Driver
getAccel	drivers/damned/driver.cpp	/^float Driver::getAccel()$/;"	f	class:Driver
getAccel	drivers/olethros/driver.cpp	/^    float Driver::getAccel()$/;"	f	class:olethros::Driver
getAccel	drivers/sparkle/driver.cpp	/^float Driver::getAccel()$/;"	f	class:Driver
getActionProbabilities	libs/learning/ann_policy.h	/^	virtual real* getActionProbabilities () {$/;"	f	class:ANN_Policy
getAllowedSpeed	drivers/bt/driver.cpp	/^float Driver::getAllowedSpeed(tTrackSeg *segment)$/;"	f	class:Driver
getAllowedSpeed	drivers/damned/driver.cpp	/^float Driver::getAllowedSpeed(tTrackSeg *segment)$/;"	f	class:Driver
getAllowedSpeed	drivers/olethros/driver.cpp	/^    float Driver::getAllowedSpeed(tTrackSeg *segment)$/;"	f	class:olethros::Driver
getAllowedSpeed	drivers/sparkle/driver.cpp	/^float Driver::getAllowedSpeed(tTrackSeg *segment)$/;"	f	class:Driver
getAttributeId	libs/txml/xmlparse.c	/^getAttributeId(XML_Parser parser, const ENCODING *enc, const char *start, const char *end)$/;"	f	file:
getAtts	libs/txml/xmltok.h	/^  int (*getAtts)(const ENCODING *enc, const char *ptr,$/;"	m	struct:encoding
getAtts	libs/txml/xmltok_impl.c	/^int PREFIX(getAtts)(const ENCODING *enc, const char *ptr,$/;"	f	file:
getAutoClutch	drivers/human/human.cpp	/^static tdble getAutoClutch(int idx, int gear, int newgear, tCarElt *car) {$/;"	f	file:
getBBox	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  const BBox& getBBox() const { return bbox; }$/;"	f	class:Object
getBSphere	windows/include/plib/ssg.h	/^  sgSphere *getBSphere ()$/;"	f	class:ssgEntity
getBase	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  const VertexBase& getBase() const { return base; } $/;"	f	class:Complex
getBasis	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  const Matrix& getBasis() const { return basis; }$/;"	f	class:Transform
getBot	windows/include/plib/sg.h	/^  SGDfloat  getBot  (void) const { return bot   ; }$/;"	f	class:sgdFrustum
getBot	windows/include/plib/sg.h	/^  SGfloat  getBot  (void) const { return bot   ; }$/;"	f	class:sgFrustum
getBps	windows/include/plib/sl.h	/^  int  getBps    () const  { return bps    ; }$/;"	f	class:slSample
getBps	windows/include/plib/sl.h	/^  int getBps   () const { return bps    ; }$/;"	f	class:slDSP
getBrake	drivers/bt/driver.cpp	/^float Driver::getBrake()$/;"	f	class:Driver
getBrake	drivers/damned/driver.cpp	/^float Driver::getBrake()$/;"	f	class:Driver
getBrake	drivers/olethros/driver.cpp	/^    float Driver::getBrake()$/;"	f	class:olethros::Driver
getBrake	drivers/sparkle/driver.cpp	/^float Driver::getBrake()$/;"	f	class:Driver
getBrakeOvertake	drivers/olethros/opponent.h	/^		float getBrakeOvertake () { return brake_overtake_filter; }$/;"	f	class:olethros::Opponent
getBuffer	windows/include/plib/sl.h	/^  Uchar *getBuffer () const { return buffer ; }$/;"	f	class:slSample
getCallback	windows/include/plib/ssg.h	/^  virtual ssgCallback getCallback ( int cb_type )$/;"	f	class:ssgLeaf
getCarAngle	drivers/bt/cardata.h	/^		inline float getCarAngle() { return angle; }$/;"	f	class:SingleCardata
getCarAngle	drivers/damned/cardata.h	/^		inline float getCarAngle() { return angle; }$/;"	f	class:SingleCardata
getCarAngle	drivers/olethros/cardata.h	/^	inline float getCarAngle() { return angle; }$/;"	f	class:olethros::SingleCardata
getCarPosition	modules/graphic/ssggraph/CarSoundData.h	/^	void getCarPosition (sgVec3 p)$/;"	f	class:CarSoundData
getCarPtr	drivers/berniw/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	drivers/berniw2/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	drivers/berniw3/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	drivers/bt/driver.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Driver
getCarPtr	drivers/bt/opponent.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Opponent
getCarPtr	drivers/damned/driver.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Driver
getCarPtr	drivers/damned/opponent.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Opponent
getCarPtr	drivers/human/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	drivers/inferno/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	drivers/lliaw/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	drivers/olethros/driver.h	/^	tCarElt *getCarPtr() { return car; }$/;"	f	class:olethros::Driver
getCarPtr	drivers/olethros/opponent.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:olethros::Opponent
getCarPtr	drivers/sparkle/driver.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Driver
getCarPtr	drivers/sparkle/opponent.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Opponent
getCarPtr	drivers/tita/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarSpeed	modules/graphic/ssggraph/CarSoundData.h	/^	void getCarSpeed (sgVec3 u)$/;"	f	class:CarSoundData
getCareAbout	windows/include/plib/ssg.h	/^  virtual int     getCareAbout ( int mode ) { return dont_care & (1<<mode) ; }$/;"	f	class:ssgSimpleState
getCatchDist	drivers/bt/opponent.h	/^		float getCatchDist() { return catchdist; }$/;"	f	class:Opponent
getCatchDist	drivers/damned/opponent.h	/^		float getCatchDist() { return catchdist; }$/;"	f	class:Opponent
getCatchDist	drivers/olethros/opponent.h	/^		float getCatchDist() { return catchdist; }$/;"	f	class:olethros::Opponent
getCatchDist	drivers/sparkle/opponent.h	/^		float getCatchDist() { return catchdist; }$/;"	f	class:Opponent
getCenter	modules/graphic/ssggraph/grcam.h	/^    t3Dd *getCenter(void) {$/;"	f	class:cGrCamera
getCenter	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  const Point& getCenter() const { return center; }$/;"	f	class:BBox
getCenter	windows/include/plib/js.h	/^  void getCenter   ( float *axes ) const { memcpy ( axes, center, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getCenter	windows/include/plib/sg.h	/^  const SGDfloat *getCenter (void) const { return center ; }$/;"	f	class:sgdSphere
getCenter	windows/include/plib/sg.h	/^  const SGfloat *getCenter (void) const { return center ; }$/;"	f	class:sgSphere
getCenter	windows/include/plib/ssgaShapes.h	/^  float *getCenter  () { return center     ; }$/;"	f	class:ssgaShape
getCenterv	modules/graphic/ssggraph/grcam.h	/^    sgVec3 *getCenterv(void) {$/;"	f	class:cGrCamera
getClipPlane	windows/include/plib/ssg.h	/^  float *getClipPlane ( int i )$/;"	f	class:ssgContext
getClutch	drivers/bt/driver.cpp	/^float Driver::getClutch()$/;"	f	class:Driver
getClutch	drivers/damned/driver.cpp	/^float Driver::getClutch()$/;"	f	class:Driver
getClutch	drivers/inferno/inferno.cpp	/^float getClutch(MyCar* myc, tCarElt* car)$/;"	f
getClutch	drivers/lliaw/lliaw.cpp	/^float getClutch(MyCar* myc, tCarElt* car)$/;"	f
getClutch	drivers/olethros/driver.cpp	/^    float Driver::getClutch()$/;"	f	class:olethros::Driver
getClutch	drivers/tita/tita.cpp	/^float getClutch(MyCar* myc, tCarElt* car)$/;"	f
getColour	windows/include/plib/ssg.h	/^  float *getColour  (int i){ if(i>=num_colours)i=num_colours-1;$/;"	f	class:ssgVTable
getColour	windows/include/plib/ssg.h	/^  float *getColour  (int i){ int nc=getNumColours(); if(i>=nc)i=nc-1;$/;"	f	class:ssgVtxTable
getColour	windows/include/plib/ssg.h	/^  void getColour   ( GLenum which, sgVec4 col )$/;"	f	class:ssgLight
getColourList	windows/include/plib/ssg.h	/^  void getColourList   ( void **list ) { *list = colours   -> get ( 0 ) ; } $/;"	f	class:ssgVtxTable
getColourList	windows/include/plib/ssg.h	/^  void getColourList ( void **list, unsigned short **idx )$/;"	f	class:ssgVTable
getColourMaterial	windows/include/plib/ssg.h	/^  virtual GLenum getColourMaterial ()$/;"	f	class:ssgSimpleState
getColours	windows/include/plib/ssg.h	/^  ssgColourArray   *getColours   () { return colours   ; }$/;"	f	class:ssgVtxTable
getComment	windows/include/plib/sl.h	/^  char  *getComment () const { return comment ; }$/;"	f	class:slSample
getControl	windows/include/plib/ssg.h	/^  ssgAnimEnum getControl () { return running ; }$/;"	f	class:ssgTimedSelector
getCreationRate	windows/include/plib/ssgaParticleSystem.h	/^  float getCreationRate () { return create_rate ; }$/;"	f	class:ssgaParticleSystem
getCullFace	windows/include/plib/ssg.h	/^  int  getCullFace () { return cull_face ; }$/;"	f	class:ssgLeaf
getCurCamHead	modules/graphic/ssggraph/grscreen.h	/^		int getCurCamHead(void) { return curCamHead; }$/;"	f	class:cGrScreen
getCurCamera	modules/graphic/ssggraph/grscreen.h	/^		cGrCamera* getCurCamera(void) { return curCam; }$/;"	f	class:cGrScreen
getCurrBank	windows/include/plib/ssg.h	/^  float getCurrBank () { return curr_bank ; }$/;"	f	class:ssgAnimTransform
getCurrBank	windows/include/plib/ssg.h	/^  float getCurrBank () { return curr_bank ; }$/;"	f	class:ssgTweenController
getCurrent	windows/include/plib/sl.h	/^  static slScheduler *getCurrent () { return current ; }$/;"	f	class:slScheduler
getCurrentCar	modules/graphic/ssggraph/grscreen.h	/^		tCarElt *getCurrentCar(void) { return curCar; }$/;"	f	class:cGrScreen
getCurrentPos	drivers/berniw/mycar.h	/^		inline v3d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	drivers/berniw2/mycar.h	/^		inline v3d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	drivers/berniw3/mycar.h	/^		inline v3d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	drivers/human/mycar.h	/^		inline v3d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	drivers/inferno/mycar.h	/^		inline vec2d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	drivers/lliaw/mycar.h	/^		inline vec2d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	drivers/tita/mycar.h	/^		inline vec2d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentSegId	drivers/berniw/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	drivers/berniw2/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	drivers/berniw3/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	drivers/human/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	drivers/inferno/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	drivers/lliaw/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	drivers/tita/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegment	drivers/berniw/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/berniw/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/berniw/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/berniw/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/berniw2/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/berniw2/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/berniw2/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/berniw2/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/berniw3/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/berniw3/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/berniw3/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/berniw3/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/human/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/human/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/human/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/human/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/inferno/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/inferno/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/inferno/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/inferno/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/lliaw/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/lliaw/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/lliaw/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/lliaw/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/tita/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/tita/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	drivers/tita/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	drivers/tita/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getDListIndex	windows/include/plib/ssg.h	/^  GLuint getDListIndex () { return dlist ; }$/;"	f	class:ssgLeaf
getDamage	drivers/bt/opponent.h	/^		int getDamage() { return car->_dammage; }$/;"	f	class:Opponent
getDamage	drivers/damned/opponent.h	/^		int getDamage() { return car->_dammage; }$/;"	f	class:Opponent
getDamping	windows/include/plib/sg.h	/^  float       getDamping    () { return damping    ; }$/;"	f	class:sgSpringDamper
getDeadBand	windows/include/plib/js.h	/^  float getDeadBand ( int axis ) const       { return dead_band [ axis ] ; }$/;"	f	class:jsJoystick
getDefaultViewMode	modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::getDefaultViewMode() {$/;"	f	class:cGrTrackMap
getDeltaPitch	drivers/berniw/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	drivers/berniw2/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	drivers/berniw3/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	drivers/human/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	drivers/inferno/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	drivers/lliaw/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	drivers/tita/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaTime	windows/include/plib/ul.h	/^  double getDeltaTime () const { return delta ; }$/;"	f	class:ulClock
getDepthCallback	windows/include/plib/ssgaWaveSystem.h	/^  ssgaWSDepthCallback getDepthCallback () { return gridGetter ; } $/;"	f	class:ssgaWaveSystem
getDescender	libs/tgfclient/guifont.cpp	/^int GfuiFontClass::getDescender() const$/;"	f	class:GfuiFontClass
getDir	drivers/berniw/mycar.h	/^		inline v3d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	drivers/berniw/pathfinder.h	/^		inline v3d* getDir() { return &d; }$/;"	f	class:PathSeg
getDir	drivers/berniw2/mycar.h	/^		inline v3d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	drivers/berniw2/pathfinder.h	/^		inline v3d* getDir() { return &d; }$/;"	f	class:PathSeg
getDir	drivers/berniw3/mycar.h	/^		inline v3d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	drivers/berniw3/pathfinder.h	/^		inline v3d* getDir() { return &d; }$/;"	f	class:PathSeg
getDir	drivers/human/mycar.h	/^		inline v3d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	drivers/human/pathfinder.h	/^		inline v3d* getDir() { return &d; }$/;"	f	class:PathSeg
getDir	drivers/inferno/mycar.h	/^		inline vec2d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	drivers/inferno/pathfinder.h	/^		inline vec2d* getDir(int segid) { return &ps[getid(segid)].d; }$/;"	f	class:PathSeg
getDir	drivers/lliaw/mycar.h	/^		inline vec2d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	drivers/lliaw/pathfinder.h	/^		inline vec2d* getDir(int segid) { return &ps[getid(segid)].d; }$/;"	f	class:PathSeg
getDir	drivers/tita/mycar.h	/^		inline vec2d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	drivers/tita/pathfinder.h	/^		inline vec2d* getDir(int segid) { return &ps[getid(segid)].d; }$/;"	f	class:PathSeg
getDist2	modules/graphic/ssggraph/grcam.cpp	/^cGrCamera::getDist2 (tCarElt *car)$/;"	f	class:cGrCamera
getDistToSegEnd	drivers/bt/driver.cpp	/^float Driver::getDistToSegEnd()$/;"	f	class:Driver
getDistToSegEnd	drivers/damned/driver.cpp	/^float Driver::getDistToSegEnd()$/;"	f	class:Driver
getDistToSegEnd	drivers/olethros/driver.cpp	/^    float Driver::getDistToSegEnd()$/;"	f	class:olethros::Driver
getDistToSegEnd	drivers/sparkle/driver.cpp	/^float Driver::getDistToSegEnd()$/;"	f	class:Driver
getDistToSegStart	drivers/bt/opponent.cpp	/^float Opponent::getDistToSegStart()$/;"	f	class:Opponent
getDistToSegStart	drivers/damned/opponent.cpp	/^float Opponent::getDistToSegStart()$/;"	f	class:Opponent
getDistToSegStart	drivers/olethros/opponent.cpp	/^float Opponent::getDistToSegStart()$/;"	f	class:olethros::Opponent
getDistToSegStart	drivers/sparkle/opponent.cpp	/^float Opponent::getDistToSegStart()$/;"	f	class:Opponent
getDistance	drivers/bt/opponent.h	/^		float getDistance() { return distance; }$/;"	f	class:Opponent
getDistance	drivers/damned/opponent.h	/^		float getDistance() { return distance; }$/;"	f	class:Opponent
getDistance	drivers/olethros/opponent.h	/^		float getDistance() { return distance; }$/;"	f	class:olethros::Opponent
getDistance	drivers/sparkle/opponent.h	/^		float getDistance() { return distance; }$/;"	f	class:Opponent
getDrawBackground	modules/graphic/ssggraph/grcam.h	/^    int getDrawBackground(void)	{ return drawBackground; }$/;"	f	class:cGrCamera
getDrawCurrent	modules/graphic/ssggraph/grcam.h	/^    int getDrawCurrent(void)	{ return drawCurrent; }$/;"	f	class:cGrCamera
getDrawDriver	modules/graphic/ssggraph/grcam.h	/^    int getDrawDriver(void)	{ return drawDriver; }$/;"	f	class:cGrCamera
getDuration	windows/include/plib/sl.h	/^  float getDuration () const { return (float) getLength() \/$/;"	f	class:slSample
getDuration	windows/include/plib/ssg.h	/^  float getDuration ( int i = 0 ) { return times [ i ] ; }$/;"	f	class:ssgTimedSelector
getEdgeFlatten	windows/include/plib/ssgaWaveSystem.h	/^  float getEdgeFlatten   () { return edgeFlatten ; }$/;"	f	class:ssgaWaveSystem
getElapsedTime	windows/include/plib/sl.h	/^  float getElapsedTime ( int then ) const { return (float)(now-then)\/(float)getRate() ; }$/;"	f	class:slScheduler
getEngineSound	modules/graphic/ssggraph/CarSoundData.h	/^	TorcsSound* getEngineSound () {return engine_sound;}$/;"	f	class:CarSoundData
getEntity	windows/include/plib/ssg.h	/^  ssgEntity *getEntity ( unsigned int n )$/;"	f	class:ssgList
getEntity	windows/include/plib/ul.h	/^  void *getEntity ( unsigned int n )$/;"	f	class:ulList
getErrorSgn	drivers/berniw/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	drivers/berniw2/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	drivers/berniw3/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	drivers/human/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	drivers/inferno/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	drivers/lliaw/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	drivers/tita/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getExtent	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  const Vector& getExtent() const { return extent; }$/;"	f	class:BBox
getExtent	modules/simu/simuv2/SOLID-2.0/src/Box.h	/^  const Vector& getExtent() const { return extent; }$/;"	f	class:Box
getExternalPropertyIndex	windows/include/plib/ssg.h	/^  int  getExternalPropertyIndex ()$/;"	f	class:ssgLeaf
getExternalPropertyIndex	windows/include/plib/ssg.h	/^  int  getExternalPropertyIndex (void) { return external_property_index ; }$/;"	f	class:ssgState
getFOV	windows/include/plib/sg.h	/^  void getFOV ( SGDfloat *h, SGDfloat *v ) const $/;"	f	class:sgdFrustum
getFOV	windows/include/plib/sg.h	/^  void getFOV ( SGfloat *h, SGfloat *v ) const $/;"	f	class:sgFrustum
getFar	windows/include/plib/sg.h	/^  SGDfloat  getFar  (void) const { return ffar  ; }$/;"	f	class:sgdFrustum
getFar	windows/include/plib/sg.h	/^  SGfloat  getFar  (void) const { return ffar  ; }$/;"	f	class:sgFrustum
getFilename	windows/include/plib/ssg.h	/^  char *getFilename(void) { return filename ; }$/;"	f	class:ssgTexture
getFirstSelectedKid	windows/include/plib/ssg.h	/^  ssgEntity *getFirstSelectedKid ()$/;"	f	class:ssgSelector
getFirstSelection	windows/include/plib/ssg.h	/^  int getFirstSelection ()$/;"	f	class:ssgSelector
getFirstWallStart	modules/simu/simuv2/collide.cpp	/^static tTrackSeg *getFirstWallStart(tTrackSeg *start, int side)$/;"	f	file:
getFogEnd	modules/graphic/ssggraph/grcam.h	/^    float getFogEnd(void) { return fogend; }$/;"	f	class:cGrPerspCamera
getFogStart	modules/graphic/ssggraph/grcam.h	/^    float getFogStart(void) { return fogstart; }$/;"	f	class:cGrPerspCamera
getForce	windows/include/plib/sg.h	/^  SGfloat *getForce () { return force    ; }$/;"	f	class:sgParticle
getForce	windows/include/plib/sg.h	/^  const SGfloat *getForce () const { return force    ; }$/;"	f	class:sgParticle
getFovY	modules/graphic/ssggraph/grcam.h	/^    virtual float getFovY(void) {$/;"	f	class:cGrCamera
getFovY	modules/graphic/ssggraph/grcam.h	/^   virtual float getFovY(void) {$/;"	f	class:cGrPerspCamera
getFrameRate	windows/include/plib/ul.h	/^  double getFrameRate () const { return 1.0 \/ delta ; }$/;"	f	class:ulClock
getFrustum	windows/include/plib/ssg.h	/^  sgFrustum *getFrustum () { return frustum ; }$/;"	f	class:ssgContext
getFuel	drivers/sparkle/pit.cpp	/^float Pit::getFuel()$/;"	f	class:Pit
getFullName	libs/tgf/params.cpp	/^static char *getFullName(const char *sectionName, const char *paramName) {$/;"	f	file:
getFuncAddress	windows/include/plib/ul.h	/^    void* getFuncAddress ( const char *funcname )$/;"	f	class:ulDynamicLibrary
getFuncAddress	windows/include/plib/ul.h	/^  void *getFuncAddress ( const char *funcname )$/;"	f	class:ulDynamicLibrary
getGLTextureMaxSize	libs/tgfclient/glfeatures.cpp	/^int getGLTextureMaxSize(void)$/;"	f
getGLTextureMaxSize	libs/tgfclient/glfeatures.cpp	/^void getGLTextureMaxSize(int &result)$/;"	f
getGLtype	windows/include/plib/ssg.h	/^  GLenum getGLtype () { return getPrimitiveType() ; }$/;"	f	class:ssgLeaf
getGear	drivers/bt/driver.cpp	/^int Driver::getGear()$/;"	f	class:Driver
getGear	drivers/damned/driver.cpp	/^int Driver::getGear()$/;"	f	class:Driver
getGear	drivers/olethros/driver.cpp	/^    int Driver::getGear()$/;"	f	class:olethros::Driver
getGear	drivers/sparkle/driver.cpp	/^int Driver::getGear()$/;"	f	class:Driver
getGlobalGain	modules/graphic/ssggraph/SoundInterface.h	/^	virtual float getGlobalGain() { return global_gain; }$/;"	f	class:OpenalSoundInterface
getGlobalGain	modules/graphic/ssggraph/SoundInterface.h	/^	virtual float getGlobalGain() {return 1.0f;}$/;"	f	class:SoundInterface
getGlobalGain	modules/graphic/ssggraph/SoundInterface.h	/^	virtual float getGlobalGain() {return global_gain;}$/;"	f	class:PlibSoundInterface
getHFOV	windows/include/plib/sg.h	/^  SGDfloat  getHFOV (void) const { return hfov  ; }$/;"	f	class:sgdFrustum
getHFOV	windows/include/plib/sg.h	/^  SGfloat  getHFOV (void) const { return hfov  ; }$/;"	f	class:sgFrustum
getHOT	tools/trackgen/util.cpp	/^getHOT(ssgRoot *root, float x, float y)$/;"	f
getHandle	windows/include/plib/ssg.h	/^  GLuint getHandle () { return handle ; }$/;"	f	class:ssgTexture
getHeading	windows/include/plib/ssgaWaveSystem.h	/^  float getHeading () { return heading  ; }$/;"	f	class:ssgaWaveTrain
getHeight	libs/tgfclient/guifont.cpp	/^int GfuiFontClass::getHeight() const$/;"	f	class:GfuiFontClass
getHotColour	windows/include/plib/ssgaFire.h	/^  void getHotColour ( sgVec4 col ) { sgCopyVec4 ( col, hot_colour ) ; }$/;"	f	class:ssgaFire
getId	modules/graphic/ssggraph/grcam.h	/^    int getId(void)		{ return id; }$/;"	f	class:cGrCamera
getId	modules/graphic/ssggraph/grscreen.h	/^		int getId(void) { return id; }$/;"	f	class:cGrScreen
getInPit	drivers/bt/pit.h	/^		bool getInPit() { return inpitlane; }$/;"	f	class:Pit
getInPit	drivers/damned/pit.h	/^		bool getInPit() { return inpitlane; }$/;"	f	class:Pit
getInPit	drivers/olethros/pit.h	/^		bool getInPit() { return inpitlane; }$/;"	f	class:olethros::Pit
getInPit	drivers/sparkle/pit.h	/^		bool getInPit() { return inpitlane; }$/;"	f	class:Pit
getIndex	modules/graphic/ssggraph/grvertexarray.h	/^  short *getIndex  (int i){ if(i>=getNumIndices())i=getNumIndices()-1;$/;"	f	class:ssgGrVtxArray
getIndex	windows/include/plib/ssg.h	/^  short *getIndex  (int i){ int ni=getNumIndices();if(i>=ni)i=ni-1;$/;"	f	class:ssgVtxArray
getIndexList	modules/graphic/ssggraph/grvertexarray.h	/^  void getIndexList ( void **list ) { *list = indices  -> get ( 0 ) ; }$/;"	f	class:ssgGrVtxArray
getIndexList	windows/include/plib/ssg.h	/^  void getIndexList ( void **list ) { *list = indices  -> get ( 0 ) ; }$/;"	f	class:ssgVtxArray
getInstance	libs/tgf/profiler.cpp	/^Profiler * Profiler::getInstance() {$/;"	f	class:Profiler
getKalpha	drivers/berniw/trackdesc.h	/^		inline tdble getKalpha() { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	drivers/berniw2/trackdesc.h	/^		inline tdble getKalpha() { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	drivers/berniw3/trackdesc.h	/^		inline tdble getKalpha() { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	drivers/human/trackdesc.h	/^		inline tdble getKalpha() { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	drivers/inferno/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	drivers/inferno/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment2D
getKalpha	drivers/lliaw/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	drivers/lliaw/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment2D
getKalpha	drivers/tita/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	drivers/tita/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment2D
getKarmaFilename	drivers/bt/learn.cpp	/^FILE* SegLearn::getKarmaFilename(tTrack* track, tSituation *s, int driverindex)$/;"	f	class:SegLearn
getKarmaFilename	drivers/damned/learn.cpp	/^FILE* SegLearn::getKarmaFilename(tTrack* track, tSituation *s, int driverindex)$/;"	f	class:SegLearn
getKbeta	drivers/berniw/trackdesc.h	/^		inline tdble getKbeta() { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	drivers/berniw2/trackdesc.h	/^		inline tdble getKbeta() { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	drivers/berniw3/trackdesc.h	/^		inline tdble getKbeta() { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	drivers/human/trackdesc.h	/^		inline tdble getKbeta() { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	drivers/inferno/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	drivers/inferno/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment2D
getKbeta	drivers/lliaw/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	drivers/lliaw/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment2D
getKbeta	drivers/tita/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	drivers/tita/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment2D
getKfriction	drivers/berniw/trackdesc.h	/^		inline tdble getKfriction() { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	drivers/berniw2/trackdesc.h	/^		inline tdble getKfriction() { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	drivers/berniw3/trackdesc.h	/^		inline tdble getKfriction() { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	drivers/human/trackdesc.h	/^		inline tdble getKfriction() { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	drivers/inferno/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	drivers/inferno/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment2D
getKfriction	drivers/lliaw/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	drivers/lliaw/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment2D
getKfriction	drivers/tita/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	drivers/tita/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment2D
getKgamma	drivers/berniw/trackdesc.h	/^		inline tdble getKgamma() { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	drivers/berniw2/trackdesc.h	/^		inline tdble getKgamma() { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	drivers/berniw3/trackdesc.h	/^		inline tdble getKgamma() { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	drivers/human/trackdesc.h	/^		inline tdble getKgamma() { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	drivers/inferno/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	drivers/inferno/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment2D
getKgamma	drivers/lliaw/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	drivers/lliaw/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment2D
getKgamma	drivers/tita/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	drivers/tita/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment2D
getKid	windows/include/plib/ssg.h	/^  ssgEntity *getKid     ( int n ) { return kids.getEntity  ( n ) ; }$/;"	f	class:ssgBranch
getKidPostDrawCB	windows/include/plib/ssgaShapes.h	/^  ssgCallback  getKidPostDrawCB () { return kidPostDrawCB ; }$/;"	f	class:ssgaShape
getKidPreDrawCB	windows/include/plib/ssgaShapes.h	/^  ssgCallback  getKidPreDrawCB  () { return kidPreDrawCB  ; }$/;"	f	class:ssgaShape
getKidState	windows/include/plib/ssgaShapes.h	/^  ssgState    *getKidState      () { return kidState      ; }$/;"	f	class:ssgaShape
getKrollres	drivers/berniw/trackdesc.h	/^		inline tdble getKrollres() { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	drivers/berniw2/trackdesc.h	/^		inline tdble getKrollres() { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	drivers/berniw3/trackdesc.h	/^		inline tdble getKrollres() { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	drivers/human/trackdesc.h	/^		inline tdble getKrollres() { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	drivers/inferno/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	drivers/inferno/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment2D
getKrollres	drivers/lliaw/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	drivers/lliaw/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment2D
getKrollres	drivers/tita/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	drivers/tita/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment2D
getKroughness	drivers/berniw/trackdesc.h	/^		inline tdble getKroughness() { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	drivers/berniw2/trackdesc.h	/^		inline tdble getKroughness() { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	drivers/berniw3/trackdesc.h	/^		inline tdble getKroughness() { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	drivers/human/trackdesc.h	/^		inline tdble getKroughness() { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	drivers/inferno/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	drivers/inferno/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment2D
getKroughness	drivers/lliaw/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	drivers/lliaw/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment2D
getKroughness	drivers/tita/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	drivers/tita/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment2D
getKroughwavelen	drivers/berniw/trackdesc.h	/^		inline tdble getKroughwavelen() { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	drivers/berniw2/trackdesc.h	/^		inline tdble getKroughwavelen() { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	drivers/berniw3/trackdesc.h	/^		inline tdble getKroughwavelen() { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	drivers/human/trackdesc.h	/^		inline tdble getKroughwavelen() { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	drivers/inferno/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	drivers/inferno/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment2D
getKroughwavelen	drivers/lliaw/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	drivers/lliaw/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment2D
getKroughwavelen	drivers/tita/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	drivers/tita/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment2D
getLODFactor	modules/graphic/ssggraph/grcam.cpp	/^float cGrPerspCamera::getLODFactor(float x, float y, float z) {$/;"	f	class:cGrPerspCamera
getLODFactor	modules/graphic/ssggraph/grcam.h	/^    float getLODFactor(float x, float y, float z) { return 1; }$/;"	f	class:cGrOrthoCamera
getLPfilter	modules/graphic/ssggraph/TorcsSound.h	/^	virtual float getLPfilter() {return lowpass;}$/;"	f	class:TorcsSound
getLambda	windows/include/plib/ssgaWaveSystem.h	/^  float getLambda () { return lambda  ; }$/;"	f	class:ssgaWaveTrain
getLastActionValue	libs/learning/ann_policy.h	/^	virtual real getLastActionValue () {return J_ps_pa;} $/;"	f	class:ANN_Policy
getLastActionValue	libs/learning/policy.h	/^	virtual real getLastActionValue () {return Q[ps][pa];}$/;"	f	class:DiscretePolicy
getLastTransform	windows/include/plib/ssg.h	/^  void getLastTransform ( sgMat4 xform )$/;"	f	class:ssgBaseTransform
getLeafCount	windows/include/plib/ssg.h	/^  int getLeafCount   () { return leaf_count ; }$/;"	f	class:ssgStatistics
getLeft	windows/include/plib/sg.h	/^  SGDfloat  getLeft (void) const { return left  ; }$/;"	f	class:sgdFrustum
getLeft	windows/include/plib/sg.h	/^  SGfloat  getLeft (void) const { return left  ; }$/;"	f	class:sgFrustum
getLeftBorder	drivers/berniw/trackdesc.h	/^		inline v3d* getLeftBorder() { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	drivers/berniw2/trackdesc.h	/^		inline v3d* getLeftBorder() { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	drivers/berniw3/trackdesc.h	/^		inline v3d* getLeftBorder() { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	drivers/human/trackdesc.h	/^		inline v3d* getLeftBorder() { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	drivers/inferno/trackdesc.h	/^		inline const vec2d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment2D
getLeftBorder	drivers/inferno/trackdesc.h	/^		inline const vec3d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	drivers/lliaw/trackdesc.h	/^		inline const vec2d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment2D
getLeftBorder	drivers/lliaw/trackdesc.h	/^		inline const vec3d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	drivers/tita/trackdesc.h	/^		inline const vec2d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment2D
getLeftBorder	drivers/tita/trackdesc.h	/^		inline const vec3d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment
getLength	drivers/berniw/pathfinder.h	/^		inline tdble getLength() { return length; }$/;"	f	class:PathSeg
getLength	drivers/berniw/trackdesc.h	/^		inline tdble getLength() { return length; }$/;"	f	class:TrackSegment
getLength	drivers/berniw2/pathfinder.h	/^		inline tdble getLength() { return length; }$/;"	f	class:PathSeg
getLength	drivers/berniw2/trackdesc.h	/^		inline tdble getLength() { return length; }$/;"	f	class:TrackSegment
getLength	drivers/berniw3/pathfinder.h	/^		inline tdble getLength() { return length; }$/;"	f	class:PathSeg
getLength	drivers/berniw3/trackdesc.h	/^		inline tdble getLength() { return length; }$/;"	f	class:TrackSegment
getLength	drivers/human/pathfinder.h	/^		inline tdble getLength() { return length; }$/;"	f	class:PathSeg
getLength	drivers/human/trackdesc.h	/^		inline tdble getLength() { return length; }$/;"	f	class:TrackSegment
getLength	drivers/inferno/pathfinder.h	/^		inline tdble getLength(int segid) { return ps[getid(segid)].length; }$/;"	f	class:PathSeg
getLength	drivers/inferno/trackdesc.h	/^		inline tdble getLength() const { return length; }$/;"	f	class:TrackSegment
getLength	drivers/lliaw/pathfinder.h	/^		inline tdble getLength(int segid) { return ps[getid(segid)].length; }$/;"	f	class:PathSeg
getLength	drivers/lliaw/trackdesc.h	/^		inline tdble getLength() const { return length; }$/;"	f	class:TrackSegment
getLength	drivers/tita/pathfinder.h	/^		inline tdble getLength(int segid) { return ps[getid(segid)].length; }$/;"	f	class:PathSeg
getLength	drivers/tita/trackdesc.h	/^		inline tdble getLength() const { return length; }$/;"	f	class:TrackSegment
getLength	windows/include/plib/sl.h	/^  int    getLength () const { return length ; }$/;"	f	class:slSample
getLength	windows/include/plib/ssgaWaveSystem.h	/^  float getLength () { return length  ; }$/;"	f	class:ssgaWaveTrain
getLimits	windows/include/plib/ssg.h	/^  void getLimits ( int *st, int *en )$/;"	f	class:ssgTimedSelector
getLine	modules/graphic/ssggraph/grcarlight.h	/^  void getLine ( int n, short *v1, short *v2 )  { ssgVtxTable::getLine(n,v1,v2);}$/;"	f	class:ssgVtxTableCarlight
getLine	modules/graphic/ssggraph/grshadow.h	/^  void getLine ( int n, short *v1, short *v2 )  { ssgVtxTable::getLine(n,v1,v2);}$/;"	f	class:ssgVtxTableShadow
getLine	modules/graphic/ssggraph/grsmoke.h	/^  void getLine ( int n, short *v1, short *v2 )  { ssgVtxTable::getLine(n,v1,v2);}$/;"	f	class:ssgVtxTableSmoke
getLine	modules/graphic/ssggraph/grvertexarray.h	/^  void getLine ( int n, short *v1, short *v2 ) { ssgVtxArray::getLine(n,v1,v2);}$/;"	f	class:ssgGrVtxArray
getLine	modules/graphic/ssggraph/grvtxtable.h	/^  void getLine ( int n, short *v1, short *v2 )  { ssgVtxTable::getLine(n,v1,v2);}$/;"	f	class:grVtxTable
getLoc	drivers/berniw/pathfinder.h	/^		inline v3d* getLoc() { return &p; }$/;"	f	class:PathSeg
getLoc	drivers/berniw2/pathfinder.h	/^		inline v3d* getLoc() { return &p; }$/;"	f	class:PathSeg
getLoc	drivers/berniw3/pathfinder.h	/^		inline v3d* getLoc() { return &p; }$/;"	f	class:PathSeg
getLoc	drivers/human/pathfinder.h	/^		inline v3d* getLoc() { return &p; }$/;"	f	class:PathSeg
getLoc	drivers/inferno/pathfinder.h	/^		inline vec2d* getLoc(int segid) { return &ps[getid(segid)].p; }$/;"	f	class:PathSeg
getLoc	drivers/lliaw/pathfinder.h	/^		inline vec2d* getLoc(int segid) { return &ps[getid(segid)].p; }$/;"	f	class:PathSeg
getLoc	drivers/tita/pathfinder.h	/^		inline vec2d* getLoc(int segid) { return &ps[getid(segid)].p; }$/;"	f	class:PathSeg
getLower	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Scalar getLower(int i) const { return center[i] - extent[i]; }$/;"	f	class:BBox
getMagic	windows/include/plib/sl.h	/^  int getMagic  () const { return magic  ; }$/;"	f	class:slPlayer
getMass	windows/include/plib/sg.h	/^  float  getMass        () { return 1.0f \/ ooMass ; }$/;"	f	class:sgParticle
getMat4	windows/include/plib/sg.h	/^  void     getMat4 ( sgMat4 dst ) { sgCopyMat4 ( dst, mat ) ; }$/;"	f	class:sgFrustum
getMat4	windows/include/plib/sg.h	/^  void     getMat4 ( sgdMat4 dst ) { sgdCopyMat4 ( dst, mat ) ; }$/;"	f	class:sgdFrustum
getMaterial	windows/include/plib/ssg.h	/^  virtual float *getMaterial ( GLenum which )$/;"	f	class:ssgSimpleState
getMax	windows/include/plib/sg.h	/^  const SGDfloat *getMax (void) const { return max ; }$/;"	f	class:sgdBox
getMax	windows/include/plib/sg.h	/^  const SGfloat *getMax (void) const { return max ; }$/;"	f	class:sgBox
getMaxDelta	windows/include/plib/ul.h	/^  double getMaxDelta  () const { return max_delta ; }$/;"	f	class:ulClock
getMaxKids	windows/include/plib/ssg.h	/^  int getMaxKids (void) const { return max_kids ; }$/;"	f	class:ssgSelector
getMaxRange	windows/include/plib/js.h	/^  void getMaxRange ( float *axes ) const { memcpy ( axes, max   , num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getMenuSoundStream	libs/musicplayer/musicplayer.cpp	/^static SoundStream* getMenuSoundStream(char* oggFilePath)$/;"	f	file:
getMiddle	drivers/berniw/trackdesc.h	/^		inline v3d* getMiddle() { return &m; }$/;"	f	class:TrackSegment
getMiddle	drivers/berniw2/trackdesc.h	/^		inline v3d* getMiddle() { return &m; }$/;"	f	class:TrackSegment
getMiddle	drivers/berniw3/trackdesc.h	/^		inline v3d* getMiddle() { return &m; }$/;"	f	class:TrackSegment
getMiddle	drivers/human/trackdesc.h	/^		inline v3d* getMiddle() { return &m; }$/;"	f	class:TrackSegment
getMiddle	drivers/inferno/trackdesc.h	/^		inline const vec2d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment2D
getMiddle	drivers/inferno/trackdesc.h	/^		inline const vec3d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment
getMiddle	drivers/lliaw/trackdesc.h	/^		inline const vec2d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment2D
getMiddle	drivers/lliaw/trackdesc.h	/^		inline const vec3d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment
getMiddle	drivers/tita/trackdesc.h	/^		inline const vec2d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment2D
getMiddle	drivers/tita/trackdesc.h	/^		inline const vec3d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment
getMin	windows/include/plib/sg.h	/^  const SGDfloat *getMin (void) const { return min ; }$/;"	f	class:sgdBox
getMin	windows/include/plib/sg.h	/^  const SGfloat *getMin (void) const { return min ; }$/;"	f	class:sgBox
getMinRange	windows/include/plib/js.h	/^  void getMinRange ( float *axes ) const { memcpy ( axes, min   , num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getMode	windows/include/plib/ssg.h	/^  int   getMode ()            { return mode ; }$/;"	f	class:ssgAnimTransform
getMode	windows/include/plib/ssg.h	/^  int   getMode ()            { return mode ; }$/;"	f	class:ssgTweenController
getMode	windows/include/plib/ssg.h	/^  ssgAnimDirection getMode () { return mode ; }$/;"	f	class:ssgTimedSelector
getModelDir	windows/include/plib/ssg.h	/^  const char* getModelDir ( void ) const { return model_dir ; }$/;"	f	class:ssgLoaderOptions
getMovedAxis	libs/confscreens/controlconfig.cpp	/^static int getMovedAxis(void)$/;"	f	file:
getMusicPlayer	libs/musicplayer/musicplayer.cpp	/^static OpenALMusicPlayer* getMusicPlayer()$/;"	f	file:
getNOpponents	drivers/bt/opponent.h	/^		int getNOpponents() { return nopponents; }$/;"	f	class:Opponents
getNOpponents	drivers/damned/opponent.h	/^		int getNOpponents() { return nopponents; }$/;"	f	class:Opponents
getNOpponents	drivers/olethros/opponent.h	/^		int getNOpponents() { return nopponents; }$/;"	f	class:olethros::Opponents
getNOpponents	drivers/sparkle/opponent.h	/^		int getNOpponents() { return nopponents; }$/;"	f	class:Opponents
getNOpponentsBehind	drivers/olethros/opponent.h	/^		int getNOpponentsBehind() { return nopponents_behind; }$/;"	f	class:olethros::Opponents
getNOpponentsInFront	drivers/olethros/opponent.h	/^		int getNOpponentsInFront() { return nopponents_infront;}$/;"	f	class:olethros::Opponents
getNPitEnd	drivers/bt/pit.h	/^		float getNPitEnd() { return p[5].x; }$/;"	f	class:Pit
getNPitEnd	drivers/damned/pit.h	/^		float getNPitEnd() { return p[5].x; }$/;"	f	class:Pit
getNPitEnd	drivers/olethros/pit.h	/^		float getNPitEnd() { return p[5].x; }$/;"	f	class:olethros::Pit
getNPitEnd	drivers/sparkle/pit.h	/^		float getNPitEnd() { return p[5].x; }$/;"	f	class:Pit
getNPitLoc	drivers/bt/pit.h	/^		float getNPitLoc() { return p[3].x; }$/;"	f	class:Pit
getNPitLoc	drivers/damned/pit.h	/^		float getNPitLoc() { return p[3].x; }$/;"	f	class:Pit
getNPitLoc	drivers/olethros/pit.h	/^		float getNPitLoc() { return p[3].x; }$/;"	f	class:olethros::Pit
getNPitLoc	drivers/sparkle/pit.h	/^		float getNPitLoc() { return p[3].x; }$/;"	f	class:Pit
getNPitStart	drivers/bt/pit.h	/^		float getNPitStart() { return p[1].x; }$/;"	f	class:Pit
getNPitStart	drivers/damned/pit.h	/^		float getNPitStart() { return p[1].x; }$/;"	f	class:Pit
getNPitStart	drivers/olethros/pit.h	/^		float getNPitStart() { return p[1].x; }$/;"	f	class:olethros::Pit
getNPitStart	drivers/sparkle/pit.h	/^		float getNPitStart() { return p[1].x; }$/;"	f	class:Pit
getName	windows/include/plib/js.h	/^  const char* getName () const { return name ;     }$/;"	f	class:jsJoystick
getName	windows/include/plib/ssg.h	/^  char *getName () { return name ; }$/;"	f	class:ssgBase
getNbSources	modules/graphic/ssggraph/SoundInterface.h	/^		int getNbSources(void) { return nbsources; }$/;"	f	class:SharedSourcePool
getNear	windows/include/plib/sg.h	/^  SGDfloat  getNear (void) const { return nnear ; }$/;"	f	class:sgdFrustum
getNear	windows/include/plib/sg.h	/^  SGfloat  getNear (void) const { return nnear ; }$/;"	f	class:sgFrustum
getNearFar	windows/include/plib/sg.h	/^  void getNearFar ( SGDfloat *n, SGDfloat *f ) const $/;"	f	class:sgdFrustum
getNearFar	windows/include/plib/sg.h	/^  void getNearFar ( SGfloat *n, SGfloat *f ) const $/;"	f	class:sgFrustum
getNearestId	drivers/berniw/trackdesc.cpp	/^int TrackDesc::getNearestId(v3d* p)$/;"	f	class:TrackDesc
getNearestId	drivers/berniw2/trackdesc.cpp	/^int TrackDesc::getNearestId(v3d* p)$/;"	f	class:TrackDesc
getNearestId	drivers/berniw3/trackdesc.cpp	/^int TrackDesc::getNearestId(v3d* p)$/;"	f	class:TrackDesc
getNearestId	drivers/human/trackdesc.cpp	/^int TrackDesc::getNearestId(v3d* p)$/;"	f	class:TrackDesc
getNearestId	drivers/inferno/trackdesc.cpp	/^int TrackDesc::getNearestId(vec2d* p)$/;"	f	class:TrackDesc
getNearestId	drivers/lliaw/trackdesc.cpp	/^int TrackDesc::getNearestId(vec2d* p)$/;"	f	class:TrackDesc
getNearestId	drivers/tita/trackdesc.cpp	/^int TrackDesc::getNearestId(vec2d* p)$/;"	f	class:TrackDesc
getNextEntity	windows/include/plib/ssg.h	/^  ssgEntity *getNextEntity     (void) { return getEntity ( next ) ; }$/;"	f	class:ssgList
getNextEntity	windows/include/plib/ul.h	/^  void *getNextEntity   (void) { return getEntity ( next ) ; }$/;"	f	class:ulList
getNextKid	windows/include/plib/ssg.h	/^  ssgEntity *getNextKid (void)    { return kids.getNextEntity () ; }$/;"	f	class:ssgBranch
getNextParent	windows/include/plib/ssg.h	/^  ssgBranch *getNextParent () { return (ssgBranch *) parents.getNextEntity () ; }$/;"	f	class:ssgEntity
getNoise	windows/include/plib/sg.h	/^  SGfloat getNoise ( SGfloat x, SGfloat y )$/;"	f	class:sgPerlinNoise_2D
getNoise	windows/include/plib/sg.h	/^  SGfloat getNoise ( SGfloat x, SGfloat y, SGfloat z )$/;"	f	class:sgPerlinNoise_3D
getNormal	windows/include/plib/ssg.h	/^  float *getNormal  (int i){ if(i>=num_normals)i=num_normals-1;$/;"	f	class:ssgVTable
getNormal	windows/include/plib/ssg.h	/^  float *getNormal  (int i){ int nn=getNumNormals(); if(i>=nn)i=nn-1;$/;"	f	class:ssgVtxTable
getNormalList	windows/include/plib/ssg.h	/^  void getNormalList   ( void **list ) { *list = normals   -> get ( 0 ) ; } $/;"	f	class:ssgVtxTable
getNormalList	windows/include/plib/ssg.h	/^  void getNormalList ( void **list, unsigned short **idx )$/;"	f	class:ssgVTable
getNormals	windows/include/plib/ssg.h	/^  ssgNormalArray   *getNormals   () { return normals   ; }$/;"	f	class:ssgVtxTable
getNum	windows/include/plib/ssg.h	/^  int getNum (void) { return total ; }$/;"	f	class:ssgSimpleList
getNum	windows/include/plib/ssg.h	/^  int getNum (void) { return total ; }$/;"	f	class:ssgSimpleStateArray
getNum	windows/include/plib/ssg.h	/^  int getNum (void) { return total ; }$/;"	f	class:ssgTextureArray
getNumActiveParticles	windows/include/plib/ssgaParticleSystem.h	/^  int getNumActiveParticles () { return num_active    ; }$/;"	f	class:ssgaParticleSystem
getNumAxes	windows/include/plib/js.h	/^  int   getNumAxes    () const { return num_axes ; }$/;"	f	class:jsJoystick
getNumBanks	windows/include/plib/ssg.h	/^  int getNumBanks () { return banked_vertices -> getNumEntities () ; }$/;"	f	class:ssgTween
getNumButtons	windows/include/plib/js.h	/^  int   getNumButtons () const { return num_buttons; }$/;"	f	class:jsJoystick
getNumColours	modules/graphic/ssggraph/grcarlight.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:ssgVtxTableCarlight
getNumColours	modules/graphic/ssggraph/grshadow.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:ssgVtxTableShadow
getNumColours	modules/graphic/ssggraph/grsmoke.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:ssgVtxTableSmoke
getNumColours	modules/graphic/ssggraph/grvtxtable.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:grVtxTable
getNumColours	windows/include/plib/ssg.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:ssgVtxTable
getNumColours	windows/include/plib/ssg.h	/^  int getNumColours   () { return num_colours   ; }$/;"	f	class:ssgVTable
getNumColours	windows/include/plib/ssg.h	/^  virtual int getNumColours   () { return 0 ; }$/;"	f	class:ssgLeaf
getNumEntities	windows/include/plib/ssg.h	/^  int        getNumEntities    (void) { return total ; }$/;"	f	class:ssgList
getNumEntities	windows/include/plib/ul.h	/^  int   getNumEntities  (void) const { return total ; }$/;"	f	class:ulList
getNumIndices	modules/graphic/ssggraph/grvertexarray.h	/^  int getNumIndices () { return indices -> getNum () ; }$/;"	f	class:ssgGrVtxArray
getNumIndices	windows/include/plib/ssg.h	/^  int getNumIndices () { return indices -> getNum () ; }$/;"	f	class:ssgVtxArray
getNumKids	windows/include/plib/ssg.h	/^  virtual int getNumKids (void)   { return kids.getNumEntities() ; }$/;"	f	class:ssgBranch
getNumKids	windows/include/plib/ssg.h	/^  virtual int getNumKids (void) { return 0 ; }$/;"	f	class:ssgEntity
getNumLines	modules/graphic/ssggraph/grcarlight.h	/^  int  getNumLines ()  {return ssgVtxTable::getNumLines();}$/;"	f	class:ssgVtxTableCarlight
getNumLines	modules/graphic/ssggraph/grshadow.h	/^  int  getNumLines ()  {return ssgVtxTable::getNumLines();}$/;"	f	class:ssgVtxTableShadow
getNumLines	modules/graphic/ssggraph/grsmoke.h	/^  int  getNumLines ()  {return ssgVtxTable::getNumLines();}$/;"	f	class:ssgVtxTableSmoke
getNumLines	modules/graphic/ssggraph/grvertexarray.h	/^  int  getNumLines () {return ssgVtxArray::getNumLines();}$/;"	f	class:ssgGrVtxArray
getNumLines	modules/graphic/ssggraph/grvtxtable.h	/^  int  getNumLines ()  {return ssgVtxTable::getNumLines();}$/;"	f	class:grVtxTable
getNumNodes	windows/include/plib/ul.h	/^  int  getNumNodes ( void ) const { return nnodes ; }$/;"	f	class:ulLinkedList
getNumNormals	modules/graphic/ssggraph/grcarlight.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:ssgVtxTableCarlight
getNumNormals	modules/graphic/ssggraph/grshadow.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:ssgVtxTableShadow
getNumNormals	modules/graphic/ssggraph/grsmoke.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:ssgVtxTableSmoke
getNumNormals	modules/graphic/ssggraph/grvtxtable.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:grVtxTable
getNumNormals	windows/include/plib/ssg.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:ssgVtxTable
getNumNormals	windows/include/plib/ssg.h	/^  int getNumNormals   () { return num_normals   ; }$/;"	f	class:ssgVTable
getNumNormals	windows/include/plib/ssg.h	/^  virtual int getNumNormals   () { return 0 ; }$/;"	f	class:ssgLeaf
getNumParents	windows/include/plib/ssg.h	/^  int getNumParents () { return parents.getNumEntities () ; }$/;"	f	class:ssgEntity
getNumParticles	windows/include/plib/ssgaParticleSystem.h	/^  int getNumParticles       () { return num_particles ; }$/;"	f	class:ssgaParticleSystem
getNumPathEntries	windows/include/plib/ssg.h	/^  int getNumPathEntries () { return num_entries ; }$/;"	f	class:ssgHit
getNumSteps	windows/include/plib/sl.h	/^  int   getNumSteps  () const { return nsteps ; }$/;"	f	class:slEnvelope
getNumSteps	windows/include/plib/ssg.h	/^  int             getNumSteps ( void ) { return nstates ; }$/;"	f	class:ssgStateSelector
getNumTexCoords	modules/graphic/ssggraph/grcarlight.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:ssgVtxTableCarlight
getNumTexCoords	modules/graphic/ssggraph/grshadow.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:ssgVtxTableShadow
getNumTexCoords	modules/graphic/ssggraph/grsmoke.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:ssgVtxTableSmoke
getNumTexCoords	modules/graphic/ssggraph/grvtxtable.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:grVtxTable
getNumTexCoords	windows/include/plib/ssg.h	/^  int getNumTexCoords () { return num_texcoords ; }$/;"	f	class:ssgVTable
getNumTexCoords	windows/include/plib/ssg.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:ssgVtxTable
getNumTexCoords	windows/include/plib/ssg.h	/^  virtual int getNumTexCoords () { return 0 ; }$/;"	f	class:ssgLeaf
getNumTriangles	modules/graphic/ssggraph/grcarlight.h	/^  int getNumTriangles ()  { return ssgVtxTable::getNumTriangles();}$/;"	f	class:ssgVtxTableCarlight
getNumTriangles	modules/graphic/ssggraph/grshadow.h	/^  int getNumTriangles ()  { return ssgVtxTable::getNumTriangles();}$/;"	f	class:ssgVtxTableShadow
getNumTriangles	modules/graphic/ssggraph/grsmoke.h	/^  int getNumTriangles ()  { return ssgVtxTable::getNumTriangles();}$/;"	f	class:ssgVtxTableSmoke
getNumTriangles	modules/graphic/ssggraph/grvertexarray.h	/^  int getNumTriangles () { return ssgVtxArray::getNumTriangles();}$/;"	f	class:ssgGrVtxArray
getNumTriangles	modules/graphic/ssggraph/grvtxtable.h	/^  int getNumTriangles ()  { return ssgVtxTable::getNumTriangles();}$/;"	f	class:grVtxTable
getNumTris	windows/include/plib/ssgaShapes.h	/^  int    getNumTris () { return ntriangles ; }$/;"	f	class:ssgaShape
getNumVertices	modules/graphic/ssggraph/grcarlight.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:ssgVtxTableCarlight
getNumVertices	modules/graphic/ssggraph/grshadow.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:ssgVtxTableShadow
getNumVertices	modules/graphic/ssggraph/grsmoke.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:ssgVtxTableSmoke
getNumVertices	modules/graphic/ssggraph/grvtxtable.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:grVtxTable
getNumVertices	windows/include/plib/ssg.h	/^  int getNumVertices  () { return num_vertices  ; }$/;"	f	class:ssgVTable
getNumVertices	windows/include/plib/ssg.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:ssgVtxTable
getNumVertices	windows/include/plib/ssg.h	/^  virtual int getNumVertices  () { return 0 ; }$/;"	f	class:ssgLeaf
getOffset	drivers/bt/driver.cpp	/^float Driver::getOffset()$/;"	f	class:Driver
getOffset	drivers/damned/driver.cpp	/^float Driver::getOffset()$/;"	f	class:Driver
getOffset	drivers/inferno2/common.cpp	/^getOffset(int idx, tCarElt* car, tdble *maxSpeed)$/;"	f	file:
getOffset	drivers/olethros/driver.cpp	/^    float Driver::getOffset()$/;"	f	class:olethros::Driver
getOneOverMass	windows/include/plib/sg.h	/^  float  getOneOverMass () { return ooMass   ; }$/;"	f	class:sgParticle
getOpenEntityNames	libs/txml/xmlparse.c	/^const XML_Char *getOpenEntityNames(XML_Parser parser)$/;"	f	file:
getOpponentPtr	drivers/bt/opponent.h	/^		Opponent *getOpponentPtr() { return opponent; }$/;"	f	class:Opponents
getOpponentPtr	drivers/damned/opponent.h	/^		Opponent *getOpponentPtr() { return opponent; }$/;"	f	class:Opponents
getOpponentPtr	drivers/olethros/opponent.h	/^		Opponent *getOpponentPtr() { return opponent; }$/;"	f	class:olethros::Opponents
getOpponentPtr	drivers/sparkle/opponent.h	/^		Opponent *getOpponentPtr() { return opponent; }$/;"	f	class:Opponents
getOptLength	drivers/inferno/pathfinder.h	/^		inline float getOptLength(int id) { return length[id]; }$/;"	f	class:PathSegOpt
getOptLength	drivers/lliaw/pathfinder.h	/^		inline float getOptLength(int id) { return length[id]; }$/;"	f	class:PathSegOpt
getOptLength	drivers/tita/pathfinder.h	/^		inline float getOptLength(int id) { return length[id]; }$/;"	f	class:PathSegOpt
getOptLoc	drivers/berniw/pathfinder.h	/^		inline v3d* getOptLoc() { return &o; }$/;"	f	class:PathSeg
getOptLoc	drivers/berniw2/pathfinder.h	/^		inline v3d* getOptLoc() { return &o; }$/;"	f	class:PathSeg
getOptLoc	drivers/berniw3/pathfinder.h	/^		inline v3d* getOptLoc() { return &o; }$/;"	f	class:PathSeg
getOptLoc	drivers/human/pathfinder.h	/^		inline v3d* getOptLoc() { return &o; }$/;"	f	class:PathSeg
getOptLoc	drivers/inferno/pathfinder.h	/^		inline const vec2d* getOptLoc(int id) { return &o[id]; }$/;"	f	class:PathSegOpt
getOptLoc	drivers/lliaw/pathfinder.h	/^		inline const vec2d* getOptLoc(int id) { return &o[id]; }$/;"	f	class:PathSegOpt
getOptLoc	drivers/tita/pathfinder.h	/^		inline const vec2d* getOptLoc(int id) { return &o[id]; }$/;"	f	class:PathSegOpt
getOptToMiddle	drivers/inferno/pathfinder.h	/^		inline float getOptToMiddle(int id) { return disttomiddle[id]; }$/;"	f	class:PathSegOpt
getOptToMiddle	drivers/lliaw/pathfinder.h	/^		inline float getOptToMiddle(int id) { return disttomiddle[id]; }$/;"	f	class:PathSegOpt
getOptToMiddle	drivers/tita/pathfinder.h	/^		inline float getOptToMiddle(int id) { return disttomiddle[id]; }$/;"	f	class:PathSegOpt
getOptToRight	drivers/inferno/pathfinder.h	/^		inline const vec2d* getOptToRight(int id) { return &tr[id]; }$/;"	f	class:PathSegOpt
getOptToRight	drivers/lliaw/pathfinder.h	/^		inline const vec2d* getOptToRight(int id) { return &tr[id]; }$/;"	f	class:PathSegOpt
getOptToRight	drivers/tita/pathfinder.h	/^		inline const vec2d* getOptToRight(int id) { return &tr[id]; }$/;"	f	class:PathSegOpt
getOrigin	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  const Point& getOrigin() const { return origin; }$/;"	f	class:Transform
getOrtho	windows/include/plib/sg.h	/^  void getOrtho ( SGDfloat *w, SGDfloat *h ) const$/;"	f	class:sgdFrustum
getOrtho	windows/include/plib/sg.h	/^  void getOrtho ( SGfloat *w, SGfloat *h ) const$/;"	f	class:sgFrustum
getOverlapTimer	drivers/bt/opponent.h	/^		float getOverlapTimer() { return overlaptimer; }$/;"	f	class:Opponent
getOverlapTimer	drivers/damned/opponent.h	/^		float getOverlapTimer() { return overlaptimer; }$/;"	f	class:Opponent
getOverlapTimer	drivers/olethros/opponent.h	/^		float getOverlapTimer() { return overlaptimer; }$/;"	f	class:olethros::Opponent
getOvertakeOffset	drivers/sparkle/driver.cpp	/^float Driver::getOvertakeOffset()$/;"	f	class:Driver
getParamByName	libs/tgf/params.cpp	/^static struct param* getParamByName(struct parmHeader *conf,$/;"	f	file:
getParent	libs/tgf/params.cpp	/^static struct section *getParent(struct parmHeader *conf,$/;"	f	file:
getParent	windows/include/plib/ssg.h	/^  ssgBranch *getParent ( int p ) { return (ssgBranch *) parents.getEntity ( p ) ; }$/;"	f	class:ssgEntity
getParticle	windows/include/plib/sg.h	/^  sgParticle *getParticle   ( int which ) { return ( which == 0 ) ? p0 : p1 ; }$/;"	f	class:sgSpringDamper
getPath	drivers/inferno/pathfinder.h	/^		inline PathSeg* getPath() { return psdyn; }$/;"	f	class:Pathfinder
getPath	drivers/lliaw/pathfinder.h	/^		inline PathSeg* getPath() { return psdyn; }$/;"	f	class:Pathfinder
getPath	drivers/tita/pathfinder.h	/^		inline PathSeg* getPath() { return psdyn; }$/;"	f	class:Pathfinder
getPathEntry	windows/include/plib/ssg.h	/^  ssgEntity *getPathEntry ( int i )$/;"	f	class:ssgHit
getPathSeg	drivers/berniw/pathfinder.h	/^		inline PathSeg* getPathSeg(int pathSegId) { return &ps[pathSegId]; }$/;"	f	class:Pathfinder
getPathSeg	drivers/berniw2/pathfinder.h	/^		inline PathSeg* getPathSeg(int pathSegId) { return &ps[pathSegId]; }$/;"	f	class:Pathfinder
getPathSeg	drivers/berniw3/pathfinder.h	/^		inline PathSeg* getPathSeg(int pathSegId) { return &ps[pathSegId]; }$/;"	f	class:Pathfinder
getPathSeg	drivers/human/pathfinder.h	/^		inline PathSeg* getPathSeg(int pathSegId) { return &ps[pathSegId]; }$/;"	f	class:Pathfinder
getPathfinderPtr	drivers/berniw/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	drivers/berniw2/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	drivers/berniw3/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	drivers/human/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	drivers/inferno/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	drivers/lliaw/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	drivers/tita/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPitEntryStartId	drivers/berniw/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	drivers/berniw2/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	drivers/berniw3/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	drivers/human/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	drivers/inferno/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	drivers/lliaw/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	drivers/tita/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitExitEndId	drivers/berniw/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	drivers/berniw2/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	drivers/berniw3/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	drivers/human/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	drivers/inferno/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	drivers/lliaw/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	drivers/tita/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitLoc	drivers/berniw/pathfinder.h	/^		inline v3d* getPitLoc() { return l; }$/;"	f	class:PathSeg
getPitLoc	drivers/berniw2/pathfinder.h	/^		inline v3d* getPitLoc() { return l; }$/;"	f	class:PathSeg
getPitLoc	drivers/berniw3/pathfinder.h	/^		inline v3d* getPitLoc() { return l; }$/;"	f	class:PathSeg
getPitLoc	drivers/human/pathfinder.h	/^		inline v3d* getPitLoc() { return l; }$/;"	f	class:PathSeg
getPitLoc	drivers/inferno/pathfinder.h	/^		inline const vec2d* getPitLoc(int id) {$/;"	f	class:PathSegPit
getPitLoc	drivers/lliaw/pathfinder.h	/^		inline const vec2d* getPitLoc(int id) {$/;"	f	class:PathSegPit
getPitLoc	drivers/tita/pathfinder.h	/^		inline const vec2d* getPitLoc(int id) {$/;"	f	class:PathSegPit
getPitOffset	drivers/bt/pit.cpp	/^float Pit::getPitOffset(float offset, float fromstart)$/;"	f	class:Pit
getPitOffset	drivers/damned/pit.cpp	/^float Pit::getPitOffset(float offset, float fromstart)$/;"	f	class:Pit
getPitOffset	drivers/olethros/pit.cpp	/^float Pit::getPitOffset(float offset, float fromstart)$/;"	f	class:olethros::Pit
getPitOffset	drivers/sparkle/pit.cpp	/^float Pit::getPitOffset(float offset, float fromstart)$/;"	f	class:Pit
getPitSegId	drivers/berniw/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	drivers/berniw2/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	drivers/berniw3/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	drivers/human/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	drivers/inferno/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	drivers/lliaw/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	drivers/tita/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	drivers/berniw/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	drivers/berniw2/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	drivers/berniw3/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	drivers/human/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	drivers/inferno/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	drivers/lliaw/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	drivers/tita/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitStop	drivers/berniw/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	drivers/berniw2/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	drivers/berniw3/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	drivers/human/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	drivers/inferno/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	drivers/lliaw/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	drivers/tita/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitType	drivers/berniw/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	drivers/berniw2/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	drivers/berniw3/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	drivers/human/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	drivers/inferno/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	drivers/lliaw/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	drivers/tita/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitch	modules/graphic/ssggraph/TorcsSound.h	/^	virtual float getPitch() {return pitch;}$/;"	f	class:TorcsSound
getPitstop	drivers/bt/pit.h	/^		bool getPitstop() { return pitstop; }$/;"	f	class:Pit
getPitstop	drivers/damned/pit.h	/^		bool getPitstop() { return pitstop; }$/;"	f	class:Pit
getPitstop	drivers/olethros/pit.h	/^		bool getPitstop() { return pitstop; }$/;"	f	class:olethros::Pit
getPitstop	drivers/sparkle/pit.h	/^		bool getPitstop() { return pitstop; }$/;"	f	class:Pit
getPlane	windows/include/plib/sg.h	/^  const SGDfloat *getPlane ( int i ) const { return plane [ i ] ; }$/;"	f	class:sgdFrustum
getPlane	windows/include/plib/sg.h	/^  const SGfloat *getPlane ( int i ) const { return plane [ i ] ; }$/;"	f	class:sgFrustum
getPlayCount	windows/include/plib/sl.h	/^  int getPlayCount () const { return ref_count ; }$/;"	f	class:slEnvelope
getPlayCount	windows/include/plib/sl.h	/^  int getPlayCount () const { return ref_count ; }$/;"	f	class:slSample
getPointer	modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  const Point *getPointer() const { return base; }$/;"	f	class:VertexBase
getPos	modules/graphic/ssggraph/grcam.h	/^    t3Dd *getPos(void) {$/;"	f	class:cGrCamera
getPos	modules/graphic/ssggraph/grcarlight.h	/^  sgVec3 * getPos() { return(&pos);}$/;"	f	class:ssgVtxTableCarlight
getPos	windows/include/plib/sg.h	/^  SGfloat *getPos   () { return pos      ; }$/;"	f	class:sgParticle
getPos	windows/include/plib/sg.h	/^  const SGfloat *getPos   () const { return pos      ; }$/;"	f	class:sgParticle
getPosition	windows/include/plib/ssg.h	/^  void getPosition ( sgVec3 pos )       { sgCopyVec3 ( pos, position ) ; }$/;"	f	class:ssgLight
getPosv	modules/graphic/ssggraph/grcam.h	/^    sgVec3 *getPosv(void) {$/;"	f	class:cGrCamera
getPreemptMode	windows/include/plib/sl.h	/^  slPreemptMode getPreemptMode () const { return preempt_mode ; }$/;"	f	class:slPlayer
getPrimitiveType	windows/include/plib/ssg.h	/^  virtual GLenum getPrimitiveType () { return gltype ; }$/;"	f	class:ssgLeaf
getPrintableName	windows/include/plib/ssg.h	/^  const char *getPrintableName () { return (name == NULL) ? "NoName" : name ; }$/;"	f	class:ssgBase
getPriority	windows/include/plib/sl.h	/^  int getPriority () const$/;"	f	class:slPlayer
getRGBA	libs/tgfclient/gui.h	/^		const float* getRGBA() { return rgba; }$/;"	f	class:ForeGroundColor
getRaceType	drivers/berniw/trackdesc.h	/^		inline unsigned int getRaceType() { return raceType; }$/;"	f	class:TrackSegment
getRaceType	drivers/berniw2/trackdesc.h	/^		inline unsigned int getRaceType() { return raceType; }$/;"	f	class:TrackSegment
getRaceType	drivers/berniw3/trackdesc.h	/^		inline unsigned int getRaceType() { return raceType; }$/;"	f	class:TrackSegment
getRaceType	drivers/human/trackdesc.h	/^		inline unsigned int getRaceType() { return raceType; }$/;"	f	class:TrackSegment
getRaceType	drivers/inferno/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment
getRaceType	drivers/inferno/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment2D
getRaceType	drivers/lliaw/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment
getRaceType	drivers/lliaw/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment2D
getRaceType	drivers/tita/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment
getRaceType	drivers/tita/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment2D
getRadius	drivers/berniw/pathfinder.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:PathSeg
getRadius	drivers/berniw/trackdesc.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:TrackSegment
getRadius	drivers/berniw2/pathfinder.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:PathSeg
getRadius	drivers/berniw2/trackdesc.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:TrackSegment
getRadius	drivers/berniw3/pathfinder.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:PathSeg
getRadius	drivers/berniw3/trackdesc.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:TrackSegment
getRadius	drivers/bt/learn.h	/^		float getRadius(tTrackSeg *s) { return radius[s->id]; }$/;"	f	class:SegLearn
getRadius	drivers/damned/learn.h	/^		float getRadius(tTrackSeg *s) { return radius[s->id]; }$/;"	f	class:SegLearn
getRadius	drivers/human/pathfinder.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:PathSeg
getRadius	drivers/human/trackdesc.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:TrackSegment
getRadius	drivers/inferno/pathfinder.h	/^		inline tdble getRadius(int segid) { return ps[getid(segid)].radius; }$/;"	f	class:PathSeg
getRadius	drivers/inferno/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment
getRadius	drivers/inferno/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment2D
getRadius	drivers/lliaw/pathfinder.h	/^		inline tdble getRadius(int segid) { return ps[getid(segid)].radius; }$/;"	f	class:PathSeg
getRadius	drivers/lliaw/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment
getRadius	drivers/lliaw/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment2D
getRadius	drivers/olethros/learn.h	/^	float getRadius(tTrackSeg *s) { return radius[s->id]; }$/;"	f	class:olethros::SegLearn
getRadius	drivers/tita/pathfinder.h	/^		inline tdble getRadius(int segid) { return ps[getid(segid)].radius; }$/;"	f	class:PathSeg
getRadius	drivers/tita/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment
getRadius	drivers/tita/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment2D
getRadius	windows/include/plib/sg.h	/^  SGDfloat getRadius (void) const         { return radius ; }$/;"	f	class:sgdSphere
getRadius	windows/include/plib/sg.h	/^  SGfloat getRadius (void) const        { return radius ; }$/;"	f	class:sgSphere
getRange	windows/include/plib/ssg.h	/^  float getRange ( unsigned int which )$/;"	f	class:ssgRangeSelector
getRanges	windows/include/plib/ssg.h	/^  float *getRanges ()$/;"	f	class:ssgRangeSelector
getRate	windows/include/plib/sl.h	/^  int  getRate   () const  { return rate   ; }$/;"	f	class:slSample
getRate	windows/include/plib/sl.h	/^  int getRate  () const { return rate   ; }$/;"	f	class:slDSP
getRateInHz	libs/musicplayer/OggSoundStream.h	/^		virtual int getRateInHz() { return rateInHz; }$/;"	f	class:OggSoundStream
getRef	windows/include/plib/ssg.h	/^  int  getRef() { return refc ; }$/;"	f	class:ssgBase
getRepair	drivers/sparkle/pit.cpp	/^int Pit::getRepair()$/;"	f	class:Pit
getRestLength	windows/include/plib/sg.h	/^  float       getRestLength () { return restLength ; }$/;"	f	class:sgSpringDamper
getRight	windows/include/plib/sg.h	/^  SGDfloat  getRight(void) const { return right ; }$/;"	f	class:sgdFrustum
getRight	windows/include/plib/sg.h	/^  SGfloat  getRight(void) const { return right ; }$/;"	f	class:sgFrustum
getRightBorder	drivers/berniw/trackdesc.h	/^		inline v3d* getRightBorder() { return &r; }$/;"	f	class:TrackSegment
getRightBorder	drivers/berniw2/trackdesc.h	/^		inline v3d* getRightBorder() { return &r; }$/;"	f	class:TrackSegment
getRightBorder	drivers/berniw3/trackdesc.h	/^		inline v3d* getRightBorder() { return &r; }$/;"	f	class:TrackSegment
getRightBorder	drivers/human/trackdesc.h	/^		inline v3d* getRightBorder() { return &r; }$/;"	f	class:TrackSegment
getRightBorder	drivers/inferno/trackdesc.h	/^		inline const vec2d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment2D
getRightBorder	drivers/inferno/trackdesc.h	/^		inline const vec3d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment
getRightBorder	drivers/lliaw/trackdesc.h	/^		inline const vec2d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment2D
getRightBorder	drivers/lliaw/trackdesc.h	/^		inline const vec3d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment
getRightBorder	drivers/tita/trackdesc.h	/^		inline const vec2d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment2D
getRightBorder	drivers/tita/trackdesc.h	/^		inline const vec3d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment
getSample	windows/include/plib/sl.h	/^  slSample *getSample () const { return sample ; }$/;"	f	class:slSamplePlayer
getSample	windows/include/plib/sl.h	/^  virtual slSample *getSample () const { return NULL ; }$/;"	f	class:slMODPlayer
getSaturation	windows/include/plib/js.h	/^  float getSaturation ( int axis ) const     { return saturate [ axis ]  ; }$/;"	f	class:jsJoystick
getScheduler	modules/graphic/ssggraph/PlibSoundInterface.cpp	/^slScheduler* PlibSoundInterface::getScheduler()$/;"	f	class:PlibSoundInterface
getScrH	modules/graphic/ssggraph/grscreen.h	/^		int getScrH (void) { return scrh; }$/;"	f	class:cGrScreen
getScrW	modules/graphic/ssggraph/grscreen.h	/^		int getScrW (void) { return scrw; }$/;"	f	class:cGrScreen
getScrX	modules/graphic/ssggraph/grscreen.h	/^		int getScrX (void) { return scrx; }$/;"	f	class:cGrScreen
getScrY	modules/graphic/ssggraph/grscreen.h	/^		int getScrY (void) { return scry; }$/;"	f	class:cGrScreen
getSegPtr	drivers/inferno/trackdesc.h	/^		inline tTrackSeg* getSegPtr() const { return pTrackSeg;}$/;"	f	class:TrackSegment
getSegPtr	drivers/lliaw/trackdesc.h	/^		inline tTrackSeg* getSegPtr() const { return pTrackSeg;}$/;"	f	class:TrackSegment
getSegPtr	drivers/tita/trackdesc.h	/^		inline tTrackSeg* getSegPtr() const { return pTrackSeg;}$/;"	f	class:TrackSegment
getSegmentPtr	drivers/berniw/trackdesc.h	/^		inline TrackSegment* getSegmentPtr(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	drivers/berniw2/trackdesc.h	/^		inline TrackSegment* getSegmentPtr(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	drivers/berniw3/trackdesc.h	/^		inline TrackSegment* getSegmentPtr(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	drivers/human/trackdesc.h	/^		inline TrackSegment* getSegmentPtr(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	drivers/inferno/trackdesc.h	/^		inline TrackSegment2D* getSegmentPtr(int index) { return &ts2d[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	drivers/lliaw/trackdesc.h	/^		inline TrackSegment2D* getSegmentPtr(int index) { return &ts2d[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	drivers/tita/trackdesc.h	/^		inline TrackSegment2D* getSegmentPtr(int index) { return &ts2d[index]; }$/;"	f	class:TrackDesc
getSegmentPtr3D	drivers/inferno/trackdesc.h	/^		inline TrackSegment* getSegmentPtr3D(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr3D	drivers/lliaw/trackdesc.h	/^		inline TrackSegment* getSegmentPtr3D(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr3D	drivers/tita/trackdesc.h	/^		inline TrackSegment* getSegmentPtr3D(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSelect	windows/include/plib/ssg.h	/^  unsigned int getSelect ()$/;"	f	class:ssgSelector
getSharedHeader	libs/tgf/params.cpp	/^static struct parmHeader *getSharedHeader(const char *file, int mode) {$/;"	f	file:
getShininess	windows/include/plib/ssg.h	/^  virtual float getShininess (void)$/;"	f	class:ssgSimpleState
getSideDist	drivers/bt/opponent.h	/^		float getSideDist() { return sidedist; }$/;"	f	class:Opponent
getSideDist	drivers/damned/opponent.h	/^		float getSideDist() { return sidedist; }$/;"	f	class:Opponent
getSideDist	drivers/olethros/opponent.h	/^		float getSideDist() { return sidedist; }$/;"	f	class:olethros::Opponent
getSideDist	drivers/sparkle/opponent.h	/^		float getSideDist() { return sidedist; }$/;"	f	class:Opponent
getSize	windows/include/plib/ssgaParticleSystem.h	/^  float getSize () { return size ; }$/;"	f	class:ssgaParticleSystem
getSize	windows/include/plib/ssgaShapes.h	/^  float *getSize    () { return size       ; }$/;"	f	class:ssgaShape
getSizeOf	windows/include/plib/ssg.h	/^  int getSizeOf (void) { return size_of ; }$/;"	f	class:ssgSimpleList
getSoundFormat	libs/musicplayer/OggSoundStream.h	/^		virtual SoundFormat getSoundFormat() { return format; }$/;"	f	class:OggSoundStream
getSource	modules/graphic/ssggraph/SoundInterface.h	/^		bool getSource(TorcsSound* sound, ALuint* source, bool* needs_init, int* index) {$/;"	f	class:SharedSourcePool
getSource	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::getSource(sgVec3 p, sgVec3 u)$/;"	f	class:OpenalTorcsSound
getSource	modules/graphic/ssggraph/TorcsSound.h	/^	virtual void getSource (sgVec3 p, sgVec3 u) {}$/;"	f	class:TorcsSound
getSourcePool	modules/graphic/ssggraph/SoundInterface.h	/^	virtual SharedSourcePool* getSourcePool(void) { return sourcepool; } $/;"	f	class:OpenalSoundInterface
getSpeed	drivers/berniw/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	drivers/berniw2/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	drivers/berniw3/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	drivers/bt/cardata.cpp	/^float SingleCardata::getSpeed(tCarElt *car, float ltrackangle)$/;"	f	class:SingleCardata
getSpeed	drivers/bt/driver.h	/^		float getSpeed() { return mycardata->getSpeedInTrackDirection(); \/*speed;*\/ }$/;"	f	class:Driver
getSpeed	drivers/bt/opponent.h	/^		float getSpeed() { return cardata->getSpeedInTrackDirection(); }$/;"	f	class:Opponent
getSpeed	drivers/damned/cardata.cpp	/^float SingleCardata::getSpeed(tCarElt *car, float ltrackangle)$/;"	f	class:SingleCardata
getSpeed	drivers/damned/driver.h	/^		float getSpeed() { return mycardata->getSpeedInTrackDirection(); \/*speed;*\/ }$/;"	f	class:Driver
getSpeed	drivers/damned/opponent.h	/^		float getSpeed() { return cardata->getSpeedInTrackDirection(); }$/;"	f	class:Opponent
getSpeed	drivers/human/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	drivers/inferno/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	drivers/lliaw/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	drivers/olethros/cardata.cpp	/^float SingleCardata::getSpeed(tCarElt *car, float ltrackangle)$/;"	f	class:olethros::SingleCardata
getSpeed	drivers/olethros/driver.h	/^	float getSpeed() { return mycardata->getSpeedInTrackDirection(); \/*speed;*\/ }$/;"	f	class:olethros::Driver
getSpeed	drivers/olethros/opponent.h	/^		float getSpeed() { return cardata->getSpeedInTrackDirection(); }$/;"	f	class:olethros::Opponent
getSpeed	drivers/sparkle/driver.h	/^		float getSpeed() { return speed; }$/;"	f	class:Driver
getSpeed	drivers/sparkle/opponent.cpp	/^float Opponent::getSpeed(tCarElt *car)$/;"	f	class:Opponent
getSpeed	drivers/sparkle/opponent.h	/^		float getSpeed() { return speed; }$/;"	f	class:Opponent
getSpeed	drivers/tita/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	windows/include/plib/ssgaWaveSystem.h	/^  float getSpeed () { return speed  ; }$/;"	f	class:ssgaWaveTrain
getSpeedFactor	drivers/olethros/strategy.cpp	/^float ManagedStrategy::getSpeedFactor(tCarElt* car, tSituation* s, Opponents* opponents)$/;"	f	class:olethros::ManagedStrategy
getSpeedFactor	drivers/olethros/strategy.cpp	/^float SimpleStrategy::getSpeedFactor(tCarElt* car, tSituation* s, Opponents* opponents)$/;"	f	class:olethros::SimpleStrategy
getSpeedInTrackDirection	drivers/bt/cardata.h	/^		inline float getSpeedInTrackDirection() { return speed; }$/;"	f	class:SingleCardata
getSpeedInTrackDirection	drivers/damned/cardata.h	/^		inline float getSpeedInTrackDirection() { return speed; }$/;"	f	class:SingleCardata
getSpeedInTrackDirection	drivers/olethros/cardata.h	/^	inline float getSpeedInTrackDirection() {$/;"	f	class:olethros::SingleCardata
getSpeedLimitBrake	drivers/bt/pit.cpp	/^float Pit::getSpeedLimitBrake(float speedsqr)$/;"	f	class:Pit
getSpeedLimitBrake	drivers/damned/pit.cpp	/^float Pit::getSpeedLimitBrake(float speedsqr)$/;"	f	class:Pit
getSpeedLimitBrake	drivers/olethros/pit.cpp	/^float Pit::getSpeedLimitBrake(float speedsqr)$/;"	f	class:olethros::Pit
getSpeedLimitBrake	drivers/sparkle/pit.cpp	/^float Pit::getSpeedLimitBrake(float speedsqr)$/;"	f	class:Pit
getSpeedSqr	drivers/berniw/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	drivers/berniw2/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	drivers/berniw3/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	drivers/human/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	drivers/inferno/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	drivers/lliaw/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	drivers/tita/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedlimit	drivers/bt/pit.h	/^		float getSpeedlimit() { return speedlimit; }$/;"	f	class:Pit
getSpeedlimit	drivers/damned/pit.h	/^		float getSpeedlimit() { return speedlimit; }$/;"	f	class:Pit
getSpeedlimit	drivers/olethros/pit.h	/^		float getSpeedlimit() { return speedlimit; }$/;"	f	class:olethros::Pit
getSpeedlimit	drivers/sparkle/pit.h	/^		float getSpeedlimit() { return speedlimit; }$/;"	f	class:Pit
getSpeedlimitSqr	drivers/bt/pit.h	/^		float getSpeedlimitSqr() { return speedlimitsqr; }$/;"	f	class:Pit
getSpeedlimitSqr	drivers/damned/pit.h	/^		float getSpeedlimitSqr() { return speedlimitsqr; }$/;"	f	class:Pit
getSpeedlimitSqr	drivers/olethros/pit.h	/^		float getSpeedlimitSqr() { return speedlimitsqr; }$/;"	f	class:olethros::Pit
getSpeedlimitSqr	drivers/sparkle/pit.h	/^		float getSpeedlimitSqr() { return speedlimitsqr; }$/;"	f	class:Pit
getSpeedsqr	drivers/berniw/pathfinder.h	/^		inline tdble getSpeedsqr() { return speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	drivers/berniw2/pathfinder.h	/^		inline tdble getSpeedsqr() { return speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	drivers/berniw3/pathfinder.h	/^		inline tdble getSpeedsqr() { return speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	drivers/human/pathfinder.h	/^		inline tdble getSpeedsqr() { return speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	drivers/inferno/pathfinder.h	/^		inline tdble getSpeedsqr(int segid) { return ps[getid(segid)].speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	drivers/lliaw/pathfinder.h	/^		inline tdble getSpeedsqr(int segid) { return ps[getid(segid)].speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	drivers/tita/pathfinder.h	/^		inline tdble getSpeedsqr(int segid) { return ps[getid(segid)].speedsqr; }$/;"	f	class:PathSeg
getSpeedv	modules/graphic/ssggraph/grcam.h	/^    sgVec3 *getSpeedv(void) {$/;"	f	class:cGrCamera
getSpotAttenuation	windows/include/plib/ssg.h	/^  void getSpotAttenuation ( float *constant, float *linear, float *quadratic )$/;"	f	class:ssgLight
getSpotDiffusion	windows/include/plib/ssg.h	/^  void getSpotDiffusion ( float *exp, float *cut = 0 )$/;"	f	class:ssgLight
getSpotDirection	windows/include/plib/ssg.h	/^  void getSpotDirection ( sgVec3 dir )       { sgCopyVec3 ( dir, direction ) ; }$/;"	f	class:ssgLight
getState	drivers/bt/opponent.h	/^		int getState() { return state; }$/;"	f	class:Opponent
getState	drivers/damned/opponent.h	/^		int getState() { return state; }$/;"	f	class:Opponent
getState	drivers/olethros/opponent.h	/^		int getState() { return state; }$/;"	f	class:olethros::Opponent
getState	drivers/olethros/pit.h	/^		enum PitState getState (void) {return pit_state;}$/;"	f	class:olethros::Pit
getState	drivers/sparkle/opponent.h	/^		int getState() { return state; }$/;"	f	class:Opponent
getState	windows/include/plib/ssg.h	/^  ssgSimpleState *getState () { return currentState ; }$/;"	f	class:ssgContext
getState	windows/include/plib/ssg.h	/^  ssgState *getState () { return state ; }$/;"	f	class:ssgLeaf
getState1	modules/graphic/ssggraph/grvtxtable.h	/^  ssgState *getState1 () { return state1 ; }$/;"	f	class:grVtxTable
getState2	modules/graphic/ssggraph/grvtxtable.h	/^  ssgState *getState2 () { return state2 ; }$/;"	f	class:grVtxTable
getState3	modules/graphic/ssggraph/grvtxtable.h	/^  ssgState *getState3 () { return state3 ; }$/;"	f	class:grVtxTable
getStateCallback	windows/include/plib/ssg.h	/^  ssgStateCallback getStateCallback ( int cb_type )$/;"	f	class:ssgState
getStaticSource	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^bool OpenalSoundInterface::getStaticSource(ALuint *source)$/;"	f	class:OpenalSoundInterface
getSteer	drivers/bt/driver.cpp	/^float Driver::getSteer()$/;"	f	class:Driver
getSteer	drivers/damned/driver.cpp	/^float Driver::getSteer()$/;"	f	class:Driver
getSteer	drivers/olethros/driver.cpp	/^    float Driver::getSteer()$/;"	f	class:olethros::Driver
getSteer	drivers/sparkle/driver.cpp	/^float Driver::getSteer()$/;"	f	class:Driver
getStepTime	windows/include/plib/sl.h	/^  float getStepTime  ( int s ) const { return time  [ s ] ; }$/;"	f	class:slEnvelope
getStepValue	windows/include/plib/sl.h	/^  float getStepValue ( int s ) const { return value [ s ] ; }$/;"	f	class:slEnvelope
getStereo	windows/include/plib/sl.h	/^  int  getStereo () const  { return stereo ; }$/;"	f	class:slSample
getStereo	windows/include/plib/sl.h	/^  int getStereo() const { return stereo ; }$/;"	f	class:slDSP
getStiffness	windows/include/plib/sg.h	/^  float       getStiffness  () { return stiffness  ; }$/;"	f	class:sgSpringDamper
getStuff	tools/texmapper/ssgSaveAC.cpp	/^static void getStuff ( ssgEntity *e, sgVec3 *vtab, saveTriangle *ttab )$/;"	f	file:
getTDError	libs/learning/policy.h	/^	virtual real getTDError () {return tdError;}$/;"	f	class:DiscretePolicy
getTargetPoint	drivers/bt/driver.cpp	/^vec2f Driver::getTargetPoint()$/;"	f	class:Driver
getTargetPoint	drivers/damned/driver.cpp	/^vec2f Driver::getTargetPoint()$/;"	f	class:Driver
getTargetPoint	drivers/olethros/driver.cpp	/^    v2d Driver::getTargetPoint()$/;"	f	class:olethros::Driver
getTargetPoint	drivers/sparkle/driver.cpp	/^v2d Driver::getTargetPoint()$/;"	f	class:Driver
getTexCoord	windows/include/plib/ssg.h	/^  float *getTexCoord(int i){ if(i>=num_texcoords)i=num_texcoords-1;$/;"	f	class:ssgVTable
getTexCoord	windows/include/plib/ssg.h	/^  float *getTexCoord(int i){ int nc=getNumTexCoords(); if(i>=nc)i=nc-1;$/;"	f	class:ssgVtxTable
getTexCoord1	modules/graphic/ssggraph/grvtxtable.h	/^  float *getTexCoord1(int i){ if(i>=getNumTexCoords())i=getNumTexCoords()-1;$/;"	f	class:grVtxTable
getTexCoord2	modules/graphic/ssggraph/grvtxtable.h	/^  float *getTexCoord2(int i){ if(i>=getNumTexCoords())i=getNumTexCoords()-1;$/;"	f	class:grVtxTable
getTexCoord3	modules/graphic/ssggraph/grvtxtable.h	/^  float *getTexCoord3(int i){ if(i>=getNumTexCoords())i=getNumTexCoords()-1;$/;"	f	class:grVtxTable
getTexCoordList	windows/include/plib/ssg.h	/^  void getTexCoordList ( void **list ) { *list = texcoords -> get ( 0 ) ; } $/;"	f	class:ssgVtxTable
getTexCoordList	windows/include/plib/ssg.h	/^  void getTexCoordList ( void **list, unsigned short **idx )$/;"	f	class:ssgVTable
getTexCoords	windows/include/plib/ssg.h	/^  ssgTexCoordArray *getTexCoords () { return texcoords ; }$/;"	f	class:ssgVtxTable
getTexScaleU	windows/include/plib/ssgaWaveSystem.h	/^  float getTexScaleU () { return tu ; }$/;"	f	class:ssgaWaveSystem
getTexScaleV	windows/include/plib/ssgaWaveSystem.h	/^  float getTexScaleV () { return tv ; }$/;"	f	class:ssgaWaveSystem
getTexture	windows/include/plib/ssg.h	/^  virtual ssgTexture* getTexture (void)$/;"	f	class:ssgSimpleState
getTextureDir	windows/include/plib/ssg.h	/^  const char* getTextureDir ( void ) const { return texture_dir ; }$/;"	f	class:ssgLoaderOptions
getTextureFilename	windows/include/plib/ssg.h	/^  virtual char *getTextureFilename(void)$/;"	f	class:ssgSimpleState
getTextureHandle	windows/include/plib/ssg.h	/^  virtual GLuint getTextureHandle (void)$/;"	f	class:ssgSimpleState
getTexureOffset	tools/trackgen/raceline.cpp	/^double getTexureOffset(double length)$/;"	f
getTimeMode	windows/include/plib/ssg.h	/^  ssgAnimTimeMode getTimeMode() const { return time_mode; }$/;"	f	class:ssgTimedSelector
getTimeNow	windows/include/plib/sl.h	/^  int   getTimeNow     () const { return now ; }$/;"	f	class:slScheduler
getToRight	drivers/berniw/trackdesc.h	/^		inline v3d* getToRight() { return &tr; }$/;"	f	class:TrackSegment
getToRight	drivers/berniw2/trackdesc.h	/^		inline v3d* getToRight() { return &tr; }$/;"	f	class:TrackSegment
getToRight	drivers/berniw3/trackdesc.h	/^		inline v3d* getToRight() { return &tr; }$/;"	f	class:TrackSegment
getToRight	drivers/human/trackdesc.h	/^		inline v3d* getToRight() { return &tr; }$/;"	f	class:TrackSegment
getToRight	drivers/inferno/trackdesc.h	/^		inline const vec2d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment2D
getToRight	drivers/inferno/trackdesc.h	/^		inline const vec3d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment
getToRight	drivers/lliaw/trackdesc.h	/^		inline const vec2d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment2D
getToRight	drivers/lliaw/trackdesc.h	/^		inline const vec3d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment
getToRight	drivers/tita/trackdesc.h	/^		inline const vec2d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment2D
getToRight	drivers/tita/trackdesc.h	/^		inline const vec3d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment
getTop	windows/include/plib/sg.h	/^  SGDfloat  getTop  (void) const { return top   ; }$/;"	f	class:sgdFrustum
getTop	windows/include/plib/sg.h	/^  SGfloat  getTop  (void) const { return top   ; }$/;"	f	class:sgFrustum
getTorcsTrack	drivers/berniw/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	drivers/berniw2/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	drivers/berniw3/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	drivers/human/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	drivers/inferno/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	drivers/lliaw/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	drivers/tita/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrackSeg	drivers/inferno/trackdesc.h	/^		inline tTrackSeg* getTorcsTrackSeg() const { return pTrackSeg; }$/;"	f	class:TrackSegment2D
getTorcsTrackSeg	drivers/lliaw/trackdesc.h	/^		inline tTrackSeg* getTorcsTrackSeg() const { return pTrackSeg; }$/;"	f	class:TrackSegment2D
getTorcsTrackSeg	drivers/tita/trackdesc.h	/^		inline tTrackSeg* getTorcsTrackSeg() const { return pTrackSeg; }$/;"	f	class:TrackSegment2D
getTrackMap	modules/graphic/ssggraph/grboard.h	/^	cGrTrackMap *getTrackMap() { return trackMap; }$/;"	f	class:cGrBoard
getTrackPtr	drivers/bt/driver.h	/^		tTrack *getTrackPtr() { return track; }$/;"	f	class:Driver
getTrackPtr	drivers/damned/driver.h	/^		tTrack *getTrackPtr() { return track; }$/;"	f	class:Driver
getTrackPtr	drivers/olethros/driver.h	/^	tTrack *getTrackPtr() { return track; }$/;"	f	class:olethros::Driver
getTrackPtr	drivers/sparkle/driver.h	/^		tTrack *getTrackPtr() { return track; }$/;"	f	class:Driver
getTrackSurface	modules/track/track4.cpp	/^static tTrackSurface* getTrackSurface(void *trackHandle, tTrack *theTrack, const char *material)$/;"	f	file:
getTrackangle	drivers/bt/cardata.h	/^		inline float getTrackangle() { return trackangle; }$/;"	f	class:SingleCardata
getTrackangle	drivers/damned/cardata.h	/^		inline float getTrackangle() { return trackangle; }$/;"	f	class:SingleCardata
getTrackangle	drivers/olethros/cardata.h	/^	inline float getTrackangle() { return trackangle; }$/;"	f	class:olethros::SingleCardata
getTransform	windows/include/plib/ssg.h	/^  void getTransform ( sgMat4 xform )$/;"	f	class:ssgBaseTransform
getTravCallback	windows/include/plib/ssg.h	/^  ssgTravCallback getTravCallback ( int cb_type )$/;"	f	class:ssgEntity
getTraversalMask	windows/include/plib/ssg.h	/^  int  getTraversalMask     ()        { return traversal_mask ;}$/;"	f	class:ssgEntity
getTriangle	modules/graphic/ssggraph/grcarlight.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxTable::getTriangle(n,v1,v2,v3);}$/;"	f	class:ssgVtxTableCarlight
getTriangle	modules/graphic/ssggraph/grshadow.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxTable::getTriangle(n,v1,v2,v3);}$/;"	f	class:ssgVtxTableShadow
getTriangle	modules/graphic/ssggraph/grsmoke.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxTable::getTriangle(n,v1,v2,v3);}$/;"	f	class:ssgVtxTableSmoke
getTriangle	modules/graphic/ssggraph/grvertexarray.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxArray::getTriangle(n,v1,v2,v3);}$/;"	f	class:ssgGrVtxArray
getTriangle	modules/graphic/ssggraph/grvtxtable.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxTable::getTriangle(n,v1,v2,v3);}$/;"	f	class:grVtxTable
getType	drivers/berniw/trackdesc.h	/^		inline int getType() { return type; }$/;"	f	class:TrackSegment
getType	drivers/berniw2/trackdesc.h	/^		inline int getType() { return type; }$/;"	f	class:TrackSegment
getType	drivers/berniw3/trackdesc.h	/^		inline int getType() { return type; }$/;"	f	class:TrackSegment
getType	drivers/human/trackdesc.h	/^		inline int getType() { return type; }$/;"	f	class:TrackSegment
getType	drivers/inferno/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment
getType	drivers/inferno/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment2D
getType	drivers/lliaw/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment
getType	drivers/lliaw/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment2D
getType	drivers/tita/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment
getType	drivers/tita/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment2D
getType	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  ShapeType getType() const { return COMPLEX; } $/;"	f	class:Complex
getType	modules/simu/simuv2/SOLID-2.0/src/Convex.h	/^  ShapeType getType() const { return CONVEX; } $/;"	f	class:Convex
getType	windows/include/plib/ssg.h	/^  int   getType    (void)     { return type ; }$/;"	f	class:ssgBase
getTypeName	modules/graphic/ssggraph/grcarlight.h	/^  virtual const char *getTypeName(void)  { return ssgVtxTable::getTypeName();}$/;"	f	class:ssgVtxTableCarlight
getTypeName	modules/graphic/ssggraph/grshadow.h	/^  virtual const char *getTypeName(void)  { return ssgVtxTable::getTypeName();}$/;"	f	class:ssgVtxTableShadow
getTypeName	modules/graphic/ssggraph/grsmoke.h	/^  virtual const char *getTypeName(void)  { return ssgVtxTable::getTypeName();}$/;"	f	class:ssgVtxTableSmoke
getTypeName	modules/graphic/ssggraph/grvertexarray.h	/^  virtual char *getTypeName(void) { return ssgVtxArray::getTypeName();}$/;"	f	class:ssgGrVtxArray
getTypeName	modules/graphic/ssggraph/grvtxtable.h	/^  virtual const char *getTypeName(void)  { return ssgVtxTable::getTypeName();}$/;"	f	class:grVtxTable
getUnique	windows/include/plib/ssg.h	/^  int  getUnique () { return unique ; }$/;"	f	class:ssgBase
getUp	modules/graphic/ssggraph/grcam.h	/^    t3Dd *getUp(void) {$/;"	f	class:cGrCamera
getUpper	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Scalar getUpper(int i) const { return center[i] + extent[i]; }$/;"	f	class:BBox
getUpv	modules/graphic/ssggraph/grcam.h	/^    sgVec3 *getUpv(void) {$/;"	f	class:cGrCamera
getUserData	windows/include/plib/ssg.h	/^  ssgBase *getUserData () { return user_data ; }$/;"	f	class:ssgBase
getUserTextureMaxSize	libs/tgfclient/glfeatures.cpp	/^int getUserTextureMaxSize(void)$/;"	f
getUserTextureMaxSize	libs/tgfclient/glfeatures.cpp	/^void getUserTextureMaxSize(int &result)$/;"	f
getVFOV	windows/include/plib/sg.h	/^  SGDfloat  getVFOV (void) const { return vfov  ; }$/;"	f	class:sgdFrustum
getVFOV	windows/include/plib/sg.h	/^  SGfloat  getVFOV (void) const { return vfov  ; }$/;"	f	class:sgFrustum
getValNumFromStr	libs/tgf/params.cpp	/^static tdble getValNumFromStr(const char *str) {$/;"	f	file:
getValue	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Mat3&       getValue()       { return elem; }$/;"	f	class:Matrix
getValue	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  const Mat3& getValue() const { return elem; }$/;"	f	class:Matrix
getValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Scalar       *getValue()       { return comp; }$/;"	f	class:Tuple3
getValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  const Scalar *getValue() const { return comp; }$/;"	f	class:Tuple3
getValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Scalar       *getValue()       { return comp; }$/;"	f	class:Tuple4
getValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  const Scalar *getValue() const { return comp; }$/;"	f	class:Tuple4
getVel	windows/include/plib/sg.h	/^  SGfloat *getVel   () { return vel      ; }$/;"	f	class:sgParticle
getVel	windows/include/plib/sg.h	/^  const SGfloat *getVel   () const { return vel      ; }$/;"	f	class:sgParticle
getVertex	windows/include/plib/ssg.h	/^  float *getVertex  (int i){ if(i>=num_vertices)i=num_vertices-1;$/;"	f	class:ssgVTable
getVertex	windows/include/plib/ssg.h	/^  float *getVertex  (int i){ int nv=getNumVertices(); if(i>=nv)i=nv-1;$/;"	f	class:ssgVtxTable
getVertexCount	windows/include/plib/ssg.h	/^  int getVertexCount () { return vertex_count ; }$/;"	f	class:ssgStatistics
getVertexList	windows/include/plib/ssg.h	/^  void getVertexList   ( void **list ) { *list = vertices  -> get ( 0 ) ; }$/;"	f	class:ssgVtxTable
getVertexList	windows/include/plib/ssg.h	/^  void getVertexList ( void **list, unsigned short **idx )$/;"	f	class:ssgVTable
getVertices	windows/include/plib/ssg.h	/^  ssgVertexArray   *getVertices  () { return vertices  ; }$/;"	f	class:ssgVtxTable
getViewMode	modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::getViewMode() {$/;"	f	class:cGrTrackMap
getViewRatio	modules/graphic/ssggraph/grscreen.h	/^		float getViewRatio(void) { return viewRatio; }$/;"	f	class:cGrScreen
getVolume	modules/graphic/ssggraph/TorcsSound.h	/^	virtual float getVolume() {return volume;}$/;"	f	class:TorcsSound
getWaveHeight	windows/include/plib/ssgaWaveSystem.h	/^  float getWaveHeight () { return height  ; }$/;"	f	class:ssgaWaveTrain
getWaveTrain	windows/include/plib/ssgaWaveSystem.h	/^  ssgaWaveTrain *getWaveTrain ( int i )$/;"	f	class:ssgaWaveSystem
getWeight	drivers/berniw/pathfinder.h	/^		inline tdble getWeight() { return weight; }$/;"	f	class:PathSeg
getWeight	drivers/berniw2/pathfinder.h	/^		inline tdble getWeight() { return weight; }$/;"	f	class:PathSeg
getWeight	drivers/berniw3/pathfinder.h	/^		inline tdble getWeight() { return weight; }$/;"	f	class:PathSeg
getWeight	drivers/human/pathfinder.h	/^		inline tdble getWeight() { return weight; }$/;"	f	class:PathSeg
getWheelBase	drivers/berniw/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	drivers/berniw2/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	drivers/berniw3/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	drivers/human/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	drivers/inferno/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	drivers/lliaw/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	drivers/tita/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelTrack	drivers/berniw/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	drivers/berniw2/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	drivers/berniw3/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	drivers/human/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	drivers/inferno/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	drivers/lliaw/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	drivers/tita/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWidth	drivers/berniw/trackdesc.h	/^		inline tdble getWidth() { return width; }$/;"	f	class:TrackSegment
getWidth	drivers/berniw2/trackdesc.h	/^		inline tdble getWidth() { return width; }$/;"	f	class:TrackSegment
getWidth	drivers/berniw3/trackdesc.h	/^		inline tdble getWidth() { return width; }$/;"	f	class:TrackSegment
getWidth	drivers/bt/opponent.h	/^		float getWidth() { return cardata->getWidthOnTrack(); }$/;"	f	class:Opponent
getWidth	drivers/damned/opponent.h	/^		float getWidth() { return cardata->getWidthOnTrack(); }$/;"	f	class:Opponent
getWidth	drivers/human/trackdesc.h	/^		inline tdble getWidth() { return width; }$/;"	f	class:TrackSegment
getWidth	drivers/inferno/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment
getWidth	drivers/inferno/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment2D
getWidth	drivers/lliaw/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment
getWidth	drivers/lliaw/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment2D
getWidth	drivers/olethros/opponent.h	/^		float getWidth() { return cardata->getWidthOnTrack(); }$/;"	f	class:olethros::Opponent
getWidth	drivers/sparkle/opponent.h	/^		float getWidth() { return width; }$/;"	f	class:Opponent
getWidth	drivers/tita/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment
getWidth	drivers/tita/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment2D
getWidth	libs/tgfclient/guifont.cpp	/^int GfuiFontClass::getWidth(const char* text)$/;"	f	class:GfuiFontClass
getWidthOnTrack	drivers/bt/cardata.h	/^		inline float getWidthOnTrack() { return width; }$/;"	f	class:SingleCardata
getWidthOnTrack	drivers/damned/cardata.h	/^		inline float getWidthOnTrack() { return width; }$/;"	f	class:SingleCardata
getWidthOnTrack	drivers/olethros/cardata.h	/^	inline float getWidthOnTrack() { return width; }$/;"	f	class:olethros::SingleCardata
getWindDirn	windows/include/plib/ssgaWaveSystem.h	/^  float getWindDirn      () { return windHeading ; }$/;"	f	class:ssgaWaveSystem
getWindSpeed	windows/include/plib/ssgaWaveSystem.h	/^  float getWindSpeed     () { return windSpeed   ; }$/;"	f	class:ssgaWaveSystem
getZoom	topview/Camera.hpp	/^	float getZoom() {$/;"	f	class:kmuvcl::Camera
get_crc_table	windows/include/zconf.h	49;"	d
get_ith_column	topview/mat.hpp	/^      void get_ith_column(unsigned int i, vec<M, T>& col) const$/;"	f	class:kmuvcl::math::mat
get_ith_row	topview/mat.hpp	/^      void get_ith_row(unsigned int i, vec<N, T>& row) const$/;"	f	class:kmuvcl::math::mat
get_state	modules/graphic/ssggraph/grloadac.cpp	/^static ssgState *get_state ( _ssgMaterial *mat )$/;"	f	file:
get_state_ext	modules/graphic/ssggraph/grloadac.cpp	/^static ssgState *get_state_ext ( char * name)$/;"	f	file:
get_time	windows/include/plib/ssg.h	/^  double get_time() const$/;"	f	class:ssgTimedSelector
getid	drivers/inferno/pathfinder.h	/^		int getid(int id) {$/;"	f	class:PathSeg
getid	drivers/lliaw/pathfinder.h	/^		int getid(int id) {$/;"	f	class:PathSeg
getid	drivers/tita/pathfinder.h	/^		int getid(int id) {$/;"	f	class:PathSeg
getnPathSeg	drivers/berniw/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	drivers/berniw2/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	drivers/berniw3/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	drivers/human/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	drivers/inferno/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	drivers/lliaw/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	drivers/tita/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnTrackSegments	drivers/berniw/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	drivers/berniw2/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	drivers/berniw3/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	drivers/human/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	drivers/inferno/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	drivers/lliaw/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	drivers/tita/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
gfDirInit	libs/tgf/directory.cpp	/^gfDirInit(void)$/;"	f
gfId	libs/tgf/tgf.h	/^    unsigned int	gfId;		\/**< supported framework version *\/$/;"	m	struct:ModInfo
gfIncreaseHash	libs/tgf/hash.cpp	/^static void gfIncreaseHash(tHashHeader *curHeader)$/;"	f	file:
gfJoyFirstInit	libs/tgfclient/control.cpp	/^static void gfJoyFirstInit(void)$/;"	f	file:
gfMean	libs/tgf/tgf.cpp	/^tdble gfMean(tdble v, tMeanVal *pvt, int n, int w)$/;"	f
gfMeanReset	libs/tgf/tgf.cpp	/^void gfMeanReset(tdble v, tMeanVal *pvt)$/;"	f
gfMenuInit	libs/tgfclient/guimenu.cpp	/^gfMenuInit(void)$/;"	f
gfModInit	libs/tgf/module.cpp	/^gfModInit(void)$/;"	f
gfOsInit	libs/tgf/os.cpp	/^gfOsInit(void)$/;"	f
gfRemElem	libs/tgf/hash.cpp	/^static const void *gfRemElem(tHashHead *hashHead, tHashElem *elem)$/;"	f	file:
gfScreenInit	libs/tgfclient/screen.cpp	/^gfScreenInit(void)$/;"	f
gfTraceInit	libs/tgf/trace.cpp	/^gfTraceInit(void)$/;"	f
gfctrlJoyPresent	libs/tgfclient/control.cpp	/^static int gfctrlJoyPresent = GFCTRL_JOY_UNTESTED;$/;"	v	file:
gfmaxJoyAxis	libs/tgfclient/control.cpp	/^static int gfmaxJoyAxis		= sizeof(GfJoyAxis)	\/ sizeof(GfJoyAxis[0]);$/;"	v	file:
gfmaxJoyButton	libs/tgfclient/control.cpp	/^static int gfmaxJoyButton	= sizeof(GfJoyBtn)	\/ sizeof(GfJoyBtn[0]);$/;"	v	file:
gfmaxKey	libs/tgfclient/control.cpp	/^static int gfmaxKey		= sizeof(GfKey)		\/ sizeof(GfKey[0]);$/;"	v	file:
gfmaxMouseAxis	libs/tgfclient/control.cpp	/^static int gfmaxMouseAxis	= sizeof(GfMouseAxis)	\/ sizeof(GfMouseAxis[0]);$/;"	v	file:
gfmaxMouseButton	libs/tgfclient/control.cpp	/^static int gfmaxMouseButton	= sizeof(GfMouseBtn)	\/ sizeof(GfMouseBtn[0]);$/;"	v	file:
gfmaxSKey	libs/tgfclient/control.cpp	/^static int gfmaxSKey		= sizeof(GfSKey)	\/ sizeof(GfSKey[0]);$/;"	v	file:
gfuiAddObject	libs/tgfclient/guiobject.cpp	/^gfuiAddObject(tGfuiScreen *screen, tGfuiObject *object)$/;"	f
gfuiButtonAction	libs/tgfclient/guibutton.cpp	/^gfuiButtonAction(int action)$/;"	f
gfuiButtonInit	libs/tgfclient/guibutton.cpp	/^gfuiButtonInit(void)$/;"	f
gfuiColorInit	libs/tgfclient/gui.cpp	/^gfuiColorInit(void)$/;"	f	file:
gfuiDrawButton	libs/tgfclient/guibutton.cpp	/^gfuiDrawButton(tGfuiObject *obj)$/;"	f
gfuiDrawEditbox	libs/tgfclient/guiedit.cpp	/^gfuiDrawEditbox(tGfuiObject *obj)$/;"	f
gfuiDrawGrButton	libs/tgfclient/guibutton.cpp	/^gfuiDrawGrButton(tGfuiObject *obj)$/;"	f
gfuiDrawImage	libs/tgfclient/guiimage.cpp	/^gfuiDrawImage(tGfuiObject *obj)$/;"	f
gfuiDrawLabel	libs/tgfclient/guilabel.cpp	/^gfuiDrawLabel(tGfuiObject *obj)$/;"	f
gfuiDrawScrollist	libs/tgfclient/guiscrollist.cpp	/^gfuiDrawScrollist(tGfuiObject *obj)$/;"	f
gfuiEditboxAction	libs/tgfclient/guiedit.cpp	/^gfuiEditboxAction(int mouse)$/;"	f
gfuiEditboxInit	libs/tgfclient/guiedit.cpp	/^gfuiEditboxInit(void)$/;"	f
gfuiEditboxKey	libs/tgfclient/guiedit.cpp	/^gfuiEditboxKey(tGfuiObject *obj, int key, int modifier)$/;"	f
gfuiEditboxRecalcCursor	libs/tgfclient/guiedit.cpp	/^gfuiEditboxRecalcCursor(tGfuiObject *obj)$/;"	f	file:
gfuiFont	libs/tgfclient/guifont.cpp	/^GfuiFontClass *gfuiFont[FONT_NB];$/;"	v
gfuiGetObject	libs/tgfclient/guiobject.cpp	/^gfuiGetObject(void *scr, int id)$/;"	f
gfuiGrButtonAction	libs/tgfclient/guibutton.cpp	/^gfuiGrButtonAction(int action)$/;"	f
gfuiHelpInit	libs/tgfclient/guihelp.cpp	/^gfuiHelpInit(void)$/;"	f
gfuiInit	libs/tgfclient/gui.cpp	/^gfuiInit(void)$/;"	f
gfuiKeyboard	libs/tgfclient/gui.cpp	/^gfuiKeyboard(unsigned char key, int \/* x *\/, int \/* y *\/)$/;"	f	file:
gfuiKeyboardUp	libs/tgfclient/gui.cpp	/^gfuiKeyboardUp(unsigned char key, int \/* x *\/, int \/* y *\/)$/;"	f	file:
gfuiLabelInit	libs/tgfclient/guilabel.cpp	/^gfuiLabelInit(void)$/;"	f
gfuiLoadFonts	libs/tgfclient/guifont.cpp	/^void gfuiLoadFonts(void)$/;"	f
gfuiLoseFocus	libs/tgfclient/guiobject.cpp	/^gfuiLoseFocus(tGfuiObject *obj)$/;"	f	file:
gfuiMotion	libs/tgfclient/gui.cpp	/^gfuiMotion(int x, int y)$/;"	f	file:
gfuiMouse	libs/tgfclient/gui.cpp	/^gfuiMouse(int button, int state, int x, int y)$/;"	f	file:
gfuiMouseAction	libs/tgfclient/guiobject.cpp	/^gfuiMouseAction(void *vaction)$/;"	f
gfuiMouseIn	libs/tgfclient/guiobject.cpp	/^gfuiMouseIn(tGfuiObject *obj)$/;"	f	file:
gfuiObjectInit	libs/tgfclient/guiobject.cpp	/^gfuiObjectInit(void)$/;"	f
gfuiPassiveMotion	libs/tgfclient/gui.cpp	/^gfuiPassiveMotion(int x, int y)$/;"	f	file:
gfuiPrintString	libs/tgfclient/guiobject.cpp	/^gfuiPrintString(int x, int y, GfuiFontClass *font, const char *string)$/;"	f
gfuiReleaseButton	libs/tgfclient/guibutton.cpp	/^gfuiReleaseButton(tGfuiObject *obj)$/;"	f
gfuiReleaseEditbox	libs/tgfclient/guiedit.cpp	/^gfuiReleaseEditbox(tGfuiObject *curObject)$/;"	f
gfuiReleaseGrButton	libs/tgfclient/guibutton.cpp	/^gfuiReleaseGrButton(tGfuiObject *obj)$/;"	f
gfuiReleaseImage	libs/tgfclient/guiimage.cpp	/^gfuiReleaseImage(tGfuiObject *obj)$/;"	f
gfuiReleaseLabel	libs/tgfclient/guilabel.cpp	/^gfuiReleaseLabel(tGfuiObject *obj)$/;"	f
gfuiReleaseObject	libs/tgfclient/guiobject.cpp	/^gfuiReleaseObject(tGfuiObject *curObject)$/;"	f
gfuiReleaseScrollbar	libs/tgfclient/guiscrollbar.cpp	/^gfuiReleaseScrollbar(tGfuiObject *curObject)$/;"	f
gfuiReleaseScrollist	libs/tgfclient/guiscrollist.cpp	/^gfuiReleaseScrollist(tGfuiObject *curObject)$/;"	f
gfuiScrListInit	libs/tgfclient/guiscrollist.cpp	/^gfuiScrListInit(void)$/;"	f
gfuiScroll	libs/tgfclient/guiscrollist.cpp	/^gfuiScroll(tScrollBarInfo *sinfo)$/;"	f	file:
gfuiScrollBarInit	libs/tgfclient/guiscrollbar.cpp	/^gfuiScrollBarInit(void)$/;"	f
gfuiScrollListAction	libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListAction(int mouse)$/;"	f
gfuiScrollListDeselectAll	libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListDeselectAll(void)$/;"	f
gfuiScrollListInsElt	libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListInsElt(tGfuiScrollList *scrollist, tGfuiListElement *elt, int index)$/;"	f	file:
gfuiScrollListNextElt	libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListNextElt(tGfuiObject *object)$/;"	f
gfuiScrollListPrevElt	libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListPrevElt(tGfuiObject *object)$/;"	f
gfuiScrollListRemElt	libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListRemElt(tGfuiScrollList *scrollist, int index)$/;"	f	file:
gfuiScrollMinus	libs/tgfclient/guiscrollbar.cpp	/^gfuiScrollMinus(void *idv)$/;"	f	file:
gfuiScrollPlus	libs/tgfclient/guiscrollbar.cpp	/^gfuiScrollPlus(void *idv)$/;"	f	file:
gfuiSelectId	libs/tgfclient/guiobject.cpp	/^gfuiSelectId(void *scr, int id)$/;"	f
gfuiSelectNext	libs/tgfclient/guiobject.cpp	/^gfuiSelectNext(void * \/* dummy *\/)$/;"	f
gfuiSelectPrev	libs/tgfclient/guiobject.cpp	/^gfuiSelectPrev(void * \/* dummy *\/)$/;"	f
gfuiSetFocus	libs/tgfclient/guiobject.cpp	/^gfuiSetFocus(tGfuiObject *obj)$/;"	f	file:
gfuiSetLabelText	libs/tgfclient/guilabel.cpp	/^gfuiSetLabelText(tGfuiObject *curObject, tGfuiLabel *label, const char *text)$/;"	f
gfuiSpecial	libs/tgfclient/gui.cpp	/^gfuiSpecial(int key, int \/* x *\/, int \/* y *\/)$/;"	f	file:
gfuiSpecialUp	libs/tgfclient/gui.cpp	/^gfuiSpecialUp(int key, int \/* x *\/, int \/* y *\/)$/;"	f	file:
gfuiUpdateFocus	libs/tgfclient/guiobject.cpp	/^gfuiUpdateFocus(void)$/;"	f
glActiveTextureARB	modules/graphic/ssggraph/grmain.cpp	/^PFNGLACTIVETEXTUREARBPROC glActiveTextureARB = NULL;$/;"	v
glClientActiveTextureARB	modules/graphic/ssggraph/grmain.cpp	/^PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB = NULL;$/;"	v
glMultiTexCoord2fARB	modules/graphic/ssggraph/grmain.cpp	/^PFNGLMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB = NULL;$/;"	v
glMultiTexCoord2fvARB	modules/graphic/ssggraph/grmain.cpp	/^PFNGLMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB = NULL;$/;"	v
glTextureMaxSize	libs/tgfclient/glfeatures.cpp	/^static int glTextureMaxSize;$/;"	v	file:
global_gain	modules/graphic/ssggraph/SoundInterface.h	/^	float global_gain;$/;"	m	class:OpenalSoundInterface
global_gain	modules/graphic/ssggraph/SoundInterface.h	/^	float global_gain;$/;"	m	class:PlibSoundInterface
gltype	windows/include/plib/ssg.h	/^  GLenum gltype ;$/;"	m	class:ssgLeaf
glue_bits	windows/include/vorbis/codec.h	/^  long glue_bits;$/;"	m	struct:vorbis_block
glue_bits	windows/include/vorbis/codec.h	/^  ogg_int64_t glue_bits;$/;"	m	struct:vorbis_dsp_state
grAdaptScreenSize	modules/graphic/ssggraph/grmain.cpp	/^static void grAdaptScreenSize(void)$/;"	f	file:
grAddCarlight	modules/graphic/ssggraph/grcarlight.cpp	/^void grAddCarlight(tCarElt *car, int type, sgVec3 pos, double size)$/;"	f
grAddSmoke	modules/graphic/ssggraph/grsmoke.cpp	/^void grAddSmoke(tCarElt *car, double t)$/;"	f
grBlack	modules/graphic/ssggraph/grboard.cpp	/^static float grBlack[4] = {0.0, 0.0, 0.0, 1.0};$/;"	v	file:
grBlue	modules/graphic/ssggraph/grboard.cpp	/^static float grBlue[4] = {0.0, 0.0, 1.0, 1.0};$/;"	v	file:
grCamCreateSceneCameraList	modules/graphic/ssggraph/grcam.cpp	/^grCamCreateSceneCameraList(class cGrScreen *myscreen, tGrCamHead *cams, tdble fovFactor)$/;"	f
grCarIndex	modules/graphic/ssggraph/grcar.cpp	/^static int grCarIndex;$/;"	v	file:
grCarInfo	modules/graphic/ssggraph/grmain.cpp	/^tgrCarInfo *grCarInfo;$/;"	v
grContext	modules/graphic/ssggraph/grmain.cpp	/^ssgContext grContext;$/;"	v
grCurTime	modules/graphic/ssggraph/grmain.cpp	/^double grCurTime;$/;"	v
grCustomizePits	modules/graphic/ssggraph/grscene.cpp	/^grCustomizePits(void)$/;"	f
grDefaultClr	modules/graphic/ssggraph/grboard.cpp	/^static float grDefaultClr[4] = {0.9, 0.9, 0.15, 1.0};$/;"	v	file:
grDeltaTime	modules/graphic/ssggraph/grmain.cpp	/^double grDeltaTime;$/;"	v
grDispArcade	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispArcade(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispCarBoard	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCarBoard(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispCarBoard1	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCarBoard1(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispCarBoard2	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCarBoard2(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispCounterBoard	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCounterBoard(tCarElt *car)$/;"	f	class:cGrBoard
grDispCounterBoard2	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCounterBoard2(tCarElt *car)$/;"	f	class:cGrBoard
grDispDebug	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispDebug(float fps, tCarElt *car)$/;"	f	class:cGrBoard
grDispEngineLeds	modules/graphic/ssggraph/grboard.cpp	/^grDispEngineLeds (tCarElt *car, int X, int Y, int align, int bg)$/;"	f	file:
grDispGGraph	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispGGraph(tCarElt *car)$/;"	f	class:cGrBoard
grDispLeaderBoard	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispLeaderBoard(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispMisc	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispMisc(tCarElt *car)$/;"	f	class:cGrBoard
grDrawBackground	modules/graphic/ssggraph/grscene.cpp	/^void grDrawBackground(class cGrCamera *cam, class cGrBackgroundCam *bgCam)$/;"	f
grDrawCar	modules/graphic/ssggraph/grcar.cpp	/^void grDrawCar(tCarElt *car, tCarElt *curCar, int dispCarFlag, int dispDrvFlag, double curTime, class cGrPerspCamera *curCam)$/;"	f
grDrawGauge	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDrawGauge(tdble X1, tdble Y1, tdble H, float *clr1, float *clr2, tdble val, const char *title)$/;"	f	class:cGrBoard
grDrawScene	modules/graphic/ssggraph/grscene.cpp	/^void grDrawScene(void)$/;"	f
grDrawShadow	modules/graphic/ssggraph/grcar.cpp	/^grDrawShadow(tCarElt *car, int visible)$/;"	f	file:
grDrawSkidmarks	modules/graphic/ssggraph/grskidmarks.cpp	/^void grDrawSkidmarks (tCarElt *car)$/;"	f
grEnvSelector	modules/graphic/ssggraph/grscene.cpp	/^ssgStateSelector	*grEnvSelector;$/;"	v
grEnvShadowState	modules/graphic/ssggraph/grscene.cpp	/^grMultiTexState	*grEnvShadowState=NULL;$/;"	v
grEnvShadowStateOnCars	modules/graphic/ssggraph/grscene.cpp	/^grMultiTexState	*grEnvShadowStateOnCars=NULL;$/;"	v
grEnvState	modules/graphic/ssggraph/grscene.cpp	/^grMultiTexState	*grEnvState=NULL;$/;"	v
grFilePath	modules/graphic/ssggraph/grutil.cpp	/^char *grFilePath;			\/\/ Multiple path (';' separated) used to search for files.$/;"	v
grFireDeltaT	modules/graphic/ssggraph/grsmoke.cpp	/^double grFireDeltaT;$/;"	v
grFps	modules/graphic/ssggraph/grmain.cpp	/^float grFps;$/;"	v
grGammaValue	modules/graphic/ssggraph/grutil.cpp	/^float grGammaValue = 1.8;$/;"	v
grGetDistToStart	modules/graphic/ssggraph/grcar.cpp	/^tdble grGetDistToStart(tCarElt *car)$/;"	f
grGetFilename	modules/graphic/ssggraph/grutil.cpp	/^int grGetFilename(const char *filename, char *filepath, char *buf, const int BUFSIZE)$/;"	f
grGetHOT	modules/graphic/ssggraph/grutil.cpp	/^float grGetHOT(float x, float y)$/;"	f
grGetState	modules/graphic/ssggraph/grutil.cpp	/^static grManagedState * grGetState(char *img)$/;"	f	file:
grGetcurrentScreen	modules/graphic/ssggraph/grmain.cpp	/^grGetcurrentScreen(void)$/;"	f	file:
grGreen	modules/graphic/ssggraph/grboard.cpp	/^static float grGreen[4] = {0.0, 1.0, 0.0, 1.0};$/;"	v	file:
grHandle	modules/graphic/ssggraph/grmain.cpp	/^void *grHandle = NULL;$/;"	v
grInitBoardCar	modules/graphic/ssggraph/grboard.cpp	/^void grInitBoardCar(tCarElt *car)$/;"	f
grInitCar	modules/graphic/ssggraph/grcar.cpp	/^grInitCar(tCarElt *car)$/;"	f
grInitCarlight	modules/graphic/ssggraph/grcarlight.cpp	/^void grInitCarlight(int index)$/;"	f
grInitCommonState	modules/graphic/ssggraph/grcar.cpp	/^void grInitCommonState(void)$/;"	f
grInitScene	modules/graphic/ssggraph/grscene.cpp	/^grInitScene(void)$/;"	f
grInitShadow	modules/graphic/ssggraph/grcar.cpp	/^void grInitShadow(tCarElt *car)$/;"	f
grInitSkidmarks	modules/graphic/ssggraph/grskidmarks.cpp	/^void grInitSkidmarks(tCarElt *car)$/;"	f
grInitSmoke	modules/graphic/ssggraph/grsmoke.cpp	/^void grInitSmoke(int index)$/;"	f
grInitSound	modules/graphic/ssggraph/grsound.cpp	/^void grInitSound(tSituation* s, int ncars)$/;"	f
grLinkCarlights	modules/graphic/ssggraph/grcarlight.cpp	/^void grLinkCarlights(tCarElt *car)$/;"	f
grLoadPngTexture	modules/graphic/ssggraph/grutil.cpp	/^bool grLoadPngTexture (const char *fname, ssgTextureInfo* info)$/;"	f
grLoadSGI	modules/graphic/ssggraph/grtexture.cpp	/^bool grLoadSGI(const char *fname, ssgTextureInfo* info)$/;"	f
grLoadScene	modules/graphic/ssggraph/grscene.cpp	/^grLoadScene(tTrack *track)$/;"	f
grLodFactorValue	modules/graphic/ssggraph/grmain.cpp	/^tdble grLodFactorValue = 1.0;$/;"	v
grMakeLookAtMat4	modules/graphic/ssggraph/grcam.cpp	/^grMakeLookAtMat4 ( sgMat4 dst, const sgVec3 eye, const sgVec3 center, const sgVec3 up )$/;"	f	file:
grMakeMipMaps	modules/graphic/ssggraph/grtexture.cpp	/^bool grMakeMipMaps (GLubyte *image, int xsize, int ysize, int zsize, bool mipmap)$/;"	f
grManagedState	modules/graphic/ssggraph/grtexture.h	/^class grManagedState : public ssgSimpleState {$/;"	c
grMaxDammage	modules/graphic/ssggraph/grmain.cpp	/^tdble grMaxDammage = 10000.0;$/;"	v
grMipMap	modules/graphic/ssggraph/grutil.cpp	/^int grMipMap = 0;$/;"	v
grMouseRatioX	modules/graphic/ssggraph/grmain.cpp	/^static float grMouseRatioX, grMouseRatioY;$/;"	v	file:
grMouseRatioY	modules/graphic/ssggraph/grmain.cpp	/^static float grMouseRatioX, grMouseRatioY;$/;"	v	file:
grMultiTexState	modules/graphic/ssggraph/grmultitexstate.h	/^class grMultiTexState : public grManagedState$/;"	c
grMuteForMenu	modules/graphic/ssggraph/grsound.cpp	/^void grMuteForMenu(void)$/;"	f
grNbCars	modules/graphic/ssggraph/grmain.cpp	/^int grNbCars = 0;$/;"	v
grNbScreen	modules/graphic/ssggraph/grmain.cpp	/^int grNbScreen = 1;$/;"	v
grNextCar	modules/graphic/ssggraph/grmain.cpp	/^grNextCar(void * \/* dummy *\/)$/;"	f	file:
grPrevCar	modules/graphic/ssggraph/grmain.cpp	/^grPrevCar(void * \/* dummy *\/)$/;"	f	file:
grPropagateDamage	modules/graphic/ssggraph/grcar.cpp	/^void grPropagateDamage (ssgEntity* l, sgVec3 poc, sgVec3 force, int cnt)$/;"	f
grRed	modules/graphic/ssggraph/grboard.cpp	/^static float grRed[4] = {1.0, 0.0, 0.0, 1.0};$/;"	v	file:
grRefreshSound	modules/graphic/ssggraph/grsound.cpp	/^grRefreshSound(tSituation *s, cGrCamera	*camera)$/;"	f
grRegisterCustomSGILoader	modules/graphic/ssggraph/grtexture.cpp	/^void grRegisterCustomSGILoader(void)$/;"	f
grRemoveState	modules/graphic/ssggraph/grutil.cpp	/^void grRemoveState(char* img)$/;"	f
grSGIHeader	modules/graphic/ssggraph/grtexture.cpp	/^grSGIHeader::grSGIHeader(const char *fname, ssgTextureInfo* info)$/;"	f	class:grSGIHeader
grSGIHeader	modules/graphic/ssggraph/grtexture.h	/^class grSGIHeader : public ssgSGIHeader {$/;"	c
grScreens	modules/graphic/ssggraph/grmain.cpp	/^class cGrScreen *grScreens[GR_NB_MAX_SCREEN] = {NULL, NULL, NULL, NULL};$/;"	v	typeref:class:cGrScreen
grSelectBoard	modules/graphic/ssggraph/grmain.cpp	/^grSelectBoard(void *vp)$/;"	f	file:
grSelectCamera	modules/graphic/ssggraph/grmain.cpp	/^grSelectCamera(void *vp)$/;"	f	file:
grSelectTrackMap	modules/graphic/ssggraph/grmain.cpp	/^grSelectTrackMap(void * \/* vp *\/)$/;"	f	file:
grSetZoom	modules/graphic/ssggraph/grmain.cpp	/^grSetZoom(void *vp)$/;"	f	file:
grSetupState	modules/graphic/ssggraph/grutil.cpp	/^static void grSetupState(grManagedState *st, char *buf)$/;"	f	file:
grShudownCarlight	modules/graphic/ssggraph/grcarlight.cpp	/^void grShudownCarlight(void)$/;"	f
grShutdownBoardCar	modules/graphic/ssggraph/grboard.cpp	/^void grShutdownBoardCar(void)$/;"	f
grShutdownScene	modules/graphic/ssggraph/grscene.cpp	/^void grShutdownScene(void)$/;"	f
grShutdownSkidmarks	modules/graphic/ssggraph/grskidmarks.cpp	/^void grShutdownSkidmarks (void)$/;"	f
grShutdownSmoke	modules/graphic/ssggraph/grsmoke.cpp	/^void grShutdownSmoke ()$/;"	f
grShutdownSound	modules/graphic/ssggraph/grsound.cpp	/^grShutdownSound(int ncars)$/;"	f
grShutdownState	modules/graphic/ssggraph/grutil.cpp	/^void grShutdownState(void)$/;"	f
grSkidDeltaT	modules/graphic/ssggraph/grskidmarks.cpp	/^double grSkidDeltaT;$/;"	v
grSkidMaxPointByStrip	modules/graphic/ssggraph/grskidmarks.cpp	/^int grSkidMaxPointByStrip;$/;"	v
grSkidMaxStripByWheel	modules/graphic/ssggraph/grskidmarks.cpp	/^int grSkidMaxStripByWheel;$/;"	v
grSmokeDeltaT	modules/graphic/ssggraph/grsmoke.cpp	/^double grSmokeDeltaT;$/;"	v
grSmokeLife	modules/graphic/ssggraph/grsmoke.cpp	/^double grSmokeLife;$/;"	v
grSmokeMaxNumber	modules/graphic/ssggraph/grsmoke.cpp	/^int grSmokeMaxNumber;$/;"	v
grSplitScreen	modules/graphic/ssggraph/grmain.cpp	/^grSplitScreen(void *vp)$/;"	f	file:
grSsgEnvTexState	modules/graphic/ssggraph/grutil.cpp	/^ssgState * grSsgEnvTexState(const char *img)$/;"	f
grSsgLoadTexState	modules/graphic/ssggraph/grutil.cpp	/^ssgState * grSsgLoadTexState(const char *img)$/;"	f
grSsgLoadTexStateEx	modules/graphic/ssggraph/grutil.cpp	/^grSsgLoadTexStateEx(const char *img, char *filepath, int wrap, int mipmap)$/;"	f
grStateFactory	modules/graphic/ssggraph/grtexture.h	/^inline grManagedState* grStateFactory(void) { return new grManagedState(); }$/;"	f
grSwitchMirror	modules/graphic/ssggraph/grmain.cpp	/^grSwitchMirror(void * \/* dummy *\/)$/;"	f	file:
grTexturePath	modules/graphic/ssggraph/grutil.cpp	/^char *grTexturePath = NULL;	\/\/ Default ssg path.$/;"	v
grTrack	modules/graphic/ssggraph/grscene.cpp	/^tTrack 	 *grTrack;$/;"	v
grTrackHandle	modules/graphic/ssggraph/grmain.cpp	/^void *grTrackHandle = NULL;$/;"	v
grUpdateCarlight	modules/graphic/ssggraph/grcarlight.cpp	/^void grUpdateCarlight(tCarElt *car,class cGrPerspCamera *curCam, int disp)$/;"	f
grUpdateSkidmarks	modules/graphic/ssggraph/grskidmarks.cpp	/^void grUpdateSkidmarks(tCarElt *car, double t)$/;"	f
grUpdateSmoke	modules/graphic/ssggraph/grsmoke.cpp	/^void grUpdateSmoke(double t)$/;"	f
grUseDetailedWheels	modules/graphic/ssggraph/grmain.cpp	/^EWheelDetail grUseDetailedWheels = DETAILED;$/;"	v
grVtxTable	modules/graphic/ssggraph/grvtxtable.cpp	/^grVtxTable::grVtxTable (GLenum ty, ssgVertexArray   *vl,$/;"	f	class:grVtxTable
grVtxTable	modules/graphic/ssggraph/grvtxtable.cpp	/^grVtxTable::grVtxTable (int _numMapLevel,int _mapLevel)$/;"	f	class:grVtxTable
grVtxTable	modules/graphic/ssggraph/grvtxtable.h	/^class grVtxTable : public ssgVtxTable$/;"	c
grWhite	modules/graphic/ssggraph/grboard.cpp	/^static float grWhite[4] = {1.0, 1.0, 1.0, 1.0};$/;"	v	file:
grWinh	modules/graphic/ssggraph/grmain.cpp	/^int grWinx, grWiny, grWinw, grWinh;$/;"	v
grWinw	modules/graphic/ssggraph/grmain.cpp	/^int grWinx, grWiny, grWinw, grWinh;$/;"	v
grWinx	modules/graphic/ssggraph/grmain.cpp	/^int grWinx, grWiny, grWinw, grWinh;$/;"	v
grWiny	modules/graphic/ssggraph/grmain.cpp	/^int grWinx, grWiny, grWinw, grWinh;$/;"	v
grWriteTime	modules/graphic/ssggraph/grutil.cpp	/^void  grWriteTime(float *color, int font, int x, int y, tdble sec, int sgn)$/;"	f
grWrldMaxSize	modules/graphic/ssggraph/grscene.cpp	/^int grWrldMaxSize;$/;"	v
grWrldX	modules/graphic/ssggraph/grscene.cpp	/^int grWrldX;$/;"	v
grWrldY	modules/graphic/ssggraph/grscene.cpp	/^int grWrldY;$/;"	v
grWrldZ	modules/graphic/ssggraph/grscene.cpp	/^int grWrldZ;$/;"	v
gradTable	windows/include/plib/sg.h	/^  SGfloat gradTable [ SG_PERLIN_NOISE_WRAP_INDEX * 2 + 2 ] ;$/;"	m	class:sgPerlinNoise_1D
gradTable	windows/include/plib/sg.h	/^  sgVec2 gradTable [ SG_PERLIN_NOISE_WRAP_INDEX * 2 + 2 ] ;$/;"	m	class:sgPerlinNoise_2D
gradTable	windows/include/plib/sg.h	/^  sgVec3 gradTable [ SG_PERLIN_NOISE_WRAP_INDEX * 2 + 2 ] ;$/;"	m	class:sgPerlinNoise_3D
granule_vals	windows/include/ogg/ogg.h	/^  ogg_int64_t *granule_vals; \/* granulepos values for headers. Not compact$/;"	m	struct:__anon52
granulepos	windows/include/ogg/ogg.h	/^  ogg_int64_t   granulepos;$/;"	m	struct:__anon52
granulepos	windows/include/ogg/ogg.h	/^  ogg_int64_t  granulepos;$/;"	m	struct:__anon53
granulepos	windows/include/vorbis/codec.h	/^  ogg_int64_t granulepos;$/;"	m	struct:vorbis_block
granulepos	windows/include/vorbis/codec.h	/^  ogg_int64_t granulepos;$/;"	m	struct:vorbis_dsp_state
graphInit	modules/graphic/ssggraph/ssggraph.cpp	/^graphInit(int \/* idx *\/, void *pt)$/;"	f	file:
graphic	interfaces/track.h	/^    tTrackGraphicInfo	graphic;$/;"	m	struct:__anon68
graphicItf	interfaces/raceman.h	/^    tGraphicItf	graphicItf;$/;"	m	struct:__anon71
grass	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar grass;$/;"	m	class:CarSoundData
grass	modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap grass; $/;"	m	class:SoundInterface
grass_ride_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* grass_ride_sound; \/\/\/< rolling on dirt\/grass$/;"	m	class:SoundInterface
grass_skid	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar grass_skid;$/;"	m	class:CarSoundData
grass_skid	modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap grass_skid;$/;"	m	class:SoundInterface
grass_skid_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* grass_skid_sound; \/\/\/< skidding on dirt\/grass$/;"	m	class:SoundInterface
gravityOnly	windows/include/plib/sg.h	/^  void gravityOnly ()           { sgScaleVec3  ( force, sgGetGravityVec3 (), ooMass ) ; }$/;"	f	class:sgParticle
gray	windows/include/png.h	/^   png_byte gray;  \/* for use in grayscale files *\/$/;"	m	struct:png_color_8_struct
gray	windows/include/png.h	/^   png_uint_16 gray;  \/* for use in grayscale files *\/$/;"	m	struct:png_color_16_struct
grbutton	libs/tgfclient/gui.h	/^	tGfuiGrButton	grbutton;$/;"	m	union:GfuiObject::__anon147
green	windows/include/png.h	/^   png_byte green;$/;"	m	struct:png_color_8_struct
green	windows/include/png.h	/^   png_byte green;$/;"	m	struct:png_color_struct
green	windows/include/png.h	/^   png_uint_16 green;$/;"	m	struct:png_color_16_struct
green	windows/include/png.h	/^   png_uint_16 green;$/;"	m	struct:png_sPLT_entry_struct
gridGetter	windows/include/plib/ssgaWaveSystem.h	/^  ssgaWSDepthCallback gridGetter ;$/;"	m	class:ssgaWaveSystem
group	tools/trackgen/easymesh.cpp	/^struct group {$/;"	s	file:
group	tools/trackgen/objects.cpp	/^struct group {$/;"	s	file:
group	tools/trackgen/track.cpp	/^typedef struct group {$/;"	s	file:
groupConnector	libs/txml/xmlparse.c	/^  char *groupConnector;$/;"	m	struct:__anon117	file:
groupConnector	libs/txml/xmlparse.c	307;"	d	file:
groupSize	libs/txml/xmlparse.c	/^  unsigned groupSize;$/;"	m	struct:__anon117	file:
groupSize	libs/txml/xmlparse.c	308;"	d	file:
groups	tools/trackgen/easymesh.cpp	/^groups(void)$/;"	f	file:
grssgCarLoadAC3D	modules/graphic/ssggraph/grloadac.cpp	/^ssgEntity *grssgCarLoadAC3D ( const char *fname, const ssgLoaderOptions* options,int index )$/;"	f
grssgLoadAC3D	modules/graphic/ssggraph/grloadac.cpp	/^ssgEntity *grssgLoadAC3D ( const char *fname, const ssgLoaderOptions* options )$/;"	f
gzFile	windows/include/zconf.h	114;"	d
gzFile	windows/include/zlib.h	/^typedef voidp gzFile;       \/* opaque gzip file descriptor *\/$/;"	t
gz_error	windows/include/zconf.h	50;"	d
gz_header	windows/include/zconf.h	115;"	d
gz_header	windows/include/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	windows/include/zconf.h	129;"	d
gz_header_s	windows/include/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	windows/include/zconf.h	116;"	d
gz_headerp	windows/include/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
gz_intmax	windows/include/zconf.h	51;"	d
gz_strwinerror	windows/include/zconf.h	52;"	d
gzbuffer	windows/include/zconf.h	53;"	d
gzclearerr	windows/include/zconf.h	54;"	d
gzclose	windows/include/zconf.h	55;"	d
gzclose_r	windows/include/zconf.h	56;"	d
gzclose_w	windows/include/zconf.h	57;"	d
gzdirect	windows/include/zconf.h	58;"	d
gzdopen	windows/include/zconf.h	59;"	d
gzeof	windows/include/zconf.h	60;"	d
gzerror	windows/include/zconf.h	61;"	d
gzflush	windows/include/zconf.h	62;"	d
gzgetc	windows/include/zconf.h	63;"	d
gzgets	windows/include/zconf.h	64;"	d
gzoffset	windows/include/zconf.h	65;"	d
gzoffset	windows/include/zlib.h	1578;"	d
gzoffset64	windows/include/zconf.h	66;"	d
gzopen	windows/include/zconf.h	67;"	d
gzopen	windows/include/zlib.h	1575;"	d
gzopen64	windows/include/zconf.h	68;"	d
gzprintf	windows/include/zconf.h	69;"	d
gzputc	windows/include/zconf.h	70;"	d
gzputs	windows/include/zconf.h	71;"	d
gzread	windows/include/zconf.h	72;"	d
gzrewind	windows/include/zconf.h	73;"	d
gzseek	windows/include/zconf.h	74;"	d
gzseek	windows/include/zlib.h	1576;"	d
gzseek64	windows/include/zconf.h	75;"	d
gzsetparams	windows/include/zconf.h	76;"	d
gztell	windows/include/zconf.h	77;"	d
gztell	windows/include/zlib.h	1577;"	d
gztell64	windows/include/zconf.h	78;"	d
gzungetc	windows/include/zconf.h	79;"	d
gzwrite	windows/include/zconf.h	80;"	d
h	drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon154
h	drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon153
h	drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon198
h	drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon197
h	drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon177
h	drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon176
h	drivers/human/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon189
h	drivers/human/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon188
h	drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon163
h	drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon162
h	drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon209
h	drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon208
h	drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon170
h	drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon169
h	tools/nfs2ac/mainnfs2ac.cpp	/^    int h;$/;"	m	struct:__anon57	file:
hSpace	interfaces/track.h	/^    tdble	hSpace;$/;"	m	struct:__anon66
hWaveOut	windows/include/plib/sl.h	/^   HWAVEOUT       hWaveOut;      \/\/ device handle $/;"	m	class:slDSP
h_conv1	predictor/predict.py	/^h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)$/;"	v
h_conv1	predictor/train.py	/^h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)$/;"	v
h_conv1	predictor/train2.py	/^h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)$/;"	v
h_conv2	predictor/predict.py	/^h_conv2 = tf.nn.relu(conv2d(h_drop1, W_conv2) + b_conv2)$/;"	v
h_conv2	predictor/train.py	/^h_conv2 = tf.nn.relu(conv2d(h_drop1, W_conv2) + b_conv2)$/;"	v
h_conv2	predictor/train2.py	/^h_conv2 = tf.nn.relu(conv2d(h_drop1, W_conv2) + b_conv2)$/;"	v
h_conv3	predictor/predict.py	/^h_conv3 = tf.nn.relu(conv2d(h_drop2, W_conv3) + b_conv3)$/;"	v
h_conv3	predictor/train.py	/^h_conv3 = tf.nn.relu(conv2d(h_drop2, W_conv3) + b_conv3)$/;"	v
h_conv3	predictor/train2.py	/^h_conv3 = tf.nn.relu(conv2d(h_drop2, W_conv3) + b_conv3)$/;"	v
h_drop1	predictor/predict.py	/^h_drop1 = tf.nn.dropout(h_pool1, keep_prob)$/;"	v
h_drop1	predictor/train.py	/^h_drop1 = tf.nn.dropout(h_pool1, keep_prob)$/;"	v
h_drop1	predictor/train2.py	/^h_drop1 = tf.nn.dropout(h_pool1, keep_prob)$/;"	v
h_drop2	predictor/predict.py	/^h_drop2 = tf.nn.dropout(h_pool2, keep_prob)$/;"	v
h_drop2	predictor/train.py	/^h_drop2 = tf.nn.dropout(h_pool2, keep_prob)$/;"	v
h_drop2	predictor/train2.py	/^h_drop2 = tf.nn.dropout(h_pool2, keep_prob)$/;"	v
h_drop3	predictor/predict.py	/^h_drop3 = tf.nn.dropout(h_pool3, keep_prob)$/;"	v
h_drop3	predictor/train.py	/^h_drop3 = tf.nn.dropout(h_pool3, keep_prob)$/;"	v
h_drop3	predictor/train2.py	/^h_drop3 = tf.nn.dropout(h_pool3, keep_prob)$/;"	v
h_fc1	predictor/predict.py	/^h_fc1 = tf.nn.relu(tf.matmul(h_pool3_flat, W_fc1) + b_fc1)$/;"	v
h_fc1	predictor/train.py	/^h_fc1 = tf.nn.relu(tf.matmul(h_pool3_flat, W_fc1) + b_fc1)$/;"	v
h_fc1	predictor/train2.py	/^h_fc1 = tf.nn.relu(tf.matmul(h_pool3_flat, W_fc1) + b_fc1)$/;"	v
h_fc1_drop	predictor/predict.py	/^h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob_hidden)$/;"	v
h_fc1_drop	predictor/train.py	/^h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob_hidden)$/;"	v
h_fc1_drop	predictor/train2.py	/^h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob_hidden)$/;"	v
h_pool1	predictor/predict.py	/^h_pool1 = max_pool_2x2(h_conv1)$/;"	v
h_pool1	predictor/train.py	/^h_pool1 = max_pool_2x2(h_conv1)$/;"	v
h_pool1	predictor/train2.py	/^h_pool1 = max_pool_2x2(h_conv1)$/;"	v
h_pool2	predictor/predict.py	/^h_pool2 = max_pool_2x2(h_conv2)$/;"	v
h_pool2	predictor/train.py	/^h_pool2 = max_pool_2x2(h_conv2)$/;"	v
h_pool2	predictor/train2.py	/^h_pool2 = max_pool_2x2(h_conv2)$/;"	v
h_pool3	predictor/predict.py	/^h_pool3 = max_pool_2x2(h_conv3)$/;"	v
h_pool3	predictor/train.py	/^h_pool3 = max_pool_2x2(h_conv3)$/;"	v
h_pool3	predictor/train2.py	/^h_pool3 = max_pool_2x2(h_conv3)$/;"	v
h_pool3_flat	predictor/predict.py	/^h_pool3_flat = tf.reshape(h_pool3, [-1, 1*30*128])$/;"	v
h_pool3_flat	predictor/train.py	/^h_pool3_flat = tf.reshape(h_pool3, [-1, 1*30*128])$/;"	v
h_pool3_flat	predictor/train2.py	/^h_pool3_flat = tf.reshape(h_pool3, [-1, 1*30*128])$/;"	v
hadExternalDoctype	libs/txml/xmlparse.c	/^  int hadExternalDoctype;$/;"	m	struct:__anon117	file:
hadExternalDoctype	libs/txml/xmlparse.c	309;"	d	file:
halfHeight	modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^  Scalar halfHeight;$/;"	m	class:Cone
halfHeight	modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	/^  Scalar halfHeight;$/;"	m	class:Cylinder
handle	libs/tgf/tgf.h	/^    HMODULE		handle;			\/**< handle of loaded module *\/$/;"	m	struct:ModList
handle	libs/tgf/tgf.h	/^    void		*handle;		\/**< handle of loaded module *\/$/;"	m	struct:ModList
handle	windows/include/plib/ssg.h	/^  GLuint handle ;$/;"	m	class:ssgTexture
handle	windows/include/plib/ul.h	/^  HMODULE handle ;$/;"	m	class:ulDynamicLibrary
handle	windows/include/plib/ul.h	/^  image_id *handle ;$/;"	m	class:ulDynamicLibrary
handle	windows/include/plib/ul.h	/^  void *handle ;$/;"	m	class:ulDynamicLibrary
handleEntities	libs/tgf/params.cpp	/^static char* handleEntities(char *buf, const int BUFSIZE, const char* val) {$/;"	f	file:
handleUnknownEncoding	libs/txml/xmlparse.c	/^handleUnknownEncoding(XML_Parser parser, const XML_Char *encodingName)$/;"	f	file:
handler	libs/txml/xmlrole.h	/^  int (*handler)(struct prolog_state *state,$/;"	m	struct:prolog_state
handlerArg	libs/txml/xmlparse.c	/^  void *handlerArg;$/;"	m	struct:__anon117	file:
handlerArg	libs/txml/xmlparse.c	260;"	d	file:
hasAlpha	windows/include/plib/ssg.h	/^  bool hasAlpha () const { return has_alpha ; }$/;"	f	class:ssgTexture
hasFocus	libs/tgfclient/gui.h	/^    tGfuiObject		*hasFocus;	\/* in order to speed up focus management *\/$/;"	m	struct:__anon148
hasState	windows/include/plib/ssg.h	/^  int       hasState () { return state != NULL ; }$/;"	f	class:ssgLeaf
has_alpha	windows/include/plib/ssg.h	/^  bool has_alpha ;$/;"	m	class:ssgTexture
hash	libs/txml/hashtable.c	/^unsigned long hash(KEY s)$/;"	f	file:
hashHead	libs/tgf/hash.cpp	/^	tHashHead *hashHead;$/;"	m	struct:HashHeader	file:
hashMapElement	modules/graphic/ssggraph/grscene.h	/^typedef struct hashMapElement $/;"	s
hashMapElement_t	modules/graphic/ssggraph/grscene.h	/^} hashMapElement_t;$/;"	t	typeref:struct:hashMapElement
hashTableDestroy	libs/txml/hashtable.c	/^void hashTableDestroy(HASH_TABLE *table)$/;"	f
hashTableInit	libs/txml/hashtable.c	/^void hashTableInit(HASH_TABLE *p)$/;"	f
hashTableIterInit	libs/txml/hashtable.c	/^void hashTableIterInit(HASH_TABLE_ITER *iter, const HASH_TABLE *table)$/;"	f
hashTableIterNext	libs/txml/hashtable.c	/^NAMED *hashTableIterNext(HASH_TABLE_ITER *iter)$/;"	f
hash_buf	libs/tgf/hash.cpp	/^static unsigned int hash_buf (tHashHeader *hash, char *sdata, int len)$/;"	f	file:
hash_str	libs/tgf/hash.cpp	/^static unsigned int hash_str (tHashHeader *hash, const char *sstr)$/;"	f	file:
hcrc	windows/include/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s
head	libs/learning/List.h	/^	LISTITEM* head; \/\/\/< head item$/;"	m	struct:List
head	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^  Endpoint head;$/;"	m	class:EndpointList	file:
head	windows/include/plib/ul.h	/^  ulListNode *head ;$/;"	m	class:ulLinkedList
header	libs/tgf/params.cpp	/^	char *header; \/**< Optional header (comment, xsl...) *\/$/;"	m	struct:parmHeader	file:
header	windows/include/ogg/ogg.h	/^  unsigned char    header[282];      \/* working space for header encode *\/$/;"	m	struct:__anon52
header	windows/include/ogg/ogg.h	/^  unsigned char *header;$/;"	m	struct:__anon51
header_fill	windows/include/ogg/ogg.h	/^  int              header_fill;$/;"	m	struct:__anon52
header_len	windows/include/ogg/ogg.h	/^  long header_len;$/;"	m	struct:__anon51
headerbytes	windows/include/ogg/ogg.h	/^  int headerbytes;$/;"	m	struct:__anon54
heading	windows/include/plib/ssgaWaveSystem.h	/^  float heading;$/;"	m	class:ssgaWaveTrain
height	interfaces/track.h	/^    tdble		height;	\/**< Barrier height *\/$/;"	m	struct:trackBarrier
height	interfaces/track.h	/^    tdble	height;		\/**< Max height for curbs *\/$/;"	m	struct:trackSeg
height	interfaces/track.h	/^    tdble	height;$/;"	m	struct:__anon66
height	libs/tgfclient/gui.h	/^    float		width, height;$/;"	m	struct:__anon148
height	libs/tgfclient/gui.h	/^    int			width, height;$/;"	m	struct:__anon142
height	modules/graphic/ssggraph/grcam.cpp	/^    float height;$/;"	m	class:cGrCarCamBehind	file:
height	tools/texmapper/maintexmapper.cpp	/^    int			height;		\/* Scaled height *\/$/;"	m	struct:__anon59	file:
height	tools/trackgen/elevation.cpp	/^static int	width, height;$/;"	v	file:
height	windows/include/plib/ssg.h	/^	unsigned int height ;$/;"	m	struct:ssgTextureInfo
height	windows/include/plib/ssgaWaveSystem.h	/^  float height ;$/;"	m	class:ssgaWaveTrain
hfov	windows/include/plib/sg.h	/^  SGDfloat hfov ;    \/* Horizontal Field of View  -or-  Orthographic Width  *\/$/;"	m	class:sgdFrustum
hfov	windows/include/plib/sg.h	/^  SGfloat hfov ;    \/* Horizontal Field of View  -or-  Orthographic Width  *\/$/;"	m	class:sgFrustum
hold	drivers/inferno2/inferno2.cpp	/^tdble	hold[10] = {0};$/;"	v
hookNode	tools/texmapper/maintexmapper.cpp	/^hookNode(char *s)$/;"	f	file:
hookNode	tools/trackgen/relief.cpp	/^hookNode(char *s)$/;"	f	file:
hot_colour	windows/include/plib/ssgaFire.h	/^  sgVec4 hot_colour  ;$/;"	m	class:ssgaFire
hour	windows/include/png.h	/^   png_byte hour;    \/* hour of day, 0 - 23 *\/$/;"	m	struct:png_time_struct
hpr	windows/include/plib/sg.h	/^  sgVec3 hpr ;$/;"	m	struct:sgCoord
hpr	windows/include/plib/sg.h	/^  sgdVec3 hpr ;$/;"	m	struct:sgdCoord
htan	libs/learning/ANN.cpp	/^real htan(real x)$/;"	f
htan_d	libs/learning/ANN.cpp	/^real htan_d(real x)$/;"	f
human	drivers/human/human.cpp	/^extern "C" int human(tModInfo *modInfo) {$/;"	f
human	libs/racescreens/driverselect.cpp	/^	int human;$/;"	m	struct:DrvElt	file:
i	tools/trackgen/easymesh.cpp	/^	int i,  j,  k;$/;"	m	struct:ele	file:
ic	drivers/berniw/pathfinder.h	/^	double ic;$/;"	m	struct:__anon155
ic	drivers/berniw2/pathfinder.h	/^	double ic;$/;"	m	struct:__anon199
ic	drivers/berniw3/pathfinder.h	/^	double ic;$/;"	m	struct:__anon178
ic	drivers/human/pathfinder.h	/^	double ic;$/;"	m	struct:__anon190
iconColor	interfaces/car.h	/^	tdble iconColor[3]; \/**< Car color in leaders board *\/$/;"	m	struct:__anon76
iconColor	modules/graphic/ssggraph/grcar.h	/^    float		iconColor[4];$/;"	m	struct:__anon5
id	interfaces/track.h	/^    int	id;			\/**< Segment number *\/$/;"	m	struct:trackSeg
id	libs/confscreens/controlconfig.cpp	/^	int id;$/;"	m	struct:__anon123	file:
id	libs/racescreens/carsetupscreen.cpp	/^		int id;	\/\/ GUI widget id$/;"	m	class:cGuiSetupValue	file:
id	libs/tgfclient/gui.h	/^    int		id;$/;"	m	struct:GfuiObject
id	libs/txml/xmlparse.c	/^  const ATTRIBUTE_ID *id;$/;"	m	struct:__anon114	file:
id	modules/graphic/ssggraph/SoundInterface.h	/^	int id; \/\/\/< The id of the car producing the sound, used for retrieving doppler effects etc$/;"	m	struct:QueueSoundMap_
id	modules/graphic/ssggraph/SoundInterface.h	/^	int id; \/\/\/< car ID.$/;"	m	struct:SoundPri_
id	modules/graphic/ssggraph/grboard.h	/^    int	id;		\/* Board Id *\/$/;"	m	class:cGrBoard
id	modules/graphic/ssggraph/grcam.h	/^    int			id;		\/* Camera Id *\/$/;"	m	class:cGrCamera
id	modules/graphic/ssggraph/grscreen.h	/^		int id;$/;"	m	class:cGrScreen
id	tools/trackgen/track.cpp	/^	int id;$/;"	m	struct:dispElt	file:
id	windows/include/plib/js.h	/^  int          id ;$/;"	m	class:jsJoystick
id	windows/include/plib/ssg.h	/^  int id ;$/;"	m	class:ssgLight
ideal_radius	drivers/olethros/driver.h	/^	float *ideal_radius; \/\/\/< ideal radius (according to circle fit)$/;"	m	class:olethros::Driver
iface	modules/graphic/ssggraph/TorcsSound.h	/^	class SoundInterface* iface; \/\/\/< Handler to the interface$/;"	m	class:TorcsSound	typeref:class:TorcsSound::SoundInterface
image	libs/tgfclient/gui.h	/^	tGfuiImage	image;$/;"	m	union:GfuiObject::__anon147
image_fd	modules/graphic/ssggraph/grloadsgi.h	/^		FILE          *image_fd;$/;"	m	class:ssgSGIHeader
image_fname	modules/graphic/ssggraph/grloadsgi.h	/^		char          image_fname [ 512 ];$/;"	m	class:ssgSGIHeader
img_arr	libs/raceengineclient/raceengine.cpp	/^unsigned char* img_arr[2];$/;"	v
in	modules/simu/simuv2/differential.h	/^    tDynAxis	in;$/;"	m	struct:__anon10
in	modules/simu/simuv2/wheel.h	/^    tDynAxis	in;$/;"	m	struct:__anon11
in	modules/simu/simuv3/differential.h	/^    tDynAxis	in;$/;"	m	struct:__anon32
in	modules/simu/simuv3/wheel.h	/^    tDynAxis	in;$/;"	m	struct:__anon33
in	tools/texmapper/maintexmapper.cpp	/^FILE	*in, *out;$/;"	v
inAxis	modules/simu/simuv2/differential.h	/^    tDynAxis	*inAxis[2];$/;"	m	struct:__anon10
inAxis	modules/simu/simuv3/differential.h	/^    tDynAxis	*inAxis[2];$/;"	m	struct:__anon32
inGroup	modules/graphic/ssggraph/grloadac.cpp	/^int inGroup=0;$/;"	v
inPit	drivers/berniw/pathfinder.h	/^		bool inPit;				\/* internal pit state *\/$/;"	m	class:Pathfinder
inPit	drivers/berniw2/pathfinder.h	/^		bool inPit;				\/* internal pit state *\/$/;"	m	class:Pathfinder
inPit	drivers/berniw3/pathfinder.h	/^		bool inPit;				\/* internal pit state *\/$/;"	m	class:Pathfinder
inPit	drivers/human/pathfinder.h	/^		bool inPit;				\/* internal pit state *\/$/;"	m	class:Pathfinder
inPit	drivers/inferno/pathfinder.h	/^		bool inPit;				\/\/ internal pit state.$/;"	m	class:Pathfinder
inPit	drivers/lliaw/pathfinder.h	/^		bool inPit;				\/\/ internal pit state.$/;"	m	class:Pathfinder
inPit	drivers/tita/pathfinder.h	/^		bool inPit;				\/\/ internal pit state.$/;"	m	class:Pathfinder
in_elem	tools/trackgen/easymesh.cpp	/^int in_elem(struct nod *n)$/;"	f
in_func	windows/include/zconf.h	117;"	d
in_func	windows/include/zlib.h	/^typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));$/;"	t
in_use	modules/graphic/ssggraph/SoundInterface.h	/^	bool in_use;$/;"	m	struct:sharedSource
include	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void include (const BBox& b) { enclose(*this, b); }$/;"	f	class:BBox
include	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void include (const Point& p) {$/;"	f	class:BBox
indent	libs/tgf/params.cpp	/^	int indent; \/**< Keep track of indentation *\/$/;"	m	struct:parmOutput	file:
index	interfaces/car.h	/^	int index; \/**< car index *\/$/;"	m	struct:CarElt
index	interfaces/robot.h	/^	int index;$/;"	m	struct:RobotItf
index	libs/raceengineclient/raceinit.cpp	/^	int index;$/;"	m	struct:__anon125	file:
index	libs/racescreens/driverselect.cpp	/^	int index;$/;"	m	struct:DrvElt	file:
index	libs/tgf/tgf.h	/^    int			index;		\/**< index if multiple interface in one dll *\/$/;"	m	struct:ModInfo
index	libs/tgfclient/gui.h	/^    int				index;$/;"	m	struct:GfuiListElement
index	libs/tgfclient/tgfclient.h	/^    int index;$/;"	m	struct:__anon133
index	modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  IndexArray index;$/;"	m	class:Polytope
index	windows/include/png.h	/^   png_byte index;    \/* used for palette files *\/$/;"	m	struct:png_color_16_struct
indexBuf	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^IndexBuf indexBuf;$/;"	v
indexCar	modules/graphic/ssggraph/grloadac.cpp	/^static int              indexCar;$/;"	v	file:
indexCar	modules/graphic/ssggraph/grvtxtable.h	/^  int indexCar;$/;"	m	class:grVtxTable
indexed	windows/include/plib/ssg.h	/^  int indexed ;$/;"	m	class:ssgVTable
indice	tools/accc/accc.h	/^  int indice;$/;"	m	struct:tcoord
indices	drivers/olethros/Trajectory.h	/^    std::vector<int> indices; \/\/\/< data indices$/;"	m	class:Trajectory
indices	modules/graphic/ssggraph/grvertexarray.h	/^  ssgIndexArray      *indices;$/;"	m	class:ssgGrVtxArray
indices	modules/graphic/ssggraph/grvtxtable.h	/^  ssgIndexArray      *indices;$/;"	m	class:grVtxTable
indices	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  unsigned int *indices;$/;"	m	class:IndexArray
indices	windows/include/plib/ssg.h	/^  ssgIndexArray      *indices;$/;"	m	class:ssgVtxArray
inf	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point inf(const Point& p1, const Point& p2) { $/;"	f
inferno	drivers/inferno/inferno.cpp	/^extern "C" int inferno(tModInfo *modInfo)$/;"	f
inferno2	drivers/inferno2/inferno2.cpp	/^inferno2(tModInfo *modInfo)$/;"	f
infile	misc/png2jpg/png2jpg.c	/^static char 	*infile;$/;"	v	file:
infile	tools/nfsperf/mainnfsperf.cpp	/^const char	*infile = "carp.txt";$/;"	v
inflate	windows/include/zconf.h	81;"	d
inflateBack	windows/include/zconf.h	82;"	d
inflateBackEnd	windows/include/zconf.h	83;"	d
inflateBackInit	windows/include/zlib.h	1555;"	d
inflateBackInit_	windows/include/zconf.h	84;"	d
inflateCopy	windows/include/zconf.h	85;"	d
inflateEnd	windows/include/zconf.h	86;"	d
inflateGetHeader	windows/include/zconf.h	87;"	d
inflateInit	windows/include/zlib.h	1548;"	d
inflateInit2	windows/include/zlib.h	1553;"	d
inflateInit2_	windows/include/zconf.h	88;"	d
inflateInit_	windows/include/zconf.h	89;"	d
inflateMark	windows/include/zconf.h	90;"	d
inflatePrime	windows/include/zconf.h	91;"	d
inflateReset	windows/include/zconf.h	92;"	d
inflateReset2	windows/include/zconf.h	93;"	d
inflateSetDictionary	windows/include/zconf.h	94;"	d
inflateSync	windows/include/zconf.h	95;"	d
inflateSyncPoint	windows/include/zconf.h	96;"	d
inflateUndermine	windows/include/zconf.h	97;"	d
inflate_copyright	windows/include/zconf.h	98;"	d
inflate_fast	windows/include/zconf.h	99;"	d
inflate_table	windows/include/zconf.h	100;"	d
info	drivers/berniw/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	drivers/berniw2/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	drivers/berniw3/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	drivers/human/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	drivers/inferno/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	drivers/lliaw/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	drivers/tita/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	interfaces/car.h	/^	tInitCar info; \/**< public *\/$/;"	m	struct:CarElt
info	libs/confscreens/driverconfig.cpp	/^    tInfo		info;$/;"	m	struct:tCarInfo	file:
info	libs/confscreens/driverconfig.cpp	/^    tInfo		info;$/;"	m	struct:tCatInfo	file:
info	libs/confscreens/driverconfig.cpp	/^    tInfo	info;$/;"	m	struct:PlayerInfo	file:
info	libs/racescreens/miscscreens.cpp	/^    tRmInfo	*info;$/;"	m	struct:__anon105	file:
info	libs/racescreens/results.cpp	/^	tRmInfo *info;$/;"	m	struct:__anon100	file:
info	libs/tgfclient/gui.h	/^    tScrollBarInfo	info;$/;"	m	struct:__anon144
init	drivers/berniw/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	drivers/berniw/trackdesc.cpp	/^void TrackSegment::init(int id, const tTrackSeg* s, const v3d* lp, const v3d* mp, const v3d* rp)$/;"	f	class:TrackSegment
init	drivers/berniw2/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	drivers/berniw2/trackdesc.cpp	/^void TrackSegment::init(int id, const tTrackSeg* s, const v3d* lp, const v3d* mp, const v3d* rp)$/;"	f	class:TrackSegment
init	drivers/berniw3/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	drivers/berniw3/trackdesc.cpp	/^void TrackSegment::init(int id, const tTrackSeg* s, const v3d* lp, const v3d* mp, const v3d* rp)$/;"	f	class:TrackSegment
init	drivers/bt/cardata.h	/^		inline void init(CarElt *car) { this->car = car; \/*teammate = false; teammatedamage = 0; *\/}$/;"	f	class:SingleCardata
init	drivers/damned/cardata.h	/^		inline void init(CarElt *car) { this->car = car; \/*teammate = false; teammatedamage = 0; *\/}$/;"	f	class:SingleCardata
init	drivers/human/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	drivers/human/trackdesc.cpp	/^void TrackSegment::init(int id, const tTrackSeg* s, const v3d* lp, const v3d* mp, const v3d* rp)$/;"	f	class:TrackSegment
init	drivers/inferno/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	drivers/inferno/trackdesc.cpp	/^void TrackSegment2D::init(const TrackSegment* s)$/;"	f	class:TrackSegment2D
init	drivers/inferno/trackdesc.cpp	/^void TrackSegment::init(const tTrackSeg* s, const vec3d* lp, const vec3d* mp, const vec3d* rp)$/;"	f	class:TrackSegment
init	drivers/lliaw/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	drivers/lliaw/trackdesc.cpp	/^void TrackSegment2D::init(const TrackSegment* s)$/;"	f	class:TrackSegment2D
init	drivers/lliaw/trackdesc.cpp	/^void TrackSegment::init(const tTrackSeg* s, const vec3d* lp, const vec3d* mp, const vec3d* rp)$/;"	f	class:TrackSegment
init	drivers/olethros/cardata.h	/^	inline void init(CarElt *car) { this->car = car; }$/;"	f	class:olethros::SingleCardata
init	drivers/tita/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	drivers/tita/trackdesc.cpp	/^void TrackSegment2D::init(const TrackSegment* s)$/;"	f	class:TrackSegment2D
init	drivers/tita/trackdesc.cpp	/^void TrackSegment::init(const tTrackSeg* s, const vec3d* lp, const vec3d* mp, const vec3d* rp)$/;"	f	class:TrackSegment
init	interfaces/simu.h	/^	tfSimInit		init;$/;"	m	struct:__anon85
init	interfaces/telemetry.h	/^    tftlmInit			init;			\/* Init the telemetry *\/$/;"	m	struct:__anon86
init	topview/topview.cpp	/^void init() {$/;"	f
init	windows/include/plib/sl.h	/^  void init ()$/;"	f	class:slSample
init	windows/include/plib/ssg.h	/^  void init () { num_entries = 0 ; }$/;"	f	class:ssgHit
initAnglesAndGradients	modules/track/track4.cpp	/^static void initAnglesAndGradients(tTrackSeg* const curBorder, const tdble startwidth, const tdble endwidth) {$/;"	f	file:
initBackground	modules/graphic/ssggraph/grscene.cpp	/^initBackground(void)$/;"	f	file:
initBoard	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::initBoard(void)$/;"	f	class:cGrBoard
initBoard	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::initBoard(void)$/;"	f	class:cGrScreen
initBuffers	libs/musicplayer/OpenALMusicPlayer.cpp	/^bool OpenALMusicPlayer::initBuffers()$/;"	f	class:OpenALMusicPlayer
initCGh	drivers/berniw/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	drivers/berniw2/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	drivers/berniw3/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	drivers/human/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	drivers/inferno/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	drivers/lliaw/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	drivers/tita/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCa	drivers/bt/driver.cpp	/^void Driver::initCa()$/;"	f	class:Driver
initCa	drivers/damned/driver.cpp	/^void Driver::initCa()$/;"	f	class:Driver
initCa	drivers/olethros/driver.cpp	/^    void Driver::initCa()$/;"	f	class:olethros::Driver
initCa	drivers/sparkle/driver.cpp	/^void Driver::initCa()$/;"	f	class:Driver
initCams	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::initCams(tSituation *s)$/;"	f	class:cGrScreen
initCarGeometry	drivers/berniw/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	drivers/berniw2/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	drivers/berniw3/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	drivers/human/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	drivers/inferno/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	drivers/lliaw/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	drivers/tita/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCars	modules/graphic/ssggraph/grmain.cpp	/^initCars(tSituation *s)$/;"	f
initColors	modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::initColors()$/;"	f	class:cGrTrackMap
initContext	libs/musicplayer/OpenALMusicPlayer.cpp	/^bool OpenALMusicPlayer::initContext()$/;"	f	class:OpenALMusicPlayer
initCw	drivers/bt/driver.cpp	/^void Driver::initCw()$/;"	f	class:Driver
initCw	drivers/damned/driver.cpp	/^void Driver::initCw()$/;"	f	class:Driver
initCw	drivers/olethros/driver.cpp	/^    void Driver::initCw()$/;"	f	class:olethros::Driver
initCw	drivers/sparkle/driver.cpp	/^void Driver::initCw()$/;"	f	class:Driver
initDamper	modules/simu/simuv2/susp.cpp	/^static void initDamper(tSuspension *susp)$/;"	f	file:
initDamper	modules/simu/simuv3/susp.cpp	/^initDamper(tSuspension *susp)$/;"	f	file:
initEnc	libs/txml/xmltok.h	/^  ENCODING initEnc;$/;"	m	struct:__anon119
initEncoding	libs/txml/xmlparse.c	/^  INIT_ENCODING initEncoding;$/;"	m	struct:__anon117	file:
initEncoding	libs/txml/xmlparse.c	271;"	d	file:
initFromConf	libs/tgfclient/screen.cpp	/^initFromConf(void)$/;"	f	file:
initLeft	drivers/berniw/pathfinder.cpp	/^int Pathfinder::initLeft(int id, double w)$/;"	f	class:Pathfinder
initLeft	drivers/berniw2/pathfinder.cpp	/^int Pathfinder::initLeft(int id, double w)$/;"	f	class:Pathfinder
initLeft	drivers/berniw3/pathfinder.cpp	/^int Pathfinder::initLeft(int id, double w)$/;"	f	class:Pathfinder
initLeft	drivers/human/pathfinder.cpp	/^int Pathfinder::initLeft(int id, double w)$/;"	f	class:Pathfinder
initPit	drivers/berniw/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	drivers/human/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	drivers/inferno/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	drivers/tita/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPitStopPath	drivers/berniw/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	drivers/human/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	drivers/inferno/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	drivers/tita/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPits	libs/raceengineclient/raceinit.cpp	/^initPits(void)$/;"	f	file:
initPits	tools/trackgen/track.cpp	/^static void initPits(tTrackPitInfo *pits)$/;"	f	file:
initRight	drivers/berniw/pathfinder.cpp	/^int Pathfinder::initRight(int id, double w)$/;"	f	class:Pathfinder
initRight	drivers/berniw2/pathfinder.cpp	/^int Pathfinder::initRight(int id, double w)$/;"	f	class:Pathfinder
initRight	drivers/berniw3/pathfinder.cpp	/^int Pathfinder::initRight(int id, double w)$/;"	f	class:Pathfinder
initRight	drivers/human/pathfinder.cpp	/^int Pathfinder::initRight(int id, double w)$/;"	f	class:Pathfinder
initScan	libs/txml/xmltok.c	/^int initScan(const ENCODING *enc, int state, const char *ptr, const char *end,$/;"	f	file:
initScanContent	libs/txml/xmltok.c	/^int initScanContent(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
initScanProlog	libs/txml/xmltok.c	/^int initScanProlog(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
initSharedSourcePool	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^void OpenalSoundInterface::initSharedSourcePool(void)$/;"	f	class:OpenalSoundInterface
initSharedSourcePool	modules/graphic/ssggraph/SoundInterface.h	/^	virtual void initSharedSourcePool() {}$/;"	f	class:SoundInterface
initSideForStraight	modules/track/track4.cpp	/^static void initSideForStraight($/;"	f	file:
initSideForTurn	modules/track/track4.cpp	/^static void initSideForTurn($/;"	f	file:
initSource	libs/musicplayer/OpenALMusicPlayer.cpp	/^bool OpenALMusicPlayer::initSource()$/;"	f	class:OpenALMusicPlayer
initStartingGrid	libs/raceengineclient/raceinit.cpp	/^initStartingGrid(void)$/;"	f	file:
initStraight	drivers/berniw/pathfinder.cpp	/^int Pathfinder::initStraight(int id, double w)$/;"	f	class:Pathfinder
initStraight	drivers/berniw2/pathfinder.cpp	/^int Pathfinder::initStraight(int id, double w)$/;"	f	class:Pathfinder
initStraight	drivers/berniw3/pathfinder.cpp	/^int Pathfinder::initStraight(int id, double w)$/;"	f	class:Pathfinder
initStraight	drivers/human/pathfinder.cpp	/^int Pathfinder::initStraight(int id, double w)$/;"	f	class:Pathfinder
initTCLfilter	drivers/bt/driver.cpp	/^void Driver::initTCLfilter()$/;"	f	class:Driver
initTCLfilter	drivers/damned/driver.cpp	/^void Driver::initTCLfilter()$/;"	f	class:Driver
initTCLfilter	drivers/olethros/driver.cpp	/^    void Driver::initTCLfilter()$/;"	f	class:olethros::Driver
initTCLfilter	drivers/sparkle/driver.cpp	/^void Driver::initTCLfilter()$/;"	f	class:Driver
initTireMu	drivers/bt/driver.cpp	/^void Driver::initTireMu()$/;"	f	class:Driver
initTireMu	drivers/damned/driver.cpp	/^void Driver::initTireMu()$/;"	f	class:Driver
initTireMu	drivers/olethros/driver.cpp	/^    void Driver::initTireMu()$/;"	f	class:olethros::Driver
initTireMu	drivers/sparkle/driver.cpp	/^void Driver::initTireMu()$/;"	f	class:Driver
initTrack	drivers/berniw/berniw.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle,$/;"	f	file:
initTrack	drivers/berniw2/berniw2.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle,$/;"	f	file:
initTrack	drivers/berniw3/berniw3.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle,$/;"	f	file:
initTrack	drivers/bt/bt.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	file:
initTrack	drivers/bt/driver.cpp	/^void Driver::initTrack(tTrack* t, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	class:Driver
initTrack	drivers/damned/damned.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	file:
initTrack	drivers/damned/driver.cpp	/^void Driver::initTrack(tTrack* t, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	class:Driver
initTrack	drivers/human/human.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle,$/;"	f	file:
initTrack	drivers/inferno/inferno.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation * situation)$/;"	f	file:
initTrack	drivers/inferno2/inferno2.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	file:
initTrack	drivers/lliaw/lliaw.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation * situation)$/;"	f	file:
initTrack	drivers/olethros/driver.cpp	/^    void Driver::initTrack(tTrack* t, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	class:olethros::Driver
initTrack	drivers/olethros/olethros.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	namespace:olethros
initTrack	drivers/sparkle/driver.cpp	/^void Driver::initTrack(tTrack* t, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	class:Driver
initTrack	drivers/sparkle/sparkle.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	file:
initTrack	drivers/tita/tita.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation * situation)$/;"	f	file:
initTrack	modules/graphic/ssggraph/grmain.cpp	/^initTrack(tTrack *track)$/;"	f
initUpdatePosition	libs/txml/xmltok.c	/^void initUpdatePosition(const ENCODING *enc, const char *ptr,$/;"	f	file:
initView	modules/graphic/ssggraph/grmain.cpp	/^initView(int x, int y, int width, int height, int \/* flag *\/, void *screen)$/;"	f
initWheel	modules/graphic/ssggraph/grcar.cpp	/^static ssgTransform *initWheel(tCarElt *car, int wheel_index)$/;"	f	file:
init_alpha	modules/graphic/ssggraph/grsmoke.h	/^  float init_alpha;$/;"	m	class:ssgVtxTableSmoke
init_args	linux/main.cpp	/^static void init_args(int argc, char **argv, const char **raceconfig) {$/;"	f	file:
init_args	misc/png2jpg/png2jpg.c	/^static void init_args(int argc, char **argv)$/;"	f	file:
init_args	tools/accc/mainaccc.cpp	/^void init_args(int argc, char **argv)$/;"	f
init_args	tools/nfsperf/mainnfsperf.cpp	/^void init_args(int argc, char **argv)$/;"	f
init_args	tools/texmapper/maintexmapper.cpp	/^void init_args(int argc, char **argv)$/;"	f
init_args	tools/trackgen/maintrackgen.cpp	/^void init_args(int argc, char **argv)$/;"	f
init_args	windows/main.cpp	/^static void init_args(int argc, char **argv, const char** raceconfig)$/;"	f	file:
init_graphics	tools/texmapper/maintexmapper.cpp	/^void init_graphics ()$/;"	f
init_origin	topview/Camera.hpp	/^	kmuvcl::math::vec3f init_origin;$/;"	m	class:kmuvcl::Camera
init_shared_memory	libs/raceengineclient/racemain.cpp	/^void init_shared_memory() {$/;"	f
init_shared_memory	topview/topview.cpp	/^void init_shared_memory() {$/;"	f
init_x_axis	topview/Camera.hpp	/^	kmuvcl::math::vec3f init_x_axis;$/;"	m	class:kmuvcl::Camera
init_y_axis	topview/Camera.hpp	/^	kmuvcl::math::vec3f init_y_axis;$/;"	m	class:kmuvcl::Camera
init_z_axis	topview/Camera.hpp	/^	kmuvcl::math::vec3f init_z_axis;$/;"	m	class:kmuvcl::Camera
init_zoom	topview/Camera.hpp	/^	float init_zoom;$/;"	m	class:kmuvcl::Camera
initcars	interfaces/graphic.h	/^	tfGraphicInitCars	    initcars;$/;"	m	struct:__anon61
initializeEncoding	libs/txml/xmlparse.c	/^initializeEncoding(XML_Parser parser)$/;"	f	file:
inittrack	interfaces/graphic.h	/^	tfGraphicInitTrack	    inittrack;$/;"	m	struct:__anon61
initview	interfaces/graphic.h	/^	tfGraphicInitView       initview;$/;"	m	struct:__anon61
inkids_o	tools/accc/accc.h	/^  int inkids_o;$/;"	m	struct:ob
inpitlane	drivers/bt/pit.h	/^		bool inpitlane;					\/\/ We are still in the pit lane.$/;"	m	class:Pit
inpitlane	drivers/damned/pit.h	/^		bool inpitlane;					\/\/ We are still in the pit lane.$/;"	m	class:Pit
inpitlane	drivers/olethros/pit.h	/^		bool inpitlane;					\/\/ We are still in the pit lane.$/;"	m	class:olethros::Pit
inpitlane	drivers/sparkle/pit.h	/^		bool inpitlane;         \/* we are still in the pit lane *\/$/;"	m	class:Pit
insert	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^inline void Endpoint::insert(Endpoint *p) {$/;"	f	class:Endpoint
insertParam	libs/tgf/params.cpp	/^static void insertParam(struct parmHandle *parmHandle, char *path,$/;"	f	file:
insertParamMerge	libs/tgf/params.cpp	/^static void insertParamMerge(struct parmHandle *parmHandle, char *path,$/;"	f	file:
insert_elem_in_group	tools/trackgen/easymesh.cpp	/^insert_elem_in_group(struct ele *elem, struct nod *nods)$/;"	f	file:
insert_node	tools/trackgen/easymesh.cpp	/^int insert_node(double x, double y, double z, int spac,$/;"	f
insert_node_in_group	tools/trackgen/easymesh.cpp	/^insert_node_in_group(struct nod *nod, struct group *group)$/;"	f	file:
inserted	tools/trackgen/easymesh.h	/^    int inserted;$/;"	m	struct:nod
instanceLess	libs/tgf/profiler.cpp	/^bool instanceLess(const ProfileInstance * p1, const ProfileInstance * p2) {$/;"	f
instrument	modules/graphic/ssggraph/grcar.h	/^    tgrCarInstrument	instrument[2];$/;"	m	struct:__anon5
int	libs/txml/xmldef.h	31;"	d
intcossqr	drivers/berniw/pathfinder.cpp	/^double Pathfinder::intcossqr(double alpha)$/;"	f	class:Pathfinder
intcossqr	drivers/berniw2/pathfinder.cpp	/^double Pathfinder::intcossqr(double alpha)$/;"	f	class:Pathfinder
intcossqr	drivers/berniw3/pathfinder.cpp	/^double Pathfinder::intcossqr(double alpha)$/;"	f	class:Pathfinder
intcossqr	drivers/human/pathfinder.cpp	/^double Pathfinder::intcossqr(double alpha)$/;"	f	class:Pathfinder
internal	windows/include/vorbis/codec.h	/^  void *internal;$/;"	m	struct:vorbis_block
internalSubset	libs/txml/xmlrole.c	/^  internalSubset,$/;"	v	file:
internalSubset	libs/txml/xmlrole.c	/^int internalSubset(PROLOG_STATE *state,$/;"	f	file:
internalType	modules/graphic/ssggraph/grvtxtable.h	/^  int internalType;$/;"	m	class:grVtxTable
internal_big2_encoding	libs/txml/xmltok.c	/^static const struct normal_encoding internal_big2_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
internal_little2_encoding	libs/txml/xmltok.c	/^static const struct normal_encoding internal_little2_encoding = { $/;"	v	typeref:struct:normal_encoding	file:
internal_state	windows/include/zconf.h	130;"	d
internal_state	windows/include/zlib.h	/^    struct internal_state {int dummy;};$/;"	s
internal_utf8_encoding	libs/txml/xmltok.c	/^static const struct normal_encoding internal_utf8_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
internalname	interfaces/track.h	/^    char	  *internalname; \/**< Internal name of the track *\/$/;"	m	struct:__anon68
interpolate	drivers/berniw/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	drivers/human/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	drivers/inferno/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	drivers/tita/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
intersect	drivers/berniw/linalg.h	/^inline v2d Straight::intersect(const Straight &s) const$/;"	f	class:Straight
intersect	drivers/berniw2/linalg.h	/^inline v2d Straight::intersect(const Straight &s) const$/;"	f	class:Straight
intersect	drivers/berniw3/linalg.h	/^inline v2d Straight::intersect(const Straight &s) const$/;"	f	class:Straight
intersect	drivers/human/linalg.h	/^inline v2d Straight::intersect(const Straight &s) const$/;"	f	class:Straight
intersect	drivers/olethros/linalg.h	/^inline v2d Straight::intersect(const Straight &s) const$/;"	f	class:Straight
intersect	drivers/sparkle/linalg.h	/^inline v2d Straight::intersect(const Straight &s) const$/;"	f	class:Straight
intersect	libs/math/straight2_t.h	/^template<class T> inline v2t<T> straight2t<T>::intersect(const straight2t<T> &s) const$/;"	f	class:straight2t
intersect	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^inline bool intersect(const BBox& a, const BBox& b) {$/;"	f
intersect	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool intersect(const BBoxNode *a, const BBoxNode *b,$/;"	f
intersect	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool intersect(const BBoxNode *tree, const Convex& c, const BBox& bb, $/;"	f
intersect	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^inline bool intersect(const BBox& a, const BBox& b, $/;"	f
intersect	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool intersect(const Complex& a, const Complex& b, $/;"	f
intersect	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool intersect(const Complex& a, const Convex& b, $/;"	f
intersect	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^bool intersect(const Convex& a, const Convex& b, const Transform& b2a, $/;"	f
intersect	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^bool intersect(const Convex& a, const Convex& b,$/;"	f
intersect	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool intersect(const Object& a, const Object& b, Vector& v) {$/;"	f
intersectComplexComplex	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool intersectComplexComplex(const Shape& a, const Shape& b, $/;"	f
intersectComplexConvex	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool intersectComplexConvex(const Shape& a, const Shape& b, $/;"	f
intersectConvexConvex	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool intersectConvexConvex(const Shape& a, const Shape& b, $/;"	f
intersectInitialize	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^IntersectTable *intersectInitialize() {$/;"	f
intersects	windows/include/plib/sg.h	/^  int intersects ( const sgBox *b ) const $/;"	f	class:sgBox
intersects	windows/include/plib/sg.h	/^  int intersects ( const sgSphere *s ) const $/;"	f	class:sgBox
intersects	windows/include/plib/sg.h	/^  int intersects ( const sgSphere *s ) const $/;"	f	class:sgSphere
intersects	windows/include/plib/sg.h	/^  int intersects ( const sgVec4 plane ) const $/;"	f	class:sgSphere
intersects	windows/include/plib/sg.h	/^  int intersects ( const sgdBox *b ) const $/;"	f	class:sgdBox
intersects	windows/include/plib/sg.h	/^  int intersects ( const sgdSphere *s ) const $/;"	f	class:sgdBox
intersects	windows/include/plib/sg.h	/^  int intersects ( const sgdSphere *s ) const $/;"	f	class:sgdSphere
intersects	windows/include/plib/sg.h	/^  int intersects ( const sgdVec4 plane ) const $/;"	f	class:sgdSphere
intf	windows/include/zconf.h	/^typedef int   FAR intf;$/;"	t
intf	windows/include/zconf.h	118;"	d
intsinsqr	drivers/berniw/pathfinder.cpp	/^double Pathfinder::intsinsqr(double alpha)$/;"	f	class:Pathfinder
intsinsqr	drivers/berniw2/pathfinder.cpp	/^double Pathfinder::intsinsqr(double alpha)$/;"	f	class:Pathfinder
intsinsqr	drivers/berniw3/pathfinder.cpp	/^double Pathfinder::intsinsqr(double alpha)$/;"	f	class:Pathfinder
intsinsqr	drivers/human/pathfinder.cpp	/^double Pathfinder::intsinsqr(double alpha)$/;"	f	class:Pathfinder
inverse	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix Matrix::inverse() const {$/;"	f	class:Matrix
inverse	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix inverse(const Matrix& m) { return m.inverse(); }$/;"	f
inverse	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion Quaternion::inverse() const {$/;"	f	class:Quaternion
invert	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline void Quaternion::invert() {$/;"	f	class:Quaternion
invert	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::invert(const Transform& t) {$/;"	f	class:Transform
ioctl	windows/include/plib/sl.h	/^  int ioctl ( int cmd, int param = 0 )$/;"	f	class:slDSP
ioctl	windows/include/plib/sm.h	/^  int ioctl ( int cmd, int param = 0 )$/;"	f	class:smMixer
iov_base	windows/include/ogg/ogg.h	/^  void *iov_base;$/;"	m	struct:__anon49
iov_len	windows/include/ogg/ogg.h	/^  size_t iov_len;$/;"	m	struct:__anon49
is	drivers/berniw/pathfinder.h	/^	double is;$/;"	m	struct:__anon155
is	drivers/berniw2/pathfinder.h	/^	double is;$/;"	m	struct:__anon199
is	drivers/berniw3/pathfinder.h	/^	double is;$/;"	m	struct:__anon178
is	drivers/human/pathfinder.h	/^	double is;$/;"	m	struct:__anon190
isA	windows/include/plib/ssg.h	/^  int   isA        ( int ty ) { return getType() == ty ; }$/;"	f	class:ssgBase
isAKindOf	windows/include/plib/ssg.h	/^  int   isAKindOf  ( int ty ) { return ( getType() & ty ) == ty ; }$/;"	f	class:ssgBase
isActive	modules/graphic/ssggraph/grscreen.h	/^		int isActive(void) { return active; }$/;"	f	class:cGrScreen
isAdditive	windows/include/plib/ssg.h	/^  int  isAdditive  () { return additive ; }$/;"	f	class:ssgRangeSelector
isAlone	drivers/bt/driver.cpp	/^int Driver::isAlone()$/;"	f	class:Driver
isAlone	drivers/damned/driver.cpp	/^int Driver::isAlone()$/;"	f	class:Driver
isAlone	drivers/olethros/driver.cpp	/^    int Driver::isAlone()$/;"	f	class:olethros::Driver
isBetween	drivers/berniw/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	drivers/berniw2/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	drivers/berniw3/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	drivers/bt/pit.cpp	/^bool Pit::isBetween(float fromstart)$/;"	f	class:Pit
isBetween	drivers/damned/pit.cpp	/^bool Pit::isBetween(float fromstart)$/;"	f	class:Pit
isBetween	drivers/human/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	drivers/inferno/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	drivers/inferno2/common.cpp	/^isBetween(tdble lgfs, tdble start, tdble end)$/;"	f	file:
isBetween	drivers/lliaw/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	drivers/olethros/pit.cpp	/^bool Pit::isBetween(float fromstart)$/;"	f	class:olethros::Pit
isBetween	drivers/sparkle/pit.cpp	/^bool Pit::isBetween(float fromstart)$/;"	f	class:Pit
isBetween	drivers/tita/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isCapped	windows/include/plib/ssgaShapes.h	/^  int  isCapped   ()        { return capped ; }$/;"	f	class:ssgaCylinder
isCdata	libs/txml/xmlparse.c	/^  char isCdata;$/;"	m	struct:__anon114	file:
isCompressARBAvailable	libs/tgfclient/glfeatures.cpp	/^bool isCompressARBAvailable(void)$/;"	f
isCompressARBEnabled	libs/tgfclient/glfeatures.cpp	/^bool isCompressARBEnabled(void) {$/;"	f
isCorrupt	windows/include/plib/ssgaShapes.h	/^  int  isCorrupt    () { return corrupted  ; }$/;"	f	class:ssgaShape
isDirtyBSphere	windows/include/plib/ssg.h	/^  int  isDirtyBSphere (void) { return bsphere_is_invalid ; }$/;"	f	class:ssgEntity
isDone	windows/include/plib/sl.h	/^  int isDone    () const { return status == SL_SAMPLE_DONE    ; }$/;"	f	class:slPlayer
isEmpty	windows/include/plib/sg.h	/^  int isEmpty (void) const { return radius <  SGD_ZERO ; }$/;"	f	class:sgdSphere
isEmpty	windows/include/plib/sg.h	/^  int isEmpty (void) const { return radius <  SG_ZERO ; }$/;"	f	class:sgSphere
isEmpty	windows/include/plib/sg.h	/^  int isEmpty(void) const $/;"	f	class:sgBox
isEmpty	windows/include/plib/sg.h	/^  int isEmpty(void) const $/;"	f	class:sgdBox
isEnabled	libs/musicplayer/musicplayer.cpp	/^static bool isEnabled()$/;"	f	file:
isHeadlight	windows/include/plib/ssg.h	/^  int  isHeadlight () { return is_headlight ; }$/;"	f	class:ssgLight
isInScreen	modules/graphic/ssggraph/grscreen.cpp	/^int cGrScreen::isInScreen(int x, int y)$/;"	f	class:cGrScreen
isIndexed	windows/include/plib/ssg.h	/^  int isIndexed () { return indexed ; }$/;"	f	class:ssgVTable
isInvalid2	libs/txml/xmltok.c	/^  int (*isInvalid2)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isInvalid3	libs/txml/xmltok.c	/^  int (*isInvalid3)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isInvalid4	libs/txml/xmltok.c	/^  int (*isInvalid4)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isLatLongStyle	windows/include/plib/ssgaShapes.h	/^  int  isLatLongStyle  ()         { return latlong_style ; }$/;"	f	class:ssgaSphere
isMirrorAllowed	modules/graphic/ssggraph/grcam.h	/^    int isMirrorAllowed(void)	{ return mirrorAllowed; }$/;"	f	class:cGrCamera
isName2	libs/txml/xmltok.c	/^  int (*isName2)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isName3	libs/txml/xmltok.c	/^  int (*isName3)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isName4	libs/txml/xmltok.c	/^  int (*isName4)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isNever	libs/txml/xmltok.c	/^int isNever(const ENCODING *enc, const char *p)$/;"	f	file:
isNmstrt2	libs/txml/xmltok.c	/^  int (*isNmstrt2)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isNmstrt3	libs/txml/xmltok.c	/^  int (*isNmstrt3)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isNmstrt4	libs/txml/xmltok.c	/^  int (*isNmstrt4)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isOn	windows/include/plib/ssg.h	/^  int  isOn () { return is_turned_on  ; }$/;"	f	class:ssgLight
isOnOff	modules/graphic/ssggraph/grcarlight.h	/^  int isOnOff () { return(on) ; }$/;"	f	class:ssgVtxTableCarlight
isOrtho	windows/include/plib/sg.h	/^  int  isOrtho (void) const { return ortho ; }$/;"	f	class:sgFrustum
isOrtho	windows/include/plib/sg.h	/^  int  isOrtho (void) const { return ortho ; }$/;"	f	class:sgdFrustum
isOrtho	windows/include/plib/ssg.h	/^  int  isOrtho () { return frustum -> isOrtho () ; } \/\/ is orthographic$/;"	f	class:ssgContext
isPaused	modules/graphic/ssggraph/TorcsSound.h	/^	virtual bool isPaused() $/;"	f	class:OpenalTorcsSound
isPaused	modules/graphic/ssggraph/TorcsSound.h	/^	virtual bool isPaused() $/;"	f	class:PlibTorcsSound
isPaused	windows/include/plib/sl.h	/^  int isPaused  () const { return status == SL_SAMPLE_PAUSED  ; } $/;"	f	class:slPlayer
isPitAvailable	drivers/berniw/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	drivers/berniw2/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	drivers/berniw3/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	drivers/human/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	drivers/inferno/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	drivers/lliaw/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	drivers/tita/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitFree	drivers/bt/strategy.cpp	/^bool SimpleStrategy::isPitFree(tCarElt* car)$/;"	f	class:SimpleStrategy
isPitFree	drivers/damned/strategy.cpp	/^bool SimpleStrategy::isPitFree(tCarElt* car)$/;"	f	class:SimpleStrategy
isPitSeg	drivers/inferno/pathfinder.h	/^		inline bool isPitSeg(int id) {$/;"	f	class:PathSegPit
isPitSeg	drivers/lliaw/pathfinder.h	/^		inline bool isPitSeg(int id) {$/;"	f	class:PathSegPit
isPitSeg	drivers/tita/pathfinder.h	/^		inline bool isPitSeg(int id) {$/;"	f	class:PathSegPit
isPlaying	libs/musicplayer/OpenALMusicPlayer.cpp	/^bool OpenALMusicPlayer::isPlaying()$/;"	f	class:OpenALMusicPlayer
isPlaying	modules/graphic/ssggraph/TorcsSound.h	/^	virtual bool isPlaying()$/;"	f	class:OpenalTorcsSound
isPlaying	modules/graphic/ssggraph/TorcsSound.h	/^	virtual bool isPlaying()$/;"	f	class:PlibTorcsSound
isPointRotate	windows/include/plib/ssg.h	/^  int isPointRotate (void) { return point_rotate ; }$/;"	f	class:ssgCutout
isPresent	tools/texmapper/maintexmapper.cpp	/^    bool	isPresent;$/;"	m	struct:Face	file:
isPublicId	libs/txml/xmltok.h	/^  int (*isPublicId)(const ENCODING *enc, const char *ptr, const char *end,$/;"	m	struct:encoding
isPublicId	libs/txml/xmltok_impl.c	/^int PREFIX(isPublicId)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
isRunning	windows/include/plib/sl.h	/^  int isRunning () const { return status == SL_SAMPLE_RUNNING ; } $/;"	f	class:slPlayer
isSelected	windows/include/plib/ssg.h	/^  int isSelected ( unsigned int i ) const$/;"	f	class:ssgSelector
isSetClipPlane	windows/include/plib/ssg.h	/^  int  isSetClipPlane ( int i ) { return enabledClipPlanes & (1<<i) ; }$/;"	f	class:ssgContext
isSorted	windows/include/plib/ul.h	/^  bool isSorted    ( void ) const { return sorted ; }$/;"	f	class:ulLinkedList
isSourceActive	modules/graphic/ssggraph/SoundInterface.h	/^		bool isSourceActive(TorcsSound* sound, int* index) {$/;"	f	class:SharedSourcePool
isSpace	libs/txml/xmltok.c	/^int isSpace(int c)$/;"	f	file:
isSpotlight	windows/include/plib/ssg.h	/^  int  isSpotlight () { return position[3] != 0.0f; }$/;"	f	class:ssgLight
isStarted	interfaces/raceman.h	/^    bool isStarted;$/;"	m	struct:Situation
isStarted	modules/simu/simuv2/car.cpp	/^static bool isStarted;$/;"	v	file:
isStuck	drivers/bt/driver.cpp	/^bool Driver::isStuck()$/;"	f	class:Driver
isStuck	drivers/damned/driver.cpp	/^bool Driver::isStuck()$/;"	f	class:Driver
isStuck	drivers/olethros/driver.cpp	/^    bool Driver::isStuck()$/;"	f	class:olethros::Driver
isStuck	drivers/sparkle/driver.cpp	/^bool Driver::isStuck()$/;"	f	class:Driver
isSwapped	modules/graphic/ssggraph/grloadsgi.h	/^		int           isSwapped;$/;"	m	class:ssgSGIHeader
isTeamMate	drivers/bt/opponent.h	/^		bool isTeamMate() { return teammate; }$/;"	f	class:Opponent
isTeamMate	drivers/damned/opponent.h	/^		bool isTeamMate() { return teammate; }$/;"	f	class:Opponent
isTimeout	drivers/bt/pit.cpp	/^bool Pit::isTimeout(float distance)$/;"	f	class:Pit
isTimeout	drivers/damned/pit.cpp	/^bool Pit::isTimeout(float distance)$/;"	f	class:Pit
isTimeout	drivers/olethros/pit.cpp	/^bool Pit::isTimeout(float distance)$/;"	f	class:olethros::Pit
isTranslucent	windows/include/plib/ssg.h	/^  int  isTranslucent () { return state ? state->isTranslucent() : FALSE ; }$/;"	f	class:ssgLeaf
isTranslucent	windows/include/plib/ssg.h	/^  virtual int  isTranslucent (void)  { return translucent ;  }$/;"	f	class:ssgState
isUtf16	libs/txml/xmltok.h	/^  char isUtf16;$/;"	m	struct:encoding
isUtf8	libs/txml/xmltok.h	/^  char isUtf8;$/;"	m	struct:encoding
isValid	libs/musicplayer/OggSoundStream.h	/^		virtual bool isValid() { return valid; }$/;"	f	class:OggSoundStream
isValidPosition	windows/include/plib/ul.h	/^  bool isValidPosition ( int pos ) const$/;"	f	class:ulLinkedList
isWaiting	windows/include/plib/sl.h	/^  int isWaiting () const { return status == SL_SAMPLE_WAITING ; } $/;"	f	class:slPlayer
is_enabled	modules/graphic/ssggraph/TorcsSound.h	/^	bool is_enabled;	\/\/\/< is it available at all?$/;"	m	class:OpenalTorcsSound
is_headlight	windows/include/plib/ssg.h	/^  int is_headlight ;$/;"	m	class:ssgLight
is_initial	interfaces/car.h	/^	bool is_initial;$/;"	m	struct:__anon78
is_selected	interfaces/car.h	/^	bool is_selected;$/;"	m	struct:__anon78
is_turned_on	windows/include/plib/ssg.h	/^  int is_turned_on ;$/;"	m	class:ssgLight
isaWindow	modules/graphic/ssggraph/grloadac.cpp	/^static int		isaWindow;$/;"	v	file:
isacar	modules/graphic/ssggraph/grloadac.cpp	/^static int		isacar = TRUE;$/;"	v	file:
isinitalized	modules/graphic/ssggraph/grtrackmap.cpp	/^bool cGrTrackMap::isinitalized = false;$/;"	m	class:cGrTrackMap	file:
isinitalized	modules/graphic/ssggraph/grtrackmap.h	/^		static bool isinitalized;$/;"	m	class:cGrTrackMap
isnan	drivers/human/human.cpp	28;"	d	file:
isnan	drivers/olethros/driver.cpp	43;"	d	file:
isnan	drivers/olethros/geometry.cpp	29;"	d	file:
isnan	libs/learning/policy.cpp	20;"	d	file:
isnan	modules/simu/simuv2/sim.h	28;"	d
isnan	modules/simu/simuv2/simu.cpp	27;"	d	file:
isnan	modules/simu/simuv3/sim.h	28;"	d
isnan	modules/simu/simuv3/simu.cpp	27;"	d	file:
isnan	tools/accc/accc.h	177;"	d
isobjectacar	tools/accc/mainaccc.cpp	/^int isobjectacar=0;$/;"	v
isonLeft	drivers/berniw/mycar.h	/^		bool isonLeft;$/;"	m	class:MyCar
isonLeft	drivers/berniw/mycar.h	/^		bool isonLeft;$/;"	m	class:OtherCar
isonLeft	drivers/berniw2/mycar.h	/^		bool isonLeft;$/;"	m	class:MyCar
isonLeft	drivers/berniw2/mycar.h	/^		bool isonLeft;$/;"	m	class:OtherCar
isonLeft	drivers/berniw3/mycar.h	/^		bool isonLeft;$/;"	m	class:MyCar
isonLeft	drivers/berniw3/mycar.h	/^		bool isonLeft;$/;"	m	class:OtherCar
isonLeft	drivers/human/mycar.h	/^		bool isonLeft;$/;"	m	class:MyCar
isonLeft	drivers/human/mycar.h	/^		bool isonLeft;$/;"	m	class:OtherCar
itf	interfaces/raceman.h	/^    tRaceModIft		itf;$/;"	m	struct:__anon73
itf	modules/graphic/ssggraph/TorcsSound.h	/^	OpenalSoundInterface* itf; \/\/\/< Handle to the interface$/;"	m	class:OpenalTorcsSound
itxt_length	windows/include/png.h	/^   png_size_t itxt_length; \/* length of the itxt string *\/$/;"	m	struct:png_text_struct
j	tools/trackgen/easymesh.cpp	/^	int i,  j,  k;$/;"	m	struct:ele	file:
jointI	modules/simu/simuv3/engine.h	/^	tdble       jointI; \/* jointI *\/$/;"	m	struct:__anon38
joyInfo	drivers/human/human.cpp	/^static tCtrlJoyInfo *joyInfo = NULL;$/;"	v	file:
joyPresent	drivers/human/human.cpp	/^int joyPresent = 0;$/;"	v
js	libs/confscreens/controlconfig.cpp	/^static jsJoystick *js[NUM_JOY] = {NULL};$/;"	v	file:
js	libs/confscreens/joystickconfig.cpp	/^static jsJoystick *js[NUM_JOY] = {NULL};$/;"	v	file:
js	libs/tgfclient/control.cpp	/^static jsJoystick *js[NUM_JOY] = {NULL};$/;"	v	file:
jsJoystick	windows/include/plib/js.h	/^class jsJoystick$/;"	c
k	drivers/olethros/learn.h	/^		int k; \/\/\/< number of measurements$/;"	m	class:olethros::SegLearn::Averages
k	tools/trackgen/easymesh.cpp	/^	int i,  j,  k;$/;"	m	struct:ele	file:
kDammage	interfaces/track.h	/^    tdble kDammage;		\/**< Dammages in case of collision *\/$/;"	m	struct:trackSurface
kFriction	interfaces/track.h	/^    tdble kFriction;		\/**< Coefficient of friction *\/$/;"	m	struct:trackSurface
kRebound	interfaces/track.h	/^    tdble kRebound;		\/**< Coefficient of energy restitution *\/$/;"	m	struct:trackSurface
kRollRes	interfaces/track.h	/^    tdble kRollRes;		\/**< Rolling resistance *\/$/;"	m	struct:trackSurface
kRoughWaveLen	interfaces/track.h	/^    tdble kRoughWaveLen;	\/**< Wave length in m of the surface *\/$/;"	m	struct:trackSurface
kRoughness	interfaces/track.h	/^    tdble kRoughness;		\/**< Roughtness in m of the surface (wave height) *\/$/;"	m	struct:trackSurface
kX	tools/trackgen/elevation.cpp	/^static tdble	kX, kY, dX, dY;$/;"	v	file:
kY	tools/trackgen/elevation.cpp	/^static tdble	kX, kY, dX, dY;$/;"	v	file:
kZ	tools/trackgen/elevation.cpp	/^static tdble	kZ, dZ;$/;"	v	file:
kalpha	drivers/berniw/trackdesc.h	/^		tdble kalpha;			\/* (roll)factor for the angle (like michigan) *\/$/;"	m	class:TrackSegment
kalpha	drivers/berniw2/trackdesc.h	/^		tdble kalpha;			\/* (roll)factor for the angle (like michigan) *\/$/;"	m	class:TrackSegment
kalpha	drivers/berniw3/trackdesc.h	/^		tdble kalpha;			\/* (roll)factor for the angle (like michigan) *\/$/;"	m	class:TrackSegment
kalpha	drivers/human/trackdesc.h	/^		tdble kalpha;			\/* (roll)factor for the angle (like michigan) *\/$/;"	m	class:TrackSegment
kalpha	drivers/inferno/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment
kalpha	drivers/inferno/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment2D
kalpha	drivers/lliaw/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment
kalpha	drivers/lliaw/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment2D
kalpha	drivers/tita/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment
kalpha	drivers/tita/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment2D
kbeta	drivers/berniw/trackdesc.h	/^		tdble kbeta;			\/* (curvature)factor for bumps (e-track-3) *\/$/;"	m	class:TrackSegment
kbeta	drivers/berniw2/trackdesc.h	/^		tdble kbeta;			\/* (curvature)factor for bumps (e-track-3) *\/$/;"	m	class:TrackSegment
kbeta	drivers/berniw3/trackdesc.h	/^		tdble kbeta;			\/* (curvature)factor for bumps (e-track-3) *\/$/;"	m	class:TrackSegment
kbeta	drivers/human/trackdesc.h	/^		tdble kbeta;			\/* (curvature)factor for bumps (e-track-3) *\/$/;"	m	class:TrackSegment
kbeta	drivers/inferno/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment
kbeta	drivers/inferno/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment2D
kbeta	drivers/lliaw/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment
kbeta	drivers/lliaw/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment2D
kbeta	drivers/tita/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment
kbeta	drivers/tita/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment2D
keep_prob	predictor/predict.py	/^keep_prob = tf.placeholder("float")$/;"	v
keep_prob	predictor/train.py	/^keep_prob = tf.placeholder("float")$/;"	v
keep_prob	predictor/train2.py	/^keep_prob = tf.placeholder("float")$/;"	v
keep_prob_hidden	predictor/predict.py	/^keep_prob_hidden = tf.placeholder("float")$/;"	v
keep_prob_hidden	predictor/train.py	/^keep_prob_hidden = tf.placeholder("float")$/;"	v
keep_prob_hidden	predictor/train2.py	/^keep_prob_hidden = tf.placeholder("float")$/;"	v
key	libs/confscreens/controlconfig.cpp	/^	const char *key;$/;"	m	struct:__anon123	file:
key	libs/tgf/hash.cpp	/^	char *key;$/;"	m	struct:HashElem	file:
key	libs/tgfclient/gui.h	/^    unsigned char	key;$/;"	m	struct:GfuiKey
key	windows/include/png.h	/^   png_charp key;          \/* keyword, 1-79 character description of "text" *\/$/;"	m	struct:png_text_struct
keyInfo	drivers/human/human.cpp	/^static tKeyInfo keyInfo[256];$/;"	v	file:
keySize	libs/tgfclient/guifont.cpp	/^const char *keySize[4] = { "size big", "size large", "size medium", "size small" };$/;"	v
keyboard	tools/accc/mainaccc.cpp	/^void keyboard ( unsigned char, int, int )$/;"	f
keyboard	topview/Camera.hpp	/^void Camera::keyboard(unsigned char key, int x, int y) {$/;"	f	class:kmuvcl::Camera
keyboardPossible	libs/confscreens/controlconfig.h	/^	int keyboardPossible;$/;"	m	struct:__anon122
keycmp	libs/txml/hashtable.c	29;"	d	file:
keycmp	libs/txml/hashtable.c	31;"	d	file:
kgamma	drivers/berniw/trackdesc.h	/^		tdble kgamma;			\/* (pitch)factor of road *\/$/;"	m	class:TrackSegment
kgamma	drivers/berniw2/trackdesc.h	/^		tdble kgamma;			\/* (pitch)factor of road *\/$/;"	m	class:TrackSegment
kgamma	drivers/berniw3/trackdesc.h	/^		tdble kgamma;			\/* (pitch)factor of road *\/$/;"	m	class:TrackSegment
kgamma	drivers/human/trackdesc.h	/^		tdble kgamma;			\/* (pitch)factor of road *\/$/;"	m	class:TrackSegment
kgamma	drivers/inferno/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment
kgamma	drivers/inferno/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment2D
kgamma	drivers/lliaw/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment
kgamma	drivers/lliaw/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment2D
kgamma	drivers/tita/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment
kgamma	drivers/tita/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment2D
kidPostDrawCB	windows/include/plib/ssgaShapes.h	/^  ssgCallback kidPostDrawCB ;$/;"	m	class:ssgaShape
kidPreDrawCB	windows/include/plib/ssgaShapes.h	/^  ssgCallback kidPreDrawCB  ;$/;"	m	class:ssgaShape
kidState	windows/include/plib/ssgaShapes.h	/^  ssgState   *kidState      ;$/;"	m	class:ssgaShape
kids	tools/accc/accc.h	/^  int kids;$/;"	m	struct:ob
kids	tools/accc/accc.h	/^  struct ob * kids;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids	windows/include/plib/ssg.h	/^  ssgKidList kids ;$/;"	m	class:ssgBranch
kids0	tools/accc/accc.h	/^  struct ob * kids0;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids1	tools/accc/accc.h	/^  struct ob * kids1;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids2	tools/accc/accc.h	/^  struct ob * kids2;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids3	tools/accc/accc.h	/^  struct ob * kids3;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids_o	tools/accc/accc.h	/^  int kids_o;$/;"	m	struct:ob
kmuvcl	topview/Camera.hpp	/^namespace kmuvcl {$/;"	n
kmuvcl	topview/mat.hpp	/^namespace kmuvcl {$/;"	n
kmuvcl	topview/operator.hpp	/^namespace kmuvcl {$/;"	n
kmuvcl	topview/transform.hpp	/^namespace kmuvcl$/;"	n
kmuvcl	topview/vec.hpp	/^namespace kmuvcl {$/;"	n
l	drivers/berniw/pathfinder.h	/^		v3d* l;			\/* trajectory for pit lane *\/$/;"	m	class:PathSeg
l	drivers/berniw/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
l	drivers/berniw2/pathfinder.h	/^		v3d* l;			\/* trajectory for pit lane *\/$/;"	m	class:PathSeg
l	drivers/berniw2/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
l	drivers/berniw3/pathfinder.h	/^		v3d* l;			\/* trajectory for pit lane *\/$/;"	m	class:PathSeg
l	drivers/berniw3/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
l	drivers/human/pathfinder.h	/^		v3d* l;			\/* trajectory for pit lane *\/$/;"	m	class:PathSeg
l	drivers/human/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
l	drivers/inferno/pathfinder.h	/^		vec2d* l;			\/\/ Trajectory for pit lane (per car, constant).$/;"	m	class:PathSegPit
l	drivers/inferno/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
l	drivers/inferno/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
l	drivers/lliaw/pathfinder.h	/^		vec2d* l;			\/\/ Trajectory for pit lane (per car, constant).$/;"	m	class:PathSegPit
l	drivers/lliaw/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
l	drivers/lliaw/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
l	drivers/tita/pathfinder.h	/^		vec2d* l;			\/\/ Trajectory for pit lane (per car, constant).$/;"	m	class:PathSegPit
l	drivers/tita/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
l	drivers/tita/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
l	libs/learning/Distribution.h	/^	real l; \/\/\/< lambda$/;"	m	class:ExponentialDistribution
l	libs/learning/Distribution.h	/^	real l; \/\/\/< lambda$/;"	m	class:LaplacianDistribution
l	tools/trackgen/raceline.cpp	/^	vec2d l;	\/\/ left track border$/;"	m	struct:RacelineSegment	file:
lW	windows/include/vorbis/codec.h	/^  long  lW;$/;"	m	struct:vorbis_block
lW	windows/include/vorbis/codec.h	/^  long lW;$/;"	m	struct:vorbis_dsp_state
label	libs/confscreens/controlconfig.cpp	/^	const char *label;$/;"	m	struct:__anon123	file:
label	libs/tgfclient/gui.h	/^	tGfuiLabel	label;$/;"	m	union:GfuiObject::__anon147
label	libs/tgfclient/gui.h	/^    char			*label;$/;"	m	struct:GfuiListElement
label	libs/tgfclient/gui.h	/^    tGfuiLabel		label;$/;"	m	struct:__anon141
label	libs/tgfclient/gui.h	/^    tGfuiLabel		label;$/;"	m	struct:__anon145
label	predictor/reshape.py	/^label = collections.deque([])$/;"	v
labelId	libs/tgfclient/guimenu.h	/^    int		labelId;$/;"	m	struct:__anon150
label_	predictor/reshape.py	/^    label_ = int(data_f[3])$/;"	v
lacing_fill	windows/include/ogg/ogg.h	/^  long    lacing_fill;$/;"	m	struct:__anon52
lacing_packet	windows/include/ogg/ogg.h	/^  long    lacing_packet;$/;"	m	struct:__anon52
lacing_returned	windows/include/ogg/ogg.h	/^  long    lacing_returned;$/;"	m	struct:__anon52
lacing_storage	windows/include/ogg/ogg.h	/^  long    lacing_storage;$/;"	m	struct:__anon52
lacing_vals	windows/include/ogg/ogg.h	/^  int     *lacing_vals;      \/* The values that will go to the segment table *\/$/;"	m	struct:__anon52
lambda	libs/learning/ANN.h	/^	real lambda; \/\/\/< eligibility decay$/;"	m	struct:Layer_
lambda	libs/learning/ANN.h	/^	real lambda; \/\/\/< eligibility trace decay$/;"	m	struct:ANN_
lambda	libs/learning/policy.h	/^	real lambda; \/\/\/< Eligibility trace decay$/;"	m	class:DiscretePolicy
lambda	windows/include/plib/ssgaWaveSystem.h	/^  float lambda ;$/;"	m	class:ssgaWaveTrain
lane	tools/trackgen/raceline.cpp	/^	double lane;	\/\/ 0.0: left, 1.0: right$/;"	m	struct:RacelineSegment	file:
lang	windows/include/png.h	/^   png_charp lang;         \/* language code, 0-79 characters$/;"	m	struct:png_text_struct
lang_key	windows/include/png.h	/^   png_charp lang_key;     \/* keyword translated UTF-8 string, 0 or more$/;"	m	struct:png_text_struct
lap	drivers/human/human.h	/^	int		lap;$/;"	m	struct:HumanContext
lap	drivers/olethros/learn.h	/^    int lap; \/\/\/< current lap$/;"	m	class:olethros::SegLearn
lapFlag	interfaces/raceman.h	/^    int		lapFlag;$/;"	m	struct:__anon72
lapToClear	interfaces/car.h	/^	int lapToClear; \/**< the lap before the penalty has to be cleared *\/$/;"	m	struct:CarPenalty
laps	interfaces/car.h	/^	int laps;$/;"	m	struct:__anon77
lapsBehindLeader	interfaces/car.h	/^	int lapsBehindLeader;$/;"	m	struct:__anon77
last	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static int last;      \/\/ identifies last found support point$/;"	v	file:
lastAccel	drivers/inferno2/common.cpp	/^static tdble lastAccel[10] = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};$/;"	v	file:
lastBrkCmd	drivers/inferno2/common.cpp	/^static tdble lastBrkCmd[10] = {0};$/;"	v	file:
lastDv	drivers/inferno2/common.cpp	/^static tdble lastDv[10] = {0};$/;"	v	file:
lastEventTime	modules/graphic/ssggraph/grcam.cpp	/^    double lastEventTime;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
lastFrame	interfaces/raceman.h	/^    double	lastFrame;$/;"	m	struct:RmMovieCapture
lastId	drivers/berniw/pathfinder.h	/^		int lastId;				\/* segment id of the last call *\/$/;"	m	class:Pathfinder
lastId	drivers/berniw2/pathfinder.h	/^		int lastId;				\/* segment id of the last call *\/$/;"	m	class:Pathfinder
lastId	drivers/berniw3/pathfinder.h	/^		int lastId;				\/* segment id of the last call *\/$/;"	m	class:Pathfinder
lastId	drivers/human/pathfinder.h	/^		int lastId;				\/* segment id of the last call *\/$/;"	m	class:Pathfinder
lastId	drivers/inferno/pathfinder.h	/^		int lastId;				\/\/ segment id of the last call.$/;"	m	class:Pathfinder
lastId	drivers/lliaw/pathfinder.h	/^		int lastId;				\/\/ segment id of the last call.$/;"	m	class:Pathfinder
lastId	drivers/tita/pathfinder.h	/^		int lastId;				\/\/ segment id of the last call.$/;"	m	class:Pathfinder
lastKeyUpdate	drivers/human/human.cpp	/^static double lastKeyUpdate = -10.0;$/;"	v	file:
lastLapTime	interfaces/car.h	/^	double lastLapTime;$/;"	m	struct:__anon77
lastPlan	drivers/berniw/pathfinder.h	/^		int lastPlan;			\/* start of the last plan *\/$/;"	m	class:Pathfinder
lastPlan	drivers/berniw2/pathfinder.h	/^		int lastPlan;			\/* start of the last plan *\/$/;"	m	class:Pathfinder
lastPlan	drivers/berniw3/pathfinder.h	/^		int lastPlan;			\/* start of the last plan *\/$/;"	m	class:Pathfinder
lastPlan	drivers/human/pathfinder.h	/^		int lastPlan;			\/* start of the last plan *\/$/;"	m	class:Pathfinder
lastPlan	drivers/inferno/pathfinder.h	/^		int lastPlan;			\/\/ start of the last plan.$/;"	m	class:Pathfinder
lastPlan	drivers/lliaw/pathfinder.h	/^		int lastPlan;			\/\/ start of the last plan.$/;"	m	class:Pathfinder
lastPlan	drivers/tita/pathfinder.h	/^		int lastPlan;			\/\/ start of the last plan.$/;"	m	class:Pathfinder
lastPlanRange	drivers/berniw/pathfinder.h	/^		int lastPlanRange;		\/* range of the last plan *\/$/;"	m	class:Pathfinder
lastPlanRange	drivers/berniw2/pathfinder.h	/^		int lastPlanRange;		\/* range of the last plan *\/$/;"	m	class:Pathfinder
lastPlanRange	drivers/berniw3/pathfinder.h	/^		int lastPlanRange;		\/* range of the last plan *\/$/;"	m	class:Pathfinder
lastPlanRange	drivers/human/pathfinder.h	/^		int lastPlanRange;		\/* range of the last plan *\/$/;"	m	class:Pathfinder
lastPlanRange	drivers/inferno/pathfinder.h	/^		int lastPlanRange;		\/\/ range of the last plan.$/;"	m	class:Pathfinder
lastPlanRange	drivers/lliaw/pathfinder.h	/^		int lastPlanRange;		\/\/ range of the last plan.$/;"	m	class:Pathfinder
lastPlanRange	drivers/tita/pathfinder.h	/^		int lastPlanRange;		\/\/ range of the last plan.$/;"	m	class:Pathfinder
lastTime	interfaces/raceman.h	/^    double		lastTime;$/;"	m	struct:__anon73
lastTime	modules/graphic/ssggraph/grsmoke.h	/^  double lastTime;$/;"	m	class:ssgVtxTableSmoke
lastTime	windows/include/plib/sl.h	/^  UnsignedWide   lastTime ;       \/\/ used for timing in secondsUsed()$/;"	m	class:slDSP
lastUpdated	modules/graphic/ssggraph/grsound.cpp	/^static double lastUpdated;$/;"	v	file:
lastViewTime	modules/graphic/ssggraph/grcam.cpp	/^    double lastViewTime;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
last_bit	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static int last_bit;  \/\/ last_bit = 1<<last$/;"	v	file:
last_num_kids	modules/graphic/ssggraph/grloadac.cpp	/^static int last_num_kids    = -1 ;$/;"	v	file:
last_state_of_skid	modules/graphic/ssggraph/grskidmarks.h	/^  int			last_state_of_skid;$/;"	m	struct:__anon1
last_time	windows/include/plib/ul.h	/^  double last_time ;$/;"	m	class:ulClock
last_transform	windows/include/plib/ssg.h	/^  sgMat4 last_transform ;$/;"	m	class:ssgBaseTransform
last_updated	windows/include/plib/ssg.h	/^  int    last_updated ;$/;"	m	class:ssgBaseTransform
lastfuel	drivers/berniw/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	drivers/berniw2/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	drivers/berniw3/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	drivers/human/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	drivers/inferno/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	drivers/lliaw/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	drivers/olethros/strategy.h	/^	float lastfuel;					\/\/ the fuel available when we cross the start lane.$/;"	m	class:olethros::SimpleStrategy
lastfuel	drivers/sparkle/pit.h	/^		float lastfuel;         \/* the fuel available when we cross the start lane *\/$/;"	m	class:Pit
lastfuel	drivers/tita/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastpitfuel	drivers/berniw/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	drivers/berniw2/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	drivers/berniw3/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	drivers/human/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	drivers/inferno/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	drivers/lliaw/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	drivers/olethros/strategy.h	/^	float lastpitfuel;				\/\/ Amount refueled, special case when we refuel.$/;"	m	class:olethros::SimpleStrategy
lastpitfuel	drivers/sparkle/pit.h	/^		float lastpitfuel;      \/* amount refueled, special case when we refuel *\/$/;"	m	class:Pit
lastpitfuel	drivers/tita/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastsegtype	drivers/sparkle/driver.h	/^		int lastsegtype;		\/* the segment type for which lastturnarc is valid *\/$/;"	m	class:Driver
lastturn	drivers/bt/learn.h	/^		int lastturn;$/;"	m	class:SegLearn
lastturn	drivers/damned/learn.h	/^		int lastturn;$/;"	m	class:SegLearn
lastturn	drivers/olethros/learn.h	/^	int lastturn; \/\/\/< type of last turn entered$/;"	m	class:olethros::SegLearn
lastturnarc	drivers/sparkle/driver.h	/^		float lastturnarc;		\/* the arc of the current turn segments of the same type *\/$/;"	m	class:Driver
lateral_drag	modules/simu/simuv3/aero.h	/^    tdble   lateral_drag; \/* drag force along car y axis *\/$/;"	m	struct:__anon46
latin1_encoding	libs/txml/xmltok.c	/^static const struct normal_encoding latin1_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
latin1_toUtf16	libs/txml/xmltok.c	/^void latin1_toUtf16(const ENCODING *enc,$/;"	f	file:
latin1_toUtf8	libs/txml/xmltok.c	/^void latin1_toUtf8(const ENCODING *enc,$/;"	f	file:
latlong_style	windows/include/plib/ssgaShapes.h	/^  int latlong_style ;$/;"	m	class:ssgaSphere
lbbmax	tools/texmapper/maintexmapper.cpp	/^    sgVec3	lbbmax;$/;"	m	struct:Face	file:
lbbmin	tools/texmapper/maintexmapper.cpp	/^    sgVec3	lbbmin;		\/* Bounding (unscaled) box *\/$/;"	m	struct:Face	file:
lc_signal	interfaces/car.h	/^	bool lc_signal;$/;"	m	struct:__anon78
lc_signal	libs/raceengineclient/raceengine.cpp	/^bool lc_signal = false;$/;"	v
ldws	drivers/human/human.cpp	/^static int ldws(bool isOnleft, double dist_to_left, double dist_to_right,$/;"	f	file:
ldws_value	drivers/human/human.cpp	/^int ldws_value;$/;"	v
ldws_value	libs/raceengineclient/raceengine.cpp	/^int ldws_value = 0;$/;"	v
leaderFlag	modules/graphic/ssggraph/grboard.h	/^    int leaderFlag;$/;"	m	class:cGrBoard
leaderNb	modules/graphic/ssggraph/grboard.h	/^    int leaderNb;$/;"	m	class:cGrBoard
leaf	windows/include/plib/ssg.h	/^  ssgLeaf *leaf ;$/;"	m	class:ssgHit
leaf_count	windows/include/plib/ssg.h	/^  int leaf_count   ;$/;"	m	class:ssgStatistics
learn	drivers/bt/driver.h	/^		SegLearn *learn;$/;"	m	class:Driver
learn	drivers/damned/driver.h	/^		SegLearn *learn;$/;"	m	class:Driver
learn	drivers/olethros/driver.h	/^	SegLearn *learn; \/\/\/< handle to learning module$/;"	m	class:olethros::Driver
learning_method	libs/learning/policy.h	/^	enum LearningMethod learning_method; \/\/\/< learning method to use;$/;"	m	class:DiscretePolicy	typeref:enum:DiscretePolicy::LearningMethod
leaves	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  BBoxLeaf *leaves;$/;"	m	class:Complex
left	drivers/olethros/TrackData.h	/^    Point left;$/;"	m	class:Segment
left	modules/graphic/ssggraph/grcam.h	/^    float left;$/;"	m	class:cGrOrthoCamera
left	windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
left	windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
len	drivers/berniw/linalg.h	/^inline double v3d::len(void)$/;"	f	class:v3d
len	drivers/berniw/linalg.h	/^inline float v2d::len(void) const$/;"	f	class:v2d
len	drivers/berniw2/linalg.h	/^inline double v3d::len(void)$/;"	f	class:v3d
len	drivers/berniw2/linalg.h	/^inline float v2d::len(void) const$/;"	f	class:v2d
len	drivers/berniw3/linalg.h	/^inline double v3d::len(void)$/;"	f	class:v3d
len	drivers/berniw3/linalg.h	/^inline float v2d::len(void) const$/;"	f	class:v2d
len	drivers/human/linalg.h	/^inline float v2d::len(void) const$/;"	f	class:v2d
len	drivers/olethros/linalg.h	/^inline float v2d::len(void) const$/;"	f	class:v2d
len	drivers/sparkle/linalg.h	/^inline float v2d::len(void) const$/;"	f	class:v2d
len	interfaces/track.h	/^	tdble len;					\/**< Lenght of each pit stop *\/$/;"	m	struct:__anon65
len	libs/math/v2_t.h	/^template<class T> inline T v2t<T>::len(void) const$/;"	f	class:v2t
len	libs/math/v3_t.h	/^template<class T> inline T v3t<T>::len(void)$/;"	f	class:v3t
len	libs/math/v4_t.h	/^template<class T> inline T v4t<T>::len(void) const$/;"	f	class:v4t
len	libs/tgfclient/gui.h	/^    int			min, max, len, pos;$/;"	m	struct:__anon144
leng	modules/graphic/ssggraph/grloadsgi.h	/^		int           *leng ;$/;"	m	class:ssgSGIHeader
length	drivers/berniw/pathfinder.h	/^		tdble length;	\/* dist to the next pathseg *\/$/;"	m	class:PathSeg
length	drivers/berniw/trackdesc.h	/^		tdble length;			\/* distance to the next segment (2-D, not 3-D!) *\/$/;"	m	class:TrackSegment
length	drivers/berniw2/pathfinder.h	/^		tdble length;	\/* dist to the next pathseg *\/$/;"	m	class:PathSeg
length	drivers/berniw2/trackdesc.h	/^		tdble length;			\/* distance to the next segment (2-D, not 3-D!) *\/$/;"	m	class:TrackSegment
length	drivers/berniw3/pathfinder.h	/^		tdble length;	\/* dist to the next pathseg *\/$/;"	m	class:PathSeg
length	drivers/berniw3/trackdesc.h	/^		tdble length;			\/* distance to the next segment (2-D, not 3-D!) *\/$/;"	m	class:TrackSegment
length	drivers/human/pathfinder.h	/^		tdble length;	\/* dist to the next pathseg *\/$/;"	m	class:PathSeg
length	drivers/human/trackdesc.h	/^		tdble length;			\/* distance to the next segment (2-D, not 3-D!) *\/$/;"	m	class:TrackSegment
length	drivers/inferno/pathfinder.h	/^				tdble length;	\/\/ Dist to the next pathseg.$/;"	m	class:PathSeg::pseg
length	drivers/inferno/pathfinder.h	/^		float* length;			\/\/ dist to next pathseg.$/;"	m	class:PathSegOpt
length	drivers/inferno/trackdesc.h	/^		tdble length;			\/\/ Distance to the next segment (2-D, not 3-D!).$/;"	m	class:TrackSegment
length	drivers/lliaw/pathfinder.h	/^				tdble length;	\/\/ Dist to the next pathseg.$/;"	m	class:PathSeg::pseg
length	drivers/lliaw/pathfinder.h	/^		float* length;			\/\/ dist to next pathseg.$/;"	m	class:PathSegOpt
length	drivers/lliaw/trackdesc.h	/^		tdble length;			\/\/ Distance to the next segment (2-D, not 3-D!).$/;"	m	class:TrackSegment
length	drivers/tita/pathfinder.h	/^				tdble length;	\/\/ Dist to the next pathseg.$/;"	m	class:PathSeg::pseg
length	drivers/tita/pathfinder.h	/^		float* length;			\/\/ dist to next pathseg.$/;"	m	class:PathSegOpt
length	drivers/tita/trackdesc.h	/^		tdble length;			\/\/ Distance to the next segment (2-D, not 3-D!).$/;"	m	class:TrackSegment
length	interfaces/track.h	/^    tdble	  length;	\/**< main track length *\/$/;"	m	struct:__anon68
length	interfaces/track.h	/^    tdble length;		\/**< Length in meters of the middle of the track *\/$/;"	m	struct:trackSeg
length	libs/learning/string_utils.h	/^     unsigned int length; \/\/\/<This is the buffer length$/;"	m	struct:StringBuffer_
length	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar Quaternion::length() const { return sqrt(length2()); }$/;"	f	class:Quaternion
length	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar length(const Quaternion& q) { return q.length(); }$/;"	f
length	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar Vector::length() const { return sqrt(length2()); }$/;"	f	class:Vector
length	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar length(const Vector& v) { return v.length(); }$/;"	f
length	topview/vec.hpp	/^      T length() {$/;"	f	class:kmuvcl::math::vec
length	windows/include/plib/sl.h	/^  int    length ;$/;"	m	class:slSample
length	windows/include/plib/ssgaWaveSystem.h	/^  float length ;$/;"	m	class:ssgaWaveTrain
length2	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar Quaternion::length2() const { return dot(*this, *this); }$/;"	f	class:Quaternion
length2	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar length2(const Quaternion& q) { return q.length2(); }$/;"	f
length2	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar Vector::length2() const { return dot(*this, *this); }$/;"	f	class:Vector
length2	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar length2(const Vector& v) { return v.length2(); }$/;"	f
lengthRemaining	windows/include/plib/sl.h	/^  int            lengthRemaining ;  \/* Sample frames remaining until repeat *\/$/;"	m	class:slSamplePlayer
letoverlap	drivers/berniw/pathfinder.cpp	/^inline int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	drivers/berniw2/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	drivers/berniw3/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	drivers/human/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	drivers/inferno/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	drivers/lliaw/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	drivers/tita/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
level	libs/txml/xml.h	/^    int			level;		\/* nested level *\/$/;"	m	struct:xmlElement
level	libs/txml/xmlrole.h	/^  unsigned level;$/;"	m	struct:prolog_state
level_str	libs/confscreens/driverconfig.cpp	/^static const char *level_str[] = { ROB_VAL_ROOKIE, ROB_VAL_AMATEUR, ROB_VAL_SEMI_PRO, ROB_VAL_PRO };$/;"	v	file:
level_str	libs/raceengineclient/raceinit.cpp	/^static const char *level_str[] = { ROB_VAL_ROOKIE, ROB_VAL_AMATEUR, ROB_VAL_SEMI_PRO, ROB_VAL_PRO };$/;"	v	file:
levels	windows/include/plib/ssgaShapes.h	/^  int   levels ;$/;"	m	class:ssgaPatch
levelup	libs/tgfclient/tgfclient.h	/^    int		levelup[GFCTRL_JOY_MAXBUTTON * NUM_JOY];\/**< Button state (1 = up) *\/$/;"	m	struct:__anon134
lfK	modules/simu/simuv2/wheel.h	/^    tdble	lfK;		\/* Load factor *\/$/;"	m	struct:__anon11
lfK	modules/simu/simuv3/wheel.h	/^    tdble	lfK;		\/* Load factor *\/$/;"	m	struct:__anon33
lfMax	modules/simu/simuv2/wheel.h	/^    tdble	lfMax;		\/* Load factor *\/$/;"	m	struct:__anon11
lfMax	modules/simu/simuv3/wheel.h	/^    tdble	lfMax;		\/* Load factor *\/$/;"	m	struct:__anon33
lfMin	modules/simu/simuv2/wheel.h	/^    tdble	lfMin;		\/* Load factor *\/$/;"	m	struct:__anon11
lfMin	modules/simu/simuv3/wheel.h	/^    tdble	lfMin;		\/* Load factor *\/$/;"	m	struct:__anon33
lgfromstart	interfaces/track.h	/^    tdble lgfromstart;		\/**< Length of begining of segment from starting line *\/$/;"	m	struct:trackSeg
lheight	tools/texmapper/maintexmapper.cpp	/^    float		lheight;$/;"	m	struct:__anon59	file:
lheight	tools/texmapper/maintexmapper.cpp	/^    float	lheight;$/;"	m	struct:Face	file:
libDir	libs/tgf/tgf.cpp	/^static char *libDir = strdup("");$/;"	v	file:
lift	modules/simu/simuv2/aero.h	/^    tdble	lift[2];	\/* front & rear lift force along car z axis *\/$/;"	m	struct:__anon27
lift	modules/simu/simuv3/aero.h	/^    tdble	lift[2];	\/* front & rear lift force along car z axis *\/$/;"	m	struct:__anon46
lightAnchor	modules/graphic/ssggraph/grcarlight.h	/^  ssgBranch *lightAnchor;$/;"	m	struct:tgrCarlight_t
lightArray	modules/graphic/ssggraph/grcarlight.h	/^  ssgVtxTableCarlight * lightArray[MAX_NUMBER_LIGHT];$/;"	m	struct:tgrCarlight_t
lightCmd	drivers/human/human.h	/^	int		lightCmd;$/;"	m	struct:HumanContext
lightCmd	interfaces/car.h	/^	int lightCmd; \/**< Lights command *\/$/;"	m	struct:__anon81
lightCurr	modules/graphic/ssggraph/grcarlight.h	/^  ssgVtxTableCarlight * lightCurr[MAX_NUMBER_LIGHT];$/;"	m	struct:tgrCarlight_t
lightType	modules/graphic/ssggraph/grcarlight.h	/^  int                  lightType[MAX_NUMBER_LIGHT];$/;"	m	struct:tgrCarlight_t
limit	windows/include/plib/ssg.h	/^  unsigned int limit   ;  \/* The current limit on number of things  *\/$/;"	m	class:ssgSimpleList
limit	windows/include/plib/ssg.h	/^  unsigned int limit ;  \/* The current limit on number of entities  *\/$/;"	m	class:ssgList
limit	windows/include/plib/ul.h	/^  unsigned int limit ;  \/* The current limit on number of entities  *\/$/;"	m	class:ulList
limitFov	modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::limitFov(void) {$/;"	f	class:cGrCarCamMirror
limitFov	modules/graphic/ssggraph/grcam.h	/^    void limitFov(void) { }$/;"	f	class:cGrBackgroundCam
limitFov	modules/graphic/ssggraph/grcam.h	/^   void limitFov(void)  {}$/;"	f	class:cGrPerspCamera
limit_high	windows/include/plib/ssg.h	/^  float  limit_high ;$/;"	m	class:ssgAxisTransform
limit_low	windows/include/plib/ssg.h	/^  float  limit_low  ;$/;"	m	class:ssgAxisTransform
lineNumber	libs/txml/xmltok.h	/^  unsigned long lineNumber;$/;"	m	struct:position
linear	libs/learning/ANN.cpp	/^real linear(real x)$/;"	f
linear_d	libs/learning/ANN.cpp	/^real linear_d(real x)$/;"	f
link	interfaces/car.h	/^	link;$/;"	m	struct:CarPenalty
link	libs/confscreens/driverconfig.cpp	/^    GF_TAILQ_ENTRY(struct tCarInfo) link;$/;"	m	struct:tCarInfo	file:
link	libs/confscreens/driverconfig.cpp	/^    GF_TAILQ_ENTRY(struct tCatInfo) link;$/;"	m	struct:tCatInfo	file:
link	libs/racescreens/driverselect.cpp	/^	GF_TAILQ_ENTRY(struct DrvElt)	link;$/;"	m	struct:DrvElt	file:
link	libs/tgf/hash.cpp	/^	GF_TAILQ_ENTRY(struct HashElem) 	link;$/;"	m	struct:HashElem	file:
link	modules/graphic/ssggraph/grcam.h	/^    GF_TAILQ_ENTRY(cGrCamera) link;$/;"	m	class:cGrCamera
link	modules/simu/simuv3/susp.h	/^    t3Dd link;$/;"	m	struct:Suspension
link	tools/texmapper/maintexmapper.cpp	/^    GF_TAILQ_ENTRY(struct Face) link;$/;"	m	struct:Face	file:
link	tools/trackgen/objects.cpp	/^	GF_TAILQ_ENTRY(objdef)	link;$/;"	m	struct:objdef	file:
link	tools/trackgen/relief.cpp	/^    GF_TAILQ_ENTRY(struct Line) link;$/;"	m	struct:Line	file:
linkHandle	libs/tgf/params.cpp	/^	linkHandle; \/**< Next configuration handle *\/$/;"	m	struct:parmHandle	file:
linkParam	libs/tgf/params.cpp	/^	linkParam; \/**< Next parameter in the same section *\/$/;"	m	struct:param	file:
linkSection	libs/tgf/params.cpp	/^	linkSection; \/**< Next section at the same level *\/$/;"	m	struct:section	file:
linkWithin	libs/tgf/params.cpp	/^	linkWithin; \/**< Link to next entry *\/$/;"	m	struct:within	file:
links	windows/include/vorbis/vorbisfile.h	/^  int              links;$/;"	m	struct:OggVorbis_File
linuxDirGetList	linux/linuxspec.cpp	/^linuxDirGetList(const char *dir)$/;"	f	file:
linuxDirGetListFiltered	linux/linuxspec.cpp	/^linuxDirGetListFiltered(const char *dir, const char *suffix)$/;"	f	file:
linuxModFreeInfoList	linux/linuxspec.cpp	/^linuxModFreeInfoList(tModList **modlist)$/;"	f	file:
linuxModInfo	linux/linuxspec.cpp	/^linuxModInfo(unsigned int \/* gfid *\/, char *sopath, tModList **modlist)$/;"	f	file:
linuxModInfoDir	linux/linuxspec.cpp	/^linuxModInfoDir(unsigned int \/* gfid *\/, char *dir, int level, tModList **modlist)$/;"	f	file:
linuxModLoad	linux/linuxspec.cpp	/^linuxModLoad(unsigned int \/* gfid *\/, char *sopath, tModList **modlist)$/;"	f	file:
linuxModLoadDir	linux/linuxspec.cpp	/^linuxModLoadDir(unsigned int gfid, char *dir, tModList **modlist)$/;"	f	file:
linuxModUnloadList	linux/linuxspec.cpp	/^linuxModUnloadList(tModList **modlist)$/;"	f	file:
linuxTimeClock	linux/linuxspec.cpp	/^linuxTimeClock(void)$/;"	f	file:
list	windows/include/plib/ssg.h	/^  char         *list   ;  \/* The list. *\/$/;"	m	class:ssgSimpleList
listener_position	modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 listener_position;$/;"	m	class:CarSoundData
literalScanners	libs/txml/xmltok.h	/^  int (*literalScanners[XML_N_LITERAL_TYPES])(const ENCODING *,$/;"	m	struct:encoding
little2_encoding	libs/txml/xmltok.c	/^static const struct normal_encoding little2_encoding = { $/;"	v	typeref:struct:normal_encoding	file:
lliaw	drivers/lliaw/lliaw.cpp	/^extern "C" int lliaw(tModInfo *modInfo)$/;"	f
lmax	interfaces/track.h	/^	tdble lmax;	\/**< Pitting area length max *\/$/;"	m	struct:TrackOwnPit
lmin	interfaces/track.h	/^	tdble lmin;	\/**< Pitting area length min *\/$/;"	m	struct:TrackOwnPit
load	modules/graphic/ssggraph/grcarlight.h	/^  virtual int load ( FILE *fd )  {return  ssgVtxTable::load(fd);}$/;"	f	class:ssgVtxTableCarlight
load	modules/graphic/ssggraph/grshadow.h	/^  virtual int load ( FILE *fd )  {return  ssgVtxTable::load(fd);}$/;"	f	class:ssgVtxTableShadow
load	modules/graphic/ssggraph/grsmoke.h	/^  virtual int load ( FILE *fd )  {return  ssgVtxTable::load(fd);}$/;"	f	class:ssgVtxTableSmoke
load	modules/graphic/ssggraph/grvertexarray.h	/^  virtual int load ( FILE *fd ) {return  ssgVtxArray::load(fd);}$/;"	f	class:ssgGrVtxArray
load	modules/graphic/ssggraph/grvtxtable.h	/^  virtual int load ( FILE *fd )  {return  ssgVtxTable::load(fd);}$/;"	f	class:grVtxTable
load	tools/trackgen/easymesh.cpp	/^int load(void)$/;"	f
loadAC	tools/accc/ac3dload.cpp	/^int loadAC( char *inputFilename, char *outputFilename, int saveIn)$/;"	f
loadACo	tools/accc/ac3dload.cpp	/^int loadACo( char *inputFilename, char *outputFilename, int saveIn)$/;"	f
loadAndGroup	tools/accc/ac3dgroup.cpp	/^void loadAndGroup( char *OutputFileName)$/;"	f
loadBehaviour	drivers/berniw/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	drivers/berniw2/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	drivers/berniw3/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	drivers/human/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	drivers/inferno/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	drivers/lliaw/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	drivers/tita/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadClothoidParams	drivers/berniw/pathfinder.cpp	/^bool Pathfinder::loadClothoidParams(tParam* p)$/;"	f	class:Pathfinder
loadClothoidParams	drivers/berniw2/pathfinder.cpp	/^bool Pathfinder::loadClothoidParams(tParam* p)$/;"	f	class:Pathfinder
loadClothoidParams	drivers/berniw3/pathfinder.cpp	/^bool Pathfinder::loadClothoidParams(tParam* p)$/;"	f	class:Pathfinder
loadClothoidParams	drivers/human/pathfinder.cpp	/^bool Pathfinder::loadClothoidParams(tParam* p)$/;"	f	class:Pathfinder
loadDefaults	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::loadDefaults(tCarElt *curCar)$/;"	f	class:cGrBoard
loadDefaults	modules/graphic/ssggraph/grcam.cpp	/^    void loadDefaults(char *attr) {$/;"	f	class:cGrCarCamCenter
loadDefaults	modules/graphic/ssggraph/grcam.cpp	/^    void loadDefaults(char *attr) {$/;"	f	class:cGrCarCamRoadZoom
loadDefaults	modules/graphic/ssggraph/grcam.cpp	/^void cGrPerspCamera::loadDefaults(char *attr)$/;"	f	class:cGrPerspCamera
loadDefaults	modules/graphic/ssggraph/grcam.h	/^    void loadDefaults(char *attr) { }$/;"	f	class:cGrOrthoCamera
loadFile	libs/learning/policy.cpp	/^void DiscretePolicy::loadFile (char* f)$/;"	f	class:DiscretePolicy
loadParameters	drivers/olethros/learn.cpp	/^void SegLearn::loadParameters (char* fname)$/;"	f	class:SegLearn
loadParams	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::loadParams(tSituation *s)$/;"	f	class:cGrScreen
loadSGI_bool	modules/graphic/ssggraph/grloadsgi.h	/^		bool          loadSGI_bool;$/;"	m	class:ssgSGIHeader
load_database	tools/texmapper/maintexmapper.cpp	/^void load_database(void)$/;"	f
load_params	tools/texmapper/maintexmapper.cpp	/^void load_params(void)$/;"	f
loadbuttonid	libs/racescreens/carsetupscreen.cpp	/^static int loadbuttonid[6];$/;"	v	file:
loader_fd	modules/graphic/ssggraph/grloadac.cpp	/^static gzFile loader_fd ;$/;"	v	file:
loc	tools/accc/accc.h	/^  point_t loc;$/;"	m	struct:ob
loc_a_color	topview/topview.cpp	/^GLint loc_a_color;$/;"	v
loc_a_position	topview/topview.cpp	/^GLint loc_a_position;$/;"	v
loc_a_texcoord	topview/topview.cpp	/^GLint loc_a_texcoord;$/;"	v
loc_u_M	topview/topview.cpp	/^GLint loc_u_M;$/;"	v
loc_u_P	topview/topview.cpp	/^GLint loc_u_P;$/;"	v
loc_u_V	topview/topview.cpp	/^GLint loc_u_V;$/;"	v
loc_u_tex_flag	topview/topview.cpp	/^GLint loc_u_tex_flag;$/;"	v
loc_u_texid	topview/topview.cpp	/^GLint loc_u_texid;$/;"	v
localDir	libs/tgf/tgf.cpp	/^static char *localDir = strdup("");$/;"	v	file:
localalloc	windows/include/vorbis/codec.h	/^  long                localalloc;$/;"	m	struct:vorbis_block
localstore	windows/include/vorbis/codec.h	/^  void               *localstore;$/;"	m	struct:vorbis_block
localtop	windows/include/vorbis/codec.h	/^  long                localtop;$/;"	m	struct:vorbis_block
location	windows/include/png.h	/^    png_byte location; \/* mode of operation at read time *\/$/;"	m	struct:png_unknown_chunk_t
locfar	modules/graphic/ssggraph/grcam.cpp	/^    float locfar;$/;"	m	class:cGrCarCamCenter	file:
locfar	modules/graphic/ssggraph/grcam.cpp	/^    float locfar;$/;"	m	class:cGrCarCamRoadZoom	file:
locfovy	modules/graphic/ssggraph/grcam.cpp	/^    float locfovy;$/;"	m	class:cGrCarCamCenter	file:
locfovy	modules/graphic/ssggraph/grcam.cpp	/^    float locfovy;$/;"	m	class:cGrCarCamRoadZoom	file:
lockBrakeInputTq	modules/simu/simuv2/differential.h	/^	tdble   lockBrakeInputTq;$/;"	m	struct:__anon10
lockInputTq	modules/simu/simuv2/differential.h	/^    tdble	lockInputTq;$/;"	m	struct:__anon10
lockInputTq	modules/simu/simuv3/differential.h	/^    tdble	lockInputTq;$/;"	m	struct:__anon32
logmsg	libs/learning/learn_debug.h	17;"	d
logmsg	libs/learning/policy.cpp	26;"	d	file:
logmsg	libs/learning/policy.cpp	27;"	d	file:
logmsg	modules/graphic/ssggraph/SoundInterface.h	29;"	d
logmsg	modules/graphic/ssggraph/SoundInterface.h	31;"	d
longestAxis	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  int longestAxis() const { return extent.closestAxis(); }$/;"	f	class:BBox
lookAt	topview/Camera.hpp	/^	kmuvcl::math::mat4x4f lookAt() {$/;"	f	class:kmuvcl::Camera
lookAt	topview/transform.hpp	/^        mat<4, 4, T> lookAt(T eyeX, T eyeY, T eyeZ, T centerX, T centerY, T centerZ, T upX, T upY, T upZ)$/;"	f	namespace:kmuvcl::math
lookup	libs/txml/hashtable.c	/^NAMED *lookup(HASH_TABLE *table, KEY name, size_t createSize)$/;"	f
lookup	modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^  Function lookup(ShapeType type1, ShapeType type2) const {$/;"	f	class:AlgoTable
loop	modules/graphic/ssggraph/TorcsSound.h	/^	bool loop; \/\/\/< Whether it's a looping sound$/;"	m	class:TorcsSound
loop_time	windows/include/plib/ssg.h	/^  double  loop_time  ;$/;"	m	class:ssgTimedSelector
lower	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  Endpoint lower[3];$/;"	m	class:Object
lowpass	modules/graphic/ssggraph/TorcsSound.h	/^	float lowpass; \/\/\/< Current low pass filter$/;"	m	class:TorcsSound
lowpass_env	modules/graphic/ssggraph/TorcsSound.h	/^	slEnvelope* lowpass_env; \/\/\/< low pass filter envelope$/;"	m	class:PlibTorcsSound
lp	modules/graphic/ssggraph/QSoundChar.h	/^	float lp;$/;"	m	struct:QSoundChar_
lp	modules/graphic/ssggraph/TorcsSound.h	/^    float lp; \/\/\/< Environmental filtering$/;"	m	class:SoundSource
lscale	tools/texmapper/maintexmapper.cpp	/^    sgVec3	lscale;		\/* object scale *\/$/;"	m	struct:Face	file:
lside	interfaces/track.h	/^		struct { struct trackSeg *rside, *lside; };$/;"	m	struct:trackSeg::__anon62::__anon63	typeref:struct:trackSeg::__anon62::__anon63::
lson	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxNode *lson;$/;"	m	class:BBoxInternal
lwidth	tools/texmapper/maintexmapper.cpp	/^    float		lwidth;		\/* logical (unscaled) values *\/$/;"	m	struct:__anon59	file:
lwidth	tools/texmapper/maintexmapper.cpp	/^    float	lwidth;		\/* logical (unscaled) values *\/$/;"	m	struct:Face	file:
m	drivers/berniw/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
m	drivers/berniw2/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
m	drivers/berniw3/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
m	drivers/human/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
m	drivers/inferno/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
m	drivers/inferno/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
m	drivers/lliaw/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
m	drivers/lliaw/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
m	drivers/tita/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
m	drivers/tita/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
m	libs/learning/ANN.h	/^	real m; \/\/\/< mean$/;"	m	struct:RBFConnection_
m	libs/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:ExponentialDistribution
m	libs/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:LaplacianDistribution
m	libs/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:NormalDistribution
m	libs/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:UniformDistribution
m_bestlap	drivers/bt/strategy.h	/^		float m_bestlap;				\/\/ Best possible lap, empty tank and alone.$/;"	m	class:SimpleStrategy2
m_bestlap	drivers/damned/strategy.h	/^		float m_bestlap;				\/\/ Best possible lap, empty tank and alone.$/;"	m	class:SimpleStrategy2
m_expectedfuelperlap	drivers/bt/strategy.h	/^		float m_expectedfuelperlap;		\/\/ Expected fuel per lap (may be very inaccurate).$/;"	m	class:SimpleStrategy
m_expectedfuelperlap	drivers/damned/strategy.h	/^		float m_expectedfuelperlap;		\/\/ Expected fuel per lap (may be very inaccurate).$/;"	m	class:SimpleStrategy
m_fuelchecked	drivers/bt/strategy.h	/^		bool m_fuelchecked;				\/\/ Fuel statistics updated.$/;"	m	class:SimpleStrategy
m_fuelchecked	drivers/damned/strategy.h	/^		bool m_fuelchecked;				\/\/ Fuel statistics updated.$/;"	m	class:SimpleStrategy
m_fuelperlap	drivers/bt/strategy.h	/^		float m_fuelperlap;				\/\/ The maximum amount of fuel we needed for a lap.$/;"	m	class:SimpleStrategy
m_fuelperlap	drivers/damned/strategy.h	/^		float m_fuelperlap;				\/\/ The maximum amount of fuel we needed for a lap.$/;"	m	class:SimpleStrategy
m_fuelperstint	drivers/bt/strategy.h	/^		float m_fuelperstint;$/;"	m	class:SimpleStrategy2
m_fuelperstint	drivers/damned/strategy.h	/^		float m_fuelperstint;$/;"	m	class:SimpleStrategy2
m_fuelsum	drivers/bt/strategy.h	/^		float m_fuelsum;				\/\/ all the fuel used.$/;"	m	class:SimpleStrategy
m_fuelsum	drivers/damned/strategy.h	/^		float m_fuelsum;				\/\/ all the fuel used.$/;"	m	class:SimpleStrategy
m_lastfuel	drivers/bt/strategy.h	/^		float m_lastfuel;				\/\/ the fuel available when we cross the start lane.$/;"	m	class:SimpleStrategy
m_lastfuel	drivers/damned/strategy.h	/^		float m_lastfuel;				\/\/ the fuel available when we cross the start lane.$/;"	m	class:SimpleStrategy
m_lastpitfuel	drivers/bt/strategy.h	/^		float m_lastpitfuel;			\/\/ Amount refueled, special case when we refuel.$/;"	m	class:SimpleStrategy
m_lastpitfuel	drivers/damned/strategy.h	/^		float m_lastpitfuel;			\/\/ Amount refueled, special case when we refuel.$/;"	m	class:SimpleStrategy
m_pitch	topview/Camera.hpp	/^	float m_pitch = 0.0f;$/;"	m	class:kmuvcl::Camera
m_pittime	drivers/bt/strategy.h	/^		float m_pittime;				\/\/ Expected additional time for pit stop.$/;"	m	class:SimpleStrategy2
m_pittime	drivers/damned/strategy.h	/^		float m_pittime;				\/\/ Expected additional time for pit stop.$/;"	m	class:SimpleStrategy2
m_remainingstops	drivers/bt/strategy.h	/^		int m_remainingstops;$/;"	m	class:SimpleStrategy2
m_remainingstops	drivers/damned/strategy.h	/^		int m_remainingstops;$/;"	m	class:SimpleStrategy2
m_worstlap	drivers/bt/strategy.h	/^		float m_worstlap;				\/\/ Worst possible lap, full tank and alone.$/;"	m	class:SimpleStrategy2
m_worstlap	drivers/damned/strategy.h	/^		float m_worstlap;				\/\/ Worst possible lap, full tank and alone.$/;"	m	class:SimpleStrategy2
m_yaw	topview/Camera.hpp	/^	float m_yaw = 0.0f;$/;"	m	class:kmuvcl::Camera
magic	libs/tgf/params.cpp	/^	int magic; \/**< Magic number (to detect wrong type casts and such) *\/$/;"	m	struct:parmHandle	file:
magic	libs/tgf/tgf.h	/^    int			magic;		\/**< magic number for integrity check *\/$/;"	m	struct:ModInfo
magic	modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short magic ;$/;"	m	class:ssgSGIHeader
magic	windows/include/plib/sl.h	/^  int            magic ;$/;"	m	class:slPlayer
magic	windows/include/plib/sl.h	/^  int        magic    ;$/;"	m	struct:slPendingCallBack
main	labview/socket.cpp	/^int main(void)$/;"	f
main	libs/txml/gennmtab.c	/^int main()$/;"	f
main	libs/txml/gennmtab/gennmtab.c	/^int main()$/;"	f
main	linux/main.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	misc/png2jpg/png2jpg.c	/^int main (int argc, char **argv)$/;"	f
main	predictor/main.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	tools/accc/mainaccc.cpp	/^main(int argc, char **argv)$/;"	f
main	tools/nfs2ac/mainnfs2ac.cpp	/^int main(int argc, char **argv)$/;"	f
main	tools/nfsperf/mainnfsperf.cpp	/^int main (int argc, char **argv)$/;"	f
main	tools/texmapper/maintexmapper.cpp	/^int main(int argc, char **argv)$/;"	f
main	tools/trackgen/maintrackgen.cpp	/^int main(int argc, char **argv)$/;"	f
main	topview/topview.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	windows/main.cpp	/^main(int argc, char *argv[])$/;"	f
main	yunseok/tcp_client.cpp	/^int main(void) {$/;"	f
main	yunseok/tcp_client_2.cpp	/^int main(void) {$/;"	f
mainMenu	libs/raceengineclient/racestate.cpp	/^static void *mainMenu;$/;"	v	file:
makeCapped	windows/include/plib/ssgaShapes.h	/^  void makeCapped ( int c ) { capped = c ; regenerate () ; }$/;"	f	class:ssgaCylinder
makeCorrupt	windows/include/plib/ssgaShapes.h	/^  void makeCorrupt  () { corrupted = TRUE  ; }$/;"	f	class:ssgaShape
makeModelPath	modules/graphic/ssggraph/grcar.h	/^	virtual void makeModelPath ( char* path, const char *fname ) const$/;"	f	class:myLoaderOptions
makeModelPath	modules/graphic/ssggraph/grssgext.h	/^		virtual void makeModelPath ( char* path, const char *fname ) const$/;"	f	class:ssgLoaderOptionsEx
makeModelPath	tools/trackgen/objects.cpp	/^		virtual void makeModelPath ( char *path, const char *fname ) const {$/;"	f	class:myLoaderOptions
makeModelPath	tools/trackgen/util.h	/^    virtual void makeModelPath ( char* path, const char *fname ) const$/;"	f	class:ssgLoaderOptionsEx
makeTexturePath	modules/graphic/ssggraph/grcar.h	/^	virtual void makeTexturePath ( char* path, const char *fname ) const$/;"	f	class:myLoaderOptions
makeTexturePath	modules/graphic/ssggraph/grssgext.h	/^		virtual void makeTexturePath ( char* path, const char *fname ) const$/;"	f	class:ssgLoaderOptionsEx
makeTexturePath	tools/trackgen/objects.cpp	/^		virtual void makeTexturePath ( char *path, const char *fname ) const {$/;"	f	class:myLoaderOptions
makeTexturePath	tools/trackgen/util.h	/^    virtual void makeTexturePath ( char* path, const char *fname ) const$/;"	f	class:ssgLoaderOptionsEx
make_ObjPair	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^inline ObjPair make_ObjPair(DtObjectRef x, DtObjectRef y) {$/;"	f
malloc	libs/tgf/tgf.h	160;"	d
malloc	libs/txml/xmldef.h	28;"	d
management_active	windows/include/vorbis/vorbisenc.h	/^  int    management_active; \/**< nonzero if bitrate management is active *\/$/;"	m	struct:ovectl_ratemanage2_arg
management_active	windows/include/vorbis/vorbisenc.h	/^  int    management_active; \/**< nonzero if bitrate management is active*\/$/;"	m	struct:ovectl_ratemanage_arg
manual	drivers/human/human.h	/^	int		manual;$/;"	m	struct:HumanContext
map	libs/txml/xmlparse.h	/^  int map[256];$/;"	m	struct:__anon121
map	yunseok/tcp_client.cpp	/^	void map() {$/;"	f	class:SharedMemory_Manager
mapChildren	libs/tgf/tgf.h	/^  std::map<ProfileInstance *, void *> mapChildren;$/;"	m	class:ProfileInstance
mapLevel	modules/graphic/ssggraph/grloadac.cpp	/^static int              mapLevel;$/;"	v	file:
mapLevelBitmap	modules/graphic/ssggraph/grvtxtable.h	/^  int mapLevelBitmap;$/;"	m	class:grVtxTable
mapNormalToSphere	tools/accc/ac3dload.cpp	/^void mapNormalToSphere(ob_t *object)$/;"	f
mapNormalToSphere2	tools/accc/ac3dload.cpp	/^void mapNormalToSphere2(ob_t *object)$/;"	f
mapTexture	modules/graphic/ssggraph/grtrackmap.cpp	/^GLuint cGrTrackMap::mapTexture;$/;"	m	class:cGrTrackMap	file:
mapTexture	modules/graphic/ssggraph/grtrackmap.h	/^		static GLuint mapTexture;$/;"	m	class:cGrTrackMap
mapTextureEnv	tools/accc/ac3dload.cpp	/^void mapTextureEnv(ob_t *object)$/;"	f
mapTextureEnvOld	tools/accc/ac3dload.cpp	/^void mapTextureEnvOld(ob_t *object)$/;"	f
mapWarning	libs/tgf/tgf.h	/^  std::map<ProfileInstance *, void *> mapWarning;$/;"	m	class:Profiler
map_size	modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::map_size;$/;"	m	class:cGrTrackMap	file:
map_size	modules/graphic/ssggraph/grtrackmap.h	/^		static int map_size;$/;"	m	class:cGrTrackMap
map_x	modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::map_x;$/;"	m	class:cGrTrackMap	file:
map_x	modules/graphic/ssggraph/grtrackmap.h	/^		static int map_x;$/;"	m	class:cGrTrackMap
map_y	modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::map_y;$/;"	m	class:cGrTrackMap	file:
map_y	modules/graphic/ssggraph/grtrackmap.h	/^		static int map_y;$/;"	m	class:cGrTrackMap
mark	tools/trackgen/easymesh.cpp	/^	int mark;             \/* is it off (ON or OFF) *\/$/;"	m	struct:ele	file:
mark	tools/trackgen/easymesh.cpp	/^	int mark;             \/* is it off, is on the boundary *\/$/;"	m	struct:sid	file:
mark	tools/trackgen/easymesh.h	/^    int mark;             \/* is it off *\/$/;"	m	struct:nod
mark	tools/trackgen/easymesh.h	/^    int mark;$/;"	m	struct:seg
markAsTeamMate	drivers/bt/opponent.h	/^		void markAsTeamMate() { teammate = true; }$/;"	f	class:Opponent
markAsTeamMate	drivers/damned/opponent.h	/^		void markAsTeamMate() { teammate = true; }$/;"	f	class:Opponent
marks	interfaces/track.h	/^    int		*marks;		\/**< marks array *\/$/;"	m	struct:SegExt
mass	drivers/berniw/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	drivers/berniw2/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	drivers/berniw3/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	drivers/bt/driver.h	/^		float mass;				\/\/ Mass of car + fuel.$/;"	m	class:Driver
mass	drivers/damned/driver.h	/^		float mass;				\/\/ Mass of car + fuel.$/;"	m	class:Driver
mass	drivers/human/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	drivers/inferno/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	drivers/lliaw/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	drivers/olethros/driver.h	/^	float mass;				\/\/\/< Mass of car + fuel.$/;"	m	class:olethros::Driver
mass	drivers/olethros/learn.h	/^	float mass; \/\/\/< mass$/;"	m	class:olethros::SegLearn
mass	drivers/sparkle/driver.h	/^		float mass;				\/* mass of car + fuel *\/$/;"	m	class:Driver
mass	drivers/tita/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	modules/simu/simuv2/carstruct.h	/^    tdble	mass;		\/* mass with pilot (without fuel) *\/$/;"	m	struct:__anon23
mass	modules/simu/simuv2/wheel.h	/^    tdble	mass;		\/* total wheel mass (incl. brake) (unsprung mass) *\/$/;"	m	struct:__anon11
mass	modules/simu/simuv3/carstruct.h	/^    tdble	mass;		\/* mass with pilot (without fuel) *\/$/;"	m	struct:__anon42
mass	modules/simu/simuv3/wheel.h	/^    tdble	mass;		\/* total wheel mass (incl. brake) (unsprung mass) *\/$/;"	m	struct:__anon33
masterPlayer	drivers/human/human.cpp	/^static int masterPlayer = -1;$/;"	v	file:
mat	tools/accc/accc.h	/^typedef struct mat {$/;"	s
mat	tools/texmapper/maintexmapper.cpp	/^    sgMat4	mat;$/;"	m	struct:Face	file:
mat	topview/mat.hpp	/^      mat()$/;"	f	class:kmuvcl::math::mat
mat	topview/mat.hpp	/^      mat(const T elem)$/;"	f	class:kmuvcl::math::mat
mat	topview/mat.hpp	/^    class mat$/;"	c	namespace:kmuvcl::math
mat	windows/include/plib/sg.h	/^  sgMat4 mat ;$/;"	m	class:sgFrustum
mat	windows/include/plib/sg.h	/^  sgdMat4 mat ;$/;"	m	class:sgdFrustum
mat3x3d	topview/mat.hpp	/^    typedef mat<3, 3, double>   mat3x3d;$/;"	t	namespace:kmuvcl::math
mat3x3f	topview/mat.hpp	/^    typedef mat<3, 3, float>    mat3x3f;$/;"	t	namespace:kmuvcl::math
mat4x4d	topview/mat.hpp	/^    typedef mat<4, 4, double>   mat4x4d;$/;"	t	namespace:kmuvcl::math
mat4x4f	topview/mat.hpp	/^    typedef mat<4, 4, float>    mat4x4f;$/;"	t	namespace:kmuvcl::math
mat_t	tools/accc/accc.h	/^} mat_t;$/;"	t	typeref:struct:mat
material	interfaces/track.h	/^    const char *material;		\/**< Type of material used *\/$/;"	m	struct:trackSurface
material	tools/trackgen/easymesh.cpp	/^	int material;$/;"	m	struct:ele	file:
materials	tools/trackgen/easymesh.cpp	/^void materials()$/;"	f
math	topview/mat.hpp	/^  namespace math {$/;"	n	namespace:kmuvcl
math	topview/operator.hpp	/^  namespace math {$/;"	n	namespace:kmuvcl
math	topview/transform.hpp	/^    namespace math$/;"	n	namespace:kmuvcl
math	topview/vec.hpp	/^  namespace math {$/;"	n	namespace:kmuvcl
matrix	windows/include/plib/ssg.h	/^  sgMat4   matrix ;$/;"	m	class:ssgHit
max	drivers/human/pref.h	/^    tdble	max;		\/* max value for analog control *\/$/;"	m	struct:__anon185
max	interfaces/car.h	/^	tdble max;$/;"	m	struct:__anon82
max	interfaces/track.h	/^    t3Dd		max;$/;"	m	struct:__anon68
max	libs/confscreens/controlconfig.h	/^	float max;$/;"	m	struct:__anon122
max	libs/tgf/params.cpp	/^	tdble max; \/**< Maximum for numeric value *\/$/;"	m	struct:param	file:
max	libs/tgfclient/gui.h	/^    int			min, max, len, pos;$/;"	m	struct:__anon144
max	modules/graphic/ssggraph/grloadsgi.h	/^		int            max ;$/;"	m	class:ssgSGIHeader
max	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar max(Scalar x, Scalar y) { return x < y ? y : x; }$/;"	f
max	tools/trackgen/easymesh.cpp	40;"	d	file:
max	windows/include/plib/js.h	/^  float max       [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
max	windows/include/plib/sg.h	/^  sgVec3 max ;$/;"	m	class:sgBox
max	windows/include/plib/sg.h	/^  sgdVec3 max ;$/;"	m	class:sgdBox
maxAngle	modules/graphic/ssggraph/grcar.h	/^    tdble		minAngle, maxAngle;$/;"	m	struct:__anon4
maxCmd	libs/confscreens/controlconfig.cpp	/^static int maxCmd = sizeof(Cmd) \/ sizeof(Cmd[0]);$/;"	v	file:
maxCmd	libs/confscreens/joystickconfig.cpp	/^static int maxCmd;$/;"	v	file:
maxCmd	libs/confscreens/mouseconfig.cpp	/^static int maxCmd;$/;"	v	file:
maxDammage	interfaces/raceman.h	/^    int                 maxDammage;$/;"	m	struct:__anon70
maxN	drivers/olethros/geometry.h	/^	int maxN;$/;"	m	class:Vector
maxName	drivers/human/pref.h	/^    const char	*maxName;	\/* Name of the max attribute *\/$/;"	m	struct:__anon185
maxName	libs/confscreens/controlconfig.h	/^	const char *maxName;$/;"	m	struct:__anon122
maxPw	modules/simu/simuv2/engine.h	/^	tdble       maxPw;$/;"	m	struct:__anon18
maxPw	modules/simu/simuv3/engine.h	/^	tdble       maxPw;$/;"	m	struct:__anon37
maxSpeed	modules/simu/simuv2/steer.h	/^    tdble	maxSpeed;	\/* in rad\/s *\/$/;"	m	struct:__anon16
maxSpeed	modules/simu/simuv3/steer.h	/^    tdble	maxSpeed;	\/* in rad\/s *\/$/;"	m	struct:__anon35
maxTextureUnits	modules/graphic/ssggraph/grmain.cpp	/^int maxTextureUnits = 0;$/;"	v
maxTq	modules/simu/simuv2/engine.h	/^    tdble		maxTq;$/;"	m	struct:__anon18
maxTq	modules/simu/simuv3/engine.h	/^    tdble		maxTq;$/;"	m	struct:__anon37
maxValue	modules/graphic/ssggraph/grcar.h	/^    tdble		minValue, maxValue;$/;"	m	struct:__anon4
max_delta	windows/include/plib/ul.h	/^  double max_delta ;$/;"	m	class:ulClock
max_el_state	libs/learning/policy.h	/^	int max_el_state; \/\/\/< max state ID to search for eligibility \\deprecated$/;"	m	class:DiscretePolicy
max_kids	windows/include/plib/ssg.h	/^  int max_kids ;$/;"	m	class:ssgSelector
max_life	modules/graphic/ssggraph/grsmoke.h	/^  double max_life;$/;"	m	class:ssgVtxTableSmoke
max_pool_2x2	predictor/predict.py	/^def max_pool_2x2(x) :$/;"	f
max_pool_2x2	predictor/train.py	/^def max_pool_2x2(x) :$/;"	f
max_pool_2x2	predictor/train2.py	/^def max_pool_2x2(x) :$/;"	f
max_speed_list	drivers/olethros/driver.h	/^	float* max_speed_list;$/;"	m	class:olethros::Driver
max_ttl	windows/include/plib/ssgaFire.h	/^  float max_ttl      ;$/;"	m	class:ssgaFire
max_vol	modules/graphic/ssggraph/SoundInterface.h	/^	float max_vol; \/\/\/< Max.$/;"	m	struct:QueueSoundMap_
maxlen	libs/tgfclient/gui.h	/^	int maxlen;$/;"	m	struct:__anon140
maxsurf	tools/trackgen/easymesh.cpp	/^	int		maxsurf;$/;"	m	struct:group	file:
maxvtx	tools/trackgen/easymesh.cpp	/^	int		maxvtx;$/;"	m	struct:group	file:
maybeTokenized	libs/txml/xmlparse.c	/^  char maybeTokenized;$/;"	m	struct:__anon113	file:
me	drivers/berniw/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	drivers/berniw2/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	drivers/berniw3/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	drivers/human/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	drivers/inferno/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	drivers/lliaw/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	drivers/tita/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
mem	tools/nfs2ac/mainnfs2ac.cpp	/^char  * mem;$/;"	v
menuHandle	libs/client/mainmenu.cpp	/^void *menuHandle = NULL;$/;"	v
menuHandle	libs/racescreens/loadingscreen.cpp	/^static void *menuHandle = NULL;$/;"	v	file:
menuHandle	libs/racescreens/pitmenu.cpp	/^static void *menuHandle = NULL;$/;"	v	file:
menuMusicList	libs/confscreens/soundconfig.cpp	/^static const char *menuMusicList[] = {$/;"	v	file:
menuScreen	interfaces/raceman.h	/^    void		*menuScreen;$/;"	m	struct:__anon73
mergeObject	tools/accc/ac3dload.cpp	/^ob_t *mergeObject (ob_t *ob1,ob_t *ob2, char *nameS)$/;"	f
mergeSplitted	tools/accc/ac3dload.cpp	/^int mergeSplitted (ob_t **object)$/;"	f
message	libs/learning/string_utils.cpp	/^void message(const char* msg, ...)$/;"	f
metal_skid	modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap metal_skid;$/;"	m	class:SoundInterface
metal_skid_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* metal_skid_sound; \/\/\/< metal skidding on metal $/;"	m	class:SoundInterface
mf	windows/include/plib/sl.h	/^  MODfile *mf ;$/;"	m	class:slMODPlayer
mfB	modules/simu/simuv2/wheel.h	/^    tdble	mfB;		\/* Magic Formula B coeff *\/$/;"	m	struct:__anon11
mfB	modules/simu/simuv3/wheel.h	/^    tdble	mfB;		\/* Magic Formula B coeff *\/$/;"	m	struct:__anon33
mfC	modules/simu/simuv2/wheel.h	/^    tdble	mfC;		\/* Magic Formula C coeff *\/$/;"	m	struct:__anon11
mfC	modules/simu/simuv3/wheel.h	/^    tdble	mfC;		\/* Magic Formula C coeff *\/$/;"	m	struct:__anon33
mfE	modules/simu/simuv2/wheel.h	/^    tdble	mfE;		\/* Magic Formula E coeff *\/$/;"	m	struct:__anon11
mfE	modules/simu/simuv3/wheel.h	/^    tdble	mfE;		\/* Magic Formula E coeff *\/$/;"	m	struct:__anon33
mfT	modules/simu/simuv3/wheel.h	/^    tdble   mfT;            \/* Temperature-dependent coeff *\/$/;"	m	struct:__anon33
mh	modules/graphic/ssggraph/grcam.h	/^    int		mx, my, mw, mh;		\/* drawing area *\/$/;"	m	class:cGrCarCamMirror
mid	drivers/olethros/TrackData.h	/^    Point mid;$/;"	m	class:TrackData
min	drivers/human/pref.h	/^    tdble	min;		\/* min value for analog control *\/$/;"	m	struct:__anon185
min	interfaces/car.h	/^	tdble min;$/;"	m	struct:__anon82
min	interfaces/track.h	/^    t3Dd		min;$/;"	m	struct:__anon68
min	libs/confscreens/controlconfig.h	/^	float min;$/;"	m	struct:__anon122
min	libs/tgf/params.cpp	/^	tdble min; \/**< Minimum for numeric value *\/$/;"	m	struct:param	file:
min	libs/tgfclient/gui.h	/^    int			min, max, len, pos;$/;"	m	struct:__anon144
min	modules/graphic/ssggraph/grloadsgi.h	/^		int            min ;$/;"	m	class:ssgSGIHeader
min	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar min(Scalar x, Scalar y) { return x > y ? y : x; }$/;"	f
min	tools/trackgen/easymesh.cpp	43;"	d	file:
min	windows/include/plib/js.h	/^  float min       [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
min	windows/include/plib/sg.h	/^  sgVec3 min ;$/;"	m	class:sgBox
min	windows/include/plib/sg.h	/^  sgdVec3 min ;$/;"	m	class:sgdBox
minAngle	modules/graphic/ssggraph/grcar.h	/^    tdble		minAngle, maxAngle;$/;"	m	struct:__anon4
minBytesPerChar	libs/txml/xmltok.h	/^  int minBytesPerChar;$/;"	m	struct:encoding
minName	drivers/human/pref.h	/^    const char	*minName;	\/* Name of the min attribute *\/$/;"	m	struct:__anon185
minName	libs/confscreens/controlconfig.h	/^	const char *minName;$/;"	m	struct:__anon122
minVal	drivers/human/pref.h	/^    tdble	minVal;		\/* another min value for analog control*\/$/;"	m	struct:__anon185
minValue	modules/graphic/ssggraph/grcar.h	/^    tdble		minValue, maxValue;$/;"	m	struct:__anon4
min_el_state	libs/learning/policy.h	/^	int min_el_state; \/\/\/< min state ID to search for eligibility \\deprecated$/;"	m	class:DiscretePolicy
mincorner	drivers/berniw/pathfinder.h	/^	double mincorner;		\/* corner nearest to my car *\/$/;"	m	struct:__anon156
mincorner	drivers/berniw2/pathfinder.h	/^	double mincorner;		\/* corner nearest to my car *\/$/;"	m	struct:__anon200
mincorner	drivers/berniw3/pathfinder.h	/^	double mincorner;		\/* corner nearest to my car *\/$/;"	m	struct:__anon179
mincorner	drivers/human/pathfinder.h	/^	double mincorner;		\/* corner nearest to my car *\/$/;"	m	struct:__anon191
mincorner	drivers/inferno/pathfinder.h	/^	double mincorner;		\/\/ corner nearest to my car.$/;"	m	struct:__anon164
mincorner	drivers/lliaw/pathfinder.h	/^	double mincorner;		\/\/ corner nearest to my car.$/;"	m	struct:__anon210
mincorner	drivers/tita/pathfinder.h	/^	double mincorner;		\/\/ corner nearest to my car.$/;"	m	struct:__anon171
minorthdist	drivers/berniw/pathfinder.h	/^	double minorthdist;		\/* minimal distance relative to my car *\/$/;"	m	struct:__anon156
minorthdist	drivers/berniw2/pathfinder.h	/^	double minorthdist;		\/* minimal distance relative to my car *\/$/;"	m	struct:__anon200
minorthdist	drivers/berniw3/pathfinder.h	/^	double minorthdist;		\/* minimal distance relative to my car *\/$/;"	m	struct:__anon179
minorthdist	drivers/human/pathfinder.h	/^	double minorthdist;		\/* minimal distance relative to my car *\/$/;"	m	struct:__anon191
minorthdist	drivers/inferno/pathfinder.h	/^	double minorthdist;		\/\/ minimal distance relative to my car.$/;"	m	struct:__anon164
minorthdist	drivers/lliaw/pathfinder.h	/^	double minorthdist;		\/\/ minimal distance relative to my car.$/;"	m	struct:__anon210
minorthdist	drivers/tita/pathfinder.h	/^	double minorthdist;		\/\/ minimal distance relative to my car.$/;"	m	struct:__anon171
minute	windows/include/png.h	/^   png_byte minute;  \/* minute of hour, 0 - 59 *\/$/;"	m	struct:png_time_struct
mipmap	windows/include/plib/ssg.h	/^	int wrapu, wrapv, mipmap ;$/;"	m	class:ssgTexture
mipmap	windows/include/plib/ssg.h	/^  int    mipmap;$/;"	m	class:ssgSimpleState
mirrorAllowed	modules/graphic/ssggraph/grcam.h	/^    int			mirrorAllowed;	\/* flag to allox the display of mirror *\/$/;"	m	class:cGrCamera
mirrorCam	modules/graphic/ssggraph/grscreen.h	/^		class cGrCarCamMirror *mirrorCam;		\/\/ The mirror camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrCarCamMirror
mirrorFlag	modules/graphic/ssggraph/grscreen.h	/^		int mirrorFlag;$/;"	m	class:cGrScreen
mixer	windows/include/plib/sl.h	/^  Uchar *mixer ;$/;"	m	class:slScheduler
mixer_buffer	windows/include/plib/sl.h	/^  Uchar *mixer_buffer  ;$/;"	m	class:slScheduler
mixer_buffer_size	windows/include/plib/sl.h	/^  int mixer_buffer_size, mixer_gain ;$/;"	m	class:slScheduler
mixer_gain	windows/include/plib/sl.h	/^  int mixer_buffer_size, mixer_gain ;$/;"	m	class:slScheduler
mixer_inputs	windows/include/plib/sl.h	/^  Uchar *mixer_inputs [ SL_MAX_MIXERINPUTS + 1 ] ;$/;"	m	class:slScheduler
mkdir	libs/tgf/tgf.cpp	320;"	d	file:
mlist	modules/graphic/ssggraph/grloadac.cpp	/^static _ssgMaterial   *mlist    [ MAX_MATERIALS ] ;$/;"	v	file:
mmt	windows/include/plib/sl.h	/^   MMTIME         mmt;	         \/\/ timing $/;"	m	class:slDSP
modFreeInfoList	libs/tgf/os.h	/^    tfModFreeInfoList		modFreeInfoList;$/;"	m	struct:__anon92
modInfo	libs/tgf/os.h	/^    tfModGetInfo		modInfo;$/;"	m	struct:__anon92
modInfo	libs/tgf/tgf.h	/^    tModInfo		modInfo[MAX_MOD_ITF];	\/**< module info list for this dll *\/$/;"	m	struct:ModList
modInfoDir	libs/tgf/os.h	/^    tfModGetInfoDir		modInfoDir;$/;"	m	struct:__anon92
modList	interfaces/raceman.h	/^    tModList		**modList;	\/**< drivers loaded *\/$/;"	m	struct:RmInfo
modLoad	libs/tgf/os.h	/^    tfModLoad			modLoad;$/;"	m	struct:__anon92
modLoadDir	libs/tgf/os.h	/^    tfModLoadDir		modLoadDir;$/;"	m	struct:__anon92
modName	interfaces/car.h	/^	char modName[MAX_NAME_LEN]; \/**< dll name *\/$/;"	m	struct:__anon80
modName	libs/raceengineclient/raceresults.cpp	/^	char	*modName;$/;"	m	struct:__anon124	file:
modUnloadList	libs/tgf/os.h	/^    tfModUnloadList		modUnloadList;$/;"	m	struct:__anon92
mode	modules/simu/simuv2/transmission.h	/^    int		mode;$/;"	m	struct:__anon25
mode	modules/simu/simuv3/transmission.h	/^    int		mode;$/;"	m	struct:__anon44
mode	windows/include/plib/ssg.h	/^  int   mode ;  \/* SSGTWEEN_STOP_AT_END or SSGTWEEN_REPEAT *\/$/;"	m	class:ssgAnimTransform
mode	windows/include/plib/ssg.h	/^  int   mode ;  \/* STOP_AT_END or REPEAT *\/$/;"	m	class:ssgTweenController
mode	windows/include/plib/ssg.h	/^  ssgAnimDirection mode    ;$/;"	m	class:ssgTimedSelector
mode	windows/include/vorbis/codec.h	/^  int   mode;$/;"	m	struct:vorbis_block
model_dir	windows/include/plib/ssg.h	/^  char* model_dir ;$/;"	m	class:ssgLoaderOptions
modifier	libs/tgfclient/gui.h	/^    int			modifier;$/;"	m	struct:GfuiKey
modlist	tools/trackgen/maintrackgen.cpp	/^tModList *modlist = NULL;$/;"	v
monitored	modules/graphic/ssggraph/grcar.h	/^    tdble		*monitored;$/;"	m	struct:__anon4
month	windows/include/png.h	/^   png_byte month;   \/* month of year, 1 - 12 *\/$/;"	m	struct:png_time_struct
mouse	libs/tgfclient/gui.h	/^    int			mouse;$/;"	m	struct:__anon148
mouseAllowed	libs/tgfclient/gui.h	/^    int			mouseAllowed;$/;"	m	struct:__anon148
mouseBehaviour	libs/tgfclient/gui.h	/^    int			mouseBehaviour;$/;"	m	struct:__anon141
mouseBehaviour	libs/tgfclient/gui.h	/^    int			mouseBehaviour;$/;"	m	struct:__anon142
mouseColor	libs/tgfclient/gui.h	/^    float		*mouseColor[2];$/;"	m	struct:__anon148
mouseInfo	drivers/human/human.cpp	/^static tCtrlMouseInfo *mouseInfo = NULL;$/;"	v	file:
mouseInfo	libs/confscreens/controlconfig.cpp	/^static tCtrlMouseInfo	mouseInfo;$/;"	v	file:
mouseInfo	libs/confscreens/mouseconfig.cpp	/^static tCtrlMouseInfo	mouseInfo;$/;"	v	file:
mouseUpdate	topview/Camera.hpp	/^void Camera::mouseUpdate(const kmuvcl::math::vec2f& mousePosition) {$/;"	f	class:kmuvcl::Camera
move	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^inline void move() { if (caching && currentObject) currentObject->move(); }$/;"	f
move	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^void Endpoint::move(Scalar x) {$/;"	f	class:Endpoint
move	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^void Object::move() {$/;"	f	class:Object
movieCapture	interfaces/raceman.h	/^    tRmMovieCapture	movieCapture;$/;"	m	struct:RmInfo
msg	interfaces/car.h	/^	char msg[4][32]; \/**< 4 lines of 31 characters 0-1 from car 2-3 from race engine *\/$/;"	m	struct:__anon81
msg	windows/include/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
msgColor	interfaces/car.h	/^	float msgColor[4]; \/**< RGBA of text *\/$/;"	m	struct:__anon81
msgDisp	libs/raceengineclient/raceengine.cpp	/^static double msgDisp;$/;"	v	file:
msgbuf	libs/learning/string_utils.cpp	/^static char msgbuf[10000];$/;"	v	file:
msgport	libs/learning/string_utils.cpp	/^static FILE* msgport = stderr;$/;"	v	file:
mst	modules/graphic/ssggraph/grsmoke.cpp	/^ssgSimpleState *mst = NULL;$/;"	v
mstf0	modules/graphic/ssggraph/grsmoke.cpp	/^ssgSimpleState *mstf0 = NULL;$/;"	v
mstf1	modules/graphic/ssggraph/grsmoke.cpp	/^ssgSimpleState *mstf1 = NULL;$/;"	v
mu	drivers/olethros/learn.h	/^	float mu; \/\/\/< friction constant$/;"	m	class:olethros::SegLearn
mu	modules/simu/simuv2/wheel.h	/^    tdble  	mu;$/;"	m	struct:__anon11
mu	modules/simu/simuv3/wheel.h	/^    tdble  	mu;$/;"	m	struct:__anon33
mult	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::mult(const Transform& t1, const Transform& t2) {$/;"	f	class:Transform
multInverseLeft	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::multInverseLeft(const Transform& t1, const Transform& t2) {$/;"	f	class:Transform
multMatrix	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void multMatrix(const double v[16]) { curr *= Transform(v); }$/;"	f	class:Object
multMatrix	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void multMatrix(const float v[16]) { curr *= Transform(v); }$/;"	f	class:Object
multTransposeLeft	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix multTransposeLeft(const Matrix& m1, const Matrix& m2) {$/;"	f
music	windows/include/plib/sl.h	/^  slPlayer *music ;$/;"	m	class:slScheduler
muteForMenu	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^void OpenalSoundInterface::muteForMenu()$/;"	f	class:OpenalSoundInterface
muteForMenu	modules/graphic/ssggraph/SoundInterface.h	/^	virtual void muteForMenu() {}$/;"	f	class:SoundInterface
muteForMenu	modules/graphic/ssggraph/grmain.cpp	/^void muteForMenu(void)$/;"	f
muteformenu	interfaces/graphic.h	/^	tGraphicMuteForMenu		muteformenu;$/;"	m	struct:__anon61
mw	modules/graphic/ssggraph/grcam.h	/^    int		mx, my, mw, mh;		\/* drawing area *\/$/;"	m	class:cGrCarCamMirror
mx	modules/graphic/ssggraph/grcam.h	/^    int		mx, my, mw, mh;		\/* drawing area *\/$/;"	m	class:cGrCarCamMirror
my	modules/graphic/ssggraph/grcam.h	/^    int		mx, my, mw, mh;		\/* drawing area *\/$/;"	m	class:cGrCarCamMirror
myCar_x	modules/simu/simuv2/car.cpp	/^float myCar_x;$/;"	v
myIdle	topview/topview.cpp	/^void myIdle() {$/;"	f
myLoaderOptions	modules/graphic/ssggraph/grcar.h	/^class myLoaderOptions : public ssgLoaderOptions$/;"	c
myLoaderOptions	tools/trackgen/objects.cpp	/^class myLoaderOptions : public ssgLoaderOptions {$/;"	c	file:
myStrcmp	libs/tgf/params.cpp	/^static int myStrcmp(const void *s1, const void * s2) {$/;"	f	file:
myTrackDesc	drivers/berniw/berniw.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	drivers/berniw2/berniw2.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	drivers/berniw3/berniw3.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	drivers/human/human.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	drivers/inferno/inferno.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	drivers/lliaw/lliaw.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	drivers/tita/tita.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
my_pitch	drivers/olethros/driver.h	/^	float my_pitch;$/;"	m	class:olethros::Driver
mycar	drivers/berniw/berniw.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,$/;"	v	file:
mycar	drivers/berniw2/berniw2.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,$/;"	v	file:
mycar	drivers/berniw3/berniw3.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,$/;"	v	file:
mycar	drivers/human/human.cpp	/^static MyCar* mycar = NULL;$/;"	v	file:
mycar	drivers/inferno/inferno.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };$/;"	v	file:
mycar	drivers/lliaw/lliaw.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };$/;"	v	file:
mycar	drivers/tita/tita.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };$/;"	v	file:
mycar	libs/raceengineclient/raceengine.cpp	/^tCarElt* mycar = new tCarElt();$/;"	v
mycardata	drivers/bt/driver.h	/^		SingleCardata *mycardata;		\/\/ Pointer to "global" data about my car.$/;"	m	class:Driver
mycardata	drivers/damned/driver.h	/^		SingleCardata *mycardata;		\/\/ Pointer to "global" data about my car.$/;"	m	class:Driver
mycardata	drivers/olethros/driver.h	/^	SingleCardata *mycardata;		\/\/\/< Pointer to "global" data about my car.$/;"	m	class:olethros::Driver
mydisplay	topview/topview.cpp	/^void mydisplay() {$/;"	f
myoffset	drivers/bt/driver.h	/^		float myoffset;			\/\/ Offset to the track middle.$/;"	m	class:Driver
myoffset	drivers/damned/driver.h	/^		float myoffset;			\/\/ Offset to the track middle.$/;"	m	class:Driver
myoffset	drivers/olethros/driver.h	/^	float myoffset;			\/\/\/< Offset to the track middle.$/;"	m	class:olethros::Driver
myoffset	drivers/sparkle/driver.h	/^		float myoffset;			\/* offset to the track middle *\/$/;"	m	class:Driver
mypit	drivers/bt/pit.h	/^		tTrackOwnPit *mypit;			\/\/ Pointer to my pit.$/;"	m	class:Pit
mypit	drivers/damned/pit.h	/^		tTrackOwnPit *mypit;			\/\/ Pointer to my pit.$/;"	m	class:Pit
mypit	drivers/olethros/pit.h	/^		tTrackOwnPit *mypit;			\/\/ Pointer to my pit.$/;"	m	class:olethros::Pit
mypit	drivers/sparkle/pit.h	/^		tTrackOwnPit *mypit;    \/* pointer to my pit *\/$/;"	m	class:Pit
myssgFlatten	modules/graphic/ssggraph/grloadac.cpp	/^void myssgFlatten(ssgEntity *obj)$/;"	f
myssgLoadAC	modules/graphic/ssggraph/grloadac.cpp	/^static ssgEntity *myssgLoadAC ( const char *fname, const ssgLoaderOptions* options )$/;"	f	file:
myssgSaveAC	tools/texmapper/ssgSaveAC.cpp	/^int myssgSaveAC ( const char *filename, ssgEntity *ent, const char *skinfilename )$/;"	f
n	drivers/olethros/geometry.h	/^	int n;$/;"	m	class:Vector
n	libs/learning/List.h	/^	int n; \/\/\/< number of items$/;"	m	struct:List
n0	tools/trackgen/easymesh.h	/^    int n0, n1;$/;"	m	struct:seg
n0	windows/include/plib/ssgaLensFlare.h	/^  ssgNormalArray   *n0 ;$/;"	m	class:ssgaLensFlare
n1	tools/trackgen/easymesh.h	/^    int n0, n1;$/;"	m	struct:seg
nDefaultAtts	libs/txml/xmlparse.c	/^  int nDefaultAtts;$/;"	m	struct:__anon115	file:
nFrame	modules/graphic/ssggraph/grmain.cpp	/^static int nFrame;$/;"	v	file:
nMaxPits	interfaces/track.h	/^	int nMaxPits;	\/**< number max of pits *\/$/;"	m	struct:__anon65
nPathSeg	drivers/berniw/pathfinder.h	/^		int nPathSeg;			\/* # of PathSeg's *\/$/;"	m	class:Pathfinder
nPathSeg	drivers/berniw2/pathfinder.h	/^		int nPathSeg;			\/* # of PathSeg's *\/$/;"	m	class:Pathfinder
nPathSeg	drivers/berniw3/pathfinder.h	/^		int nPathSeg;			\/* # of PathSeg's *\/$/;"	m	class:Pathfinder
nPathSeg	drivers/human/pathfinder.h	/^		int nPathSeg;			\/* # of PathSeg's *\/$/;"	m	class:Pathfinder
nPathSeg	drivers/inferno/pathfinder.h	/^		int nPathSeg;			\/\/ # of PathSeg's.$/;"	m	class:Pathfinder
nPathSeg	drivers/lliaw/pathfinder.h	/^		int nPathSeg;			\/\/ # of PathSeg's.$/;"	m	class:Pathfinder
nPathSeg	drivers/tita/pathfinder.h	/^		int nPathSeg;			\/\/ # of PathSeg's.$/;"	m	class:Pathfinder
nPitEntryStart	drivers/berniw/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	drivers/berniw2/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	drivers/berniw3/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	drivers/human/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	drivers/inferno/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	drivers/lliaw/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	drivers/tita/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitExitEnd	drivers/berniw/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	drivers/berniw2/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	drivers/berniw3/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	drivers/human/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	drivers/inferno/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	drivers/lliaw/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	drivers/tita/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitSeg	interfaces/track.h	/^	int nPitSeg;	\/**< actual number of pits *\/$/;"	m	struct:__anon65
nSegments	tools/trackgen/raceline.cpp	/^static int nSegments = 0;$/;"	v	file:
nStateHandle	libs/racescreens/miscscreens.cpp	/^static void *nStateHandle = 0;$/;"	v	file:
nTrackSegments	drivers/berniw/trackdesc.h	/^		int nTrackSegments;		\/* # of track segments *\/$/;"	m	class:TrackDesc
nTrackSegments	drivers/berniw2/trackdesc.h	/^		int nTrackSegments;		\/* # of track segments *\/$/;"	m	class:TrackDesc
nTrackSegments	drivers/berniw3/trackdesc.h	/^		int nTrackSegments;		\/* # of track segments *\/$/;"	m	class:TrackDesc
nTrackSegments	drivers/human/trackdesc.h	/^		int nTrackSegments;		\/* # of track segments *\/$/;"	m	class:TrackDesc
nTrackSegments	drivers/inferno/trackdesc.h	/^		int nTrackSegments;		\/\/ # of track segments$/;"	m	class:TrackDesc
nTrackSegments	drivers/lliaw/trackdesc.h	/^		int nTrackSegments;		\/\/ # of track segments$/;"	m	class:TrackDesc
nTrackSegments	drivers/tita/trackdesc.h	/^		int nTrackSegments;		\/\/ # of track segments$/;"	m	class:TrackDesc
nW	windows/include/vorbis/codec.h	/^  long  nW;$/;"	m	struct:vorbis_block
nW	windows/include/vorbis/codec.h	/^  long nW;$/;"	m	struct:vorbis_dsp_state
n_actions	libs/learning/policy.h	/^	int n_actions; \/\/\/< number of actions$/;"	m	class:DiscretePolicy
n_channels	modules/graphic/ssggraph/SoundInterface.h	/^	int n_channels; \/\/\/< number of channels$/;"	m	class:SoundInterface
n_engine_sounds	modules/graphic/ssggraph/SoundInterface.h	/^	int n_engine_sounds; \/\/\/< number of simultaneous engines$/;"	m	class:SoundInterface
n_index	windows/include/plib/ssg.h	/^  sgVec3 *normals   ; int num_normals   ; unsigned short *n_index ;$/;"	m	class:ssgVTable
n_inputs	libs/learning/ANN.h	/^	int n_inputs; \/\/\/< number of inputs$/;"	m	struct:ANN_
n_inputs	libs/learning/ANN.h	/^	int n_inputs; \/\/\/< number of inputs$/;"	m	struct:Layer_
n_outcomes	libs/learning/Distribution.h	/^	int n_outcomes; \/\/\/< number of possible outcomes$/;"	m	class:DiscreteDistribution
n_outputs	libs/learning/ANN.h	/^	int n_outputs; \/\/\/< number of outputs$/;"	m	struct:ANN_
n_outputs	libs/learning/ANN.h	/^	int n_outputs; \/\/\/< number of outputs$/;"	m	struct:Layer_
n_quantums	drivers/olethros/learn.h	/^	int n_quantums; \/\/\/< number of quantums the track is split for learning$/;"	m	class:olethros::SegLearn
n_samples	libs/learning/policy.h	/^	int n_samples; \/\/\/< number of samples for above expected r and V$/;"	m	class:DiscretePolicy
n_seg	drivers/olethros/learn.h	/^	int n_seg; \/\/\/< total number of track segments$/;"	m	class:olethros::SegLearn
n_states	libs/learning/policy.h	/^	int n_states; \/\/\/< number of states$/;"	m	class:DiscretePolicy
n_static_sources_in_use	modules/graphic/ssggraph/SoundInterface.h	/^	int n_static_sources_in_use;$/;"	m	class:OpenalSoundInterface
name	drivers/human/pref.h	/^    const char	*name;		\/* Name of the control *\/$/;"	m	struct:__anon185
name	interfaces/car.h	/^	char name[MAX_NAME_LEN]; \/**< Driver's name *\/$/;"	m	struct:__anon76
name	interfaces/raceman.h	/^    const char *name;$/;"	m	struct:__anon73
name	interfaces/track.h	/^    char		*name;$/;"	m	struct:RoadCam
name	interfaces/track.h	/^    const char *name;			\/**< Segment name *\/$/;"	m	struct:trackSeg
name	interfaces/track.h	/^    const char *name;	\/**< Name of the track *\/$/;"	m	struct:__anon68
name	libs/confscreens/controlconfig.h	/^	const char *name;$/;"	m	struct:__anon122
name	libs/confscreens/driverconfig.cpp	/^    char	*name;$/;"	m	struct:tInfo	file:
name	libs/racescreens/driverselect.cpp	/^	char *name;$/;"	m	struct:DrvElt	file:
name	libs/tgf/params.cpp	/^	char *name; \/**< Name of the data *\/$/;"	m	struct:parmHeader	file:
name	libs/tgf/params.cpp	/^	char *name; \/**< Name of the parameter  *\/$/;"	m	struct:param	file:
name	libs/tgf/tgf.h	/^	char *name;				\/**< File name *\/$/;"	m	struct:FList
name	libs/tgf/tgf.h	/^    char		*name;		\/**< name of the module (short) (NULL if no module) *\/$/;"	m	struct:ModInfo
name	libs/tgf/tgf.h	/^  char name[256];$/;"	m	class:ProfileInstance
name	libs/tgfclient/gui.h	/^    char			*name;$/;"	m	struct:GfuiListElement
name	libs/tgfclient/gui.h	/^    char		*name;$/;"	m	struct:GfuiKey
name	libs/txml/gennmtab.c	/^struct range name[] = {$/;"	v	typeref:struct:range
name	libs/txml/gennmtab/gennmtab.c	/^struct range name[] = {$/;"	v	typeref:struct:range
name	libs/txml/hashtable.h	/^  KEY name;$/;"	m	struct:__anon106
name	libs/txml/xml.h	/^    char		*name;		\/* element name *\/$/;"	m	struct:xmlElement
name	libs/txml/xml.h	/^    char		*name;$/;"	m	struct:xmlAttribute
name	libs/txml/xmlparse.c	/^  XML_Char *name;$/;"	m	struct:__anon113	file:
name	libs/txml/xmlparse.c	/^  const XML_Char *name;$/;"	m	struct:__anon111	file:
name	libs/txml/xmlparse.c	/^  const XML_Char *name;$/;"	m	struct:__anon115	file:
name	libs/txml/xmlparse.c	/^  const XML_Char *name;$/;"	m	struct:tag	file:
name	libs/txml/xmltok.h	/^  const char *name;$/;"	m	struct:__anon118
name	modules/graphic/ssggraph/grscene.h	/^  char * name;                 \/* segment name *\/$/;"	m	struct:DistanceOfViewHashing
name	modules/graphic/ssggraph/grscene.h	/^  char * name;$/;"	m	struct:hashMapElement
name	modules/graphic/ssggraph/grutil.cpp	/^    char		*name;	$/;"	m	struct:stlist	file:
name	modules/simu/simuv3/Options.h	/^    char* name; \/\/\/< name of abstract option$/;"	m	class:AbstractOption
name	modules/telemetry/telemetry.cpp	/^    const char		*name;	\/* channel name *\/$/;"	m	struct:Channel	file:
name	tools/accc/accc.h	/^  char * name ;$/;"	m	struct:ob
name	tools/accc/accc.h	/^  char * name;$/;"	m	struct:mat
name	tools/accc/accc.h	/^  char * name;$/;"	m	struct:ob_groups
name	tools/trackgen/track.cpp	/^	char *name;$/;"	m	struct:dispElt	file:
name	tools/trackgen/track.cpp	/^	char *name;$/;"	m	struct:texElt	file:
name	topview/topview.cpp	/^	char name[25];$/;"	m	struct:car_Position	file:
name	windows/include/plib/js.h	/^  char         name [ 128 ] ;$/;"	m	class:jsJoystick
name	windows/include/plib/ssg.h	/^  char    *name ;$/;"	m	class:ssgBase
name	windows/include/png.h	/^    png_byte name[5];$/;"	m	struct:png_unknown_chunk_t
name	windows/include/png.h	/^   png_charp name;           \/* palette name *\/$/;"	m	struct:png_sPLT_struct
name	windows/include/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s
nameLength	libs/txml/xmltok.h	/^  int (*nameLength)(const ENCODING *, const char *);$/;"	m	struct:encoding
nameLength	libs/txml/xmltok_impl.c	/^int PREFIX(nameLength)(const ENCODING *enc, const char *ptr)$/;"	f	file:
nameMatchesAscii	libs/txml/xmltok.h	/^  int (*nameMatchesAscii)(const ENCODING *,$/;"	m	struct:encoding
nameMatchesAscii	libs/txml/xmltok_impl.c	/^int PREFIX(nameMatchesAscii)(const ENCODING *enc, const char *ptr1, const char *ptr2)$/;"	f	file:
nameOrPath	windows/include/plib/ssg.h	/^  char       *nameOrPath ;$/;"	m	struct:ssgEntityBinding
namePages	libs/txml/nametab.h	/^static const unsigned char namePages[] = {$/;"	v
name_max	windows/include/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s
namebump	tools/trackgen/track.cpp	/^	char *namebump;$/;"	m	struct:texElt	file:
nameraceline	tools/trackgen/track.cpp	/^	char *nameraceline;$/;"	m	struct:texElt	file:
namingBitmap	libs/txml/nametab.h	/^static const unsigned namingBitmap[] = {$/;"	v
nb	tools/trackgen/track.cpp	/^	int nb;$/;"	m	struct:dispElt	file:
nb	tools/trackgen/track.cpp	/^	int nb;$/;"	m	struct:group	file:
nbCmdControl	drivers/human/pref.cpp	/^const int nbCmdControl = sizeof(CmdControlRef) \/ sizeof(CmdControlRef[0]);$/;"	v
nbDepth	libs/tgfclient/screen.cpp	/^static const int nbDepth = sizeof(Depthlist) \/ sizeof(Depthlist[0]);$/;"	v	file:
nbEditboxValues	libs/confscreens/controlconfig.cpp	/^static const int nbEditboxValues = sizeof(editBoxValues)\/sizeof(editBoxValues[0]);$/;"	v	file:
nbElem	libs/tgf/hash.cpp	/^	int nbElem;$/;"	m	struct:HashHeader	file:
nbElts	libs/tgfclient/gui.h	/^    int			nbElts;$/;"	m	struct:__anon143
nbItems	libs/tgfclient/gui.h	/^    int			nbItems;$/;"	m	struct:__anon148
nbLevels	libs/confscreens/driverconfig.cpp	/^static const int nbLevels = sizeof(level_str) \/ sizeof(level_str[0]);$/;"	v	file:
nbMarks	interfaces/track.h	/^    int		nbMarks;	\/**< turn marks *\/$/;"	m	struct:SegExt
nbMaxSelectedDrivers	libs/racescreens/driverselect.cpp	/^static int nbMaxSelectedDrivers;$/;"	v	file:
nbMode	libs/tgfclient/screen.cpp	/^static const int nbMode = sizeof(Mode) \/ sizeof(Mode[0]);$/;"	v	file:
nbOptions	libs/confscreens/soundconfig.cpp	/^static const int nbOptions = sizeof(soundOptionList) \/ sizeof(soundOptionList[0]);$/;"	v	file:
nbOptionsTextComp	libs/confscreens/openglconfig.cpp	/^static const int nbOptionsTextComp = sizeof(textureCompressOptionList) \/ sizeof(textureCompressOptionList[0]);$/;"	v	file:
nbOptionsTextSize	libs/confscreens/openglconfig.cpp	/^static int nbOptionsTextSize = sizeof(textureSizeOptionList) \/ sizeof(textureSizeOptionList[0]);$/;"	v	file:
nbOptionsWheelDetail	libs/confscreens/graphconfig.cpp	/^static const int nbOptionsWheelDetail = sizeof(wheelDetailOptionList) \/ sizeof(wheelDetailOptionList[0]);$/;"	v	file:
nbPitStops	interfaces/car.h	/^	int nbPitStops;$/;"	m	struct:__anon77
nbPlayers	interfaces/raceman.h	/^    int			nbPlayers;	\/**< number of human player in local (splitted screen) *\/$/;"	m	struct:Situation
nbPts	modules/simu/simuv2/engine.h	/^    int			nbPts;$/;"	m	struct:__anon18
nbPts	modules/simu/simuv3/engine.h	/^    int			nbPts;$/;"	m	struct:__anon37
nbRes	libs/tgfclient/screen.cpp	/^static const int nbRes = sizeof(Res) \/ sizeof(Res[0]);$/;"	v	file:
nbRes	libs/tgfclient/screen.cpp	/^static int nbRes = 0;$/;"	v	file:
nbSelectedDrivers	libs/racescreens/driverselect.cpp	/^static int nbSelectedDrivers;$/;"	v	file:
nbVInit	libs/tgfclient/screen.cpp	/^static const int nbVInit = sizeof(VInit) \/ sizeof(VInit[0]);$/;"	v	file:
nbVersions	libs/confscreens/simuconfig.cpp	/^static const int nbVersions = sizeof(simuVersionList) \/ sizeof(simuVersionList[0]);$/;"	v	file:
nbVisible	libs/tgfclient/gui.h	/^    int			nbVisible;$/;"	m	struct:__anon143
nbpitstops	libs/confscreens/driverconfig.cpp	/^    int		nbpitstops;$/;"	m	struct:PlayerInfo	file:
nbsources	modules/graphic/ssggraph/SoundInterface.h	/^		int nbsources;$/;"	m	class:SharedSourcePool
nbsurf	tools/trackgen/easymesh.cpp	/^	int		nbsurf;$/;"	m	struct:group	file:
nbvtx	tools/trackgen/easymesh.cpp	/^	int		nbvtx;$/;"	m	struct:group	file:
ncars	drivers/bt/cardata.h	/^		int ncars;				\/\/ # of elements in data.$/;"	m	class:Cardata
ncars	drivers/damned/cardata.h	/^		int ncars;				\/\/ # of elements in data.$/;"	m	class:Cardata
ncars	drivers/olethros/cardata.h	/^	int ncars;				\/\/ # of elements in data.$/;"	m	class:olethros::Cardata
ncars	interfaces/raceman.h	/^    int			ncars;		\/**< number of cars *\/$/;"	m	struct:__anon70
needPitstop	drivers/bt/strategy.cpp	/^bool SimpleStrategy::needPitstop(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
needPitstop	drivers/damned/strategy.cpp	/^bool SimpleStrategy::needPitstop(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
needPitstop	drivers/olethros/strategy.cpp	/^bool ManagedStrategy::needPitstop(tCarElt* car, tSituation *s, Opponents* opponents)$/;"	f	class:olethros::ManagedStrategy
needPitstop	drivers/olethros/strategy.cpp	/^bool SimpleStrategy::needPitstop(tCarElt* car, tSituation *s, Opponents* opponents)$/;"	f	class:olethros::SimpleStrategy
needleList	modules/graphic/ssggraph/grcar.h	/^    GLuint		needleList;$/;"	m	struct:__anon4
needleXCenter	modules/graphic/ssggraph/grcar.h	/^    tdble		needleXCenter, needleYCenter;$/;"	m	struct:__anon4
needleYCenter	modules/graphic/ssggraph/grcar.h	/^    tdble		needleXCenter, needleYCenter;$/;"	m	struct:__anon4
neighbours	tools/trackgen/easymesh.cpp	/^void neighbours()$/;"	f
nentries	windows/include/png.h	/^   png_int_32 nentries;      \/* number of palette entries *\/$/;"	m	struct:png_sPLT_struct
newChannel	interfaces/telemetry.h	/^    tftlmNewChannel		newChannel;		\/* Create a new channel *\/$/;"	m	struct:__anon86
newDispList	tools/trackgen/track.cpp	/^void newDispList(int texchange, int bump, int nbvert, int &startNeeded, const char *name, int _id, tDispElt **theCurDispElt, tTexElt *curTexElt)$/;"	f
newRace	drivers/berniw/berniw.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation) {$/;"	f	file:
newRace	drivers/berniw2/berniw2.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation) {$/;"	f	file:
newRace	drivers/berniw3/berniw3.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation) {$/;"	f	file:
newRace	drivers/bt/bt.cpp	/^static void newRace(int index, tCarElt* car, tSituation *s)$/;"	f	file:
newRace	drivers/bt/driver.cpp	/^void Driver::newRace(tCarElt* car, tSituation *s)$/;"	f	class:Driver
newRace	drivers/damned/damned.cpp	/^static void newRace(int index, tCarElt* car, tSituation *s)$/;"	f	file:
newRace	drivers/damned/driver.cpp	/^void Driver::newRace(tCarElt* car, tSituation *s)$/;"	f	class:Driver
newRace	drivers/inferno/inferno.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
newRace	drivers/lliaw/lliaw.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
newRace	drivers/olethros/driver.cpp	/^    void Driver::newRace(tCarElt* car, tSituation *s)$/;"	f	class:olethros::Driver
newRace	drivers/olethros/olethros.cpp	/^static void newRace(int index, tCarElt* car, tSituation *s)$/;"	f	namespace:olethros
newRace	drivers/sparkle/driver.cpp	/^void Driver::newRace(tCarElt* car, tSituation *s)$/;"	f	class:Driver
newRace	drivers/sparkle/sparkle.cpp	/^static void newRace(int index, tCarElt* car, tSituation *s)$/;"	f	file:
newRace	drivers/tita/tita.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
newTextureId	tools/trackgen/track.cpp	/^unsigned int newTextureId()$/;"	f
newTrackMenuHdle	libs/raceengineclient/racemanmenu.cpp	/^static void *newTrackMenuHdle = NULL;$/;"	v	file:
new_lap	drivers/olethros/learn.h	/^	bool new_lap; \/\/\/< we made a new lap$/;"	m	class:olethros::SegLearn
new_node	tools/trackgen/easymesh.cpp	/^void new_node()$/;"	f
new_numb	tools/trackgen/easymesh.cpp	/^	int new_numb;         \/* used for renumeration *\/$/;"	m	struct:ele	file:
new_numb	tools/trackgen/easymesh.cpp	/^	int new_numb;         \/* used for renumeration *\/$/;"	m	struct:sid	file:
new_numb	tools/trackgen/easymesh.h	/^    int new_numb;         \/* used for renumeration *\/$/;"	m	struct:nod
newrace	drivers/human/human.cpp	/^static void newrace(int index, tCarElt* car, tSituation *s) {$/;"	f	file:
newrace	drivers/inferno2/inferno2.cpp	/^void newrace(int index, tCarElt* car, tSituation *s)$/;"	f
next	interfaces/car.h	/^	struct CarElt *next;$/;"	m	struct:CarElt	typeref:struct:CarElt::CarElt
next	interfaces/track.h	/^    struct RoadCam	*next;$/;"	m	struct:RoadCam	typeref:struct:RoadCam::RoadCam
next	interfaces/track.h	/^    struct trackSeg *next;	\/**< Next segment *\/$/;"	m	struct:trackSeg	typeref:struct:trackSeg::trackSeg
next	interfaces/track.h	/^    struct trackSurface *next;	\/**< Next surface in list *\/$/;"	m	struct:trackSurface	typeref:struct:trackSurface::trackSurface
next	libs/confscreens/driverconfig.cpp	/^    struct tCarInfo	*next;$/;"	m	struct:tCarInfo	typeref:struct:tCarInfo::tCarInfo	file:
next	libs/confscreens/driverconfig.cpp	/^    struct tCatInfo	*next;$/;"	m	struct:tCatInfo	typeref:struct:tCatInfo::tCatInfo	file:
next	libs/learning/List.h	/^	struct ListItem* next; \/\/\/< next item$/;"	m	struct:ListItem	typeref:struct:ListItem::ListItem
next	libs/tgf/tgf.h	/^	struct FList *next;		\/**< Next entry *\/$/;"	m	struct:FList	typeref:struct:FList::FList
next	libs/tgf/tgf.h	/^    struct ModList	*next;			\/**< next module in list *\/$/;"	m	struct:ModList	typeref:struct:ModList::ModList
next	libs/tgfclient/gui.h	/^    struct GfuiKey	*next;$/;"	m	struct:GfuiKey	typeref:struct:GfuiKey::GfuiKey
next	libs/tgfclient/gui.h	/^    struct GfuiListElement	*next;$/;"	m	struct:GfuiListElement	typeref:struct:GfuiListElement::GfuiListElement
next	libs/tgfclient/gui.h	/^    struct GfuiObject	*next;$/;"	m	struct:GfuiObject	typeref:struct:GfuiObject::GfuiObject
next	libs/txml/xml.h	/^    struct xmlAttribute	*next;$/;"	m	struct:xmlAttribute	typeref:struct:xmlAttribute::xmlAttribute
next	libs/txml/xml.h	/^    struct xmlElement	*next;		\/* next element at the same level *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlElement
next	libs/txml/xmlparse.c	/^  struct block *next;$/;"	m	struct:block	typeref:struct:block::block	file:
next	modules/graphic/ssggraph/grcam.h	/^    cGrCamera *next(void) {$/;"	f	class:cGrCamera
next	modules/graphic/ssggraph/grcam.h	/^    cGrPerspCamera *next(void) {$/;"	f	class:cGrPerspCamera
next	modules/graphic/ssggraph/grsmoke.h	/^  tgrSmoke_st * next ;$/;"	m	struct:tgrSmoke_st
next	modules/graphic/ssggraph/grutil.cpp	/^    struct stlist	*next;$/;"	m	struct:stlist	typeref:struct:stlist::stlist	file:
next	modules/telemetry/telemetry.cpp	/^    struct Channel	*next;$/;"	m	struct:Channel	typeref:struct:Channel::Channel	file:
next	tools/accc/accc.h	/^  struct mat * next;$/;"	m	struct:mat	typeref:struct:mat::mat
next	tools/accc/accc.h	/^  struct ob * next;$/;"	m	struct:ob	typeref:struct:ob::ob
next	tools/trackgen/easymesh.h	/^    int next;             \/* next node in the boundary chain *\/$/;"	m	struct:nod
next	tools/trackgen/track.cpp	/^	struct dispElt *next;$/;"	m	struct:dispElt	typeref:struct:dispElt::dispElt	file:
next	tools/trackgen/track.cpp	/^	struct texElt *next;$/;"	m	struct:texElt	typeref:struct:texElt::texElt	file:
next	windows/include/plib/ssg.h	/^  unsigned int next  ;  \/* The next entity when we are doing getNext ops *\/$/;"	m	class:ssgList
next	windows/include/plib/ul.h	/^  unsigned int next  ;  \/* The next entity when we are doing getNext ops *\/$/;"	m	class:ulList
next	windows/include/vorbis/codec.h	/^  struct alloc_chain *next;$/;"	m	struct:alloc_chain	typeref:struct:alloc_chain::alloc_chain
nextScreen	libs/racescreens/racescreens.h	/^	void *nextScreen;		\/**< Race manager screen to go after select *\/$/;"	m	struct:__anon101
nextScreen	libs/racescreens/racescreens.h	/^	void *nextScreen;		\/**< Race manager screen to go after select *\/$/;"	m	struct:__anon103
nextScreen	libs/racescreens/racescreens.h	/^	void *nextScreen;	\/**< Race manager screen to go after select *\/$/;"	m	struct:__anon102
nextStartRace	libs/racescreens/miscscreens.cpp	/^static tStartRaceCall	nextStartRace, prevStartRace;$/;"	v	file:
next_in	windows/include/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s
next_out	windows/include/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
next_skid	modules/graphic/ssggraph/grskidmarks.h	/^  int			next_skid;$/;"	m	struct:__anon1
nextborderseg	drivers/inferno/pathfinder.h	/^		int* nextborderseg;		\/\/ Index of the next segment right on the border.$/;"	m	class:PathSegOpt
nextborderseg	drivers/lliaw/pathfinder.h	/^		int* nextborderseg;		\/\/ Index of the next segment right on the border.$/;"	m	class:PathSegOpt
nextborderseg	drivers/tita/pathfinder.h	/^		int* nextborderseg;		\/\/ Index of the next segment right on the border.$/;"	m	class:PathSegOpt
nmstrt	libs/txml/gennmtab.c	/^struct range nmstrt[] = {$/;"	v	typeref:struct:range
nmstrt	libs/txml/gennmtab/gennmtab.c	/^struct range nmstrt[] = {$/;"	v	typeref:struct:range
nmstrtPages	libs/txml/nametab.h	/^static const unsigned char nmstrtPages[] = {$/;"	v
nnear	windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
nnear	windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
nnodes	windows/include/plib/ul.h	/^  int nnodes ;$/;"	m	class:ulLinkedList
nod	tools/trackgen/easymesh.h	/^struct nod$/;"	s
node	tools/trackgen/easymesh.cpp	/^struct nod node[MAX_NODES], *point;$/;"	v	typeref:struct:nod
nopponents	drivers/bt/opponent.h	/^		int nopponents;$/;"	m	class:Opponents
nopponents	drivers/damned/opponent.h	/^		int nopponents;$/;"	m	class:Opponents
nopponents	drivers/olethros/opponent.h	/^		int nopponents;$/;"	m	class:olethros::Opponents
nopponents	drivers/sparkle/opponent.h	/^		int nopponents;$/;"	m	class:Opponents
nopponents_behind	drivers/olethros/opponent.h	/^		int nopponents_behind;$/;"	m	class:olethros::Opponents
nopponents_infront	drivers/olethros/opponent.h	/^		int nopponents_infront;$/;"	m	class:olethros::Opponents
norm	tools/accc/accc.h	/^  point_t  * norm;$/;"	m	struct:ob
normSeg	modules/track/track3.cpp	/^normSeg(tTrackSeg *curSeg)$/;"	f	file:
normSeg	modules/track/track4.cpp	/^static void normSeg(tTrackSeg *curSeg)$/;"	f	file:
normal	interfaces/car.h	/^	t3Dd normal;$/;"	m	struct:__anon80
normal	interfaces/track.h	/^	vec2f normal;	\/\/ Normal on the vertical track inside pointing towards the track middle.$/;"	m	struct:trackBarrier
normal	libs/txml/xmltok.c	/^  struct normal_encoding normal;$/;"	m	struct:unknown_encoding	typeref:struct:unknown_encoding::normal_encoding	file:
normal	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DtVector normal;$/;"	m	struct:DtCollData
normal	modules/simu/simuv2/carstruct.h	/^    t3Dd	normal;$/;"	m	struct:__anon23
normal	modules/simu/simuv3/carstruct.h	/^    t3Dd	normal;$/;"	m	struct:__anon42
normal	windows/include/plib/ssg.h	/^  sgVec3 normal ;$/;"	m	struct:ssgInterleavedArrayElement
normalMap	tools/accc/ac3dload.cpp	/^void normalMap( ob_t *object)$/;"	f
normalMap01	tools/accc/ac3dload.cpp	/^void normalMap01( ob_t *object)$/;"	f
normalMapping	tools/accc/mainaccc.cpp	/^int normalMapping=0;$/;"	v
normal_encoding	libs/txml/xmltok.c	/^struct normal_encoding {$/;"	s	file:
normal_rho	libs/learning/Distribution.h	/^	real normal_x, normal_y, normal_rho;$/;"	m	class:NormalDistribution
normal_x	libs/learning/Distribution.h	/^	real normal_x, normal_y, normal_rho;$/;"	m	class:NormalDistribution
normal_y	libs/learning/Distribution.h	/^	real normal_x, normal_y, normal_rho;$/;"	m	class:NormalDistribution
normalize	drivers/berniw/linalg.h	/^inline void v2d::normalize(void)$/;"	f	class:v2d
normalize	drivers/berniw/linalg.h	/^inline void v3d::normalize(void)$/;"	f	class:v3d
normalize	drivers/berniw2/linalg.h	/^inline void v2d::normalize(void)$/;"	f	class:v2d
normalize	drivers/berniw2/linalg.h	/^inline void v3d::normalize(void)$/;"	f	class:v3d
normalize	drivers/berniw3/linalg.h	/^inline void v2d::normalize(void)$/;"	f	class:v2d
normalize	drivers/berniw3/linalg.h	/^inline void v3d::normalize(void)$/;"	f	class:v3d
normalize	drivers/human/linalg.h	/^inline void v2d::normalize(void)$/;"	f	class:v2d
normalize	drivers/olethros/linalg.h	/^inline void v2d::normalize(void)$/;"	f	class:v2d
normalize	drivers/sparkle/linalg.h	/^inline void v2d::normalize(void)$/;"	f	class:v2d
normalize	libs/math/v2_t.h	/^template<class T> inline void v2t<T>::normalize(void)$/;"	f	class:v2t
normalize	libs/math/v3_t.h	/^template<class T> inline void v3t<T>::normalize(void)$/;"	f	class:v3t
normalize	libs/math/v4_t.h	/^template<class T> inline void v4t<T>::normalize(void)$/;"	f	class:v4t
normalize	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline void Quaternion::normalize() { *this \/= length(); }$/;"	f	class:Quaternion
normalize	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline void Vector::normalize() { *this \/= length(); }$/;"	f	class:Vector
normalize	tools/accc/ac3dload.cpp	/^void normalize(point_t *t )$/;"	f
normalize	topview/vec.hpp	/^      vec& normalize(void) {$/;"	f	class:kmuvcl::math::vec
normalizeLines	libs/txml/xmlparse.c	/^normalizeLines(XML_Char *s)$/;"	f	file:
normalizePublicId	libs/txml/xmlparse.c	/^void normalizePublicId(XML_Char *publicId)$/;"	f	file:
normalized	libs/txml/xmltok.h	/^  char normalized;$/;"	m	struct:__anon118
normalized	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion Quaternion::normalized() const { return *this \/ length(); }$/;"	f	class:Quaternion
normalized	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector Vector::normalized() const { return *this \/ length(); }$/;"	f	class:Vector
normals	windows/include/plib/ssg.h	/^  sgVec3 *normals   ; int num_normals   ; unsigned short *n_index ;$/;"	m	class:ssgVTable
normals	windows/include/plib/ssg.h	/^  ssgNormalArray   *normals   ;$/;"	m	class:ssgVtxTable
normals	windows/include/plib/ssgaWaveSystem.h	/^  sgVec3 *normals   ;$/;"	m	class:ssgaWaveSystem
notWorking	windows/include/plib/js.h	/^  int   notWorking    () const { return error ;    }$/;"	f	class:jsJoystick
notWorking	windows/include/plib/sl.h	/^  int notWorking () const { return error ; }$/;"	f	class:slDSP
not_working	windows/include/plib/sl.h	/^  int not_working() const { return error ; }$/;"	f	class:slDSP
not_working	windows/include/plib/sm.h	/^  int not_working () const { return notWorking () ; }  \/* Originally a typo! *\/$/;"	f	class:smMixer
notation	libs/txml/xmlparse.c	/^  const XML_Char *notation;$/;"	m	struct:__anon111	file:
notation0	libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation0	libs/txml/xmlrole.c	/^int notation0(PROLOG_STATE *state,$/;"	f	file:
notation1	libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation1	libs/txml/xmlrole.c	/^int notation1(PROLOG_STATE *state,$/;"	f	file:
notation2	libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation2	libs/txml/xmlrole.c	/^int notation2(PROLOG_STATE *state,$/;"	f	file:
notation3	libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation3	libs/txml/xmlrole.c	/^int notation3(PROLOG_STATE *state,$/;"	f	file:
notation4	libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation4	libs/txml/xmlrole.c	/^int notation4(PROLOG_STATE *state,$/;"	f	file:
notationDeclHandler	libs/txml/xmlparse.c	/^  XML_NotationDeclHandler notationDeclHandler;$/;"	m	struct:__anon117	file:
notationDeclHandler	libs/txml/xmlparse.c	267;"	d	file:
notexturesplit	tools/accc/mainaccc.cpp	/^int notexturesplit=0;$/;"	v
now	windows/include/plib/sl.h	/^  int now ;$/;"	m	class:slScheduler
now	windows/include/plib/ul.h	/^  double now   ;$/;"	m	class:ulClock
npitsegments	drivers/inferno/pathfinder.h	/^		int npitsegments;	\/\/ Number of pit segments.$/;"	m	class:PathSegPit
npitsegments	drivers/lliaw/pathfinder.h	/^		int npitsegments;	\/\/ Number of pit segments.$/;"	m	class:PathSegPit
npitsegments	drivers/tita/pathfinder.h	/^		int npitsegments;	\/\/ Number of pit segments.$/;"	m	class:PathSegPit
nseg	drivers/bt/learn.h	/^		int nseg;$/;"	m	class:SegLearn
nseg	drivers/damned/learn.h	/^		int nseg;$/;"	m	class:SegLearn
nseg	drivers/inferno/pathfinder.h	/^		int nseg;				\/\/ Number of track segments.$/;"	m	class:PathSeg
nseg	drivers/lliaw/pathfinder.h	/^		int nseg;				\/\/ Number of track segments.$/;"	m	class:PathSeg
nseg	drivers/tita/pathfinder.h	/^		int nseg;				\/\/ Number of track segments.$/;"	m	class:PathSeg
nseg	interfaces/track.h	/^    int		  nseg;		\/**< Number of segments *\/$/;"	m	struct:__anon68
nsegments	drivers/inferno/pathfinder.h	/^		int nsegments;		\/\/ # of all track segments (NOT pit segments!).$/;"	m	class:PathSegPit
nsegments	drivers/lliaw/pathfinder.h	/^		int nsegments;		\/\/ # of all track segments (NOT pit segments!).$/;"	m	class:PathSegPit
nsegments	drivers/tita/pathfinder.h	/^		int nsegments;		\/\/ # of all track segments (NOT pit segments!).$/;"	m	class:PathSegPit
nstacks	windows/include/plib/ssgaWaveSystem.h	/^  int nstacks ;$/;"	m	class:ssgaWaveSystem
nstates	windows/include/plib/ssg.h	/^  int              nstates   ;$/;"	m	class:ssgStateSelector
nsteps	windows/include/plib/sl.h	/^  int           nsteps         ;$/;"	m	class:slEnvelope
nstrips	windows/include/plib/ssgaWaveSystem.h	/^  int nstrips ;$/;"	m	class:ssgaWaveSystem
ntab	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec3		*ntab  = NULL ;$/;"	v	file:
ntriangles	windows/include/plib/ssgaShapes.h	/^  int ntriangles ;$/;"	m	class:ssgaShape
numMapLevel	modules/graphic/ssggraph/grloadac.cpp	/^static int              numMapLevel;$/;"	v	file:
numMapLevel	modules/graphic/ssggraph/grvtxtable.h	/^  int numMapLevel;$/;"	m	class:grVtxTable
numStripes	modules/graphic/ssggraph/grvtxtable.h	/^  int                 numStripes;$/;"	m	class:grVtxTable
numVerts	modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  int numVerts() const { return index.size(); }$/;"	f	class:Polytope
num_active	windows/include/plib/ssgaParticleSystem.h	/^  int num_active     ;$/;"	m	class:ssgaParticleSystem
num_axes	windows/include/plib/js.h	/^  int          num_axes     ;$/;"	m	class:jsJoystick
num_box_tests	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^int num_box_tests = 0;$/;"	v
num_buttons	windows/include/plib/js.h	/^  int          num_buttons  ;$/;"	m	class:jsJoystick
num_colours	windows/include/plib/ssg.h	/^  sgVec4 *colours   ; int num_colours   ; unsigned short *c_index ;$/;"	m	class:ssgVTable
num_entries	windows/include/plib/ssg.h	/^  int num_entries ;$/;"	m	class:ssgHit
num_irregularities	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^int num_irregularities = 0;$/;"	v
num_iterations	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^int num_iterations = 0;$/;"	v
num_materials	modules/graphic/ssggraph/grloadac.cpp	/^static int		num_materials = 0 ;$/;"	v	file:
num_normals	windows/include/plib/ssg.h	/^  sgVec3 *normals   ; int num_normals   ; unsigned short *n_index ;$/;"	m	class:ssgVTable
num_particles	windows/include/plib/ssgaParticleSystem.h	/^  int num_particles  ;$/;"	m	class:ssgaParticleSystem
num_pending_callbacks	windows/include/plib/sl.h	/^  int num_pending_callbacks ;$/;"	m	class:slScheduler
num_texcoords	windows/include/plib/ssg.h	/^  sgVec2 *texcoords ; int num_texcoords ; unsigned short *t_index ;$/;"	m	class:ssgVTable
num_vertices	windows/include/plib/ssg.h	/^  sgVec3 *vertices  ; int num_vertices  ; unsigned short *v_index ;$/;"	m	class:ssgVTable
num_verts	windows/include/plib/ssgaParticleSystem.h	/^  int num_verts      ;$/;"	m	class:ssgaParticleSystem
number	modules/graphic/ssggraph/grsmoke.h	/^  int number;$/;"	m	struct:__anon6
numberCarlight	modules/graphic/ssggraph/grcarlight.h	/^  int numberCarlight;$/;"	m	struct:tgrCarlight_t
numberOfMapToApply	modules/graphic/ssggraph/grscene.h	/^  int    numberOfMapToApply;$/;"	m	struct:hashMapElement
numkids	tools/accc/accc.h	/^  int numkids;$/;"	m	struct:ob_groups
numkids0	tools/accc/accc.h	/^  int numkids0;$/;"	m	struct:ob_groups
numkids1	tools/accc/accc.h	/^  int numkids1;$/;"	m	struct:ob_groups
numkids2	tools/accc/accc.h	/^  int numkids2;$/;"	m	struct:ob_groups
numkids3	tools/accc/accc.h	/^  int numkids3;$/;"	m	struct:ob_groups
nummaterial	tools/accc/ac3dload.cpp	/^int nummaterial=0;$/;"	v
numob	tools/accc/ac3dload.cpp	/^int numob=0;$/;"	v
numrefs	tools/accc/ac3dload.cpp	/^int numrefs=0;$/;"	v
numrefsFound	tools/accc/ac3dload.cpp	/^int numrefsFound=0;$/;"	v
numrefstotal	tools/accc/ac3dload.cpp	/^int numrefstotal=0;$/;"	v
numsurf	tools/accc/accc.h	/^  int    numsurf;$/;"	m	struct:ob
numvert	tools/accc/accc.h	/^  int    numvert;$/;"	m	struct:ob
numvertFound	tools/accc/ac3dload.cpp	/^int numvertFound=0;$/;"	v
numvertex	tools/accc/ac3dload.cpp	/^int numvertex=0;$/;"	v
numvertice	tools/accc/ac3dload.cpp	/^int numvertice=0;$/;"	v
numvertice	tools/accc/accc.h	/^  int numvertice ; \/* the real number of textcoord *\/$/;"	m	struct:ob
nv	modules/graphic/ssggraph/grloadac.cpp	/^static int		nv;$/;"	v	file:
o	drivers/berniw/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	drivers/berniw/pathfinder.h	/^		v3d o;			\/* position in space, static trajectory *\/$/;"	m	class:PathSeg
o	drivers/berniw2/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	drivers/berniw2/pathfinder.h	/^		v3d o;			\/* position in space, static trajectory *\/$/;"	m	class:PathSeg
o	drivers/berniw3/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	drivers/berniw3/pathfinder.h	/^		v3d o;			\/* position in space, static trajectory *\/$/;"	m	class:PathSeg
o	drivers/human/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	drivers/human/pathfinder.h	/^		v3d o;			\/* position in space, static trajectory *\/$/;"	m	class:PathSeg
o	drivers/inferno/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	drivers/inferno/pathfinder.h	/^		vec2d* o;				\/\/ Position in space, static trajectory.$/;"	m	class:PathSegOpt
o	drivers/lliaw/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	drivers/lliaw/pathfinder.h	/^		vec2d* o;				\/\/ Position in space, static trajectory.$/;"	m	class:PathSegOpt
o	drivers/tita/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	drivers/tita/pathfinder.h	/^		vec2d* o;				\/\/ Position in space, static trajectory.$/;"	m	class:PathSegOpt
ob	tools/accc/ac3dload.cpp	/^ob_t   ob[10000];$/;"	v
ob	tools/accc/accc.h	/^typedef struct ob {$/;"	s
ob1	tools/accc/accc.h	/^  struct ob* ob1;$/;"	m	struct:ob	typeref:struct:ob::ob
ob2	tools/accc/accc.h	/^  struct ob* ob2;$/;"	m	struct:ob	typeref:struct:ob::ob
ob3	tools/accc/accc.h	/^  struct ob* ob3;$/;"	m	struct:ob	typeref:struct:ob::ob
ob_groups	tools/accc/accc.h	/^typedef struct ob_groups$/;"	s
ob_groups_t	tools/accc/accc.h	/^}ob_groups_t;$/;"	t	typeref:struct:ob_groups
ob_t	tools/accc/accc.h	/^} ob_t;$/;"	t	typeref:struct:ob
obj	libs/learning/List.h	/^	void* obj; \/\/\/< data$/;"	m	struct:ListItem
obj	tools/trackgen/objects.cpp	/^	ssgEntity		*obj;$/;"	m	struct:objdef	file:
obj1	modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^  ObjectPtr obj1;$/;"	m	class:Encounter
obj2	modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^  ObjectPtr obj2;$/;"	m	class:Encounter
objPtr	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  const Object *objPtr;$/;"	m	class:Endpoint
obj_type_tags	modules/graphic/ssggraph/grloadac.cpp	/^static Tag obj_type_tags [] = $/;"	v	file:
objdef	tools/trackgen/objects.cpp	/^typedef struct objdef {$/;"	s	file:
objectList	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^ObjectList objectList;$/;"	v
object_tags	modules/graphic/ssggraph/grloadac.cpp	/^static Tag object_tags [] =$/;"	v	file:
object_test	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^bool object_test(Encounter& e) {$/;"	f
objects	libs/tgfclient/gui.h	/^    tGfuiObject		*objects;$/;"	m	struct:__anon148
objhead	tools/trackgen/objects.cpp	/^tobjlist objhead;$/;"	v
ocar	drivers/berniw/berniw.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	drivers/berniw2/berniw2.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	drivers/berniw3/berniw3.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	drivers/human/human.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	drivers/inferno/inferno.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	drivers/lliaw/lliaw.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	drivers/tita/tita.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
off	windows/include/plib/ssg.h	/^  void off  () { is_turned_on = FALSE ; }$/;"	f	class:ssgLight
offset	modules/graphic/ssggraph/grcam.cpp	/^    float offset[3];$/;"	m	class:cGrCarCamRoadFly	file:
offset	tools/texmapper/maintexmapper.cpp	/^    sgVec3	offset;$/;"	m	struct:Face	file:
offset	windows/include/plib/ssgaWaveSystem.h	/^  sgVec2  offset    ;$/;"	m	class:ssgaWaveSystem
offset	windows/include/vorbis/vorbisfile.h	/^  ogg_int64_t      offset;$/;"	m	struct:OggVorbis_File
offsets	windows/include/vorbis/vorbisfile.h	/^  ogg_int64_t     *offsets;$/;"	m	struct:OggVorbis_File
ofile	tools/accc/ac3dload.cpp	/^FILE *ofile;$/;"	v
oggStream	libs/musicplayer/OggSoundStream.h	/^		OggVorbis_File	oggStream;$/;"	m	class:OggSoundStream
ogg_int16_t	windows/include/ogg/os_types.h	/^     typedef __int16 ogg_int16_t;$/;"	t
ogg_int16_t	windows/include/ogg/os_types.h	/^     typedef int16_t ogg_int16_t;$/;"	t
ogg_int16_t	windows/include/ogg/os_types.h	/^     typedef short ogg_int16_t;$/;"	t
ogg_int16_t	windows/include/ogg/os_types.h	/^   typedef SInt16 ogg_int16_t;$/;"	t
ogg_int16_t	windows/include/ogg/os_types.h	/^   typedef int16_t ogg_int16_t;$/;"	t
ogg_int16_t	windows/include/ogg/os_types.h	/^   typedef short ogg_int16_t;$/;"	t
ogg_int16_t	windows/include/ogg/os_types.h	/^   typedef signed short ogg_int16_t;$/;"	t
ogg_int32_t	windows/include/ogg/os_types.h	/^     typedef __int32 ogg_int32_t;$/;"	t
ogg_int32_t	windows/include/ogg/os_types.h	/^     typedef int ogg_int32_t;$/;"	t
ogg_int32_t	windows/include/ogg/os_types.h	/^     typedef int32_t ogg_int32_t;$/;"	t
ogg_int32_t	windows/include/ogg/os_types.h	/^   typedef SInt32 ogg_int32_t;$/;"	t
ogg_int32_t	windows/include/ogg/os_types.h	/^   typedef int ogg_int32_t;$/;"	t
ogg_int32_t	windows/include/ogg/os_types.h	/^   typedef int32_t ogg_int32_t;$/;"	t
ogg_int32_t	windows/include/ogg/os_types.h	/^   typedef signed int ogg_int32_t;$/;"	t
ogg_int64_t	windows/include/ogg/os_types.h	/^     typedef __int64 ogg_int64_t;$/;"	t
ogg_int64_t	windows/include/ogg/os_types.h	/^     typedef int64_t ogg_int64_t;$/;"	t
ogg_int64_t	windows/include/ogg/os_types.h	/^     typedef long long ogg_int64_t;$/;"	t
ogg_int64_t	windows/include/ogg/os_types.h	/^   typedef SInt64 ogg_int64_t;$/;"	t
ogg_int64_t	windows/include/ogg/os_types.h	/^   typedef int64_t ogg_int64_t;$/;"	t
ogg_int64_t	windows/include/ogg/os_types.h	/^   typedef long long int ogg_int64_t;$/;"	t
ogg_int64_t	windows/include/ogg/os_types.h	/^   typedef long long ogg_int64_t;$/;"	t
ogg_int64_t	windows/include/ogg/os_types.h	/^   typedef long ogg_int64_t;$/;"	t
ogg_iovec_t	windows/include/ogg/ogg.h	/^} ogg_iovec_t;$/;"	t	typeref:struct:__anon49
ogg_packet	windows/include/ogg/ogg.h	/^} ogg_packet;$/;"	t	typeref:struct:__anon53
ogg_page	windows/include/ogg/ogg.h	/^} ogg_page;$/;"	t	typeref:struct:__anon51
ogg_stream_state	windows/include/ogg/ogg.h	/^} ogg_stream_state;$/;"	t	typeref:struct:__anon52
ogg_sync_state	windows/include/ogg/ogg.h	/^} ogg_sync_state;$/;"	t	typeref:struct:__anon54
ogg_uint16_t	windows/include/ogg/os_types.h	/^     typedef uint16_t ogg_uint16_t;$/;"	t
ogg_uint16_t	windows/include/ogg/os_types.h	/^     typedef unsigned __int16 ogg_uint16_t;$/;"	t
ogg_uint16_t	windows/include/ogg/os_types.h	/^     typedef unsigned short ogg_uint16_t;$/;"	t
ogg_uint16_t	windows/include/ogg/os_types.h	/^   typedef UInt16 ogg_uint16_t;$/;"	t
ogg_uint16_t	windows/include/ogg/os_types.h	/^   typedef uint16_t ogg_uint16_t;$/;"	t
ogg_uint16_t	windows/include/ogg/os_types.h	/^   typedef unsigned short ogg_uint16_t;$/;"	t
ogg_uint32_t	windows/include/ogg/os_types.h	/^     typedef uint32_t ogg_uint32_t;$/;"	t
ogg_uint32_t	windows/include/ogg/os_types.h	/^     typedef unsigned __int32 ogg_uint32_t;$/;"	t
ogg_uint32_t	windows/include/ogg/os_types.h	/^     typedef unsigned int ogg_uint32_t;$/;"	t
ogg_uint32_t	windows/include/ogg/os_types.h	/^   typedef UInt32 ogg_uint32_t;$/;"	t
ogg_uint32_t	windows/include/ogg/os_types.h	/^   typedef uint32_t ogg_uint32_t;$/;"	t
ogg_uint32_t	windows/include/ogg/os_types.h	/^   typedef unsigned int ogg_uint32_t;$/;"	t
ogg_uint32_t	windows/include/ogg/os_types.h	/^   typedef unsigned ogg_uint32_t;$/;"	t
ogg_uint64_t	windows/include/ogg/os_types.h	/^     typedef uint64_t ogg_uint64_t;$/;"	t
ogg_uint64_t	windows/include/ogg/os_types.h	/^     typedef unsigned long long ogg_uint64_t;$/;"	t
oggpack_buffer	windows/include/ogg/ogg.h	/^} oggpack_buffer;$/;"	t	typeref:struct:__anon50
oldMousePosition	topview/Camera.hpp	/^	kmuvcl::math::vec2f oldMousePosition;$/;"	m	class:kmuvcl::Camera
oldb	libs/tgfclient/tgfclient.h	/^    int		oldb[NUM_JOY];$/;"	m	struct:__anon134
oldlookahead	drivers/bt/driver.h	/^		float oldlookahead;		\/\/ Lookahead for steering in the previous step.$/;"	m	class:Driver
oldlookahead	drivers/damned/driver.h	/^		float oldlookahead;		\/\/ Lookahead for steering in the previous step.$/;"	m	class:Driver
oldlookahead	drivers/olethros/driver.h	/^	float oldlookahead;		\/\/\/< Lookahead for steering in the previous step.$/;"	m	class:olethros::Driver
olethros	drivers/olethros/cardata.cpp	/^namespace olethros {$/;"	n	file:
olethros	drivers/olethros/cardata.h	/^namespace olethros$/;"	n
olethros	drivers/olethros/driver.cpp	/^namespace olethros {$/;"	n	file:
olethros	drivers/olethros/driver.h	/^namespace olethros$/;"	n
olethros	drivers/olethros/learn.h	/^namespace olethros$/;"	n
olethros	drivers/olethros/olethros.cpp	/^extern "C" int olethros(tModInfo *modInfo)$/;"	f	namespace:olethros
olethros	drivers/olethros/olethros.cpp	/^namespace olethros$/;"	n	file:
olethros	drivers/olethros/opponent.cpp	/^namespace olethros {$/;"	n	file:
olethros	drivers/olethros/opponent.h	/^namespace olethros$/;"	n
olethros	drivers/olethros/pit.cpp	/^namespace olethros$/;"	n	file:
olethros	drivers/olethros/pit.h	/^namespace olethros$/;"	n
olethros	drivers/olethros/strategy.cpp	/^namespace olethros$/;"	n	file:
olethros	drivers/olethros/strategy.h	/^namespace olethros$/;"	n
on	modules/graphic/ssggraph/grcarlight.h	/^  int on ;$/;"	m	class:ssgVtxTableCarlight
on	windows/include/plib/ssg.h	/^  void on   () { is_turned_on = TRUE  ; }$/;"	f	class:ssgLight
onActivate	libs/confscreens/controlconfig.cpp	/^static void onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	libs/confscreens/joystickconfig.cpp	/^static void onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	libs/confscreens/openglconfig.cpp	/^static void onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	libs/confscreens/simuconfig.cpp	/^static void onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	libs/confscreens/soundconfig.cpp	/^static void onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	libs/racescreens/carsetupscreen.cpp	/^static void onActivate(void *vp)$/;"	f	file:
onActivate	libs/tgfclient/gui.h	/^    tfuiCallback	onActivate;$/;"	m	struct:__anon148
onActivate	libs/tgfclient/screen.cpp	/^onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate2	libs/confscreens/mouseconfig.cpp	/^onActivate2(void * \/* dummy *\/)$/;"	f	file:
onBack	libs/confscreens/joystickconfig.cpp	/^static void onBack(void *prevMenu)$/;"	f	file:
onDeactivate	libs/tgfclient/gui.h	/^    tfuiCallback	onDeactivate;$/;"	m	struct:__anon148
onFocus	libs/tgfclient/gui.h	/^    tfuiCallback	onFocus;$/;"	m	struct:__anon141
onFocus	libs/tgfclient/gui.h	/^    tfuiCallback	onFocus;$/;"	m	struct:__anon142
onFocus	libs/tgfclient/gui.h	/^    tfuiCallback	onFocus;$/;"	m	struct:__anon145
onFocusLost	libs/confscreens/controlconfig.cpp	/^static void onFocusLost(void * \/* dummy *\/)$/;"	f	file:
onFocusLost	libs/tgfclient/gui.h	/^    tfuiCallback	onFocusLost;    $/;"	m	struct:__anon145
onFocusLost	libs/tgfclient/gui.h	/^    tfuiCallback	onFocusLost;$/;"	m	struct:__anon141
onFocusLost	libs/tgfclient/gui.h	/^    tfuiCallback	onFocusLost;$/;"	m	struct:__anon142
onKeyAction	drivers/human/human.cpp	/^static int onKeyAction(unsigned char key, int modifier, int state) {$/;"	f	file:
onKeyAction	libs/confscreens/controlconfig.cpp	/^static int onKeyAction(unsigned char key, int \/* modifier *\/, int state)$/;"	f	file:
onKeyAction	libs/tgfclient/gui.h	/^    tfuiKeyCallback	onKeyAction;$/;"	m	struct:__anon148
onLoad	libs/racescreens/carsetupscreen.cpp	/^static void onLoad(void *vp)$/;"	f	file:
onLoadDefault	libs/racescreens/carsetupscreen.cpp	/^static void onLoadDefault(void* vp)$/;"	f	file:
onPress	libs/tgfclient/gui.h	/^    tfuiCallback	onPress;$/;"	m	struct:GfuiKey
onPush	libs/confscreens/controlconfig.cpp	/^static void onPush(void *vi)$/;"	f	file:
onPush	libs/tgfclient/gui.h	/^    tfuiCallback	onPush;$/;"	m	struct:__anon141
onPush	libs/tgfclient/gui.h	/^    tfuiCallback	onPush;$/;"	m	struct:__anon142
onRelease	libs/tgfclient/gui.h	/^    tfuiCallback	onRelease;$/;"	m	struct:GfuiKey
onSKeyAction	drivers/human/human.cpp	/^static int onSKeyAction(int key, int modifier, int state) {$/;"	f	file:
onSKeyAction	libs/confscreens/controlconfig.cpp	/^static int onSKeyAction(int key, int \/* modifier *\/, int state)$/;"	f	file:
onSKeyAction	libs/tgfclient/gui.h	/^    tfuiSKeyCallback	onSKeyAction;$/;"	m	struct:__anon148
onSave	libs/confscreens/controlconfig.cpp	/^static void onSave(void * \/* dummy *\/)$/;"	f	file:
onSave	libs/racescreens/carsetupscreen.cpp	/^static void onSave(void *vp)$/;"	f	file:
onSaveAndExit	libs/racescreens/carsetupscreen.cpp	/^static void onSaveAndExit(void *vp)$/;"	f	file:
onScroll	libs/tgfclient/gui.h	/^    tfuiSBCallback	onScroll;$/;"	m	struct:__anon144
onSelect	libs/confscreens/driverconfig.cpp	/^onSelect(void * \/* Dummy *\/)$/;"	f	file:
onSelect	libs/tgfclient/gui.h	/^    tfuiCallback	onSelect;$/;"	m	struct:__anon143
onSelect	modules/graphic/ssggraph/grcam.cpp	/^	void onSelect(tCarElt *car, tSituation *s)$/;"	f	class:cGrCarCamRoadFly
onSelect	modules/graphic/ssggraph/grcam.h	/^    void onSelect(tCarElt *car, tSituation *s) {}$/;"	f	class:cGrOrthoCamera
onSelect	modules/graphic/ssggraph/grcam.h	/^   void onSelect(tCarElt *car, tSituation *s) {}$/;"	f	class:cGrPerspCamera
onValueChange	libs/confscreens/controlconfig.cpp	/^static void onValueChange(void* v)$/;"	f	file:
onlyCallback	libs/tgfclient/gui.h	/^    int			onlyCallback;$/;"	m	struct:__anon148
onoff_Mode	drivers/human/human.cpp	/^short onoff_Mode = 0;$/;"	v
onoff_Mode	libs/raceengineclient/raceengine.cpp	/^short onoff_Mode = 0;$/;"	v
ooMass	windows/include/plib/sg.h	/^  float ooMass ;  \/* One-over-mass *\/$/;"	m	class:sgParticle
opLoad	modules/simu/simuv2/wheel.h	/^    tdble	opLoad;		\/* Operating load *\/$/;"	m	struct:__anon11
opLoad	modules/simu/simuv3/wheel.h	/^    tdble	opLoad;		\/* Operating load *\/$/;"	m	struct:__anon33
opaque	windows/include/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
opb	windows/include/vorbis/codec.h	/^  oggpack_buffer opb;$/;"	m	struct:vorbis_block
open	libs/txml/xmlparse.c	/^  char open;$/;"	m	struct:__anon111	file:
openCalls	libs/tgf/tgf.h	/^  int openCalls;$/;"	m	class:ProfileInstance
operator !=	libs/math/v2_t.h	/^template<class T> inline int v2t<T>::operator!=(const v2t<T> &s) const$/;"	f	class:v2t
operator !=	libs/math/v3_t.h	/^template<class T> inline int v3t<T>::operator!=(const v3t<T> &s) const$/;"	f	class:v3t
operator !=	libs/math/v4_t.h	/^template<class T> inline int v4t<T>::operator!=(const v4t<T> &s) const$/;"	f	class:v4t
operator ()	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^  bool operator()(const BBoxNode& p1, const BBoxNode& p2) const {$/;"	f	class:BBoxCompAxis
operator ()	modules/simu/simuv2/SOLID-2.0/src/Response.cpp	/^void Response::operator()(DtObjectRef a, DtObjectRef b) const {  $/;"	f	class:Response
operator ()	modules/simu/simuv2/SOLID-2.0/src/Response.cpp	/^void Response::operator()(DtObjectRef a, DtObjectRef b, $/;"	f	class:Response
operator ()	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Point operator()(const Point& p) const {$/;"	f	class:Transform
operator ()	topview/mat.hpp	/^      T& operator()(unsigned int r, unsigned int c)$/;"	f	class:kmuvcl::math::mat
operator ()	topview/mat.hpp	/^      const T& operator()(unsigned int r, unsigned int c) const$/;"	f	class:kmuvcl::math::mat
operator ()	topview/vec.hpp	/^      T& operator()(unsigned int i)$/;"	f	class:kmuvcl::math::vec
operator ()	topview/vec.hpp	/^      const T& operator()(unsigned int i) const$/;"	f	class:kmuvcl::math::vec
operator *	drivers/berniw/linalg.h	/^inline double v3d::operator*(const v3d &src)$/;"	f	class:v3d
operator *	drivers/berniw/linalg.h	/^inline float v2d::operator*(const v2d &src) const$/;"	f	class:v2d
operator *	drivers/berniw/linalg.h	/^inline v2d operator*(const float s, const v2d & src)$/;"	f
operator *	drivers/berniw/linalg.h	/^inline v2d v2d::operator*(const float s) const$/;"	f	class:v2d
operator *	drivers/berniw/linalg.h	/^inline v3d operator*(const double s, const v3d & src)$/;"	f
operator *	drivers/berniw/linalg.h	/^inline v3d v3d::operator*(const double s)$/;"	f	class:v3d
operator *	drivers/berniw2/linalg.h	/^inline double v3d::operator*(const v3d &src)$/;"	f	class:v3d
operator *	drivers/berniw2/linalg.h	/^inline float v2d::operator*(const v2d &src) const$/;"	f	class:v2d
operator *	drivers/berniw2/linalg.h	/^inline v2d operator*(const float s, const v2d & src)$/;"	f
operator *	drivers/berniw2/linalg.h	/^inline v2d v2d::operator*(const float s) const$/;"	f	class:v2d
operator *	drivers/berniw2/linalg.h	/^inline v3d operator*(const double s, const v3d & src)$/;"	f
operator *	drivers/berniw2/linalg.h	/^inline v3d v3d::operator*(const double s)$/;"	f	class:v3d
operator *	drivers/berniw3/linalg.h	/^inline double v3d::operator*(const v3d &src)$/;"	f	class:v3d
operator *	drivers/berniw3/linalg.h	/^inline float v2d::operator*(const v2d &src) const$/;"	f	class:v2d
operator *	drivers/berniw3/linalg.h	/^inline v2d operator*(const float s, const v2d & src)$/;"	f
operator *	drivers/berniw3/linalg.h	/^inline v2d v2d::operator*(const float s) const$/;"	f	class:v2d
operator *	drivers/berniw3/linalg.h	/^inline v3d operator*(const double s, const v3d & src)$/;"	f
operator *	drivers/berniw3/linalg.h	/^inline v3d v3d::operator*(const double s)$/;"	f	class:v3d
operator *	drivers/human/linalg.h	/^inline float v2d::operator*(const v2d &src) const$/;"	f	class:v2d
operator *	drivers/human/linalg.h	/^inline v2d operator*(const float s, const v2d & src)$/;"	f
operator *	drivers/human/linalg.h	/^inline v2d v2d::operator*(const float s) const$/;"	f	class:v2d
operator *	drivers/olethros/TrackData.h	/^    Point operator* (const float& rhs)$/;"	f	class:Point
operator *	drivers/olethros/linalg.h	/^inline float v2d::operator*(const v2d &src) const$/;"	f	class:v2d
operator *	drivers/olethros/linalg.h	/^inline v2d operator*(const float s, const v2d & src)$/;"	f
operator *	drivers/olethros/linalg.h	/^inline v2d v2d::operator*(const float s) const$/;"	f	class:v2d
operator *	drivers/sparkle/linalg.h	/^inline float v2d::operator*(const v2d &src) const$/;"	f	class:v2d
operator *	drivers/sparkle/linalg.h	/^inline v2d operator*(const float s, const v2d & src)$/;"	f
operator *	drivers/sparkle/linalg.h	/^inline v2d v2d::operator*(const float s) const$/;"	f	class:v2d
operator *	libs/math/v2_t.h	/^template<class T> inline T v2t<T>::operator*(const v2t<T> &src) const$/;"	f	class:v2t
operator *	libs/math/v2_t.h	/^template<class T> inline v2t<T> operator*(const T s, const v2t<T> & src)$/;"	f
operator *	libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator*(const T s) const$/;"	f	class:v2t
operator *	libs/math/v3_t.h	/^template<class T> inline T v3t<T>::operator*(const v3t<T> &src) const$/;"	f	class:v3t
operator *	libs/math/v3_t.h	/^template<class T> inline v3t<T> operator*(const T s, const v3t<T> & src)$/;"	f
operator *	libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator*(const T s) const$/;"	f	class:v3t
operator *	libs/math/v4_t.h	/^template<class T> inline T v4t<T>::operator*(const v4t<T> &src) const$/;"	f	class:v4t
operator *	libs/math/v4_t.h	/^template<class T> inline v4t<T> operator*(const T s, const v4t<T> & src)$/;"	f
operator *	libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator*(const T s) const$/;"	f	class:v4t
operator *	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix operator*(const Matrix& m1, const Matrix& m2) {$/;"	f
operator *	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Vector operator*(const Matrix& m, const Vector& v) {$/;"	f
operator *	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Vector operator*(const Vector& v, const Matrix& m) {$/;"	f
operator *	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator*(Scalar s, const Quaternion& q) { return q * s; }$/;"	f
operator *	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator*(const Quaternion& q, Scalar s) {$/;"	f
operator *	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator*(const Quaternion& q1, const Quaternion& q2) {$/;"	f
operator *	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator*(Scalar s, const Vector& v) { return v * s; }$/;"	f
operator *	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator*(const Vector& v, Scalar s) {$/;"	f
operator *	topview/operator.hpp	/^    mat<M, L, T> operator* (const mat<M, N, T>& A, const mat<N, L, T>& B)$/;"	f	namespace:kmuvcl::math
operator *	topview/operator.hpp	/^    vec<M, T> operator* (const mat<M, N, T>& A, const vec<N, T>& x)$/;"	f	namespace:kmuvcl::math
operator *	topview/operator.hpp	/^    vec<N, T> operator* (const T s, const vec<N, T>& x)$/;"	f	namespace:kmuvcl::math
operator *	topview/operator.hpp	/^    vec<N, T> operator* (const vec<M, T>& x, const mat<M, N, T>& A)$/;"	f	namespace:kmuvcl::math
operator *=	drivers/olethros/TrackData.h	/^    Point& operator*= (const float& rhs)$/;"	f	class:Point
operator *=	libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator*=(const T s)$/;"	f	class:v2t
operator *=	libs/math/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator*=(const T s)$/;"	f	class:v3t
operator *=	libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator*=(const T s)$/;"	f	class:v4t
operator *=	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix& Matrix::operator*=(const Matrix& m) {$/;"	f	class:Matrix
operator *=	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator*=(Scalar s) {$/;"	f	class:Quaternion
operator *=	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator*=(const Quaternion& q) {$/;"	f	class:Quaternion
operator *=	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector& Vector::operator*=(Scalar s) {$/;"	f	class:Vector
operator *=	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^Transform& Transform::operator*=(const Transform& t) {$/;"	f	class:Transform
operator +	drivers/berniw/linalg.h	/^inline v2d v2d::operator+(const v2d &src) const$/;"	f	class:v2d
operator +	drivers/berniw/linalg.h	/^inline v3d v3d::operator+(const v3d &src)$/;"	f	class:v3d
operator +	drivers/berniw2/linalg.h	/^inline v2d v2d::operator+(const v2d &src) const$/;"	f	class:v2d
operator +	drivers/berniw2/linalg.h	/^inline v3d v3d::operator+(const v3d &src)$/;"	f	class:v3d
operator +	drivers/berniw3/linalg.h	/^inline v2d v2d::operator+(const v2d &src) const$/;"	f	class:v2d
operator +	drivers/berniw3/linalg.h	/^inline v3d v3d::operator+(const v3d &src)$/;"	f	class:v3d
operator +	drivers/human/linalg.h	/^inline v2d v2d::operator+(const v2d &src) const$/;"	f	class:v2d
operator +	drivers/olethros/TrackData.h	/^    Point operator+ (const Point& rhs)$/;"	f	class:Point
operator +	drivers/olethros/linalg.h	/^inline v2d v2d::operator+(const v2d &src) const$/;"	f	class:v2d
operator +	drivers/sparkle/linalg.h	/^inline v2d v2d::operator+(const v2d &src) const$/;"	f	class:v2d
operator +	libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator+(const v2t<T> &src) const$/;"	f	class:v2t
operator +	libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator+(const v3t<T> &src) const$/;"	f	class:v3t
operator +	libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator+(const v4t<T> &src) const$/;"	f	class:v4t
operator +	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point operator+(const Point& p, const Vector& v) {$/;"	f
operator +	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator+(const Quaternion& q1, const Quaternion& q2) {$/;"	f
operator +	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator+(const Vector& v1, const Vector& v2) {$/;"	f
operator +=	drivers/olethros/TrackData.h	/^    Point& operator+= (const Point& rhs)$/;"	f	class:Point
operator +=	libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator+=(const v2t<T> &src)$/;"	f	class:v2t
operator +=	libs/math/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator+=(const v3t<T> &src)$/;"	f	class:v3t
operator +=	libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator+=(const v4t<T> &src)$/;"	f	class:v4t
operator +=	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point& Point::operator+=(const Vector& v) {$/;"	f	class:Point
operator +=	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator+=(const Quaternion& q) {$/;"	f	class:Quaternion
operator +=	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector& Vector::operator+=(const Vector& v) {$/;"	f	class:Vector
operator +=	topview/vec.hpp	/^      vec& operator+=(const vec<N, T>& other)$/;"	f	class:kmuvcl::math::vec
operator -	drivers/berniw/linalg.h	/^inline v2d v2d::operator-(const v2d &src) const$/;"	f	class:v2d
operator -	drivers/berniw/linalg.h	/^inline v2d v2d::operator-(void) const$/;"	f	class:v2d
operator -	drivers/berniw/linalg.h	/^inline v3d v3d::operator-(const v3d &src)$/;"	f	class:v3d
operator -	drivers/berniw/linalg.h	/^inline v3d v3d::operator-(void)$/;"	f	class:v3d
operator -	drivers/berniw2/linalg.h	/^inline v2d v2d::operator-(const v2d &src) const$/;"	f	class:v2d
operator -	drivers/berniw2/linalg.h	/^inline v2d v2d::operator-(void) const$/;"	f	class:v2d
operator -	drivers/berniw2/linalg.h	/^inline v3d v3d::operator-(const v3d &src)$/;"	f	class:v3d
operator -	drivers/berniw2/linalg.h	/^inline v3d v3d::operator-(void)$/;"	f	class:v3d
operator -	drivers/berniw3/linalg.h	/^inline v2d v2d::operator-(const v2d &src) const$/;"	f	class:v2d
operator -	drivers/berniw3/linalg.h	/^inline v2d v2d::operator-(void) const$/;"	f	class:v2d
operator -	drivers/berniw3/linalg.h	/^inline v3d v3d::operator-(const v3d &src)$/;"	f	class:v3d
operator -	drivers/berniw3/linalg.h	/^inline v3d v3d::operator-(void)$/;"	f	class:v3d
operator -	drivers/human/linalg.h	/^inline v2d v2d::operator-(const v2d &src) const$/;"	f	class:v2d
operator -	drivers/human/linalg.h	/^inline v2d v2d::operator-(void) const$/;"	f	class:v2d
operator -	drivers/olethros/TrackData.h	/^    Point operator- (const Point& rhs)$/;"	f	class:Point
operator -	drivers/olethros/linalg.h	/^inline v2d v2d::operator-(const v2d &src) const$/;"	f	class:v2d
operator -	drivers/olethros/linalg.h	/^inline v2d v2d::operator-(void) const$/;"	f	class:v2d
operator -	drivers/sparkle/linalg.h	/^inline v2d v2d::operator-(const v2d &src) const$/;"	f	class:v2d
operator -	drivers/sparkle/linalg.h	/^inline v2d v2d::operator-(void) const$/;"	f	class:v2d
operator -	libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator-(const v2t<T> &src) const$/;"	f	class:v2t
operator -	libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator-(void) const$/;"	f	class:v2t
operator -	libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator-(const v3t<T> &src) const$/;"	f	class:v3t
operator -	libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator-(void) const$/;"	f	class:v3t
operator -	libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator-(const v4t<T> &src) const$/;"	f	class:v4t
operator -	libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator-(void) const$/;"	f	class:v4t
operator -	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point operator-(const Point& p, const Vector& v) {$/;"	f
operator -	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Vector operator-(const Point& p1, const Point& p2) {$/;"	f
operator -	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator-(const Quaternion& q) {$/;"	f
operator -	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator-(const Quaternion& q1, const Quaternion& q2) {$/;"	f
operator -	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator-(const Vector& v) {$/;"	f
operator -	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator-(const Vector& v1, const Vector& v2) {$/;"	f
operator -=	drivers/olethros/TrackData.h	/^    Point& operator-= (const Point& rhs)$/;"	f	class:Point
operator -=	libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator-=(const v2t<T> &src)$/;"	f	class:v2t
operator -=	libs/math/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator-=(const v3t<T> &src)$/;"	f	class:v3t
operator -=	libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator-=(const v4t<T> &src)$/;"	f	class:v4t
operator -=	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point& Point::operator-=(const Vector& v) {$/;"	f	class:Point
operator -=	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator-=(const Quaternion& q) {$/;"	f	class:Quaternion
operator -=	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector& Vector::operator-=(const Vector& v) {$/;"	f	class:Vector
operator -=	topview/vec.hpp	/^      vec& operator-=(const vec<N, T>& other)$/;"	f	class:kmuvcl::math::vec
operator /	drivers/berniw/linalg.h	/^inline v3d v3d::operator\/(const double s)$/;"	f	class:v3d
operator /	drivers/berniw2/linalg.h	/^inline v3d v3d::operator\/(const double s)$/;"	f	class:v3d
operator /	drivers/berniw3/linalg.h	/^inline v3d v3d::operator\/(const double s)$/;"	f	class:v3d
operator /	drivers/olethros/TrackData.h	/^    Point operator\/ (const float& rhs)$/;"	f	class:Point
operator /	libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator\/(const T s) const$/;"	f	class:v2t
operator /	libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator\/(const T s) const$/;"	f	class:v3t
operator /	libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator\/(const T s) const$/;"	f	class:v4t
operator /	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator\/(const Quaternion& q, Scalar s) {$/;"	f
operator /	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator\/(const Vector& v, Scalar s) {$/;"	f
operator /=	drivers/olethros/TrackData.h	/^    Point& operator\/= (const float& rhs)$/;"	f	class:Point
operator /=	libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator\/=(const T s)$/;"	f	class:v2t
operator /=	libs/math/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator\/=(const T s)$/;"	f	class:v3t
operator /=	libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator\/=(const T s)$/;"	f	class:v4t
operator /=	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator\/=(Scalar s) {$/;"	f	class:Quaternion
operator /=	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector& Vector::operator\/=(Scalar s) {$/;"	f	class:Vector
operator <	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline bool operator<(const Point& p1, const Point& p2) {$/;"	f
operator <	modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^inline bool operator<(const Encounter& x, const Encounter& y) { $/;"	f
operator <	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^inline bool operator<(const Endpoint& a, const Endpoint& b) {$/;"	f
operator <<	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline ostream& operator<<(ostream& os, const Matrix& m) {$/;"	f
operator <<	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^inline ostream& operator<<(ostream& os, const Tuple3& t) {$/;"	f
operator <<	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^inline ostream& operator<<(ostream& os, const Tuple4& t) {$/;"	f
operator <<	topview/operator.hpp	/^    std::ostream& operator << (std::ostream& os, const mat<M, N, T>& A)$/;"	f	namespace:kmuvcl::math
operator <<	topview/operator.hpp	/^    std::ostream& operator << (std::ostream& os, const vec<N, T>& v)$/;"	f	namespace:kmuvcl::math
operator =	drivers/berniw/linalg.h	/^inline v2d& v2d::operator=(const v2d &src)$/;"	f	class:v2d
operator =	drivers/berniw/linalg.h	/^inline v3d & v3d::operator=(const v3d &src)$/;"	f	class:v3d
operator =	drivers/berniw2/linalg.h	/^inline v2d& v2d::operator=(const v2d &src)$/;"	f	class:v2d
operator =	drivers/berniw2/linalg.h	/^inline v3d & v3d::operator=(const v3d &src)$/;"	f	class:v3d
operator =	drivers/berniw3/linalg.h	/^inline v2d& v2d::operator=(const v2d &src)$/;"	f	class:v2d
operator =	drivers/berniw3/linalg.h	/^inline v3d & v3d::operator=(const v3d &src)$/;"	f	class:v3d
operator =	drivers/human/linalg.h	/^inline v2d& v2d::operator=(const v2d &src)$/;"	f	class:v2d
operator =	drivers/olethros/TrackData.h	/^    Point& operator= (const Point& rhs)$/;"	f	class:Point
operator =	drivers/olethros/geometry.cpp	/^Vector& Vector::operator= (const Vector& rhs)$/;"	f	class:Vector
operator =	drivers/olethros/linalg.h	/^inline v2d& v2d::operator=(const v2d &src)$/;"	f	class:v2d
operator =	drivers/sparkle/linalg.h	/^inline v2d& v2d::operator=(const v2d &src)$/;"	f	class:v2d
operator =	libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator=(const v2t<T> &src)$/;"	f	class:v2t
operator =	libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator=(const v3t<T> &src)$/;"	f	class:v2t
operator =	libs/math/v3_t.h	/^template<class T> inline v3t<T> & v3t<T>::operator=(const v3t<T> &src)$/;"	f	class:v3t
operator =	libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator=(const v4t<T> &src)$/;"	f	class:v4t
operator =	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point& Point::operator=(const Vector& v) {$/;"	f	class:Point
operator =	topview/vec.hpp	/^      vec& operator= (const vec<N, T>& other)$/;"	f	class:kmuvcl::math::vec
operator ==	libs/math/v2_t.h	/^template<class T> inline int v2t<T>::operator==(const v2t<T> &s) const$/;"	f	class:v2t
operator ==	libs/math/v3_t.h	/^template<class T> inline int v3t<T>::operator==(const v3t<T> &s) const$/;"	f	class:v3t
operator ==	libs/math/v4_t.h	/^template<class T> inline int v4t<T>::operator==(const v4t<T> &s) const$/;"	f	class:v4t
operator ==	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^inline bool operator==(const Tuple3& t1, const Tuple3& t2) {$/;"	f
operator ==	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^inline bool operator==(const Tuple4& t1, const Tuple4& t2) {$/;"	f
operator T*	topview/mat.hpp	/^      operator T* ()$/;"	f	class:kmuvcl::math::mat
operator T*	topview/vec.hpp	/^      operator T* ()$/;"	f	class:kmuvcl::math::vec
operator []	drivers/olethros/TrackData.h	/^    Segment& operator[](int i)$/;"	f	class:SegmentList
operator []	drivers/olethros/geometry.cpp	/^const float& Vector::operator[] (int index) const$/;"	f	class:Vector
operator []	drivers/olethros/geometry.cpp	/^float& Vector::operator[] (int index)$/;"	f	class:Vector
operator []	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Vector&       operator[](int i)       { return *(Vector *)elem[i]; }$/;"	f	class:Matrix
operator []	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  const Vector& operator[](int i) const { return *(Vector *)elem[i]; }$/;"	f	class:Matrix
operator []	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Scalar&       operator[](int i)       { return comp[i]; }$/;"	f	class:Tuple3
operator []	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  const Scalar& operator[](int i) const { return comp[i]; }$/;"	f	class:Tuple3
operator []	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Scalar&       operator[](int i)       { return comp[i]; }$/;"	f	class:Tuple4
operator []	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  const Scalar& operator[](int i) const { return comp[i]; }$/;"	f	class:Tuple4
operator []	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  int operator[](int i) const { return indices[i]; }$/;"	f	class:IndexArray
operator []	modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  const Point& operator[](int i) const { return base[index[i]]; }$/;"	f	class:Polytope
operator []	modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  const Point& operator[](int i) const { return ((const Point *)base)[i]; }$/;"	f	class:VertexBase
operator const T*	topview/mat.hpp	/^      operator const T* () const$/;"	f	class:kmuvcl::math::mat
operator const T*	topview/vec.hpp	/^      operator const T* () const$/;"	f	class:kmuvcl::math::vec
opponent	drivers/bt/driver.h	/^		Opponent *opponent;		\/\/ The array of opponents.$/;"	m	class:Driver
opponent	drivers/bt/opponent.h	/^		Opponent *opponent;$/;"	m	class:Opponents
opponent	drivers/damned/driver.h	/^		Opponent *opponent;		\/\/ The array of opponents.$/;"	m	class:Driver
opponent	drivers/damned/opponent.h	/^		Opponent *opponent;$/;"	m	class:Opponents
opponent	drivers/olethros/driver.h	/^	Opponent *opponent;		\/\/\/< The array of opponents.$/;"	m	class:olethros::Driver
opponent	drivers/olethros/opponent.h	/^		Opponent *opponent;$/;"	m	class:olethros::Opponents
opponent	drivers/sparkle/driver.h	/^		Opponent *opponent;		\/* the array of opponents *\/$/;"	m	class:Driver
opponent	drivers/sparkle/opponent.h	/^		Opponent *opponent;$/;"	m	class:Opponents
opponents	drivers/bt/driver.h	/^		Opponents *opponents;	\/\/ The container for opponents.$/;"	m	class:Driver
opponents	drivers/damned/driver.h	/^		Opponents *opponents;	\/\/ The container for opponents.$/;"	m	class:Driver
opponents	drivers/olethros/driver.h	/^	Opponents *opponents;	\/\/\/< The container for opponents.$/;"	m	class:olethros::Driver
opponents	drivers/sparkle/driver.h	/^		Opponents *opponents;	\/* the container for opponents *\/$/;"	m	class:Driver
optimize	drivers/berniw/pathfinder.cpp	/^void Pathfinder::optimize(int start, int range, double w)$/;"	f	class:Pathfinder
optimize	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::optimize(int start, int range, double w)$/;"	f	class:Pathfinder
optimize	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::optimize(int start, int range, double w)$/;"	f	class:Pathfinder
optimize	drivers/human/pathfinder.cpp	/^void Pathfinder::optimize(int start, int range, double w)$/;"	f	class:Pathfinder
optimize2	drivers/berniw/pathfinder.cpp	/^void Pathfinder::optimize2(int start, int range, double w)$/;"	f	class:Pathfinder
optimize2	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::optimize2(int start, int range, double w)$/;"	f	class:Pathfinder
optimize2	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::optimize2(int start, int range, double w)$/;"	f	class:Pathfinder
optimize2	drivers/human/pathfinder.cpp	/^void Pathfinder::optimize2(int start, int range, double w)$/;"	f	class:Pathfinder
optimize3	drivers/berniw/pathfinder.cpp	/^void Pathfinder::optimize3(int start, int range, double w)$/;"	f	class:Pathfinder
optimize3	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::optimize3(int start, int range, double w)$/;"	f	class:Pathfinder
optimize3	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::optimize3(int start, int range, double w)$/;"	f	class:Pathfinder
optimize3	drivers/human/pathfinder.cpp	/^void Pathfinder::optimize3(int start, int range, double w)$/;"	f	class:Pathfinder
optionHandle	libs/client/optionmenu.cpp	/^static void *optionHandle = NULL;$/;"	v	file:
option_list	modules/simu/simuv3/SimulationOptions.h	/^	OptionList option_list;$/;"	m	class:SimulationOptions
options	modules/graphic/ssggraph/grscene.cpp	/^static ssgLoaderOptionsEx	options;$/;"	v	file:
options	modules/simu/simuv3/Options.h	/^    std::vector<AbstractOption*> options;$/;"	m	class:OptionList
options	modules/simu/simuv3/carstruct.h	/^    SimulationOptions* options;$/;"	m	struct:__anon42
optpathinitialized	drivers/inferno/pathfinder.cpp	/^bool Pathfinder::optpathinitialized = false;$/;"	m	class:Pathfinder	file:
optpathinitialized	drivers/inferno/pathfinder.h	/^		static bool optpathinitialized;	\/\/ Precomuted path is shared between instances, is it initialized?$/;"	m	class:Pathfinder
optpathinitialized	drivers/lliaw/pathfinder.cpp	/^bool Pathfinder::optpathinitialized = false;$/;"	m	class:Pathfinder	file:
optpathinitialized	drivers/lliaw/pathfinder.h	/^		static bool optpathinitialized;	\/\/ Precomuted path is shared between instances, is it initialized?$/;"	m	class:Pathfinder
optpathinitialized	drivers/tita/pathfinder.cpp	/^bool Pathfinder::optpathinitialized = false;$/;"	m	class:Pathfinder	file:
optpathinitialized	drivers/tita/pathfinder.h	/^		static bool optpathinitialized;	\/\/ Precomuted path is shared between instances, is it initialized?$/;"	m	class:Pathfinder
orientation	libs/tgfclient/gui.h	/^    int			orientation;$/;"	m	struct:__anon144
orig_vertices	windows/include/plib/ssgaWaveSystem.h	/^  sgVec3 *orig_vertices  ;$/;"	m	class:ssgaWaveSystem
origin	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Point origin;$/;"	m	class:Transform
origin	topview/Camera.hpp	/^	kmuvcl::math::vec3f origin; \/\/중심의 위치 eye's position$/;"	m	class:kmuvcl::Camera
ortho	topview/transform.hpp	/^        mat<4, 4, T> ortho(T left, T right, T bottom, T top, T nearVal, T farVal)$/;"	f	namespace:kmuvcl::math
ortho	windows/include/plib/sg.h	/^  int ortho ;$/;"	m	class:sgFrustum
ortho	windows/include/plib/sg.h	/^  int ortho ;$/;"	m	class:sgdFrustum
orthoXform	windows/include/plib/sg.h	/^  void orthoXform ( const sgMat4 m )$/;"	f	class:sgSphere
orthoXform	windows/include/plib/sg.h	/^  void orthoXform ( const sgdMat4 m )$/;"	f	class:sgdSphere
os	windows/include/plib/js.h	/^  struct os_specific_s *os ;$/;"	m	class:jsJoystick	typeref:struct:jsJoystick::os_specific_s
os	windows/include/vorbis/vorbisfile.h	/^  ogg_stream_state os; \/* take physical pages, weld into a logical$/;"	m	struct:OggVorbis_File
os	windows/include/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s
osErr	windows/include/plib/sl.h	/^  OSErr          osErr ;$/;"	m	class:slDSP
out	tools/texmapper/maintexmapper.cpp	/^FILE	*in, *out;$/;"	v
outAxis	modules/simu/simuv2/differential.h	/^    tDynAxis	*outAxis[2];$/;"	m	struct:__anon10
outAxis	modules/simu/simuv3/differential.h	/^    tDynAxis	*outAxis[2];$/;"	m	struct:__anon32
outCtrl	libs/tgf/params.cpp	/^	struct parmOutput outCtrl; \/**< Ouput control structure used for serializing parameter set into XML *\/$/;"	m	struct:parmHandle	typeref:struct:parmHandle::parmOutput	file:
out_func	windows/include/zconf.h	119;"	d
out_func	windows/include/zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
outfile	misc/png2jpg/png2jpg.c	/^static char 	*outfile;$/;"	v	file:
outfile	tools/nfsperf/mainnfsperf.cpp	/^const char	*outfile = "carp.xml";$/;"	v
output	libs/tgfclient/guifont.cpp	/^void GfuiFontClass::output(int X, int Y, const char* text)$/;"	f	class:GfuiFontClass
outputBase	interfaces/raceman.h	/^    const char *outputBase;$/;"	m	struct:RmMovieCapture
ovCullface	windows/include/plib/ssg.h	/^  int       ovCullface         ;$/;"	m	class:ssgContext
ovState	windows/include/plib/ssg.h	/^  ssgState *ovState            ;$/;"	m	class:ssgContext
ovTexture	windows/include/plib/ssg.h	/^  int       ovTexture          ;$/;"	m	class:ssgContext
ov_callbacks	windows/include/vorbis/vorbisfile.h	/^} ov_callbacks;$/;"	t	typeref:struct:__anon48
ovectl_ratemanage2_arg	windows/include/vorbis/vorbisenc.h	/^struct ovectl_ratemanage2_arg {$/;"	s
ovectl_ratemanage_arg	windows/include/vorbis/vorbisenc.h	/^struct ovectl_ratemanage_arg {$/;"	s
overallRatio	modules/simu/simuv2/transmission.h	/^    tdble	overallRatio[MAX_GEARS];	\/* including final drive ratio *\/$/;"	m	struct:__anon26
overallRatio	modules/simu/simuv3/transmission.h	/^    tdble	overallRatio[MAX_GEARS];	\/* including final drive ratio *\/$/;"	m	struct:__anon45
overlaptimer	drivers/berniw/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	drivers/berniw2/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	drivers/berniw3/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	drivers/bt/opponent.h	/^		float overlaptimer;$/;"	m	class:Opponent
overlaptimer	drivers/damned/opponent.h	/^		float overlaptimer;$/;"	m	class:Opponent
overlaptimer	drivers/human/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	drivers/inferno/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	drivers/lliaw/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	drivers/olethros/opponent.h	/^		float overlaptimer;$/;"	m	class:olethros::Opponent
overlaptimer	drivers/tita/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overriddenState	windows/include/plib/ssg.h	/^  ssgState *overriddenState () { return ovState ; }$/;"	f	class:ssgContext
overtake	drivers/berniw/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	drivers/berniw2/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	drivers/berniw3/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	drivers/human/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	drivers/inferno/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	drivers/lliaw/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	drivers/tita/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtakee	drivers/berniw/pathfinder.h	/^	bool overtakee;			\/* is this the guy to overtake? *\/$/;"	m	struct:__anon156
overtakee	drivers/berniw2/pathfinder.h	/^	bool overtakee;			\/* is this the guy to overtake? *\/$/;"	m	struct:__anon200
overtakee	drivers/berniw3/pathfinder.h	/^	bool overtakee;			\/* is this the guy to overtake? *\/$/;"	m	struct:__anon179
overtakee	drivers/human/pathfinder.h	/^	bool overtakee;			\/* is this the guy to overtake? *\/$/;"	m	struct:__anon191
overtakee	drivers/inferno/pathfinder.h	/^	bool overtakee;			\/\/ is this the guy to overtake?$/;"	m	struct:__anon164
overtakee	drivers/lliaw/pathfinder.h	/^	bool overtakee;			\/\/ is this the guy to overtake?$/;"	m	struct:__anon210
overtakee	drivers/tita/pathfinder.h	/^	bool overtakee;			\/\/ is this the guy to overtake?$/;"	m	struct:__anon171
overtaking	drivers/olethros/driver.h	/^	bool overtaking; \/\/\/< are we overtaking?$/;"	m	class:olethros::Driver
own_handle	windows/include/plib/ssg.h	/^  int own_handle ;$/;"	m	class:ssgTexture
own_mem	windows/include/plib/ssg.h	/^  bool         own_mem ;  \/* Do we own the list memory ? *\/$/;"	m	class:ssgSimpleList
oy	windows/include/vorbis/vorbisfile.h	/^  ogg_sync_state   oy;$/;"	m	struct:OggVorbis_File
p	drivers/berniw/linalg.h	/^        v2d p;          \/* point on the straight *\/$/;"	m	class:Straight
p	drivers/berniw/pathfinder.h	/^		v3d p;			\/* position in space, dynamic trajectory *\/$/;"	m	class:PathSeg
p	drivers/berniw2/linalg.h	/^        v2d p;          \/* point on the straight *\/$/;"	m	class:Straight
p	drivers/berniw2/pathfinder.h	/^		v3d p;			\/* position in space, dynamic trajectory *\/$/;"	m	class:PathSeg
p	drivers/berniw3/linalg.h	/^        v2d p;          \/* point on the straight *\/$/;"	m	class:Straight
p	drivers/berniw3/pathfinder.h	/^		v3d p;			\/* position in space, dynamic trajectory *\/$/;"	m	class:PathSeg
p	drivers/bt/pit.h	/^		SplinePoint p[NPOINTS];			\/\/ Spline points.$/;"	m	class:Pit
p	drivers/damned/pit.h	/^		SplinePoint p[NPOINTS];			\/\/ Spline points.$/;"	m	class:Pit
p	drivers/human/linalg.h	/^        v2d p;          \/* point on the straight *\/$/;"	m	class:Straight
p	drivers/human/pathfinder.h	/^		v3d p;			\/* position in space, dynamic trajectory *\/$/;"	m	class:PathSeg
p	drivers/inferno/pathfinder.h	/^				vec2d p;		\/\/ Position in space, dynamic trajectory.$/;"	m	class:PathSeg::pseg
p	drivers/lliaw/pathfinder.h	/^				vec2d p;		\/\/ Position in space, dynamic trajectory.$/;"	m	class:PathSeg::pseg
p	drivers/olethros/linalg.h	/^        v2d p;          \/* point on the straight *\/$/;"	m	class:Straight
p	drivers/olethros/pit.h	/^		SplinePoint p[NPOINTS];			\/\/ Spline points.$/;"	m	class:olethros::Pit
p	drivers/sparkle/linalg.h	/^        v2d p;          \/* point on the straight *\/$/;"	m	class:Straight
p	drivers/sparkle/pit.h	/^		SplinePoint p[NPOINTS]; \/* spline points *\/$/;"	m	class:Pit
p	drivers/tita/pathfinder.h	/^				vec2d p;		\/\/ Position in space, dynamic trajectory.$/;"	m	class:PathSeg::pseg
p	libs/learning/Distribution.h	/^	real* p; \/\/\/< probabilities of outcomes$/;"	m	class:DiscreteDistribution
p	libs/math/straight2_t.h	/^		v2t<T> p;	\/\/ Point on the straight.$/;"	m	class:straight2t
p	libs/txml/hashtable.h	/^  NAMED **p;$/;"	m	struct:__anon108
p	modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 p; \/\/\/< position$/;"	m	struct:WheelSoundData_
p	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static Point p[4];    \/\/ support points of object A in local coordinates $/;"	v	file:
p0	windows/include/plib/sg.h	/^  sgParticle *p0 ;$/;"	m	class:sgSpringDamper
p1	windows/include/plib/sg.h	/^  sgParticle *p1 ;$/;"	m	class:sgSpringDamper
pQ	libs/learning/policy.h	/^	real pQ; \/\/\/< previous Q$/;"	m	class:DiscretePolicy
pTrackSeg	drivers/berniw/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/* id of the corresponding segment *\/$/;"	m	class:TrackSegment
pTrackSeg	drivers/berniw2/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/* id of the corresponding segment *\/$/;"	m	class:TrackSegment
pTrackSeg	drivers/berniw3/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/* id of the corresponding segment *\/$/;"	m	class:TrackSegment
pTrackSeg	drivers/human/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/* id of the corresponding segment *\/$/;"	m	class:TrackSegment
pTrackSeg	drivers/inferno/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment
pTrackSeg	drivers/inferno/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment2D
pTrackSeg	drivers/lliaw/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment
pTrackSeg	drivers/lliaw/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment2D
pTrackSeg	drivers/tita/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment
pTrackSeg	drivers/tita/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment2D
p_lis	modules/graphic/ssggraph/TorcsSound.h	/^	sgVec3 p_lis; \/\/\/< listener position for this source$/;"	m	class:SoundSource
p_src	modules/graphic/ssggraph/TorcsSound.h	/^	sgVec3 p_src; \/\/\/< source position$/;"	m	class:SoundSource
pa	libs/learning/policy.h	/^	int pa; \/\/\/< previous action$/;"	m	class:DiscretePolicy
paccel	drivers/human/human.h	/^	tdble	paccel;$/;"	m	struct:HumanContext
packers	modules/simu/simuv2/susp.h	/^    tdble packers;     \/* packer size (min susp. travel) *\/$/;"	m	struct:__anon22
packers	modules/simu/simuv3/susp.h	/^    tdble packers;     \/* packer size (min susp. travel) *\/$/;"	m	struct:__anon41
packet	windows/include/ogg/ogg.h	/^  unsigned char *packet;$/;"	m	struct:__anon53
packetno	windows/include/ogg/ogg.h	/^  ogg_int64_t  packetno;     \/* sequence number for decode; the framing$/;"	m	struct:__anon53
packetno	windows/include/ogg/ogg.h	/^  ogg_int64_t  packetno;  \/* sequence number for decode; the framing$/;"	m	struct:__anon52
pageno	windows/include/ogg/ogg.h	/^  long    pageno;$/;"	m	struct:__anon52
pairList	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  PairList pairList;$/;"	m	class:RespTable
param	interfaces/raceman.h	/^    void		*param;$/;"	m	struct:__anon73
param	libs/racescreens/racescreens.h	/^	void *param;			\/**< Pointer to race manager parameter set (to set the parameters) *\/$/;"	m	struct:__anon103
param	libs/racescreens/racescreens.h	/^	void *param;			\/**< Pointer to race manager parameter set (to set the track) *\/$/;"	m	struct:__anon101
param	libs/racescreens/racescreens.h	/^	void *param;		\/**< Pointer to race manager parameter set (to set the driver) *\/$/;"	m	struct:__anon102
param	libs/tgf/params.cpp	/^struct param {$/;"	s	file:
paramHash	libs/tgf/params.cpp	/^	void *paramHash; \/**< Hash table for parameter access *\/$/;"	m	struct:parmHeader	file:
paramList	libs/tgf/params.cpp	/^	struct paramHead paramList; \/**< List of the parameters in this section *\/$/;"	m	struct:section	typeref:struct:section::paramHead	file:
parametricslopesn	drivers/berniw/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	drivers/berniw2/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	drivers/berniw3/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	drivers/human/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	drivers/inferno/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	drivers/lliaw/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	drivers/tita/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesp	drivers/berniw/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	drivers/berniw2/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	drivers/berniw3/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	drivers/human/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	drivers/inferno/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	drivers/lliaw/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	drivers/tita/spline.cpp	/^void parametricslopesp($/;"	f
params	interfaces/raceman.h	/^    void		*params;	\/**< Raceman parameters *\/$/;"	m	struct:RmInfo
params	interfaces/track.h	/^    void	  *params;	\/**< Parameters handle *\/$/;"	m	struct:__anon68
params	modules/simu/simuv2/carstruct.h	/^    void	*params;$/;"	m	struct:__anon23
params	modules/simu/simuv3/carstruct.h	/^    void	*params;$/;"	m	struct:__anon42
paramsHandle	interfaces/car.h	/^	void *paramsHandle; \/**< accessible parameters for modules *\/$/;"	m	struct:__anon80
parent	libs/tgf/params.cpp	/^	struct section *parent; \/**< Parent section *\/$/;"	m	struct:section	typeref:struct:section::section	file:
parent	libs/txml/xmlparse.c	/^  struct tag *parent;$/;"	m	struct:tag	typeref:struct:tag::tag	file:
parents	windows/include/plib/ssg.h	/^  ssgList parents ;$/;"	m	class:ssgEntity
parmClean	libs/tgf/params.cpp	/^static void parmClean(struct parmHeader *conf) {$/;"	f	file:
parmHandle	libs/confscreens/joystickconfig.cpp	/^static void *parmHandle;$/;"	v	file:
parmHandle	libs/tgf/params.cpp	/^struct parmHandle {$/;"	s	file:
parmHandleList	libs/tgf/params.cpp	/^static struct parmHead parmHandleList;$/;"	v	typeref:struct:parmHead	file:
parmHeader	libs/tgf/params.cpp	/^struct parmHeader {$/;"	s	file:
parmOutput	libs/tgf/params.cpp	/^struct parmOutput {$/;"	s	file:
parmReleaseHandle	libs/tgf/params.cpp	/^static void parmReleaseHandle(struct parmHandle *parmHandle) {$/;"	f	file:
parmReleaseHeader	libs/tgf/params.cpp	/^static void parmReleaseHeader(struct parmHeader *conf) {$/;"	f	file:
parseEndByteIndex	libs/txml/xmlparse.c	/^  long parseEndByteIndex;$/;"	m	struct:__anon117	file:
parseEndByteIndex	libs/txml/xmlparse.c	289;"	d	file:
parseEndPtr	libs/txml/xmlparse.c	/^  const char *parseEndPtr;$/;"	m	struct:__anon117	file:
parseEndPtr	libs/txml/xmlparse.c	290;"	d	file:
parsePseudoAttribute	libs/txml/xmltok.c	/^int parsePseudoAttribute(const ENCODING *enc,$/;"	f	file:
parseXml	libs/tgf/params.cpp	/^static int parseXml(struct parmHandle *parmHandle, char *buf, int len,$/;"	f	file:
parser	libs/tgf/params.cpp	/^	XML_Parser parser; \/**< Parser *\/$/;"	m	struct:parmHandle	file:
parserXmlInit	libs/tgf/params.cpp	/^static int parserXmlInit(struct parmHandle *parmHandle) {$/;"	f	file:
particle	windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticle *particle ;$/;"	m	class:ssgaParticleSystem
particle_create	windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticleCreateFunc particle_create ;$/;"	m	class:ssgaParticleSystem
particle_delete	windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticleDeleteFunc particle_delete ;$/;"	m	class:ssgaParticleSystem
particle_update	windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticleUpdateFunc particle_update ;$/;"	m	class:ssgaParticleSystem
partnerList	modules/simu/simuv2/SOLID-2.0/src/RespTable.cpp	/^PartnerList partnerList;$/;"	v
path	drivers/inferno/pathfinder.h	/^		PathSegOpt* path;	\/\/ Optimal trajectory (TODO: static).$/;"	m	class:PathSegPit
path	drivers/lliaw/pathfinder.h	/^		PathSegOpt* path;	\/\/ Optimal trajectory (TODO: static).$/;"	m	class:PathSegPit
path	drivers/tita/pathfinder.h	/^		PathSegOpt* path;	\/\/ Optimal trajectory (TODO: static).$/;"	m	class:PathSegPit
path	libs/racescreens/racescreens.h	/^	char *path;				\/**< Directory containing the files to list *\/$/;"	m	struct:__anon104
path	windows/include/plib/ssg.h	/^  ssgEntity *path [ SSG_MAXPATH ] ;$/;"	m	class:ssgHit
pathDynSlope	drivers/inferno/pathfinder.h	/^inline double Pathfinder::pathDynSlope(int id) {$/;"	f	class:Pathfinder
pathDynSlope	drivers/lliaw/pathfinder.h	/^inline double Pathfinder::pathDynSlope(int id) {$/;"	f	class:Pathfinder
pathDynSlope	drivers/tita/pathfinder.h	/^inline double Pathfinder::pathDynSlope(int id) {$/;"	f	class:Pathfinder
pathOptSlope	drivers/inferno/pathfinder.h	/^inline double Pathfinder::pathOptSlope(int id) {$/;"	f	class:Pathfinder
pathOptSlope	drivers/lliaw/pathfinder.h	/^inline double Pathfinder::pathOptSlope(int id) {$/;"	f	class:Pathfinder
pathOptSlope	drivers/tita/pathfinder.h	/^inline double Pathfinder::pathOptSlope(int id) {$/;"	f	class:Pathfinder
pathSlope	drivers/berniw/pathfinder.h	/^inline double Pathfinder::pathSlope(int id) {$/;"	f	class:Pathfinder
pathSlope	drivers/berniw2/pathfinder.h	/^inline double Pathfinder::pathSlope(int id) {$/;"	f	class:Pathfinder
pathSlope	drivers/berniw3/pathfinder.h	/^inline double Pathfinder::pathSlope(int id) {$/;"	f	class:Pathfinder
pathSlope	drivers/human/pathfinder.h	/^inline double Pathfinder::pathSlope(int id) {$/;"	f	class:Pathfinder
pause	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::pause()$/;"	f	class:OpenalTorcsSound
pause	modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::pause()$/;"	f	class:PlibTorcsSound
pause	windows/include/plib/sl.h	/^  virtual void pause ()$/;"	f	class:slPlayer
pause_time	windows/include/plib/ssg.h	/^  double  pause_time ;$/;"	m	class:ssgTimedSelector
paused	modules/graphic/ssggraph/TorcsSound.h	/^	bool playing, paused;$/;"	m	class:OpenalTorcsSound
paused	modules/graphic/ssggraph/TorcsSound.h	/^    bool paused; \/\/\/< sound is paused$/;"	m	class:PlibTorcsSound
pbrake	drivers/human/human.h	/^	tdble	pbrake;$/;"	m	struct:HumanContext
pcdata	libs/txml/xml.h	/^    char		*pcdata;	\/* string associated with this element *\/$/;"	m	struct:xmlElement
pcm	windows/include/vorbis/codec.h	/^  float  **pcm;       \/* this is a pointer into local storage *\/$/;"	m	struct:vorbis_block
pcm	windows/include/vorbis/codec.h	/^  float **pcm;$/;"	m	struct:vorbis_dsp_state
pcm_current	windows/include/vorbis/codec.h	/^  int      pcm_current;$/;"	m	struct:vorbis_dsp_state
pcm_offset	windows/include/vorbis/vorbisfile.h	/^  ogg_int64_t      pcm_offset;$/;"	m	struct:OggVorbis_File
pcm_returned	windows/include/vorbis/codec.h	/^  int      pcm_returned;$/;"	m	struct:vorbis_dsp_state
pcm_storage	windows/include/vorbis/codec.h	/^  int      pcm_storage;$/;"	m	struct:vorbis_dsp_state
pcmend	windows/include/vorbis/codec.h	/^  int   pcmend;$/;"	m	struct:vorbis_block
pcmlengths	windows/include/vorbis/vorbisfile.h	/^  ogg_int64_t     *pcmlengths; \/* overloaded to maintain binary$/;"	m	struct:OggVorbis_File
pcmret	windows/include/vorbis/codec.h	/^  float **pcmret;$/;"	m	struct:vorbis_dsp_state
pd	drivers/berniw/pathfinder.h	/^	double pd;$/;"	m	struct:__anon155
pd	drivers/berniw2/pathfinder.h	/^	double pd;$/;"	m	struct:__anon199
pd	drivers/berniw3/pathfinder.h	/^	double pd;$/;"	m	struct:__anon178
pd	drivers/human/pathfinder.h	/^	double pd;$/;"	m	struct:__anon190
pdf	libs/learning/Distribution.cpp	/^real DiscreteDistribution::pdf(real x)$/;"	f	class:DiscreteDistribution
pdf	libs/learning/Distribution.cpp	/^real ExponentialDistribution::pdf(real x)$/;"	f	class:ExponentialDistribution
pdf	libs/learning/Distribution.cpp	/^real LaplacianDistribution::pdf(real x)$/;"	f	class:LaplacianDistribution
pdf	libs/learning/Distribution.cpp	/^real NormalDistribution::pdf(real x)$/;"	f	class:NormalDistribution
pdf	libs/learning/Distribution.cpp	/^real UniformDistribution::pdf(real x)$/;"	f	class:UniformDistribution
penalty	interfaces/car.h	/^	int penalty; \/**< penalty type *\/$/;"	m	struct:CarPenalty
penaltyList	interfaces/car.h	/^	tCarPenaltyHead penaltyList; \/**< List of current penalties *\/$/;"	m	struct:__anon77
penaltyTime	interfaces/car.h	/^	tdble penaltyTime;$/;"	m	struct:__anon77
pending_callback	windows/include/plib/sl.h	/^  slPendingCallBack pending_callback [ SL_MAX_CALLBACKS ] ;$/;"	m	class:slScheduler
perf_timer	windows/include/plib/ul.h	/^  static int perf_timer ;$/;"	m	class:ulClock
perspective	topview/transform.hpp	/^        mat<4, 4, T> perspective(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:kmuvcl::math
pf	drivers/berniw/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	drivers/berniw2/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	drivers/berniw3/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	drivers/human/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	drivers/inferno/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	drivers/lliaw/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	drivers/tita/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pick	modules/graphic/ssggraph/grcarlight.h	/^  virtual void pick ( int baseName )  { ssgVtxTable::pick(baseName);}$/;"	f	class:ssgVtxTableCarlight
pick	modules/graphic/ssggraph/grshadow.h	/^  virtual void pick ( int baseName )  { ssgVtxTable::pick(baseName);}$/;"	f	class:ssgVtxTableShadow
pick	modules/graphic/ssggraph/grsmoke.h	/^  virtual void pick ( int baseName )  { ssgVtxTable::pick(baseName);}$/;"	f	class:ssgVtxTableSmoke
pick	modules/graphic/ssggraph/grvtxtable.h	/^  virtual void pick ( int baseName )  { ssgVtxTable::pick(baseName);}$/;"	f	class:grVtxTable
pit	drivers/berniw/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	drivers/berniw2/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	drivers/berniw3/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	drivers/bt/driver.h	/^		Pit *pit;						\/\/ Pointer to the pit instance.$/;"	m	class:Driver
pit	drivers/damned/driver.h	/^		Pit *pit;						\/\/ Pointer to the pit instance.$/;"	m	class:Driver
pit	drivers/human/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	drivers/inferno/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	drivers/lliaw/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	drivers/olethros/driver.h	/^	Pit *pit;						\/\/\/< Pointer to the pit instance.$/;"	m	class:olethros::Driver
pit	drivers/sparkle/driver.h	/^		Pit *pit;				\/* pointer to the pit instance *\/$/;"	m	class:Driver
pit	drivers/tita/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	interfaces/car.h	/^	tTrackOwnPit *pit;$/;"	m	struct:__anon77
pitCapCCW	tools/trackgen/track.cpp	/^void pitCapCCW(tTexElt *curTexElt, unsigned int &nbvert, tdble x, tdble y, tdble z, const t3Dd &normvec)$/;"	f
pitCapCW	tools/trackgen/track.cpp	/^void pitCapCW(tTexElt *curTexElt, unsigned int &nbvert, tdble x, tdble y, tdble z, const t3Dd &normvec)$/;"	f
pitCarIndex	interfaces/track.h	/^	int pitCarIndex;	\/**< Index of the car in the car array below which occupies the pit. If the pit is free the value is TR_PIT_STATE_FREE *\/$/;"	m	struct:TrackOwnPit
pitCmd	drivers/inferno2/inferno2.cpp	/^pitCmd(int index, tCarElt *car, tSituation *s)$/;"	f	file:
pitCommand	drivers/bt/driver.cpp	/^int Driver::pitCommand(tSituation *s)$/;"	f	class:Driver
pitCommand	drivers/damned/driver.cpp	/^int Driver::pitCommand(tSituation *s)$/;"	f	class:Driver
pitCommand	drivers/olethros/driver.cpp	/^    int Driver::pitCommand(tSituation *s)$/;"	f	class:olethros::Driver
pitCommand	drivers/sparkle/driver.cpp	/^int Driver::pitCommand(tSituation *s)$/;"	f	class:Driver
pitEnd	interfaces/track.h	/^	tTrackSeg *pitEnd;			\/**< Pit lane segment *\/$/;"	m	struct:__anon65
pitEntry	interfaces/track.h	/^	tTrackSeg *pitEntry;		\/**< Pit lane segment *\/$/;"	m	struct:__anon65
pitExit	interfaces/track.h	/^	tTrackSeg *pitExit;			\/**< Pit lane segment *\/$/;"	m	struct:__anon65
pitLoc	drivers/berniw/pathfinder.h	/^		v3d pitLoc;				\/* location of pit *\/$/;"	m	class:Pathfinder
pitLoc	drivers/berniw2/pathfinder.h	/^		v3d pitLoc;				\/* location of pit *\/$/;"	m	class:Pathfinder
pitLoc	drivers/berniw3/pathfinder.h	/^		v3d pitLoc;				\/* location of pit *\/$/;"	m	class:Pathfinder
pitLoc	drivers/human/pathfinder.h	/^		v3d pitLoc;				\/* location of pit *\/$/;"	m	class:Pathfinder
pitLoc	drivers/inferno/pathfinder.h	/^		vec2d pitLoc;			\/\/ location of pit.$/;"	m	class:Pathfinder
pitLoc	drivers/lliaw/pathfinder.h	/^		vec2d pitLoc;			\/\/ location of pit.$/;"	m	class:Pathfinder
pitLoc	drivers/tita/pathfinder.h	/^		vec2d pitLoc;			\/\/ location of pit.$/;"	m	class:Pathfinder
pitRefuel	drivers/bt/strategy.cpp	/^float SimpleStrategy2::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
pitRefuel	drivers/bt/strategy.cpp	/^float SimpleStrategy::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
pitRefuel	drivers/damned/strategy.cpp	/^float SimpleStrategy2::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
pitRefuel	drivers/damned/strategy.cpp	/^float SimpleStrategy::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
pitRefuel	drivers/olethros/strategy.cpp	/^float SimpleStrategy::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:olethros::SimpleStrategy
pitRepair	drivers/bt/strategy.cpp	/^int SimpleStrategy::pitRepair(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
pitRepair	drivers/damned/strategy.cpp	/^int SimpleStrategy::pitRepair(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
pitRepair	drivers/olethros/strategy.cpp	/^int SimpleStrategy::pitRepair(tCarElt* car, tSituation *s)$/;"	f	class:olethros::SimpleStrategy
pitSegId	drivers/berniw/pathfinder.h	/^		int pitSegId;			\/* segment id of pit *\/$/;"	m	class:Pathfinder
pitSegId	drivers/berniw2/pathfinder.h	/^		int pitSegId;			\/* segment id of pit *\/$/;"	m	class:Pathfinder
pitSegId	drivers/berniw3/pathfinder.h	/^		int pitSegId;			\/* segment id of pit *\/$/;"	m	class:Pathfinder
pitSegId	drivers/human/pathfinder.h	/^		int pitSegId;			\/* segment id of pit *\/$/;"	m	class:Pathfinder
pitSegId	drivers/inferno/pathfinder.h	/^		int pitSegId;			\/\/ segment id of pit.$/;"	m	class:Pathfinder
pitSegId	drivers/lliaw/pathfinder.h	/^		int pitSegId;			\/\/ segment id of pit.$/;"	m	class:Pathfinder
pitSegId	drivers/tita/pathfinder.h	/^		int pitSegId;			\/\/ segment id of pit.$/;"	m	class:Pathfinder
pitStart	interfaces/track.h	/^	tTrackSeg *pitStart;		\/**< Pit lane segment *\/$/;"	m	struct:__anon65
pitStop	drivers/berniw/pathfinder.h	/^		bool pitStop;			\/* pitstop ? *\/$/;"	m	class:Pathfinder
pitStop	drivers/berniw2/pathfinder.h	/^		bool pitStop;			\/* pitstop ? *\/$/;"	m	class:Pathfinder
pitStop	drivers/berniw3/pathfinder.h	/^		bool pitStop;			\/* pitstop ? *\/$/;"	m	class:Pathfinder
pitStop	drivers/human/pathfinder.h	/^		bool pitStop;			\/* pitstop ? *\/$/;"	m	class:Pathfinder
pitStop	drivers/inferno/pathfinder.h	/^		bool pitStop;			\/\/ pitstop ?$/;"	m	class:Pathfinder
pitStop	drivers/lliaw/pathfinder.h	/^		bool pitStop;			\/\/ pitstop ?$/;"	m	class:Pathfinder
pitStop	drivers/tita/pathfinder.h	/^		bool pitStop;			\/\/ pitstop ?$/;"	m	class:Pathfinder
pit_exit_timer	drivers/olethros/driver.h	/^	float pit_exit_timer;$/;"	m	class:olethros::Driver
pit_state	drivers/olethros/pit.h	/^		enum PitState pit_state;$/;"	m	class:olethros::Pit	typeref:enum:olethros::Pit::PitState
pitch	modules/graphic/ssggraph/TorcsSound.h	/^	float pitch; \/\/\/< Current pitch$/;"	m	class:TorcsSound
pitch_env	modules/graphic/ssggraph/TorcsSound.h	/^	slEnvelope* pitch_env; \/\/\/< pitch envelope$/;"	m	class:PlibTorcsSound
pitcmd	drivers/berniw/berniw.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s) {$/;"	f	file:
pitcmd	drivers/berniw2/berniw2.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s) {$/;"	f	file:
pitcmd	drivers/berniw3/berniw3.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s) {$/;"	f	file:
pitcmd	drivers/bt/bt.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	drivers/damned/damned.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	drivers/human/human.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s) {$/;"	f	file:
pitcmd	drivers/inferno/inferno.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	drivers/lliaw/lliaw.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	drivers/olethros/olethros.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	namespace:olethros
pitcmd	drivers/sparkle/sparkle.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	drivers/tita/tita.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	interfaces/car.h	/^	tCarPitCmd pitcmd; \/**< private *\/$/;"	m	struct:CarElt
pitcord	drivers/berniw/pathfinder.h	/^		v3d* pitcord;$/;"	m	class:Pathfinder
pitcord	drivers/berniw2/pathfinder.h	/^		v3d* pitcord;$/;"	m	class:Pathfinder
pitcord	drivers/berniw3/pathfinder.h	/^		v3d* pitcord;$/;"	m	class:Pathfinder
pitcord	drivers/human/pathfinder.h	/^		v3d* pitcord;$/;"	m	class:Pathfinder
pitentry	drivers/bt/pit.h	/^		float pitentry;					\/\/ Distance to start line of the pit entry.$/;"	m	class:Pit
pitentry	drivers/damned/pit.h	/^		float pitentry;					\/\/ Distance to start line of the pit entry.$/;"	m	class:Pit
pitentry	drivers/olethros/pit.h	/^		float pitentry;					\/\/ Distance to start line of the pit entry.$/;"	m	class:olethros::Pit
pitentry	drivers/sparkle/pit.h	/^		float pitentry;         \/* distance to start line of the pit entry *\/$/;"	m	class:Pit
pitexit	drivers/bt/pit.h	/^		float pitexit;					\/\/ Distance to the start line of the pit exit.$/;"	m	class:Pit
pitexit	drivers/damned/pit.h	/^		float pitexit;					\/\/ Distance to the start line of the pit exit.$/;"	m	class:Pit
pitexit	drivers/olethros/pit.h	/^		float pitexit;					\/\/ Distance to the start line of the pit exit.$/;"	m	class:olethros::Pit
pitexit	drivers/sparkle/pit.h	/^		float pitexit;          \/* distance to the start line of the pit exit *\/$/;"	m	class:Pit
pitinfo	drivers/bt/pit.h	/^		tTrackPitInfo *pitinfo;			\/\/ General pit info.$/;"	m	class:Pit
pitinfo	drivers/damned/pit.h	/^		tTrackPitInfo *pitinfo;			\/\/ General pit info.$/;"	m	class:Pit
pitinfo	drivers/olethros/pit.h	/^		tTrackPitInfo *pitinfo;			\/\/ General pit info.$/;"	m	class:olethros::Pit
pitinfo	drivers/sparkle/pit.h	/^		tTrackPitInfo *pitinfo; \/* general pit info *\/$/;"	m	class:Pit
pits	interfaces/track.h	/^    tTrackPitInfo pits;		\/**< Pits information *\/$/;"	m	struct:__anon68
pitspeedlimitsqr	drivers/bt/pit.h	/^		float pitspeedlimitsqr;			\/\/ The original speedlimit squared.$/;"	m	class:Pit
pitspeedlimitsqr	drivers/damned/pit.h	/^		float pitspeedlimitsqr;			\/\/ The original speedlimit squared.$/;"	m	class:Pit
pitspeedlimitsqr	drivers/olethros/pit.h	/^		float pitspeedlimitsqr;			\/\/ The original speedlimit squared.$/;"	m	class:olethros::Pit
pitspeedlimitsqr	drivers/sparkle/pit.h	/^		float pitspeedlimitsqr;	\/* the original speedlimit squared *\/$/;"	m	class:Pit
pitspeedsqrlimit	drivers/berniw/pathfinder.h	/^		double pitspeedsqrlimit;	\/* speed limit for pit lane squared *\/$/;"	m	class:Pathfinder
pitspeedsqrlimit	drivers/berniw2/pathfinder.h	/^		double pitspeedsqrlimit;	\/* speed limit for pit lane squared *\/$/;"	m	class:Pathfinder
pitspeedsqrlimit	drivers/berniw3/pathfinder.h	/^		double pitspeedsqrlimit;	\/* speed limit for pit lane squared *\/$/;"	m	class:Pathfinder
pitspeedsqrlimit	drivers/human/pathfinder.h	/^		double pitspeedsqrlimit;	\/* speed limit for pit lane squared *\/$/;"	m	class:Pathfinder
pitspeedsqrlimit	drivers/inferno/pathfinder.h	/^		double pitspeedsqrlimit;		\/\/ speed limit for pit lane squared.$/;"	m	class:Pathfinder
pitspeedsqrlimit	drivers/lliaw/pathfinder.h	/^		double pitspeedsqrlimit;		\/\/ speed limit for pit lane squared.$/;"	m	class:Pathfinder
pitspeedsqrlimit	drivers/tita/pathfinder.h	/^		double pitspeedsqrlimit;		\/\/ speed limit for pit lane squared.$/;"	m	class:Pathfinder
pitstop	drivers/bt/pit.h	/^		bool pitstop;					\/\/ Pitstop planned.$/;"	m	class:Pit
pitstop	drivers/damned/pit.h	/^		bool pitstop;					\/\/ Pitstop planned.$/;"	m	class:Pit
pitstop	drivers/olethros/pit.h	/^		bool pitstop;					\/\/ Pitstop planned.$/;"	m	class:olethros::Pit
pitstop	drivers/sparkle/pit.h	/^		bool pitstop;           \/* pitstop planned *\/$/;"	m	class:Pit
pitstopBaseTime	interfaces/raceman.h	/^	tdble pitstopBaseTime;$/;"	m	struct:RmRaceRules
pittimer	drivers/bt/pit.h	/^		float pittimer;					\/\/ Timer for pit timeouts.$/;"	m	class:Pit
pittimer	drivers/damned/pit.h	/^		float pittimer;					\/\/ Timer for pit timeouts.$/;"	m	class:Pit
pittimer	drivers/olethros/pit.h	/^		float pittimer;					\/\/ Timer for pit timeouts.$/;"	m	class:olethros::Pit
pixel_depth	windows/include/png.h	/^   png_byte pixel_depth; \/* bits per pixel (depth * channels) *\/$/;"	m	struct:png_row_info_struct
plan	drivers/berniw/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc)$/;"	f	class:Pathfinder
plan	drivers/berniw/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc)$/;"	f	class:Pathfinder
plan	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc)$/;"	f	class:Pathfinder
plan	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	drivers/human/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc)$/;"	f	class:Pathfinder
plan	drivers/human/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	drivers/inferno/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc, int currentsegid)$/;"	f	class:Pathfinder
plan	drivers/inferno/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc, int currentsegid)$/;"	f	class:Pathfinder
plan	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	drivers/tita/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc, int currentsegid)$/;"	f	class:Pathfinder
plan	drivers/tita/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plane	windows/include/plib/sg.h	/^  sgVec4 plane [ 6 ] ;$/;"	m	class:sgFrustum
plane	windows/include/plib/sg.h	/^  sgdVec4 plane [ 6 ] ;$/;"	m	class:sgdFrustum
plane	windows/include/plib/ssg.h	/^  sgVec4   plane ;$/;"	m	class:ssgHit
play	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::play()$/;"	f	class:OpenalTorcsSound
play	modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::play()$/;"	f	class:PlibTorcsSound
play	windows/include/plib/sl.h	/^  void play ( void *buffer, size_t length ) { write ( buffer, length ) ; } $/;"	f	class:slDSP
playAndManageBuffer	libs/musicplayer/OpenALMusicPlayer.cpp	/^bool OpenALMusicPlayer::playAndManageBuffer()$/;"	f	class:OpenALMusicPlayer
playMenuMusic	libs/musicplayer/musicplayer.cpp	/^static void playMenuMusic(int \/* value *\/)$/;"	f	file:
player	windows/include/plib/sl.h	/^  slPlayer *player [ SL_MAX_SAMPLES ] ;$/;"	m	class:slScheduler
playing	modules/graphic/ssggraph/TorcsSound.h	/^	bool playing, paused;$/;"	m	class:OpenalTorcsSound
playing	modules/graphic/ssggraph/TorcsSound.h	/^	bool playing; \/\/\/< Sound is playing$/;"	m	class:PlibTorcsSound
plip	modules/simu/simuv3/transmission.h	/^    tdble	plip;		\/* automatic plip... *\/$/;"	m	struct:__anon44
plot	drivers/berniw/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	drivers/berniw2/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	drivers/berniw3/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	drivers/human/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	drivers/inferno/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	drivers/lliaw/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	drivers/tita/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plotPath	drivers/berniw/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	drivers/human/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	drivers/inferno/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	drivers/tita/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	drivers/berniw/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	drivers/human/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	drivers/inferno/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	drivers/tita/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
png_FILE_p	windows/include/pngconf.h	/^typedef FILE            * png_FILE_p;$/;"	t
png_alloc_size_t	windows/include/pngconf.h	/^       typedef DWORD         png_alloc_size_t;$/;"	t
png_alloc_size_t	windows/include/pngconf.h	/^       typedef png_size_t    png_alloc_size_t;$/;"	t
png_alloc_size_t	windows/include/pngconf.h	/^     typedef unsigned long    png_alloc_size_t;$/;"	t
png_alloc_size_t	windows/include/pngconf.h	/^   typedef unsigned long png_alloc_size_t;$/;"	t
png_benign_error	windows/include/png.h	1945;"	d
png_benign_error	windows/include/png.h	1958;"	d
png_benign_error	windows/include/png.h	1961;"	d
png_byte	windows/include/pngconf.h	/^typedef unsigned char png_byte;$/;"	t
png_bytep	windows/include/pngconf.h	/^typedef png_byte                  FAR * png_bytep;$/;"	t
png_bytepp	windows/include/pngconf.h	/^typedef png_byte        FAR * FAR * png_bytepp;$/;"	t
png_charp	windows/include/pngconf.h	/^typedef char                      FAR * png_charp;$/;"	t
png_charpp	windows/include/pngconf.h	/^typedef char            FAR * FAR * png_charpp;$/;"	t
png_charppp	windows/include/pngconf.h	/^typedef char            FAR * FAR * FAR * png_charppp;$/;"	t
png_check_sig	windows/include/png.h	996;"	d
png_chunk_benign_error	windows/include/png.h	1950;"	d
png_chunk_benign_error	windows/include/png.h	1959;"	d
png_chunk_benign_error	windows/include/png.h	1962;"	d
png_color	windows/include/png.h	/^} png_color;$/;"	t	typeref:struct:png_color_struct
png_color_16	windows/include/png.h	/^} png_color_16;$/;"	t	typeref:struct:png_color_16_struct
png_color_16_struct	windows/include/png.h	/^typedef struct png_color_16_struct$/;"	s
png_color_16p	windows/include/png.h	/^typedef png_color_16 FAR * png_color_16p;$/;"	t
png_color_16pp	windows/include/png.h	/^typedef png_color_16 FAR * FAR * png_color_16pp;$/;"	t
png_color_8	windows/include/png.h	/^} png_color_8;$/;"	t	typeref:struct:png_color_8_struct
png_color_8_struct	windows/include/png.h	/^typedef struct png_color_8_struct$/;"	s
png_color_8p	windows/include/png.h	/^typedef png_color_8 FAR * png_color_8p;$/;"	t
png_color_8pp	windows/include/png.h	/^typedef png_color_8 FAR * FAR * png_color_8pp;$/;"	t
png_color_struct	windows/include/png.h	/^typedef struct png_color_struct$/;"	s
png_colorp	windows/include/png.h	/^typedef png_color FAR * png_colorp;$/;"	t
png_colorpp	windows/include/png.h	/^typedef png_color FAR * FAR * png_colorpp;$/;"	t
png_composite	windows/include/png.h	2555;"	d
png_composite	windows/include/png.h	2571;"	d
png_composite_16	windows/include/png.h	2562;"	d
png_composite_16	windows/include/png.h	2576;"	d
png_const_bytep	windows/include/pngconf.h	/^typedef PNG_CONST png_byte        FAR * png_const_bytep;$/;"	t
png_const_charp	windows/include/pngconf.h	/^typedef PNG_CONST char            FAR * png_const_charp;$/;"	t
png_const_charpp	windows/include/pngconf.h	/^typedef PNG_CONST char  FAR * FAR * png_const_charpp;$/;"	t
png_const_color_16p	windows/include/png.h	/^typedef PNG_CONST png_color_16 FAR * png_const_color_16p;$/;"	t
png_const_color_8p	windows/include/png.h	/^typedef PNG_CONST png_color_8 FAR * png_const_color_8p;$/;"	t
png_const_colorp	windows/include/png.h	/^typedef PNG_CONST png_color FAR * png_const_colorp;$/;"	t
png_const_doublep	windows/include/pngconf.h	/^typedef PNG_CONST double FAR * png_const_doublep;$/;"	t
png_const_fixed_point_p	windows/include/pngconf.h	/^typedef PNG_CONST png_fixed_point FAR * png_const_fixed_point_p;$/;"	t
png_const_infop	windows/include/png.h	/^typedef PNG_CONST png_info FAR * png_const_infop;$/;"	t
png_const_int_16p	windows/include/pngconf.h	/^typedef PNG_CONST png_int_16      FAR * png_const_int_16p;$/;"	t
png_const_int_32p	windows/include/pngconf.h	/^typedef PNG_CONST png_int_32      FAR * png_const_int_32p;$/;"	t
png_const_sPLT_entryp	windows/include/png.h	/^typedef PNG_CONST png_sPLT_entry FAR * png_const_sPLT_entryp;$/;"	t
png_const_sPLT_tp	windows/include/png.h	/^typedef PNG_CONST png_sPLT_t FAR * png_const_sPLT_tp;$/;"	t
png_const_size_tp	windows/include/pngconf.h	/^typedef PNG_CONST png_size_t      FAR * png_const_size_tp;$/;"	t
png_const_structp	windows/include/png.h	/^typedef PNG_CONST png_struct FAR * png_const_structp;$/;"	t
png_const_textp	windows/include/png.h	/^typedef PNG_CONST png_text FAR * png_const_textp;$/;"	t
png_const_timep	windows/include/png.h	/^typedef PNG_CONST png_time FAR * png_const_timep;$/;"	t
png_const_uint_16p	windows/include/pngconf.h	/^typedef PNG_CONST png_uint_16     FAR * png_const_uint_16p;$/;"	t
png_const_uint_32p	windows/include/pngconf.h	/^typedef PNG_CONST png_uint_32     FAR * png_const_uint_32p;$/;"	t
png_const_unknown_chunkp	windows/include/png.h	/^typedef PNG_CONST png_unknown_chunk FAR * png_const_unknown_chunkp;$/;"	t
png_const_voidp	windows/include/pngconf.h	/^typedef PNG_CONST void            FAR * png_const_voidp;$/;"	t
png_doublep	windows/include/pngconf.h	/^typedef double           FAR * png_doublep;$/;"	t
png_doublepp	windows/include/pngconf.h	/^typedef double          FAR * FAR * png_doublepp;$/;"	t
png_fixed_point	windows/include/pngconf.h	/^typedef png_int_32 png_fixed_point;$/;"	t
png_fixed_point_p	windows/include/pngconf.h	/^typedef png_fixed_point           FAR * png_fixed_point_p;$/;"	t
png_fixed_point_pp	windows/include/pngconf.h	/^typedef png_fixed_point FAR * FAR * png_fixed_point_pp;$/;"	t
png_get_int_32	windows/include/png.h	2628;"	d
png_get_uint_16	windows/include/png.h	2623;"	d
png_get_uint_32	windows/include/png.h	2614;"	d
png_info	windows/include/png.h	/^typedef struct png_info_def png_info;$/;"	t	typeref:struct:png_info_def
png_infop	windows/include/png.h	/^typedef png_info FAR * png_infop;$/;"	t
png_infopp	windows/include/png.h	/^typedef png_info FAR * FAR * png_infopp;$/;"	t
png_int_16	windows/include/pngconf.h	/^typedef short png_int_16;$/;"	t
png_int_16p	windows/include/pngconf.h	/^typedef png_int_16                FAR * png_int_16p;$/;"	t
png_int_16pp	windows/include/pngconf.h	/^typedef png_int_16      FAR * FAR * png_int_16pp;$/;"	t
png_int_32	windows/include/pngconf.h	/^typedef int png_int_32;$/;"	t
png_int_32p	windows/include/pngconf.h	/^typedef png_int_32                FAR * png_int_32p;$/;"	t
png_int_32pp	windows/include/pngconf.h	/^typedef png_int_32      FAR * FAR * png_int_32pp;$/;"	t
png_jmpbuf	windows/include/png.h	1029;"	d
png_jmpbuf	windows/include/png.h	1032;"	d
png_libpng_ver	windows/include/png.h	488;"	d
png_libpng_version_1_5_7	windows/include/png.h	/^typedef char* png_libpng_version_1_5_7;$/;"	t
png_row_info	windows/include/png.h	/^} png_row_info;$/;"	t	typeref:struct:png_row_info_struct
png_row_info_struct	windows/include/png.h	/^typedef struct png_row_info_struct$/;"	s
png_row_infop	windows/include/png.h	/^typedef png_row_info FAR * png_row_infop;$/;"	t
png_row_infopp	windows/include/png.h	/^typedef png_row_info FAR * FAR * png_row_infopp;$/;"	t
png_sPLT_entry	windows/include/png.h	/^} png_sPLT_entry;$/;"	t	typeref:struct:png_sPLT_entry_struct
png_sPLT_entry_struct	windows/include/png.h	/^typedef struct png_sPLT_entry_struct$/;"	s
png_sPLT_entryp	windows/include/png.h	/^typedef png_sPLT_entry FAR * png_sPLT_entryp;$/;"	t
png_sPLT_entrypp	windows/include/png.h	/^typedef png_sPLT_entry FAR * FAR * png_sPLT_entrypp;$/;"	t
png_sPLT_struct	windows/include/png.h	/^typedef struct png_sPLT_struct$/;"	s
png_sPLT_t	windows/include/png.h	/^} png_sPLT_t;$/;"	t	typeref:struct:png_sPLT_struct
png_sPLT_tp	windows/include/png.h	/^typedef png_sPLT_t FAR * png_sPLT_tp;$/;"	t
png_sPLT_tpp	windows/include/png.h	/^typedef png_sPLT_t FAR * FAR * png_sPLT_tpp;$/;"	t
png_size_t	windows/include/pngconf.h	/^typedef size_t png_size_t;$/;"	t
png_size_t	windows/include/pngconf.h	/^typedef unsigned int png_size_t;$/;"	t
png_size_tp	windows/include/pngconf.h	/^typedef png_size_t                FAR * png_size_tp;$/;"	t
png_sizeof	windows/include/pngconf.h	456;"	d
png_struct	windows/include/png.h	/^typedef struct png_struct_def png_struct;$/;"	t	typeref:struct:png_struct_def
png_structp	windows/include/png.h	/^typedef png_struct FAR * png_structp;$/;"	t
png_structpp	windows/include/png.h	/^typedef png_struct FAR * FAR * png_structpp;$/;"	t
png_text	windows/include/png.h	/^} png_text;$/;"	t	typeref:struct:png_text_struct
png_text_struct	windows/include/png.h	/^typedef struct png_text_struct$/;"	s
png_textp	windows/include/png.h	/^typedef png_text FAR * png_textp;$/;"	t
png_textpp	windows/include/png.h	/^typedef png_text FAR * FAR * png_textpp;$/;"	t
png_time	windows/include/png.h	/^} png_time;$/;"	t	typeref:struct:png_time_struct
png_time_struct	windows/include/png.h	/^typedef struct png_time_struct$/;"	s
png_timep	windows/include/png.h	/^typedef png_time FAR * png_timep;$/;"	t
png_timepp	windows/include/png.h	/^typedef png_time FAR * FAR * png_timepp;$/;"	t
png_uint_16	windows/include/pngconf.h	/^typedef unsigned short png_uint_16;$/;"	t
png_uint_16p	windows/include/pngconf.h	/^typedef png_uint_16               FAR * png_uint_16p;$/;"	t
png_uint_16pp	windows/include/pngconf.h	/^typedef png_uint_16     FAR * FAR * png_uint_16pp;$/;"	t
png_uint_32	windows/include/pngconf.h	/^typedef unsigned int png_uint_32;$/;"	t
png_uint_32p	windows/include/pngconf.h	/^typedef png_uint_32               FAR * png_uint_32p;$/;"	t
png_uint_32pp	windows/include/pngconf.h	/^typedef png_uint_32     FAR * FAR * png_uint_32pp;$/;"	t
png_unknown_chunk	windows/include/png.h	/^png_unknown_chunk;$/;"	t	typeref:struct:png_unknown_chunk_t
png_unknown_chunk_t	windows/include/png.h	/^typedef struct png_unknown_chunk_t$/;"	s
png_unknown_chunkp	windows/include/png.h	/^typedef png_unknown_chunk FAR * png_unknown_chunkp;$/;"	t
png_unknown_chunkpp	windows/include/png.h	/^typedef png_unknown_chunk FAR * FAR * png_unknown_chunkpp;$/;"	t
png_voidp	windows/include/pngconf.h	/^typedef void                      FAR * png_voidp;$/;"	t
point	tools/accc/accc.h	/^typedef struct point {$/;"	s
point	tools/trackgen/easymesh.cpp	/^struct nod node[MAX_NODES], *point;$/;"	v	typeref:struct:
point1	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DtVector point1;$/;"	m	struct:DtCollData
point2	modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DtVector point2;$/;"	m	struct:DtCollData
pointBuf	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^PointBuf pointBuf;$/;"	v
point_on_line	windows/include/plib/sg.h	/^  sgVec3 point_on_line ;$/;"	m	struct:sgLine3
point_on_line	windows/include/plib/sg.h	/^  sgdVec3 point_on_line ;$/;"	m	struct:sgdLine3
point_rotate	windows/include/plib/ssg.h	/^  int point_rotate ;$/;"	m	class:ssgCutout
point_t	tools/accc/accc.h	/^} point_t;$/;"	t	typeref:struct:point
points	libs/raceengineclient/raceresults.cpp	/^	int		points;$/;"	m	struct:__anon124	file:
poly	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  const Polytope *poly;$/;"	m	class:BBoxLeaf
polyList	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^PolyList polyList; $/;"	v
pool	libs/txml/xmlparse.c	/^  STRING_POOL pool;$/;"	m	struct:__anon116	file:
pool	modules/graphic/ssggraph/SoundInterface.h	/^		sharedSource *pool;$/;"	m	class:SharedSourcePool
poolAppend	libs/txml/xmlparse.c	/^XML_Char *poolAppend(STRING_POOL *pool, const ENCODING *enc,$/;"	f	file:
poolAppendChar	libs/txml/xmlparse.c	197;"	d	file:
poolChop	libs/txml/xmlparse.c	193;"	d	file:
poolClear	libs/txml/xmlparse.c	/^void poolClear(STRING_POOL *pool)$/;"	f	file:
poolCopyString	libs/txml/xmlparse.c	/^static const XML_Char *poolCopyString(STRING_POOL *pool, const XML_Char *s)$/;"	f	file:
poolCopyStringN	libs/txml/xmlparse.c	/^static const XML_Char *poolCopyStringN(STRING_POOL *pool, const XML_Char *s, int n)$/;"	f	file:
poolDestroy	libs/txml/xmlparse.c	/^void poolDestroy(STRING_POOL *pool)$/;"	f	file:
poolDiscard	libs/txml/xmlparse.c	195;"	d	file:
poolEnd	libs/txml/xmlparse.c	191;"	d	file:
poolFinish	libs/txml/xmlparse.c	196;"	d	file:
poolGrow	libs/txml/xmlparse.c	/^int poolGrow(STRING_POOL *pool)$/;"	f	file:
poolInit	libs/txml/xmlparse.c	/^void poolInit(STRING_POOL *pool)$/;"	f	file:
poolLastChar	libs/txml/xmlparse.c	194;"	d	file:
poolLength	libs/txml/xmlparse.c	192;"	d	file:
poolStart	libs/txml/xmlparse.c	190;"	d	file:
poolStoreString	libs/txml/xmlparse.c	/^XML_Char *poolStoreString(STRING_POOL *pool, const ENCODING *enc,$/;"	f	file:
poolindex	modules/graphic/ssggraph/TorcsSound.h	/^	int poolindex; \/\/\/< which pool the sound is assigned to$/;"	m	class:OpenalTorcsSound
port	windows/include/plib/sl.h	/^  ALport          port;         \/\/ .. we are here $/;"	m	class:slDSP
pos	interfaces/car.h	/^	int pos;$/;"	m	struct:__anon77
pos	interfaces/car.h	/^	sgVec3 pos;$/;"	m	struct:tCollisionState_
pos	interfaces/track.h	/^	tTrkLocPos pos;	\/**< Center of the pit position *\/$/;"	m	struct:TrackOwnPit
pos	interfaces/track.h	/^    t3Dd		pos;$/;"	m	struct:RoadCam
pos	libs/tgf/tgf.h	/^    tPosd pos; \/**< position *\/$/;"	m	struct:__anon97
pos	libs/tgfclient/gui.h	/^    int			min, max, len, pos;$/;"	m	struct:__anon144
pos	libs/tgfclient/tgfclient.h	/^    int		pos;		\/**< Current scroll bar position *\/$/;"	m	struct:ScrollBarInfo
pos	modules/graphic/ssggraph/grcarlight.h	/^  sgVec3 pos;$/;"	m	class:ssgVtxTableCarlight
pos	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Scalar pos;$/;"	m	class:Endpoint
pos	modules/simu/simuv2/wheel.h	/^    t3Dd   	pos;	   	\/* world related *\/$/;"	m	struct:__anon11
pos	modules/simu/simuv3/wheel.h	/^    t3Dd   	pos;	   	\/* world related *\/$/;"	m	struct:__anon33
pos	windows/include/plib/sg.h	/^  sgVec3 pos   ;$/;"	m	class:sgParticle
pos	windows/include/plib/ssgaParticleSystem.h	/^  sgVec3 pos ;$/;"	m	class:ssgaParticle
posMat	interfaces/car.h	/^	sgMat4 posMat; \/**< position matrix *\/$/;"	m	struct:__anon78
posMat	modules/simu/simuv2/carstruct.h	/^    sgMat4	posMat;$/;"	m	struct:__anon23
posMat	modules/simu/simuv3/carstruct.h	/^    sgMat4	posMat;$/;"	m	struct:__anon42
posQuat	modules/simu/simuv3/carstruct.h	/^    sgQuat      posQuat;$/;"	m	struct:__anon42
position	libs/txml/xmlparse.c	/^  POSITION position;$/;"	m	struct:__anon117	file:
position	libs/txml/xmlparse.c	284;"	d	file:
position	libs/txml/xmltok.h	/^typedef struct position {$/;"	s
position	modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 position;$/;"	m	class:CarSoundData
position	topview/Camera.hpp	/^	kmuvcl::math::vec3f position() {$/;"	f	class:kmuvcl::Camera
position	topview/topview.cpp	/^	kmuvcl::math::vec2d position;$/;"	m	struct:car_Position	file:
position	topview/topview.cpp	/^	kmuvcl::math::vec2i position;$/;"	m	struct:Particle	file:
position	windows/include/plib/ssg.h	/^  sgVec4 position ;$/;"	m	class:ssgLight
positionPtr	libs/txml/xmlparse.c	/^  const char *positionPtr;$/;"	m	struct:__anon117	file:
positionPtr	libs/txml/xmlparse.c	283;"	d	file:
postDrawCB	modules/graphic/ssggraph/grssgext.h	/^  ssgCallback postDrawCB;$/;"	m	class:ssgBranchCb
postDrawCB	windows/include/plib/ssg.h	/^  ssgCallback postDrawCB ;$/;"	m	class:ssgLeaf
postDrawCB	windows/include/plib/ssg.h	/^  ssgStateCallback postDrawCB ;$/;"	m	class:ssgState
postTravCB	windows/include/plib/ssg.h	/^  ssgTravCallback postTravCB ;$/;"	m	class:ssgEntity
pow	drivers/human/pref.h	/^    tdble	pow;		\/* power of curve command = pow(control, power) *\/$/;"	m	struct:__anon185
pow	libs/confscreens/controlconfig.h	/^	float pow;$/;"	m	struct:__anon122
powName	drivers/human/pref.h	/^    const char	*powName;	\/* Name of the pow attribute *\/$/;"	m	struct:__anon185
powName	libs/confscreens/controlconfig.h	/^	const char *powName;$/;"	m	struct:__anon122
preApplyCB	windows/include/plib/ssg.h	/^  ssgStateCallback preApplyCB ;$/;"	m	class:ssgState
preCtrl	modules/simu/simuv2/carstruct.h	/^    tCarCtrl	preCtrl;$/;"	m	struct:__anon23
preCtrl	modules/simu/simuv3/carstruct.h	/^    tCarCtrl	preCtrl;$/;"	m	struct:__anon42
preDrawCB	modules/graphic/ssggraph/grssgext.h	/^  ssgCallback  preDrawCB;$/;"	m	class:ssgBranchCb
preDrawCB	windows/include/plib/ssg.h	/^  ssgCallback  preDrawCB ;$/;"	m	class:ssgLeaf
preDrawCB	windows/include/plib/ssg.h	/^  ssgStateCallback preDrawCB  ;$/;"	m	class:ssgState
preDy	drivers/inferno2/inferno2.cpp	/^static tdble preDy[10]     = {0.0f};$/;"	v	file:
preDynGC	modules/simu/simuv2/carstruct.h	/^    tDynPt	preDynGC;	\/* previous one *\/$/;"	m	struct:__anon23
preDynGC	modules/simu/simuv3/carstruct.h	/^    tDynPt	preDynGC;	\/* previous one *\/$/;"	m	struct:__anon42
preFn	modules/simu/simuv2/wheel.h	/^    tdble	preFn, preFt;$/;"	m	struct:__anon11
preFn	modules/simu/simuv3/wheel.h	/^    tdble	preFn, preFt;$/;"	m	struct:__anon33
preFt	modules/simu/simuv2/wheel.h	/^    tdble	preFn, preFt;$/;"	m	struct:__anon11
preFt	modules/simu/simuv3/wheel.h	/^    tdble	preFn, preFt;$/;"	m	struct:__anon33
preScene	modules/graphic/ssggraph/grscene.cpp	/^int preScene(ssgEntity *e)$/;"	f
preTravCB	windows/include/plib/ssg.h	/^  ssgTravCallback  preTravCB ;$/;"	m	class:ssgEntity
pre_axle	modules/graphic/ssggraph/CarSoundData.h	/^	float pre_axle; \/\/\/< axle related$/;"	m	class:CarSoundData
pre_dist_l	drivers/human/human.cpp	/^static double pre_dist_l;$/;"	v	file:
pre_dist_r	drivers/human/human.cpp	/^static double pre_dist_r;$/;"	v	file:
pre_rc_sig	drivers/human/human.cpp	/^static bool pre_rc_sig;$/;"	v	file:
pre_speed	drivers/human/human.cpp	/^double pre_speed;$/;"	v
pre_v	drivers/human/human.cpp	/^	v3d pre_v;$/;"	m	struct:__anon183	file:
pred	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Endpoint *pred;$/;"	m	class:Endpoint
predefinedEntityName	libs/txml/xmltok.h	/^  int (*predefinedEntityName)(const ENCODING *, const char *, const char *);$/;"	m	struct:encoding
predefinedEntityName	libs/txml/xmltok_impl.c	/^int PREFIX(predefinedEntityName)(const ENCODING *enc, const char *ptr, const char *end)$/;"	f	file:
predictedAccel	drivers/olethros/learn.cpp	/^float SegLearn::predictedAccel (tTrackSeg* seg)$/;"	f	class:SegLearn
predictedError	drivers/olethros/learn.cpp	/^float SegLearn::predictedError (tCarElt* car)$/;"	f	class:SegLearn
preempt_mode	windows/include/plib/sl.h	/^  slPreemptMode  preempt_mode    ;$/;"	m	class:slPlayer
preextrapolate	windows/include/vorbis/codec.h	/^  int  preextrapolate;$/;"	m	struct:vorbis_dsp_state
prepareLocalDir	windows/main.cpp	/^static void prepareLocalDir()$/;"	f	file:
prepareTrack	drivers/olethros/driver.cpp	/^    void Driver::prepareTrack()$/;"	f	class:olethros::Driver
prependNode	windows/include/plib/ul.h	/^  void prependNode ( void *data ) { insertNode ( data, 0 ) ; }$/;"	f	class:ulLinkedList
prespinVel	modules/simu/simuv2/wheel.h	/^    tdble  	prespinVel;   	\/* spin velocity *\/$/;"	m	struct:__anon11
prespinVel	modules/simu/simuv3/wheel.h	/^    tdble  	prespinVel;   	\/* spin velocity *\/$/;"	m	struct:__anon33
pressure	modules/simu/simuv2/brake.h	/^    tdble	pressure;$/;"	m	struct:__anon7
pressure	modules/simu/simuv2/engine.h	/^	tdble       pressure;$/;"	m	struct:__anon19
pressure	modules/simu/simuv2/wheel.h	/^    tdble	pressure;	\/* tire pressure *\/$/;"	m	struct:__anon11
pressure	modules/simu/simuv3/brake.h	/^    tdble	pressure;$/;"	m	struct:__anon29
pressure	modules/simu/simuv3/engine.h	/^	tdble       pressure;$/;"	m	struct:__anon38
pressure	modules/simu/simuv3/wheel.h	/^    tdble	pressure;	\/* tire pressure *\/$/;"	m	struct:__anon33
prev	interfaces/track.h	/^    struct trackSeg *prev;	\/**< Previous segment *\/$/;"	m	struct:trackSeg	typeref:struct:trackSeg::trackSeg
prev	libs/confscreens/driverconfig.cpp	/^    struct tCarInfo	*prev;$/;"	m	struct:tCarInfo	typeref:struct:tCarInfo::tCarInfo	file:
prev	libs/confscreens/driverconfig.cpp	/^    struct tCatInfo	*prev;$/;"	m	struct:tCatInfo	typeref:struct:tCatInfo::tCatInfo	file:
prev	libs/learning/List.h	/^	struct ListItem* prev; \/\/\/< previous item$/;"	m	struct:ListItem	typeref:struct:ListItem::ListItem
prev	libs/tgf/tgf.h	/^	struct FList *prev;		\/**< Previous entry *\/$/;"	m	struct:FList	typeref:struct:FList::FList
prev	libs/tgfclient/gui.h	/^    struct GfuiListElement	*prev;$/;"	m	struct:GfuiListElement	typeref:struct:GfuiListElement::GfuiListElement
prev	libs/tgfclient/gui.h	/^    struct GfuiObject	*prev;$/;"	m	struct:GfuiObject	typeref:struct:GfuiObject::GfuiObject
prev	modules/graphic/ssggraph/grutil.cpp	/^	struct stlist   *prev;$/;"	m	struct:stlist	typeref:struct:stlist::stlist	file:
prev	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  Transform prev;$/;"	m	class:Object
prevHandle	libs/confscreens/controlconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHandle	libs/confscreens/driverconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHandle	libs/confscreens/openglconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHandle	libs/confscreens/simuconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHandle	libs/confscreens/soundconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHandle	libs/racescreens/carsetupscreen.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHdle	libs/racescreens/results.cpp	/^	void *prevHdle;$/;"	m	struct:__anon100	file:
prevLeftSteer	drivers/human/human.h	/^	tdble	prevLeftSteer;$/;"	m	struct:HumanContext
prevRightSteer	drivers/human/human.h	/^	tdble	prevRightSteer;$/;"	m	struct:HumanContext
prevScreen	libs/racescreens/racescreens.h	/^	void *prevScreen;		\/**< Link to previous screen *\/$/;"	m	struct:__anon104
prevScreen	libs/racescreens/racescreens.h	/^	void *prevScreen;		\/**< Race manager screen to go back *\/$/;"	m	struct:__anon101
prevScreen	libs/racescreens/racescreens.h	/^	void *prevScreen;		\/**< Race manager screen to go back *\/$/;"	m	struct:__anon103
prevScreen	libs/racescreens/racescreens.h	/^	void *prevScreen;	\/**< Race manager screen to go back *\/$/;"	m	struct:__anon102
prevStartRace	libs/racescreens/miscscreens.cpp	/^static tStartRaceCall	nextStartRace, prevStartRace;$/;"	v	file:
prevTrkPos	interfaces/raceman.h	/^    tTrkLocPos	prevTrkPos;$/;"	m	struct:__anon72
prevVal	modules/graphic/ssggraph/grcar.h	/^    tdble		prevVal;$/;"	m	struct:__anon4
prev_accel	drivers/olethros/learn.h	/^	float prev_accel; \/\/\/< previous acceleration$/;"	m	class:olethros::SegLearn
prev_base	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  VertexBase prev_base;$/;"	m	class:Complex
prev_closest_points	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool prev_closest_points(const Object& a, const Object& b, $/;"	f
prev_gear	modules/graphic/ssggraph/CarSoundData.h	/^	int prev_gear;$/;"	m	class:CarSoundData
prev_mode	drivers/human/human.cpp	/^static short prev_mode = 0;$/;"	v	file:
prev_pitchenv	windows/include/plib/sl.h	/^  unsigned char prev_pitchenv  ;$/;"	m	class:slEnvelope
prev_pos	drivers/human/human.cpp	/^v2d prev_pos;$/;"	v
prev_quantum	drivers/olethros/learn.h	/^	int prev_quantum; \/\/\/< id of the previous quantum$/;"	m	class:olethros::SegLearn
prev_steer	drivers/olethros/driver.h	/^	float prev_steer; \/\/\/< for steering filter$/;"	m	class:olethros::Driver
prev_time	drivers/human/human.cpp	/^static long prev_time;$/;"	v	file:
prev_time	drivers/olethros/learn.h	/^	double prev_time; \/\/\/< time of previous friction estimate$/;"	m	class:olethros::SegLearn
prev_time	libs/raceengineclient/raceengine.cpp	/^long prev_time;$/;"	v
prev_toleft	drivers/olethros/driver.h	/^	float prev_toleft; \/\/\/< previous left margin$/;"	m	class:olethros::Driver
prev_toright	drivers/olethros/driver.h	/^	float prev_toright; \/\/\/< previous right margin$/;"	m	class:olethros::Driver
prev_val	libs/raceengineclient/raceengine.cpp	/^struct timeval prev_val;$/;"	v	typeref:struct:timeval
previous_time	drivers/olethros/learn.h	/^	double previous_time; \/\/\/< previous time$/;"	m	class:olethros::SegLearn
previous_value	windows/include/plib/sl.h	/^  float         previous_value ;$/;"	m	class:slEnvelope
prevsegid	drivers/olethros/learn.h	/^	int prevsegid; \/\/\/< id of previous segment$/;"	m	class:olethros::SegLearn
prevtype	drivers/bt/learn.h	/^		int prevtype;$/;"	m	class:SegLearn
prevtype	drivers/damned/learn.h	/^		int prevtype;$/;"	m	class:SegLearn
prevtype	drivers/olethros/learn.h	/^	int prevtype;  \/\/\/< type of previous segment$/;"	m	class:olethros::SegLearn
print	modules/graphic/ssggraph/grvertexarray.h	/^  virtual void print ( FILE *fd = stderr, char *indent = "", int how_much = 2 ) { ssgVtxArray::print(fd,indent,how_much);}$/;"	f	class:ssgGrVtxArray
print	windows/include/plib/sl.h	/^  void print ( FILE *fd ) const$/;"	f	class:slSample
printOb	tools/accc/ac3dload.cpp	/^int printOb(ob_t *ob)$/;"	f
printProfile	libs/tgf/profiler.cpp	/^void Profiler::printProfile() {$/;"	f	class:Profiler
printTabs	libs/txml/gennmtab.c	/^void printTabs(char *tab)$/;"	f
printTabs	libs/txml/gennmtab/gennmtab.c	/^void printTabs(char *tab)$/;"	f
print_mat4	tools/texmapper/maintexmapper.cpp	/^void print_mat4(char *title, sgMat4 m)$/;"	f
prio	libs/tgf/tgf.h	/^    int			prio;		\/**< priority if needed *\/$/;"	m	struct:ModInfo
prio	modules/graphic/ssggraph/grcam.cpp	/^    double	prio;$/;"	m	struct:__anon3	file:
priority	windows/include/plib/sl.h	/^  int            priority        ;$/;"	m	class:slPlayer
priv	interfaces/car.h	/^	tPrivCar priv; \/**< private *\/$/;"	m	struct:CarElt
proceed	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  void proceed() { prev_base = base; }$/;"	f	class:Complex
proceed	modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^void Object::proceed() {$/;"	f	class:Object
processXmlDecl	libs/txml/xmlparse.c	/^processXmlDecl(XML_Parser parser, int isGeneralTextEntity,$/;"	f	file:
processingInstructionHandler	libs/txml/xmlparse.c	/^  XML_ProcessingInstructionHandler processingInstructionHandler;$/;"	m	struct:__anon117	file:
processingInstructionHandler	libs/txml/xmlparse.c	264;"	d	file:
processor	libs/txml/xmlparse.c	/^  Processor *processor;$/;"	m	struct:__anon117	file:
processor	libs/txml/xmlparse.c	279;"	d	file:
profiler	libs/tgf/profiler.cpp	/^Profiler * Profiler::profiler = NULL;$/;"	m	class:Profiler	file:
profiler	libs/tgf/tgf.h	/^  static Profiler * profiler;$/;"	m	class:Profiler
program	topview/topview.cpp	/^GLuint program; \/\/ 쉐이더 프로그램 객체의 레퍼런스 값$/;"	v
prolog0	libs/txml/xmlrole.c	/^  prolog0, prolog1, prolog2,$/;"	v	file:
prolog0	libs/txml/xmlrole.c	/^int prolog0(PROLOG_STATE *state,$/;"	f	file:
prolog1	libs/txml/xmlrole.c	/^  prolog0, prolog1, prolog2,$/;"	v	file:
prolog1	libs/txml/xmlrole.c	/^int prolog1(PROLOG_STATE *state,$/;"	f	file:
prolog2	libs/txml/xmlrole.c	/^  prolog0, prolog1, prolog2,$/;"	v	file:
prolog2	libs/txml/xmlrole.c	/^int prolog2(PROLOG_STATE *state,$/;"	f	file:
prologInitProcessor	libs/txml/xmlparse.c	/^prologInitProcessor(XML_Parser parser,$/;"	f	file:
prologInitProcessor	libs/txml/xmlparse.c	/^static Processor prologInitProcessor;$/;"	v	file:
prologProcessor	libs/txml/xmlparse.c	/^prologProcessor(XML_Parser parser,$/;"	f	file:
prologProcessor	libs/txml/xmlparse.c	/^static Processor prologProcessor;$/;"	v	file:
prologState	libs/txml/xmlparse.c	/^  PROLOG_STATE prologState;$/;"	m	struct:__anon117	file:
prologState	libs/txml/xmlparse.c	278;"	d	file:
prologTok	libs/txml/xmltok_impl.c	/^int PREFIX(prologTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
prolog_state	libs/txml/xmlrole.h	/^typedef struct prolog_state {$/;"	s
proper	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline bool proper(int s) {  $/;"	f
protocolEncodingName	libs/txml/xmlparse.c	/^  const XML_Char *protocolEncodingName;$/;"	m	struct:__anon117	file:
protocolEncodingName	libs/txml/xmlparse.c	277;"	d	file:
proxList	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^ProxList proxList;$/;"	v
proximityThld	modules/graphic/ssggraph/grcam.cpp	/^    tdble  proximityThld;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
ps	drivers/berniw/pathfinder.h	/^		PathSeg* ps;			\/* array with the plan *\/$/;"	m	class:Pathfinder
ps	drivers/berniw2/pathfinder.h	/^		PathSeg* ps;			\/* array with the plan *\/$/;"	m	class:Pathfinder
ps	drivers/berniw3/pathfinder.h	/^		PathSeg* ps;			\/* array with the plan *\/$/;"	m	class:Pathfinder
ps	drivers/human/pathfinder.h	/^		PathSeg* ps;			\/* array with the plan *\/$/;"	m	class:Pathfinder
ps	drivers/inferno/pathfinder.h	/^		pseg* ps;				\/\/ Dynamic path, ringbuffer.$/;"	m	class:PathSeg
ps	drivers/lliaw/pathfinder.h	/^		pseg* ps;				\/\/ Dynamic path, ringbuffer.$/;"	m	class:PathSeg
ps	drivers/tita/pathfinder.h	/^		pseg* ps;				\/\/ Dynamic path, ringbuffer.$/;"	m	class:PathSeg
ps	libs/learning/ann_policy.h	/^	real* ps; \/\/\/< Previous state vector \\deprecated$/;"	m	class:ANN_Policy
ps	libs/learning/policy.h	/^	int ps; \/\/\/< previous state$/;"	m	class:DiscretePolicy
psdyn	drivers/inferno/pathfinder.h	/^		PathSeg* psdyn;					\/\/ Dynamic trajectory.$/;"	m	class:Pathfinder
psdyn	drivers/lliaw/pathfinder.h	/^		PathSeg* psdyn;					\/\/ Dynamic trajectory.$/;"	m	class:Pathfinder
psdyn	drivers/tita/pathfinder.h	/^		PathSeg* psdyn;					\/\/ Dynamic trajectory.$/;"	m	class:Pathfinder
pseg	drivers/inferno/pathfinder.h	/^		class pseg {$/;"	c	class:PathSeg
pseg	drivers/lliaw/pathfinder.h	/^		class pseg {$/;"	c	class:PathSeg
pseg	drivers/tita/pathfinder.h	/^		class pseg {$/;"	c	class:PathSeg
psopt	drivers/inferno/pathfinder.cpp	/^PathSegOpt* Pathfinder::psopt = NULL;$/;"	m	class:Pathfinder	file:
psopt	drivers/inferno/pathfinder.h	/^		static PathSegOpt* psopt;		\/\/ Precomuted path.$/;"	m	class:Pathfinder
psopt	drivers/lliaw/pathfinder.cpp	/^PathSegOpt* Pathfinder::psopt = NULL;$/;"	m	class:Pathfinder	file:
psopt	drivers/lliaw/pathfinder.h	/^		static PathSegOpt* psopt;		\/\/ Precomuted path.$/;"	m	class:Pathfinder
psopt	drivers/tita/pathfinder.cpp	/^PathSegOpt* Pathfinder::psopt = NULL;$/;"	m	class:Pathfinder	file:
psopt	drivers/tita/pathfinder.h	/^		static PathSegOpt* psopt;		\/\/ Precomuted path.$/;"	m	class:Pathfinder
pspit	drivers/inferno/pathfinder.h	/^		PathSegPit* pspit;				\/\/ Pit path.$/;"	m	class:Pathfinder
pspit	drivers/lliaw/pathfinder.h	/^		PathSegPit* pspit;				\/\/ Pit path.$/;"	m	class:Pathfinder
pspit	drivers/tita/pathfinder.h	/^		PathSegPit* pspit;				\/\/ Pit path.$/;"	m	class:Pathfinder
ptr	libs/txml/xmlparse.c	/^  XML_Char *ptr;$/;"	m	struct:__anon112	file:
ptr	windows/include/ogg/ogg.h	/^  unsigned char *ptr;$/;"	m	struct:__anon50
ptr	windows/include/plib/sl.h	/^  char           *ptr  ;          \/\/ ptr to data from write()$/;"	m	class:slDSP
ptr	windows/include/vorbis/codec.h	/^  void *ptr;$/;"	m	struct:alloc_chain
ptr_accel	linux/shared_memory.h	/^int* ptr_accel;$/;"	v
ptr_brake	linux/shared_memory.h	/^int* ptr_brake;$/;"	v
pub	interfaces/car.h	/^	tPublicCar pub; \/**< public *\/$/;"	m	struct:CarElt
publicId	libs/txml/xmlparse.c	/^  const XML_Char *publicId;$/;"	m	struct:__anon111	file:
pursuit	libs/learning/policy.h	/^	bool pursuit; \/\/\/< pursuit option$/;"	m	class:DiscretePolicy
pushed	libs/tgfclient/gui.h	/^    unsigned char	*pushed;$/;"	m	struct:__anon142
px	modules/graphic/ssggraph/grcar.h	/^    tdble               px;$/;"	m	struct:__anon5
py	modules/graphic/ssggraph/grcar.h	/^    tdble               py;$/;"	m	struct:__anon5
q	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static Point q[4];    \/\/ support points of object B in local coordinates $/;"	v	file:
qh_version	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^char qh_version[] = "SOLID 2.0";$/;"	v
quality	misc/png2jpg/png2jpg.c	/^static int	quality;$/;"	v	file:
queryAcceleration	drivers/berniw/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	drivers/berniw2/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	drivers/berniw3/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	drivers/human/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	drivers/inferno/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	drivers/lliaw/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	drivers/tita/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAngleToTrack	drivers/berniw/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	drivers/berniw2/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	drivers/berniw3/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	drivers/human/human.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	drivers/inferno/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	drivers/lliaw/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	drivers/tita/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
querySlipSpeed	drivers/berniw/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	drivers/berniw2/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	drivers/berniw3/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	drivers/human/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	drivers/inferno/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	drivers/lliaw/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	drivers/tita/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
r	drivers/berniw/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
r	drivers/berniw2/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
r	drivers/berniw3/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
r	drivers/human/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
r	drivers/inferno/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
r	drivers/inferno/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
r	drivers/lliaw/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
r	drivers/lliaw/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
r	drivers/olethros/geometry.h	/^	float r; \/\/ radius$/;"	m	class:ParametricSphere
r	drivers/tita/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
r	drivers/tita/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
r	libs/learning/policy.h	/^	real r; \/\/\/< reward$/;"	m	class:DiscretePolicy
r	libs/tgfclient/gui.h	/^			struct { float r, g, b, a; };$/;"	m	struct:ForeGroundColor::__anon138::__anon139
r	tools/accc/accc.h	/^  double r;$/;"	m	struct:col
r	tools/trackgen/easymesh.cpp	/^	double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
r	tools/trackgen/raceline.cpp	/^	vec2d r;	\/\/ right track border$/;"	m	struct:RacelineSegment	file:
r	topview/topview.cpp	/^	float r;$/;"	m	struct:Color	file:
race	interfaces/car.h	/^	tCarRaceInfo race; \/**< public *\/$/;"	m	struct:CarElt
raceCmd	interfaces/car.h	/^	int raceCmd; \/**< command issued by the driver *\/$/;"	m	struct:__anon81
raceEngineInfo	interfaces/raceman.h	/^    tRaceEngineInfo	raceEngineInfo;$/;"	m	struct:RmInfo
raceInfo	interfaces/raceman.h	/^    tRaceAdmInfo	raceInfo;$/;"	m	struct:Situation
raceInfo	interfaces/track.h	/^    unsigned int raceInfo;	\/**< Type of segment regarding the race:$/;"	m	struct:trackSeg
raceMsg	interfaces/raceman.h	/^    char	*raceMsg;$/;"	m	struct:__anon72
raceName	interfaces/raceman.h	/^    const char *raceName;$/;"	m	struct:__anon73
raceNumber	interfaces/car.h	/^	int raceNumber; \/**< Car's race number *\/$/;"	m	struct:__anon76
raceRules	interfaces/raceman.h	/^	tRmRaceRules raceRules;$/;"	m	struct:RmInfo
raceType	drivers/berniw/trackdesc.h	/^		unsigned int raceType;	\/* race type (eg. pitlane, speedlimit, ...) *\/$/;"	m	class:TrackSegment
raceType	drivers/berniw2/trackdesc.h	/^		unsigned int raceType;	\/* race type (eg. pitlane, speedlimit, ...) *\/$/;"	m	class:TrackSegment
raceType	drivers/berniw3/trackdesc.h	/^		unsigned int raceType;	\/* race type (eg. pitlane, speedlimit, ...) *\/$/;"	m	class:TrackSegment
raceType	drivers/human/trackdesc.h	/^		unsigned int raceType;	\/* race type (eg. pitlane, speedlimit, ...) *\/$/;"	m	class:TrackSegment
race_type	drivers/olethros/driver.h	/^	int race_type;$/;"	m	class:olethros::Driver
raced_dist	drivers/human/mycar.h	/^		double raced_dist;$/;"	m	class:MyCar
raceline	tools/trackgen/maintrackgen.cpp	/^int raceline = 0;$/;"	v
racemanMenuHdle	libs/raceengineclient/racemanmenu.cpp	/^static void *racemanMenuHdle = NULL;$/;"	v	file:
racenumber	libs/confscreens/driverconfig.cpp	/^    int		racenumber;$/;"	m	struct:PlayerInfo	file:
radius	drivers/berniw/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	drivers/berniw/pathfinder.h	/^		tdble radius;	\/* radius of current segment *\/$/;"	m	class:PathSeg
radius	drivers/berniw/trackdesc.h	/^		tdble radius;			\/* radius *\/$/;"	m	class:TrackSegment
radius	drivers/berniw2/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	drivers/berniw2/pathfinder.h	/^		tdble radius;	\/* radius of current segment *\/$/;"	m	class:PathSeg
radius	drivers/berniw2/trackdesc.h	/^		tdble radius;			\/* radius *\/$/;"	m	class:TrackSegment
radius	drivers/berniw3/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	drivers/berniw3/pathfinder.h	/^		tdble radius;	\/* radius of current segment *\/$/;"	m	class:PathSeg
radius	drivers/berniw3/trackdesc.h	/^		tdble radius;			\/* radius *\/$/;"	m	class:TrackSegment
radius	drivers/bt/driver.h	/^		float *radius;$/;"	m	class:Driver
radius	drivers/bt/learn.h	/^		float *radius;$/;"	m	class:SegLearn
radius	drivers/damned/driver.h	/^		float *radius;$/;"	m	class:Driver
radius	drivers/damned/learn.h	/^		float *radius;$/;"	m	class:SegLearn
radius	drivers/human/human.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	drivers/human/pathfinder.h	/^		tdble radius;	\/* radius of current segment *\/$/;"	m	class:PathSeg
radius	drivers/human/trackdesc.h	/^		tdble radius;			\/* radius *\/$/;"	m	class:TrackSegment
radius	drivers/inferno/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	drivers/inferno/pathfinder.h	/^				tdble radius;	\/\/ Radius of current segment.$/;"	m	class:PathSeg::pseg
radius	drivers/inferno/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment
radius	drivers/inferno/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment2D
radius	drivers/lliaw/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	drivers/lliaw/pathfinder.h	/^				tdble radius;	\/\/ Radius of current segment.$/;"	m	class:PathSeg::pseg
radius	drivers/lliaw/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment
radius	drivers/lliaw/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment2D
radius	drivers/olethros/driver.h	/^	float *radius; \/\/\/< segment radi$/;"	m	class:olethros::Driver
radius	drivers/olethros/learn.h	/^	float *radius; \/\/\/< Array holding the radi of segments$/;"	m	class:olethros::SegLearn
radius	drivers/tita/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	drivers/tita/pathfinder.h	/^				tdble radius;	\/\/ Radius of current segment.$/;"	m	class:PathSeg::pseg
radius	drivers/tita/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment
radius	drivers/tita/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment2D
radius	interfaces/track.h	/^    tdble radius;		\/**< Radius in meters of the middle of the track (>0) *\/$/;"	m	struct:trackSeg
radius	modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	/^  Scalar radius;$/;"	m	class:Cylinder
radius	modules/simu/simuv2/SOLID-2.0/src/Sphere.h	/^  Scalar radius;$/;"	m	class:Sphere
radius	modules/simu/simuv2/brake.h	/^    tdble	radius;$/;"	m	struct:__anon7
radius	modules/simu/simuv2/wheel.h	/^    tdble  	radius;$/;"	m	struct:__anon11
radius	modules/simu/simuv3/brake.h	/^    tdble	radius;$/;"	m	struct:__anon29
radius	modules/simu/simuv3/wheel.h	/^    tdble  	radius;$/;"	m	struct:__anon33
radius	windows/include/plib/sg.h	/^  SGDfloat radius ;$/;"	m	class:sgdSphere
radius	windows/include/plib/sg.h	/^  SGfloat radius ;$/;"	m	class:sgSphere
radius	windows/include/plib/ssgaFire.h	/^  float radius       ;$/;"	m	class:ssgaFire
radiusl	interfaces/track.h	/^    tdble radiusl;		\/**< Radius in meters of the left side of the track (>0) *\/$/;"	m	struct:trackSeg
radiusr	interfaces/track.h	/^    tdble radiusr;		\/**< Radius in meters of the right side of the track (>0) *\/$/;"	m	struct:trackSeg
rads	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar rads(Scalar x) { return x * RADS_PER_DEG; }$/;"	f
rads	modules/simu/simuv2/engine.h	/^    tdble		rads;   \/* revs in rad\/s ... *\/$/;"	m	struct:__anon19
rads	modules/simu/simuv2/engine.h	/^    tdble rads;$/;"	m	struct:__anon17
rads	modules/simu/simuv3/engine.h	/^    tdble		rads;   \/* revs in rad\/s ... *\/$/;"	m	struct:__anon38
rads	modules/simu/simuv3/engine.h	/^    tdble rads;$/;"	m	struct:__anon36
random	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion Quaternion::random() {$/;"	f	class:Quaternion
random	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector Vector::random() {$/;"	f	class:Vector
random	tools/trackgen/objects.cpp	/^	int			random;$/;"	m	struct:objdef	file:
range	libs/txml/gennmtab.c	/^struct range {$/;"	s	file:
range	libs/txml/gennmtab/gennmtab.c	/^struct range {$/;"	s	file:
rate	libs/tgfclient/fg_gm.cpp	/^	short				rate;				\/\/ Display refresh rate.$/;"	m	struct:tagSFG_Display	file:
rate	windows/include/plib/sl.h	/^  int    rate   ;$/;"	m	class:slSample
rate	windows/include/plib/sl.h	/^  int rate ;$/;"	m	class:slDSP
rate	windows/include/vorbis/codec.h	/^  long rate;$/;"	m	struct:vorbis_info
rateInHz	libs/musicplayer/OggSoundStream.h	/^		int				rateInHz;$/;"	m	class:OggSoundStream
ratio	modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::ratio;$/;"	m	class:cGrTrackMap	file:
ratio	modules/graphic/ssggraph/grtrackmap.h	/^		static float ratio;$/;"	m	class:cGrTrackMap
ratio	modules/simu/simuv2/differential.h	/^    tdble	ratio;$/;"	m	struct:__anon10
ratio	modules/simu/simuv3/differential.h	/^    tdble	ratio;$/;"	m	struct:__anon32
rawName	libs/txml/xmlparse.c	/^  const char *rawName;$/;"	m	struct:tag	file:
rawNameLength	libs/txml/xmlparse.c	/^  int rawNameLength;$/;"	m	struct:tag	file:
rawPrev	modules/graphic/ssggraph/grcar.h	/^    tdble		rawPrev;$/;"	m	struct:__anon4
rawSetNum	windows/include/plib/ssg.h	/^  void rawSetNum ( unsigned int n ) \/* Better know what you're doing!! *\/$/;"	f	class:ssgSimpleList
rawSetNumVertices	windows/include/plib/ssg.h	/^  void rawSetNumVertices ( unsigned int n ) { vertices -> rawSetNum ( n ) ; }$/;"	f	class:ssgVtxTable
raw_add	windows/include/plib/ssg.h	/^  void raw_add ( char *thing )$/;"	f	class:ssgSimpleList
raw_add	windows/include/plib/ssg.h	/^  void raw_add ( char *things, unsigned int n )$/;"	f	class:ssgSimpleList
raw_get	windows/include/plib/ssg.h	/^  char *raw_get ( unsigned int n )$/;"	f	class:ssgSimpleList
raw_set	windows/include/plib/ssg.h	/^  void raw_set ( char *thing, unsigned int n  )$/;"	f	class:ssgSimpleList
rawb	libs/confscreens/controlconfig.cpp	/^static int rawb[NUM_JOY] = {0};$/;"	v	file:
rawb	libs/confscreens/joystickconfig.cpp	/^static int rawb[NUM_JOY] = {0};$/;"	v	file:
rbDrive	interfaces/robot.h	/^	tfRbDrive	 rbDrive;$/;"	m	struct:RobotItf
rbEndRace	interfaces/robot.h	/^	tfRbEndRace  rbEndRace;$/;"	m	struct:RobotItf
rbNewRace	interfaces/robot.h	/^	tfRbNewRace  rbNewRace;$/;"	m	struct:RobotItf
rbNewTrack	interfaces/robot.h	/^	tfRbNewTrack rbNewTrack;$/;"	m	struct:RobotItf
rbPitCmd	interfaces/robot.h	/^	tfRbPitCmd	 rbPitCmd;$/;"	m	struct:RobotItf
rbShutdown	interfaces/robot.h	/^	tfRbShutdown rbShutdown;$/;"	m	struct:RobotItf
rbf	libs/learning/ANN.h	/^	RBFConnection* rbf; \/\/\/< rbf connections (if any)$/;"	m	struct:Layer_
reAddKeys	libs/raceengineclient/racegl.cpp	/^static void reAddKeys(void) {$/;"	f	file:
reAddResKeys	libs/raceengineclient/racegl.cpp	/^static void reAddResKeys(void) {$/;"	f	file:
reBigMsgId	libs/raceengineclient/racegl.cpp	/^static int reBigMsgId;$/;"	v	file:
reCapture	libs/raceengineclient/raceengine.cpp	/^static void reCapture(void) {$/;"	f	file:
reColor	libs/raceengineclient/racegl.cpp	/^static float *reColor[] = { white, red };$/;"	v	file:
reConfigBack	libs/raceengineclient/racemanmenu.cpp	/^reConfigBack(void)$/;"	f	file:
reConfigBackHookInit	libs/raceengineclient/racemanmenu.cpp	/^reConfigBackHookInit(void)$/;"	f	file:
reConfigHookInit	libs/raceengineclient/racemanmenu.cpp	/^reConfigHookInit(void)$/;"	f	file:
reConfigRunState	libs/raceengineclient/racemanmenu.cpp	/^reConfigRunState(void)$/;"	f	file:
reConfigureMenu	libs/raceengineclient/racemanmenu.cpp	/^reConfigureMenu(void * \/* dummy *\/)$/;"	f	file:
reContDisplay	libs/raceengineclient/racegl.cpp	/^static void reContDisplay(void) {$/;"	f	file:
reCurLine	libs/raceengineclient/racegl.cpp	/^static int reCurLine;$/;"	v	file:
reDisplay	libs/raceengineclient/racegl.cpp	/^static void reDisplay(void) {$/;"	f	file:
reDumpTrack	libs/raceengineclient/raceinit.cpp	/^reDumpTrack(tTrack *track, int verbose)$/;"	f	file:
reEventModList	libs/raceengineclient/raceinit.cpp	/^static tModList *reEventModList = 0;$/;"	v	file:
reHookActivate	libs/raceengineclient/racegl.cpp	/^static void reHookActivate(void * \/* dummy *\/) {$/;"	f	file:
reHookHandle	libs/raceengineclient/racegl.cpp	/^static void *reHookHandle = 0;$/;"	v	file:
reLoadMenu	libs/raceengineclient/racemanmenu.cpp	/^reLoadMenu(void *prevHandle)$/;"	f	file:
reMovieCapture	libs/raceengineclient/racegl.cpp	/^static void reMovieCapture(void * \/* dummy *\/) {$/;"	f	file:
reMsgId	libs/raceengineclient/racegl.cpp	/^static int reMsgId;$/;"	v	file:
rePauseId	libs/raceengineclient/racegl.cpp	/^static int rePauseId;$/;"	v	file:
reRaceRealStart	libs/raceengineclient/racemain.cpp	/^static int reRaceRealStart(void)$/;"	f	file:
reRegisterRaceman	libs/raceengineclient/raceinit.cpp	/^reRegisterRaceman(tFList *racemanCur)$/;"	f	file:
reResCont	libs/raceengineclient/racegl.cpp	/^static void reResCont(void * \/* dummy *\/) {$/;"	f	file:
reResMsg	libs/raceengineclient/racegl.cpp	/^static char *reResMsg[LINES];$/;"	v	file:
reResMsgClr	libs/raceengineclient/racegl.cpp	/^static int reResMsgClr[LINES];$/;"	v	file:
reResMsgId	libs/raceengineclient/racegl.cpp	/^static int reResMsgId[LINES];$/;"	v	file:
reResScreenActivate	libs/raceengineclient/racegl.cpp	/^static void reResScreenActivate(void * \/* dummy *\/) {$/;"	f	file:
reResScreenHdle	libs/raceengineclient/racegl.cpp	/^static void *reResScreenHdle = 0;$/;"	v	file:
reResScreenShutdown	libs/raceengineclient/racegl.cpp	/^static void reResScreenShutdown(void * \/* dummy *\/) {$/;"	f	file:
reResTitleId	libs/raceengineclient/racegl.cpp	/^static int reResTitleId;$/;"	v	file:
reScreenActivate	libs/raceengineclient/racegl.cpp	/^static void reScreenActivate(void * \/* dummy *\/) {$/;"	f	file:
reScreenHandle	libs/raceengineclient/racegl.cpp	/^static void *reScreenHandle = 0;$/;"	v	file:
reSelectLoadFile	libs/raceengineclient/racemanmenu.cpp	/^reSelectLoadFile(char *filename)$/;"	f	file:
reSelectRaceman	libs/raceengineclient/raceinit.cpp	/^static void reSelectRaceman(void *params)$/;"	f	file:
reSkipPreStart	libs/raceengineclient/racegl.cpp	/^static void reSkipPreStart(void * \/* dummy *\/) {$/;"	f	file:
reSortRacemanList	libs/raceengineclient/raceinit.cpp	/^reSortRacemanList(tFList **racemanList)$/;"	f	file:
reStateManage	libs/raceengineclient/racemanmenu.cpp	/^reStateManage(void * \/* dummy *\/)$/;"	f	file:
reaction	interfaces/car.h	/^	tdble reaction[4]; \/**< reaction on wheels *\/$/;"	m	struct:__anon80
read	libs/musicplayer/OggSoundStream.cpp	/^bool OggSoundStream::read(char* buffer, const int bufferSize, int* resultSize, const char** error)$/;"	f	class:OggSoundStream
readDefaultSideParameters	modules/track/track4.cpp	/^static void readDefaultSideParameters(void *trackHandle, tTrack *theTrack)$/;"	f	file:
readKarma	drivers/bt/learn.cpp	/^bool SegLearn::readKarma(tTrack* track, tSituation *s, float *radius, int *uid, int driverindex)$/;"	f	class:SegLearn
readKarma	drivers/damned/learn.cpp	/^bool SegLearn::readKarma(tTrack* track, tSituation *s, float *radius, int *uid, int driverindex)$/;"	f	class:SegLearn
readOpenGLCfg	libs/confscreens/openglconfig.cpp	/^static void readOpenGLCfg(void)$/;"	f	file:
readSoundCfg	libs/confscreens/soundconfig.cpp	/^static void readSoundCfg(void)$/;"	f	file:
read_func	windows/include/vorbis/vorbisfile.h	/^  size_t (*read_func)  (void *ptr, size_t size, size_t nmemb, void *datasource);$/;"	m	struct:__anon48
read_string	libs/learning/string_utils.cpp	/^StringBuffer* read_string (FILE* f, StringBuffer* s)$/;"	f
ready	libs/musicplayer/OpenALMusicPlayer.h	/^		bool ready;									\/\/ initialization sucessful$/;"	m	class:OpenALMusicPlayer
ready_state	windows/include/vorbis/vorbisfile.h	/^  int              ready_state;$/;"	m	struct:OggVorbis_File
real	libs/learning/real.h	/^typedef double real;$/;"	t
real	libs/learning/real.h	/^typedef float real;$/;"	t
realloc	libs/tgf/tgf.h	162;"	d
reap	windows/include/vorbis/codec.h	/^  struct alloc_chain *reap;$/;"	m	struct:vorbis_block	typeref:struct:vorbis_block::alloc_chain
rearlight1	modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*rearlight1 = NULL;$/;"	v
rearlight2	modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*rearlight2 = NULL;$/;"	v
rebound	modules/simu/simuv2/susp.h	/^    tDamperDef rebound;$/;"	m	struct:__anon21
rebound	modules/simu/simuv3/susp.h	/^    tDamperDef rebound;$/;"	m	struct:__anon40
rec_acc	linux/shared_memory.h	/^int* rec_acc;$/;"	v
rec_distfcar	linux/shared_memory.h	/^float* rec_distfcar;$/;"	v
rec_intent	linux/shared_memory.h	/^int* rec_intent;$/;"	v
rec_lkas	linux/shared_memory.h	/^int* rec_lkas;$/;"	v
rec_rpm	linux/shared_memory.h	/^int* rec_rpm;$/;"	v
rec_speed	linux/shared_memory.h	/^int* rec_speed;$/;"	v
rec_speedfcar	linux/shared_memory.h	/^float* rec_speedfcar;$/;"	v
rec_steer	linux/shared_memory.h	/^int* rec_steer;$/;"	v
rec_targetspeed	linux/shared_memory.h	/^int* rec_targetspeed;$/;"	v
receive_data	topview/topview.cpp	/^char* receive_data[1024];$/;"	v
reconfig	interfaces/simu.h	/^	tfSimReConfig	reconfig;$/;"	m	struct:__anon85
record	libs/raceengineclient/raceengine.cpp	/^void record(void *) {$/;"	f
record_count	drivers/human/human.cpp	/^static int record_count = RECORD_COUNT;$/;"	v	file:
record_signal	interfaces/car.h	/^	bool record_signal;$/;"	m	struct:__anon78
record_signal	libs/raceengineclient/raceengine.cpp	/^bool record_signal = false;$/;"	v
red	libs/raceengineclient/racegl.cpp	/^static float red[4] = { 1.0, 0.0, 0.0, 1.0 };$/;"	v	file:
red	libs/raceengineclient/racemanmenu.cpp	/^static float red[4]  = {1.0, 0.0, 0.0, 1.0};$/;"	v	file:
red	windows/include/png.h	/^   png_byte red;   \/* for use in red green blue files *\/$/;"	m	struct:png_color_8_struct
red	windows/include/png.h	/^   png_byte red;$/;"	m	struct:png_color_struct
red	windows/include/png.h	/^   png_uint_16 red;   \/* for use in red green blue files *\/$/;"	m	struct:png_color_16_struct
red	windows/include/png.h	/^   png_uint_16 red;$/;"	m	struct:png_sPLT_entry_struct
redraw	tools/accc/mainaccc.cpp	/^void redraw ()$/;"	f
ref	libs/confscreens/controlconfig.h	/^	tCtrlRef ref;$/;"	m	struct:__anon122
ref	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  DtObjectRef ref;$/;"	m	class:Object
ref	tools/trackgen/easymesh.cpp	/^	struct ref	ref[3];$/;"	m	struct:surf	typeref:struct:surf::ref	file:
ref	tools/trackgen/easymesh.cpp	/^struct ref {$/;"	s	file:
ref	windows/include/plib/sl.h	/^  void ref   () { ref_count++ ; }$/;"	f	class:slEnvelope
ref	windows/include/plib/sl.h	/^  void ref   () { ref_count++ ; }$/;"	f	class:slSample
ref	windows/include/plib/ssg.h	/^  void ref   () { refc++ ; }$/;"	f	class:ssgBase
refMouse	libs/tgfclient/control.cpp	/^static tMouseInfo refMouse;$/;"	v	file:
ref_count	windows/include/plib/sl.h	/^  int           ref_count      ;$/;"	m	class:slEnvelope
ref_count	windows/include/plib/sl.h	/^  int    ref_count ;$/;"	m	class:slSample
refc	windows/include/plib/ssg.h	/^  int   refc   ;  \/* The number of references to this node *\/$/;"	m	class:ssgBase
refcount	libs/tgf/params.cpp	/^	int refcount; \/**< Use counter (number of conf handle) *\/$/;"	m	struct:parmHeader	file:
refitBBox	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  void refitBBox() { bbox.enclose(lson->bbox, rson->bbox); }$/;"	f	class:BBoxInternal
refresh	interfaces/graphic.h	/^	tfGraphicRefresh	    refresh;$/;"	m	struct:__anon61
refresh	modules/graphic/ssggraph/grmain.cpp	/^refresh(tSituation *s)$/;"	f
refreshBoard	modules/graphic/ssggraph/grboard.cpp	/^void cGrBoard::refreshBoard(tSituation *s, float Fps, int forceArcade, tCarElt *curr)$/;"	f	class:cGrBoard
refreshDisplay	interfaces/raceman.h	/^    int			refreshDisplay;$/;"	m	struct:__anon73
refreshEditVal	libs/confscreens/driverconfig.cpp	/^refreshEditVal(void)$/;"	f	file:
refs	tools/accc/ac3dload.cpp	/^int refs=0;$/;"	v
refuelFuelFlow	interfaces/raceman.h	/^	tdble refuelFuelFlow;$/;"	m	struct:RmRaceRules
relPos	interfaces/car.h	/^	tPosd relPos; \/**< position relative to GC *\/$/;"	m	struct:__anon79
relPos	modules/simu/simuv2/wheel.h	/^    tPosd	relPos;		\/* relative pos \/ GC *\/$/;"	m	struct:__anon11
relPos	modules/simu/simuv3/wheel.h	/^    tPosd	relPos;		\/* relative pos \/ GC *\/$/;"	m	struct:__anon33
rel_error	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^Scalar rel_error = 1e-6; \/\/ relative error in the computed distance$/;"	v
rel_vel	modules/simu/simuv2/wheel.h	/^	tdble   rel_vel;    \/* relative velocity - used for realstic suspension movement*\/$/;"	m	struct:__anon11
rel_vel	modules/simu/simuv3/wheel.h	/^    tdble   rel_vel;    \/* relative velocity - used for realstic suspension movement*\/$/;"	m	struct:__anon33
relax	tools/trackgen/easymesh.cpp	/^void relax()$/;"	f
release	libs/txml/xmlparse.h	/^  void (*release)(void *data);$/;"	m	struct:__anon121
releaseSource	modules/graphic/ssggraph/SoundInterface.h	/^		bool releaseSource(TorcsSound* sound, int* index) {$/;"	f	class:SharedSourcePool
releaseTime	modules/simu/simuv2/transmission.h	/^    tdble	releaseTime;	\/* time needed for releasing the clutch pedal *\/$/;"	m	struct:__anon25
releaseTime	modules/simu/simuv3/transmission.h	/^    tdble	releaseTime;	\/* time needed for releasing the clutch pedal *\/$/;"	m	struct:__anon44
reliability_estimate	libs/learning/policy.h	/^	bool reliability_estimate; \/\/\/< reliability estimates option$/;"	m	class:DiscretePolicy
remInfo	libs/tgfclient/guimenu.cpp	/^remInfo(void *cbinfo)$/;"	f	file:
remainingLaps	interfaces/car.h	/^	int remainingLaps;$/;"	m	struct:__anon77
remaining_laps	drivers/olethros/learn.h	/^	int remaining_laps; \/\/\/< remaining_laps$/;"	m	class:olethros::SegLearn
remove	modules/graphic/ssggraph/grcam.h	/^    void remove(tGrCamHead *head) {$/;"	f	class:cGrCamera
remove	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  void remove() { succ->pred = pred; pred->succ = succ; }$/;"	f	class:Endpoint
removeAll	windows/include/plib/ssg.h	/^  void removeAll ()$/;"	f	class:ssgSimpleList
removeEntity	windows/include/plib/ssg.h	/^  void removeEntity ( ssgEntity *entity )$/;"	f	class:ssgKidList
removeEntity	windows/include/plib/ssg.h	/^  void removeEntity ( ssgEntity *entity )$/;"	f	class:ssgList
removeEntity	windows/include/plib/ul.h	/^  void removeEntity ( void *entity )$/;"	f	class:ulList
removeLast	windows/include/plib/ssg.h	/^  void removeLast ()$/;"	f	class:ssgSimpleList
removePair	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void removePair(ObjectPtr object1, ObjectPtr object2) {$/;"	f
removeParam	libs/tgf/params.cpp	/^static void removeParam(struct parmHeader *conf, struct section *section,$/;"	f	file:
removeParamByName	libs/tgf/params.cpp	/^static void removeParamByName(struct parmHeader *conf, const char *sectionName,$/;"	f	file:
removeParent	windows/include/plib/ssg.h	/^  void removeParent ( ssgEntity *entity ) { parents.removeEntity ( entity ) ; }$/;"	f	class:ssgEntity
removeSection	libs/tgf/params.cpp	/^static void removeSection(struct parmHeader *conf, struct section *section) {$/;"	f	file:
render_colours	windows/include/plib/ssg.h	/^  ssgColourArray   *render_colours   ;$/;"	m	class:ssgTween
render_normals	windows/include/plib/ssg.h	/^  ssgNormalArray   *render_normals   ;$/;"	m	class:ssgTween
render_texcoords	windows/include/plib/ssg.h	/^  ssgTexCoordArray *render_texcoords ;$/;"	m	class:ssgTween
render_vertices	windows/include/plib/ssg.h	/^  ssgVertexArray   *render_vertices  ;$/;"	m	class:ssgTween
renum	tools/trackgen/easymesh.cpp	/^void renum()$/;"	f
reorder	tools/accc/ac3dgroup.cpp	/^void reorder(ob_t *ob,ob_t *ob2, double *textarray,tcoord_t *vertexarray)$/;"	f
rep	modules/simu/simuv2/brake.h	/^    tdble	rep;	\/* front\/rear repartition *\/ $/;"	m	struct:__anon8
rep	modules/simu/simuv3/brake.h	/^    tdble	rep;	\/* front\/rear repartition *\/ $/;"	m	struct:__anon30
repair	interfaces/car.h	/^	int repair;$/;"	m	struct:__anon84
repairId	libs/racescreens/pitmenu.cpp	/^static int repairId;$/;"	v	file:
replaceEntity	windows/include/plib/ssg.h	/^  void replaceEntity ( ssgEntity *old_entity, ssgEntity *new_entity )$/;"	f	class:ssgKidList
replaceEntity	windows/include/plib/ssg.h	/^  void replaceEntity ( ssgEntity *old_entity, ssgEntity *new_entity )$/;"	f	class:ssgList
replaceEntity	windows/include/plib/ul.h	/^  void replaceEntity ( void *old_entity, void *new_entity )$/;"	f	class:ulList
replacing_traces	libs/learning/policy.h	/^	bool replacing_traces; \/\/\/< Replacing instead of accumulating traces$/;"	m	class:DiscretePolicy
replay_mode	windows/include/plib/sl.h	/^  slReplayMode   replay_mode     ;$/;"	m	class:slPlayer
replay_mode	windows/include/plib/sl.h	/^  slReplayMode  replay_mode    ;$/;"	m	class:slEnvelope
reportDefault	libs/txml/xmlparse.c	/^reportDefault(XML_Parser parser, const ENCODING *enc, const char *s, const char *end)$/;"	f	file:
reportProcessingInstruction	libs/txml/xmlparse.c	/^reportProcessingInstruction(XML_Parser parser, const ENCODING *enc, const char *start, const char *end)$/;"	f	file:
res	windows/include/plib/ul.h	/^  static double res ;$/;"	m	class:ulClock
res_bits	windows/include/vorbis/codec.h	/^  long res_bits;$/;"	m	struct:vorbis_block
res_bits	windows/include/vorbis/codec.h	/^  ogg_int64_t res_bits;$/;"	m	struct:vorbis_dsp_state
reserved	windows/include/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s
reset	windows/include/plib/sl.h	/^  virtual void reset ()$/;"	f	class:slPlayer
reset	windows/include/plib/sl.h	/^  void reset ()$/;"	f	class:slSamplePlayer
reset	windows/include/plib/ul.h	/^  void reset ()$/;"	f	class:ulClock
resetPair	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void resetPair(DtObjectRef obj1, DtObjectRef obj2) { $/;"	f	class:RespTable
resetSingle	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void resetSingle(DtObjectRef obj) { singleList.erase(obj); }$/;"	f	class:RespTable
reshape	tools/accc/mainaccc.cpp	/^void reshape ( int w, int h )$/;"	f
respTable	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^RespTable respTable;$/;"	v
response	modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  DtResponse response;$/;"	m	class:Response
responseTq	modules/simu/simuv3/engine.h	/^	tdble       responseTq; \/* response Tq due to mismatch *\/$/;"	m	struct:__anon38
restLength	windows/include/plib/sg.h	/^  float restLength ;$/;"	m	class:sgSpringDamper
restPos	modules/simu/simuv2/carstruct.h	/^    tDynPt	restPos;	\/* target rest position after the car is broken *\/$/;"	m	struct:__anon23
restPos	modules/simu/simuv3/carstruct.h	/^    tDynPt	restPos;	\/* target rest position after the car is broken *\/$/;"	m	struct:__anon42
results	interfaces/raceman.h	/^    void		*results;	\/**< Race results *\/$/;"	m	struct:RmInfo
resume	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::resume()$/;"	f	class:OpenalTorcsSound
resume	modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::resume()$/;"	f	class:PlibTorcsSound
resume	windows/include/plib/sl.h	/^  virtual void resume ()$/;"	f	class:slPlayer
retrieve	libs/learning/List.h	/^	LISTITEM* (*retrieve) (struct List* list, void* ptr);$/;"	m	struct:List
returned	windows/include/ogg/ogg.h	/^  int returned;$/;"	m	struct:__anon54
revsLimiter	modules/simu/simuv2/engine.h	/^    tdble		revsLimiter;$/;"	m	struct:__anon19
revsLimiter	modules/simu/simuv3/engine.h	/^    tdble		revsLimiter;$/;"	m	struct:__anon38
revsMax	modules/simu/simuv2/engine.h	/^    tdble		revsMax;$/;"	m	struct:__anon19
revsMax	modules/simu/simuv3/engine.h	/^    tdble		revsMax;$/;"	m	struct:__anon38
rewind	libs/musicplayer/OggSoundStream.cpp	/^void OggSoundStream::rewind()$/;"	f	class:OggSoundStream
rewind	libs/musicplayer/OpenALMusicPlayer.cpp	/^void OpenALMusicPlayer::rewind()$/;"	f	class:OpenALMusicPlayer
rgb	modules/graphic/ssggraph/grloadac.cpp	/^  sgVec4 rgb  ;$/;"	m	struct:_ssgMaterial	file:
rgb	tools/accc/accc.h	/^  color_t rgb;$/;"	m	struct:mat
rgba	libs/tgfclient/gui.h	/^			float rgba[4];$/;"	m	union:ForeGroundColor::__anon138
rgtSideNormal	interfaces/track.h	/^    t3Dd	rgtSideNormal;	\/* normal to the right side in case of straight segment *\/$/;"	m	struct:trackSeg
rideHeight	modules/simu/simuv2/wheel.h	/^    tdble	rideHeight;	\/* height of the bottom of the car *\/$/;"	m	struct:__anon11
rideHeight	modules/simu/simuv3/wheel.h	/^    tdble	rideHeight;	\/* height of the bottom of the car *\/$/;"	m	struct:__anon33
right	drivers/olethros/TrackData.h	/^    Point right;$/;"	m	class:Segment
right	modules/graphic/ssggraph/grcam.h	/^    float right;$/;"	m	class:cGrOrthoCamera
right	topview/Camera.hpp	/^	kmuvcl::math::vec3f right() {$/;"	f	class:kmuvcl::Camera
right	windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
right	windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
rimRadius	interfaces/car.h	/^	tdble rimRadius; \/**< Rim radius *\/$/;"	m	struct:__anon74
rle_temp	modules/graphic/ssggraph/grloadsgi.h	/^		unsigned char *rle_temp;$/;"	m	class:ssgSGIHeader
rlseg	tools/trackgen/raceline.cpp	/^static RacelineSegment* rlseg = NULL;$/;"	v	file:
rmActivate	libs/racescreens/fileselect.cpp	/^static void rmActivate(void * \/* dummy *\/ )$/;"	f	file:
rmCallback	libs/racescreens/pitmenu.cpp	/^static tfuiCallback rmCallback;$/;"	v	file:
rmCar	libs/racescreens/pitmenu.cpp	/^static tCarElt *rmCar;$/;"	v	file:
rmCarHandle	libs/racescreens/carsetupscreen.cpp	/^static void* rmCarHandle = NULL;$/;"	v	file:
rmCarName	libs/racescreens/carsetupscreen.cpp	/^static char* rmCarName = NULL;$/;"	v	file:
rmCatPrevNext	libs/racescreens/trackselect.cpp	/^static void rmCatPrevNext(void *vsel)$/;"	f	file:
rmChangeDisplayMode	libs/racescreens/racemenu.cpp	/^void rmChangeDisplayMode(void * \/* dummy *\/)$/;"	f
rmChgPracticeScreen	libs/racescreens/results.cpp	/^static void rmChgPracticeScreen(void *vprc)$/;"	f	file:
rmChgQualifScreen	libs/racescreens/results.cpp	/^static void rmChgQualifScreen(void *vprc)$/;"	f	file:
rmChgRaceScreen	libs/racescreens/results.cpp	/^static void rmChgRaceScreen(void *vprc)$/;"	f	file:
rmChgStandingScreen	libs/racescreens/results.cpp	/^static void rmChgStandingScreen(void *vprc)$/;"	f	file:
rmChgStartScreen	libs/racescreens/miscscreens.cpp	/^rmChgStartScreen(void *vpsrc)$/;"	f	file:
rmClickOnFile	libs/racescreens/fileselect.cpp	/^static void rmClickOnFile(void * \/*dummy*\/)$/;"	f	file:
rmCurDispMode	libs/racescreens/racemenu.cpp	/^static int rmCurDispMode;$/;"	v	file:
rmCurDispModeList	libs/racescreens/racemenu.cpp	/^static const char *rmCurDispModeList[] = { RM_VAL_VISIBLE, RM_VAL_INVISIBLE };$/;"	v	file:
rmCurText	libs/racescreens/loadingscreen.cpp	/^static int rmCurText;$/;"	v	file:
rmDeactivate	libs/racescreens/fileselect.cpp	/^static void rmDeactivate(void * \/* dummy *\/ )$/;"	f	file:
rmDeativate	libs/racescreens/loadingscreen.cpp	/^static void rmDeativate(void * \/* dummy *\/)$/;"	f	file:
rmDispModeEditId	libs/racescreens/racemenu.cpp	/^static int rmDispModeEditId;$/;"	v	file:
rmDisplayStartRace	libs/racescreens/miscscreens.cpp	/^rmDisplayStartRace(tRmInfo *info, void *startScr, void *abortScr, int start)$/;"	f	file:
rmFreeDrvList	libs/racescreens/driverselect.cpp	/^static void rmFreeDrvList(void)$/;"	f	file:
rmFs	libs/racescreens/fileselect.cpp	/^static tRmFileSelect *rmFs;$/;"	v	file:
rmGetMapName	libs/racescreens/trackselect.cpp	/^static char * rmGetMapName(char* buf, const int BUFSIZE)$/;"	f	file:
rmIdx	libs/racescreens/carsetupscreen.cpp	/^static int rmIdx = 0;$/;"	v	file:
rmInfo	libs/racescreens/pitmenu.cpp	/^static tRmInfo *rmInfo;$/;"	v	file:
rmModName	libs/racescreens/carsetupscreen.cpp	/^static char* rmModName = NULL;$/;"	v	file:
rmMove	libs/racescreens/driverselect.cpp	/^static void rmMove(void *vd)$/;"	f	file:
rmPracticeResults	libs/racescreens/results.cpp	/^static void rmPracticeResults(void *prevHdle, tRmInfo *info, int start)$/;"	f	file:
rmQualifResults	libs/racescreens/results.cpp	/^static void rmQualifResults(void *prevHdle, tRmInfo *info, int start)$/;"	f	file:
rmRaceResults	libs/racescreens/results.cpp	/^static void rmRaceResults(void *prevHdle, tRmInfo *info, int start)$/;"	f	file:
rmRaceType	libs/racescreens/carsetupscreen.cpp	/^static int rmRaceType = RM_TYPE_PRACTICE;$/;"	v	file:
rmRepair	libs/racescreens/pitmenu.cpp	/^static void rmRepair(void* \/* dummy *\/)$/;"	f	file:
rmSaveId	libs/racescreens/results.cpp	/^static int	rmSaveId;$/;"	v	file:
rmSaveRes	libs/racescreens/results.cpp	/^static void rmSaveRes(void *vInfo)$/;"	f	file:
rmScrHdle	libs/racescreens/miscscreens.cpp	/^static void		*rmScrHdle = 0;$/;"	v	file:
rmScrHdle	libs/racescreens/results.cpp	/^static void	*rmScrHdle = NULL;$/;"	v	file:
rmSelect	libs/racescreens/fileselect.cpp	/^static void rmSelect(void * \/* dummy *\/ )$/;"	f	file:
rmSelectDeselect	libs/racescreens/driverselect.cpp	/^static void rmSelectDeselect(void * \/* dummy *\/ )$/;"	f	file:
rmSet	libs/racescreens/carsetupscreen.cpp	/^static void rmSet(void *vp)$/;"	f	file:
rmSetup	libs/racescreens/carsetupscreen.cpp	/^static tCarPitSetup* rmSetup = NULL;$/;"	v	file:
rmShowStandings	libs/racescreens/results.cpp	/^static void rmShowStandings(void *prevHdle, tRmInfo *info, int start)$/;"	f	file:
rmStopAndGo	libs/racescreens/pitmenu.cpp	/^static void rmStopAndGo(void * \/* dummy *\/)$/;"	f	file:
rmTextId	libs/racescreens/loadingscreen.cpp	/^static int rmTextId[TEXTLINES];$/;"	v	file:
rmTextLines	libs/racescreens/loadingscreen.cpp	/^static char *rmTextLines[TEXTLINES] = {0};$/;"	v	file:
rmTrack	libs/racescreens/carsetupscreen.cpp	/^static char* rmTrack = NULL;$/;"	v	file:
rmUpdateM	libs/racescreens/carsetupscreen.cpp	/^static void rmUpdateM(void *vp)$/;"	f	file:
rmUpdateMM	libs/racescreens/carsetupscreen.cpp	/^static void rmUpdateMM(void *vp)$/;"	f	file:
rmUpdateP	libs/racescreens/carsetupscreen.cpp	/^static void rmUpdateP(void *vp)$/;"	f	file:
rmUpdatePP	libs/racescreens/carsetupscreen.cpp	/^static void rmUpdatePP(void *vp)$/;"	f	file:
rmUpdateTrackInfo	libs/racescreens/trackselect.cpp	/^static void rmUpdateTrackInfo(void)$/;"	f	file:
rmUpdtFuel	libs/racescreens/pitmenu.cpp	/^static void rmUpdtFuel(void * \/* dummy *\/)$/;"	f	file:
rmUpdtRepair	libs/racescreens/pitmenu.cpp	/^static void rmUpdtRepair(void * \/* dummy *\/)$/;"	f	file:
rmUserData	libs/racescreens/pitmenu.cpp	/^static void *rmUserData;$/;"	v	file:
rmdsActivate	libs/racescreens/driverselect.cpp	/^static void rmdsActivate(void * \/* notused *\/)$/;"	f	file:
rmdsAddKeys	libs/racescreens/driverselect.cpp	/^static void rmdsAddKeys(void)$/;"	f	file:
rmdsClickOnDriver	libs/racescreens/driverselect.cpp	/^static void rmdsClickOnDriver(void * \/* dummy *\/)$/;"	f	file:
rmdsDeactivate	libs/racescreens/driverselect.cpp	/^static void rmdsDeactivate(void *screen)$/;"	f	file:
rmdsSelect	libs/racescreens/driverselect.cpp	/^static void rmdsSelect(void * \/* dummy *\/)$/;"	f	file:
rmdsSetFocus	libs/racescreens/driverselect.cpp	/^static void rmdsSetFocus(void * \/* dummy *\/)$/;"	f	file:
rmin	drivers/bt/learn.h	/^		float rmin;$/;"	m	class:SegLearn
rmin	drivers/damned/learn.h	/^		float rmin;$/;"	m	class:SegLearn
rmin	drivers/olethros/learn.h	/^	float rmin; \/\/\/< current estimated minimum radius$/;"	m	class:olethros::SegLearn
rmrpAddKeys	libs/racescreens/racemenu.cpp	/^static void rmrpAddKeys(void)$/;"	f	file:
rmrpDeactivate	libs/racescreens/racemenu.cpp	/^static void rmrpDeactivate(void *screen)$/;"	f	file:
rmrpDistId	libs/racescreens/racemenu.cpp	/^static int rmrpDistId;$/;"	v	file:
rmrpDistance	libs/racescreens/racemenu.cpp	/^static int rmrpDistance;$/;"	v	file:
rmrpLaps	libs/racescreens/racemenu.cpp	/^static int rmrpLaps;$/;"	v	file:
rmrpLapsId	libs/racescreens/racemenu.cpp	/^static int rmrpLapsId;$/;"	v	file:
rmrpUpdDist	libs/racescreens/racemenu.cpp	/^static void rmrpUpdDist(void * \/* dummy *\/)$/;"	f	file:
rmrpUpdLaps	libs/racescreens/racemenu.cpp	/^static void rmrpUpdLaps(void * \/* dummy *\/)$/;"	f	file:
rmrpValidate	libs/racescreens/racemenu.cpp	/^static void rmrpValidate(void * \/* dummy *\/)$/;"	f	file:
rmtsActivate	libs/racescreens/trackselect.cpp	/^static void rmtsActivate(void * \/* dummy *\/)$/;"	f	file:
rmtsAddKeys	libs/racescreens/trackselect.cpp	/^static void rmtsAddKeys(void)$/;"	f	file:
rmtsDeactivate	libs/racescreens/trackselect.cpp	/^static void rmtsDeactivate(void *screen)$/;"	f	file:
rmtsFreeLists	libs/racescreens/trackselect.cpp	/^static void rmtsFreeLists(void *vl)$/;"	f	file:
rmtsPrevNext	libs/racescreens/trackselect.cpp	/^static void rmtsPrevNext(void *vsel)$/;"	f	file:
rmtsSelect	libs/racescreens/trackselect.cpp	/^void rmtsSelect(void * \/* dummy *\/)$/;"	f
rnd	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar rnd() { return (Scalar(rand()) + 0.5) \/ (Scalar(RAND_MAX) + 1); }$/;"	f
rng_list	windows/include/plib/ssg.h	/^  float rng_list [ 33 ] ;$/;"	m	class:ssgRangeSelector
road	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar road;$/;"	m	class:CarSoundData
road	modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap road; $/;"	m	class:SoundInterface
road_ride_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* road_ride_sound; \/\/\/< rolling on normal road$/;"	m	class:SoundInterface
robot	interfaces/car.h	/^	struct RobotItf *robot; \/**< private *\/$/;"	m	struct:CarElt	typeref:struct:CarElt::RobotItf
rollCenter	modules/simu/simuv2/wheel.h	/^    tdble	rollCenter;$/;"	m	struct:__anon11
rollCenter	modules/simu/simuv3/wheel.h	/^    tdble	rollCenter;$/;"	m	struct:__anon33
rollRes	interfaces/car.h	/^	tdble rollRes; \/**< rolling resistance, useful for sound *\/$/;"	m	struct:__anon79
rollRes	modules/simu/simuv2/wheel.h	/^    tdble	rollRes;	\/* Rolling Resistance (summed over the car) *\/$/;"	m	struct:__anon11
rollRes	modules/simu/simuv3/wheel.h	/^    tdble	rollRes;	\/* Rolling Resistance (summed over the car) *\/$/;"	m	struct:__anon33
root	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  BBoxNode *root;$/;"	m	class:Complex
rootSection	libs/tgf/params.cpp	/^	struct section *rootSection; \/**< List of sections at the first level *\/$/;"	m	struct:parmHeader	typeref:struct:parmHeader::section	file:
root_material	tools/accc/ac3dload.cpp	/^mat_t *root_material=NULL;$/;"	v
root_ob	tools/accc/ac3dload.cpp	/^ob_t *root_ob;$/;"	v
rotMat	modules/simu/simuv3/carstruct.h	/^    sgMat4      rotMat;$/;"	m	struct:__anon42
rot_acc	modules/simu/simuv3/carstruct.h	/^    sgVec3      rot_acc;        \/* rotational acceleratiom *\/$/;"	m	struct:__anon42
rot_front	modules/simu/simuv3/aero.h	/^	sgVec3   rot_front;$/;"	m	struct:__anon46
rot_lateral	modules/simu/simuv3/aero.h	/^	sgVec3   rot_lateral; $/;"	m	struct:__anon46
rot_mom	modules/simu/simuv3/carstruct.h	/^    sgQuat      rot_mom;        \/* rotational momentum *\/$/;"	m	struct:__anon42
rot_vertical	modules/simu/simuv3/aero.h	/^	sgVec3   rot_vertical;$/;"	m	struct:__anon46
rotate	drivers/berniw/linalg.h	/^inline v2d v2d::rotate(const v2d &c, float arc) const$/;"	f	class:v2d
rotate	drivers/berniw2/linalg.h	/^inline v2d v2d::rotate(const v2d &c, float arc) const$/;"	f	class:v2d
rotate	drivers/berniw3/linalg.h	/^inline v2d v2d::rotate(const v2d &c, float arc) const$/;"	f	class:v2d
rotate	drivers/human/linalg.h	/^inline v2d v2d::rotate(const v2d &c, float arc) const$/;"	f	class:v2d
rotate	drivers/olethros/linalg.h	/^inline v2d v2d::rotate(const v2d &c, float arc) const$/;"	f	class:v2d
rotate	drivers/sparkle/linalg.h	/^inline v2d v2d::rotate(const v2d &c, float arc) const$/;"	f	class:v2d
rotate	libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::rotate(const v2t<T> &c, T arc) const$/;"	f	class:v2t
rotate	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void rotate(const Quaternion& q) { curr.rotate(q); }$/;"	f	class:Object
rotate	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::rotate(const Quaternion& q) { $/;"	f	class:Transform
rotate	topview/transform.hpp	/^        mat<4, 4, T> rotate(T angle, T x, T y, T z)$/;"	f	namespace:kmuvcl::math
rotation	libs/tgfclient/fg_gm.cpp	/^	Rotation			rotation;			\/\/ The rotation mode.$/;"	m	struct:tagSFG_Display	file:
rotation_axis	windows/include/plib/ssg.h	/^  sgVec3 rotation_axis   ;$/;"	m	class:ssgAxisTransform
rotation_center	windows/include/plib/ssg.h	/^  sgVec3 rotation_center ;$/;"	m	class:ssgAxisTransform
rotational_damage_x	modules/simu/simuv3/wheel.h	/^	tdble rotational_damage_x;$/;"	m	struct:__anon33
rotational_damage_z	modules/simu/simuv3/wheel.h	/^	tdble rotational_damage_z;$/;"	m	struct:__anon33
round	libs/portability/portability.h	/^static float round(float x)$/;"	f
rowbytes	windows/include/png.h	/^   png_size_t rowbytes;  \/* number of bytes in row *\/$/;"	m	struct:png_row_info_struct
rp	libs/raceengineclient/racemanmenu.cpp	/^static tRmRaceParam rp;$/;"	v	file:
rp	libs/racescreens/racemenu.cpp	/^static tRmRaceParam *rp;$/;"	v	file:
rpmMaxPw	modules/simu/simuv2/engine.h	/^	tdble       rpmMaxPw;$/;"	m	struct:__anon18
rpmMaxPw	modules/simu/simuv3/engine.h	/^	tdble       rpmMaxPw;$/;"	m	struct:__anon37
rpmMaxTq	modules/simu/simuv2/engine.h	/^	tdble       rpmMaxTq;$/;"	m	struct:__anon18
rpmMaxTq	modules/simu/simuv3/engine.h	/^	tdble       rpmMaxTq;$/;"	m	struct:__anon37
rpos	windows/include/plib/sl.h	/^  char           *rpos ;          \/\/ read position for buffer$/;"	m	class:slDSP
rside	interfaces/track.h	/^		struct { struct trackSeg *rside, *lside; };$/;"	m	struct:trackSeg::__anon62::__anon63	typeref:struct:trackSeg::__anon62::__anon63::trackSeg
rson	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxNode *rson;$/;"	m	class:BBoxInternal
rtCarPitSetupType	libs/robottools/robottools.h	/^typedef enum rtCarPitSetupType {$/;"	g
rtCarPitSetupType	libs/robottools/robottools.h	/^} rtCarPitSetupType;$/;"	t	typeref:enum:rtCarPitSetupType
ruleState	interfaces/raceman.h	/^    int			ruleState;$/;"	m	struct:RmCarRules
rules	interfaces/raceman.h	/^    tRmCarRules		*rules;		\/**< by car rules *\/$/;"	m	struct:RmInfo
rulesDamageFactor	modules/simu/simuv2/simu.cpp	/^tdble rulesDamageFactor = 1.0f;$/;"	v
rulesFuelFactor	modules/simu/simuv2/simu.cpp	/^tdble rulesFuelFactor = 1.0f;$/;"	v
running	interfaces/raceman.h	/^    int			running;$/;"	m	struct:__anon73
running	windows/include/plib/ssg.h	/^  ssgAnimEnum      running ;$/;"	m	class:ssgTimedSelector
running_skid	modules/graphic/ssggraph/grskidmarks.h	/^  int			running_skid;$/;"	m	struct:__anon1
s	drivers/bt/spline.h	/^		SplinePoint *s;$/;"	m	class:Spline
s	drivers/bt/spline.h	/^		float s;	\/\/ slope.$/;"	m	class:SplinePoint
s	drivers/damned/spline.h	/^		SplinePoint *s;$/;"	m	class:Spline
s	drivers/damned/spline.h	/^		float s;	\/\/ slope.$/;"	m	class:SplinePoint
s	drivers/olethros/spline.h	/^		SplinePoint *s;$/;"	m	class:Spline
s	drivers/olethros/spline.h	/^		float s;	\/\/ slope.$/;"	m	class:SplinePoint
s	drivers/sparkle/spline.h	/^		SplinePoint *s;$/;"	m	class:Spline
s	drivers/sparkle/spline.h	/^		float s;	\/* slope *\/$/;"	m	class:SplinePoint
s	interfaces/raceman.h	/^    tSituation		*s;		\/**< Situation during race *\/$/;"	m	struct:RmInfo
s	libs/learning/Distribution.h	/^	real s; \/\/\/< standard deviation$/;"	m	class:NormalDistribution
s	libs/learning/Distribution.h	/^	real s; \/\/\/< standard deviation$/;"	m	class:UniformDistribution
s	libs/txml/xmlparse.c	/^  XML_Char s[1];$/;"	m	struct:block	file:
s	modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^functions (ten lines or less in length), then the use of the object$/;"	f
s	tools/nfs2ac/mainnfs2ac.cpp	/^    int s;$/;"	m	struct:__anon57	file:
s	tools/trackgen/easymesh.cpp	/^	double s;$/;"	m	struct:sid	file:
s0	tools/trackgen/easymesh.cpp	/^	int s0, s1, type;$/;"	m	struct:chai	file:
s1	drivers/berniw/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s1	drivers/berniw2/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s1	drivers/berniw3/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s1	drivers/human/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s1	drivers/inferno/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s1	drivers/lliaw/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s1	drivers/tita/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s1	tools/trackgen/easymesh.cpp	/^	int s0, s1, type;$/;"	m	struct:chai	file:
s3	drivers/berniw/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s3	drivers/berniw2/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s3	drivers/berniw3/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s3	drivers/human/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s3	drivers/inferno/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s3	drivers/lliaw/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s3	drivers/tita/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
sTime	interfaces/raceman.h	/^    tdble	sTime;$/;"	m	struct:__anon72
s_imgHeight	libs/client/splash.cpp	/^static int s_imgWidth, s_imgHeight;$/;"	v	file:
s_imgWidth	libs/client/splash.cpp	/^static int s_imgWidth, s_imgHeight;$/;"	v	file:
s_old	modules/simu/simuv3/wheel.h	/^	tdble   s_old;$/;"	m	struct:__anon33
s_texture	libs/client/splash.cpp	/^static GLuint s_texture = 0;$/;"	v	file:
sa	modules/simu/simuv2/wheel.h	/^    tdble	sa;		\/* slip angle *\/$/;"	m	struct:__anon11
sa	modules/simu/simuv3/wheel.h	/^    tdble	sa;		\/* slip angle *\/$/;"	m	struct:__anon33
safe_urandom	modules/simu/simuv3/sim.h	/^inline float safe_urandom() {$/;"	f
safety_margin	windows/include/plib/sl.h	/^  float safety_margin ;$/;"	m	class:slScheduler
safety_threshold	drivers/olethros/learn.h	/^	float safety_threshold;$/;"	m	class:olethros::SegLearn
sameName	libs/txml/xmltok.h	/^  int (*sameName)(const ENCODING *,$/;"	m	struct:encoding
sameName	libs/txml/xmltok_impl.c	/^int PREFIX(sameName)(const ENCODING *enc, const char *ptr1, const char *ptr2)$/;"	f	file:
sample	libs/learning/policy.h	/^	real* sample; \/\/\/< sampling output$/;"	m	class:DiscretePolicy
sample	modules/graphic/ssggraph/TorcsSound.h	/^	slSample* sample; \/\/\/< sample data$/;"	m	class:PlibTorcsSound
sample	windows/include/plib/sl.h	/^  slSample      *sample          ;$/;"	m	class:slSamplePlayer
sample	windows/include/plib/sl.h	/^  slSample  *sample   ;$/;"	m	struct:slPendingCallBack
sampling_rate	modules/graphic/ssggraph/SoundInterface.h	/^	float sampling_rate; \/\/\/< sampling rate$/;"	m	class:SoundInterface
samptrack	windows/include/vorbis/vorbisfile.h	/^  double           samptrack;$/;"	m	struct:OggVorbis_File
saturate	windows/include/plib/js.h	/^  float saturate  [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
save	modules/graphic/ssggraph/grcarlight.h	/^  virtual int save ( FILE *fd )  {return  ssgVtxTable::save(fd);}$/;"	f	class:ssgVtxTableCarlight
save	modules/graphic/ssggraph/grshadow.h	/^  virtual int save ( FILE *fd )  {return  ssgVtxTable::save(fd);}$/;"	f	class:ssgVtxTableShadow
save	modules/graphic/ssggraph/grsmoke.h	/^  virtual int save ( FILE *fd )  {return  ssgVtxTable::save(fd);}$/;"	f	class:ssgVtxTableSmoke
save	modules/graphic/ssggraph/grvertexarray.h	/^  virtual int save ( FILE *fd ) {return  ssgVtxArray::save(fd);}$/;"	f	class:ssgGrVtxArray
save	modules/graphic/ssggraph/grvtxtable.h	/^  virtual int save ( FILE *fd )  {return  ssgVtxTable::save(fd);}$/;"	f	class:grVtxTable
saveElevation	tools/trackgen/maintrackgen.cpp	/^int saveElevation;$/;"	v
saveFile	libs/learning/policy.cpp	/^void DiscretePolicy::saveFile (char* f) {$/;"	f	class:DiscretePolicy
saveObject	tools/trackgen/track.cpp	/^saveObject(FILE *curFd, int nb, int start, char *texture, char *name)$/;"	f	file:
saveOpenGLOption	libs/confscreens/openglconfig.cpp	/^static void saveOpenGLOption(void *)$/;"	f	file:
saveParameters	drivers/olethros/learn.cpp	/^void SegLearn::saveParameters (char* fname)$/;"	f	class:SegLearn
saveParams	libs/tgfclient/screen.cpp	/^saveParams(void)$/;"	f	file:
saveSkin	tools/texmapper/maintexmapper.cpp	/^void saveSkin(void)$/;"	f
saveSoundOption	libs/confscreens/soundconfig.cpp	/^static void saveSoundOption(void *)$/;"	f	file:
saveState	libs/learning/policy.cpp	/^void DiscretePolicy::saveState(FILE* f) $/;"	f	class:DiscretePolicy
saveTriangle	tools/texmapper/ssgSaveAC.cpp	/^struct saveTriangle$/;"	s	file:
saveTriangle	tools/trackgen/objects.cpp	/^struct saveTriangle {$/;"	s	file:
save_database	tools/texmapper/maintexmapper.cpp	/^void save_database(void)$/;"	f
save_fd	tools/texmapper/ssgSaveAC.cpp	/^static FILE *save_fd ;$/;"	v	file:
saved	tools/accc/accc.h	/^  int saved;$/;"	m	struct:ob
saved	tools/accc/accc.h	/^  int saved;$/;"	m	struct:tcoord
saver	predictor/predict.py	/^saver = tf.train.Saver()$/;"	v
saver	predictor/train.py	/^saver = tf.train.Saver()$/;"	v
saver	predictor/train2.py	/^saver = tf.train.Saver()$/;"	v
sbPos	libs/tgfclient/gui.h	/^    int			sbPos;$/;"	m	struct:__anon143
sbbmax	tools/texmapper/maintexmapper.cpp	/^    sgVec3	sbbmax;$/;"	m	struct:Face	file:
sbbmin	tools/texmapper/maintexmapper.cpp	/^    sgVec3	sbbmin;		\/* Bounding (scaled) box *\/$/;"	m	struct:Face	file:
scale	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void scale(Scalar x, Scalar y, Scalar z) { curr.scale(x, y, z); }$/;"	f	class:Object
scale	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::scale(Scalar x, Scalar y, Scalar z) { $/;"	f	class:Transform
scale	modules/telemetry/telemetry.cpp	/^    tdble		scale;$/;"	m	struct:Channel	file:
scale	topview/transform.hpp	/^        mat<4, 4, T> scale(T sx, T sy, T sz)$/;"	f	namespace:kmuvcl::math
scanAtts	libs/txml/xmltok_impl.c	/^int PREFIX(scanAtts)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanCdataSection	libs/txml/xmltok_impl.c	/^int PREFIX(scanCdataSection)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanCharRef	libs/txml/xmltok_impl.c	/^int PREFIX(scanCharRef)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanComment	libs/txml/xmltok_impl.c	/^int PREFIX(scanComment)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanDecl	libs/txml/xmltok_impl.c	/^int PREFIX(scanDecl)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanEndTag	libs/txml/xmltok_impl.c	/^int PREFIX(scanEndTag)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanHexCharRef	libs/txml/xmltok_impl.c	/^int PREFIX(scanHexCharRef)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanLit	libs/txml/xmltok_impl.c	/^int PREFIX(scanLit)(int open, const ENCODING *enc,$/;"	f	file:
scanLt	libs/txml/xmltok_impl.c	/^int PREFIX(scanLt)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanPercent	libs/txml/xmltok_impl.c	/^int PREFIX(scanPercent)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanPi	libs/txml/xmltok_impl.c	/^int PREFIX(scanPi)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanPoundName	libs/txml/xmltok_impl.c	/^int PREFIX(scanPoundName)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanRef	libs/txml/xmltok_impl.c	/^int PREFIX(scanRef)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanners	libs/txml/xmltok.h	/^  int (*scanners[XML_N_STATES])(const ENCODING *,$/;"	m	struct:encoding
schar	modules/graphic/ssggraph/SoundInterface.h	/^	QSoundChar CarSoundData::*schar; \/\/\/< The calculated sound characteristic$/;"	m	class:QueueSoundMap_::CarSoundData
sched	modules/graphic/ssggraph/SoundInterface.h	/^	slScheduler* sched;$/;"	m	class:PlibSoundInterface
sched	modules/graphic/ssggraph/TorcsSound.h	/^	slScheduler* sched; \/\/\/< plib sl scheduler (see sl.h)$/;"	m	class:PlibTorcsSound
schedView	modules/graphic/ssggraph/grcam.cpp	/^    tSchedView *schedView;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
scheduledEventTime	interfaces/car.h	/^	double scheduledEventTime;$/;"	m	struct:__anon77
scr	libs/racescreens/carsetupscreen.cpp	/^		void* scr;	\/\/ screen$/;"	m	class:cGuiSetupValue	file:
scrHandle	libs/confscreens/controlconfig.cpp	/^static void *scrHandle = NULL;$/;"	v	file:
scrHandle	libs/confscreens/driverconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	libs/confscreens/graphconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	libs/confscreens/openglconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	libs/confscreens/simuconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	libs/confscreens/soundconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	libs/racescreens/carsetupscreen.cpp	/^static void *scrHandle = NULL;$/;"	v	file:
scrHandle	libs/racescreens/driverselect.cpp	/^static void *scrHandle;$/;"	v	file:
scrHandle	libs/racescreens/fileselect.cpp	/^static void *scrHandle = NULL;$/;"	v	file:
scrHandle	libs/racescreens/racemenu.cpp	/^static void *scrHandle;$/;"	v	file:
scrHandle	libs/racescreens/trackselect.cpp	/^static void *scrHandle;$/;"	v	file:
scrHandle	libs/tgfclient/guihelp.cpp	/^static void	*scrHandle;$/;"	v	file:
scrHandle	libs/tgfclient/screen.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle2	libs/confscreens/joystickconfig.cpp	/^static void	*scrHandle2 = NULL;$/;"	v	file:
scrHandle2	libs/confscreens/mouseconfig.cpp	/^static void 	*scrHandle2 = NULL;$/;"	v	file:
screen	libs/tgfclient/guimenu.h	/^    void	*screen;$/;"	m	struct:__anon150
screen	modules/graphic/ssggraph/grcam.h	/^    class cGrScreen	*screen;	\/* screen where the camera is attached *\/$/;"	m	class:cGrCamera	typeref:class:cGrCamera::cGrScreen
scrh	libs/confscreens/mouseconfig.cpp	/^static int	scrw, scrh;$/;"	v	file:
scrh	modules/graphic/ssggraph/grscreen.h	/^		int scrx, scry, scrw, scrh;$/;"	m	class:cGrScreen
scrollBar	libs/tgfclient/gui.h	/^    int			scrollBar;$/;"	m	struct:__anon143
scrollList	libs/confscreens/driverconfig.cpp	/^static int	scrollList;$/;"	v	file:
scrollbar	libs/tgfclient/gui.h	/^	tGfuiScrollBar	scrollbar;$/;"	m	union:GfuiObject::__anon147
scrollist	libs/tgfclient/gui.h	/^	tGfuiScrollList scrollist;$/;"	m	union:GfuiObject::__anon147
scrw	libs/confscreens/mouseconfig.cpp	/^static int	scrw, scrh;$/;"	v	file:
scrw	modules/graphic/ssggraph/grscreen.h	/^		int scrx, scry, scrw, scrh;$/;"	m	class:cGrScreen
scrx	modules/graphic/ssggraph/grscreen.h	/^		int scrx, scry, scrw, scrh;$/;"	m	class:cGrScreen
scry	modules/graphic/ssggraph/grscreen.h	/^		int scrx, scry, scrw, scrh;$/;"	m	class:cGrScreen
search	modules/graphic/ssggraph/grloadac.cpp	/^static int search ( Tag *tags, char *s )$/;"	f	file:
searchForKid	windows/include/plib/ssg.h	/^  int        searchForKid ( ssgEntity *entity )$/;"	f	class:ssgBranch
secLeft	windows/include/plib/sl.h	/^  float          secLeft  ;       \/\/ seconds left in buffer$/;"	m	class:slDSP
secUsed	windows/include/plib/sl.h	/^  float          secUsed  ;       \/\/ seconds used in buffer$/;"	m	class:slDSP
second	windows/include/png.h	/^   png_byte second;  \/* second of minute, 0 - 60 (for leap seconds) *\/$/;"	m	struct:png_time_struct
secondsPerPacket	windows/include/plib/sl.h	/^  float          secondsPerPacket ;$/;"	m	class:slDSP
seconds_per_buffer	windows/include/plib/sl.h	/^  float seconds_per_buffer;$/;"	m	class:slScheduler
section	libs/tgf/params.cpp	/^struct section {$/;"	s	file:
sectionHash	libs/tgf/params.cpp	/^	void *sectionHash; \/**< Hash table for section access *\/$/;"	m	struct:parmHeader	file:
seek_func	windows/include/vorbis/vorbisfile.h	/^  int    (*seek_func)  (void *datasource, ogg_int64_t offset, int whence);$/;"	m	struct:__anon48
seekable	windows/include/vorbis/vorbisfile.h	/^  int              seekable;$/;"	m	struct:OggVorbis_File
seg	interfaces/car.h	/^	tTrackSeg *seg; \/**< Track segment where the wheel is *\/$/;"	m	struct:__anon79
seg	interfaces/track.h	/^    tTrackSeg	  *seg;		\/**< Main track *\/$/;"	m	struct:__anon68
seg	interfaces/track.h	/^    tTrackSeg	*seg;		\/**< Track segment *\/$/;"	m	struct:__anon64
seg	tools/trackgen/easymesh.h	/^struct seg$/;"	s
segIndice	modules/graphic/ssggraph/grmain.cpp	/^int segIndice = 0;$/;"	v
segQuantum	drivers/olethros/learn.cpp	/^int SegLearn::segQuantum (int segid)$/;"	f	class:SegLearn
seg_alpha	drivers/olethros/driver.h	/^	float *seg_alpha; \/\/\/< targets for segments$/;"	m	class:olethros::Driver
seg_alpha_new	drivers/olethros/driver.h	/^	float *seg_alpha_new; \/\/\/< new targets for segments$/;"	m	class:olethros::Driver
segdm	drivers/olethros/learn.h	/^	float* segdm; \/\/\/< friction coefficient 1$/;"	m	class:olethros::SegLearn
segdm2	drivers/olethros/learn.h	/^	float* segdm2; \/\/\/< friction coefficient 2$/;"	m	class:olethros::SegLearn
segdm3	drivers/olethros/learn.h	/^	float* segdm3; \/\/\/< friction coefficient 3$/;"	m	class:olethros::SegLearn
segment	tools/trackgen/easymesh.cpp	/^struct seg *segment;$/;"	v	typeref:struct:seg
segments	drivers/olethros/TrackData.h	/^    std::vector<Segment> segments;$/;"	m	class:SegmentList
segmentsToPit	drivers/berniw/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	drivers/berniw2/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	drivers/berniw3/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	drivers/human/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	drivers/inferno/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	drivers/lliaw/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	drivers/tita/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segments_per_quantum	drivers/olethros/learn.h	/^	int segments_per_quantum; \/\/\/< number of segments each quantum contains$/;"	m	class:olethros::SegLearn
segtemp	modules/simu/simuv3/wheel.h	/^	tdble   segtemp[N_THICKNESS_SEGMENTS];$/;"	m	struct:__anon33
sel	libs/racescreens/driverselect.cpp	/^	int sel;$/;"	m	struct:DrvElt	file:
select	libs/racescreens/racescreens.h	/^	tfSelectFile select;	\/**< Callback function to handle the selection (store the selection in the caller) *\/$/;"	m	struct:__anon104
select	windows/include/plib/ssg.h	/^  void select ( unsigned int s )$/;"	f	class:ssgSelector
selectBank	windows/include/plib/ssg.h	/^  void  selectBank ( float f ) { curr_bank = f ; }$/;"	f	class:ssgAnimTransform
selectBank	windows/include/plib/ssg.h	/^  void  selectBank ( float f ) { curr_bank = f ; }$/;"	f	class:ssgTweenController
selectBoard	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::selectBoard(int val)$/;"	f	class:cGrBoard
selectBoard	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectBoard(long brd)$/;"	f	class:cGrScreen
selectCamera	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectCamera(long cam)$/;"	f	class:cGrScreen
selectNextCar	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectNextCar(void)$/;"	f	class:cGrScreen
selectNextFlag	modules/graphic/ssggraph/grscreen.h	/^		int selectNextFlag;$/;"	m	class:cGrScreen
selectPrevCar	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectPrevCar(void)$/;"	f	class:cGrScreen
selectPrevFlag	modules/graphic/ssggraph/grscreen.h	/^		int selectPrevFlag;$/;"	m	class:cGrScreen
selectStep	windows/include/plib/ssg.h	/^  void selectStep ( unsigned int s )$/;"	f	class:ssgSelector
selectTrackMap	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectTrackMap()$/;"	f	class:cGrScreen
selectTrackMap	modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::selectTrackMap()$/;"	f	class:cGrTrackMap
select_car_2	libs/raceengineclient/raceengine.cpp	/^void select_car_2(void *) {$/;"	f
select_car_3	libs/raceengineclient/raceengine.cpp	/^void select_car_3(void *) {$/;"	f
selected	libs/tgfclient/gui.h	/^    int				selected;$/;"	m	struct:GfuiListElement
selectedElt	libs/tgfclient/gui.h	/^    int			selectedElt;$/;"	m	struct:__anon143
selectedScrollList	libs/racescreens/driverselect.cpp	/^static int selectedScrollList, unselectedScrollList;$/;"	v	file:
selection	windows/include/plib/ssg.h	/^  int              selection ;$/;"	m	class:ssgStateSelector
selection	windows/include/plib/ssg.h	/^  int selection ;  \/* used to remember last transform selected *\/$/;"	m	class:ssgTransformArray
selection	windows/include/plib/ssg.h	/^  unsigned char* selection ;$/;"	m	class:ssgSelector
sem_union	topview/topview.cpp	/^union semun sem_union;$/;"	v	typeref:union:semun
semid	linux/shared_memory.h	/^int semid;$/;"	v
semid	topview/topview.cpp	/^int semid;$/;"	v
semun	labview/socket.cpp	/^union semun$/;"	u	file:
semun	libs/raceengineclient/racemain.h	/^union semun$/;"	u
semun	predictor/main.cpp	/^union semun {$/;"	u	file:
semun	topview/topview.cpp	/^union semun {$/;"	u	file:
semun	yunseok/tcp_client_2.cpp	/^union semun {$/;"	u	file:
send_data	libs/raceengineclient/racemain.cpp	/^char* send_data[1024];$/;"	v
send_data	predictor/reshape.py	/^        send_data = ""$/;"	v
send_data	predictor/talker.py	/^        send_data = ""$/;"	v
sens	drivers/human/pref.h	/^    tdble	sens;		\/* sensitivity of control *\/$/;"	m	struct:__anon185
sensName	drivers/human/pref.h	/^    const char	*sensName;	\/* Name of the sens attribute *\/$/;"	m	struct:__anon185
sensing_data_name	drivers/data_list.h	/^enum sensing_data_name{CC_TRIGGER, 	LKAS_TRIGGER, 		SPEED, 		TARGET_SPEED, 		ACCEL_VALUE, $/;"	g
sep_axes_test	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^inline bool sep_axes_test(const Vector& a, const Vector& b, $/;"	f
sep_axis	modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^  Vector sep_axis;$/;"	m	class:Encounter
separate_actions	libs/learning/ann_policy.h	/^	bool separate_actions; \/\/\/< Single\/separate evaluation option$/;"	m	class:ANN_Policy
sequence	windows/include/vorbis/codec.h	/^  ogg_int64_t sequence;$/;"	m	struct:vorbis_block
sequence	windows/include/vorbis/codec.h	/^  ogg_int64_t sequence;$/;"	m	struct:vorbis_dsp_state
serialno	windows/include/ogg/ogg.h	/^  long    serialno;$/;"	m	struct:__anon52
serialnos	windows/include/vorbis/vorbisfile.h	/^  long            *serialnos;$/;"	m	struct:OggVorbis_File
server_socket	predictor/predict.py	/^server_socket = socket(AF_INET, SOCK_STREAM)$/;"	v
server_socket	predictor/test_server.py	/^server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sess	predictor/predict.py	/^sess = tf.Session()$/;"	v
sess	predictor/train.py	/^sess = tf.Session()$/;"	v
sess	predictor/train2.py	/^sess = tf.Session()$/;"	v
set	drivers/berniw/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* id) {$/;"	f	class:PathSeg
set	drivers/berniw/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* ip, v3d* id) {$/;"	f	class:PathSeg
set	drivers/berniw2/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* id) {$/;"	f	class:PathSeg
set	drivers/berniw2/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* ip, v3d* id) {$/;"	f	class:PathSeg
set	drivers/berniw3/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* id) {$/;"	f	class:PathSeg
set	drivers/berniw3/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* ip, v3d* id) {$/;"	f	class:PathSeg
set	drivers/human/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* id) {$/;"	f	class:PathSeg
set	drivers/human/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* ip, v3d* id) {$/;"	f	class:PathSeg
set	drivers/inferno/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	drivers/inferno/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* ip, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	drivers/lliaw/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	drivers/lliaw/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* ip, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	drivers/tita/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	drivers/tita/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* ip, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	libs/racescreens/carsetupscreen.cpp	/^		void set()$/;"	f	class:cGuiSetupValue
set	windows/include/plib/ssg.h	/^  virtual void set       ( GLenum mode, int val )$/;"	f	class:ssgSimpleState
set	windows/include/plib/ssg.h	/^  void   set ( float r, float g, float b, float a, unsigned int n )$/;"	f	class:ssgColourArray
set	windows/include/plib/ssg.h	/^  void   set ( float u, float v, unsigned int n )$/;"	f	class:ssgTexCoordArray
set	windows/include/plib/ssg.h	/^  void   set ( float x, float y, float z, unsigned int n )$/;"	f	class:ssgNormalArray
set	windows/include/plib/ssg.h	/^  void   set ( float x, float y, float z, unsigned int n )$/;"	f	class:ssgVertexArray
set	windows/include/plib/ssg.h	/^  void   set ( sgVec2   thing, unsigned int n ) { raw_set ( (char *) thing, n ) ; } ;$/;"	f	class:ssgTexCoordArray
set	windows/include/plib/ssg.h	/^  void   set ( sgVec3   thing, unsigned int n ) { raw_set ( (char *) thing, n ) ; } ;$/;"	f	class:ssgNormalArray
set	windows/include/plib/ssg.h	/^  void   set ( sgVec3   thing, unsigned int n ) { raw_set ( (char *) thing, n ) ; } ;$/;"	f	class:ssgVertexArray
set	windows/include/plib/ssg.h	/^  void   set ( sgVec4   thing, unsigned int n ) { raw_set ( (char *) thing, n ) ; } ;$/;"	f	class:ssgColourArray
set	windows/include/plib/ssg.h	/^  void   set ( short    thing, unsigned int n ) { raw_set ( (char *) &thing, n ) ; } ;$/;"	f	class:ssgIndexArray
set	windows/include/plib/ssg.h	/^  void set ( ssgInterleavedArrayElement  thing, unsigned int n ) { raw_set ( (char *) &thing, n ) ; } ;$/;"	f	class:ssgInterleavedArray
set	windows/include/plib/ssg.h	/^  void set ( ssgInterleavedArrayElement *thing, unsigned int n ) { raw_set ( (char *)  thing, n ) ; } ;$/;"	f	class:ssgInterleavedArray
setATransform	windows/include/plib/ssg.h	/^  void setATransform ( sgMat4 thing, unsigned int n ) { transformations.raw_set ( (char *) thing, n ) ; } ;$/;"	f	class:ssgAnimTransform
setAdditive	windows/include/plib/ssg.h	/^  void setAdditive ( int add ) { additive = add ; }$/;"	f	class:ssgRangeSelector
setAlphaClamp	windows/include/plib/ssg.h	/^  virtual void setAlphaClamp ( float clamp )$/;"	f	class:ssgSimpleState
setAxleSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setAxleSound (const char* sound_name)$/;"	f	class:SoundInterface
setBackfireLoopSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setBackfireLoopSound (const char* sound_name)$/;"	f	class:SoundInterface
setBackfireSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setBackfireSound (const char* sound_name)$/;"	f	class:SoundInterface
setBangSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setBangSound (const char* sound_name)$/;"	f	class:SoundInterface
setBase	drivers/inferno/pathfinder.h	/^		inline void setBase(int segid) {$/;"	f	class:PathSeg
setBase	drivers/lliaw/pathfinder.h	/^		inline void setBase(int segid) {$/;"	f	class:PathSeg
setBase	drivers/tita/pathfinder.h	/^		inline void setBase(int segid) {$/;"	f	class:PathSeg
setBase	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  void setBase(const Point *ptr, bool free = false) { $/;"	f	class:Complex
setBottomCrashSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setBottomCrashSound (const char* sound_name)$/;"	f	class:SoundInterface
setBps	windows/include/plib/sl.h	/^  void setBps    ( int b ) { bps    = b ; }$/;"	f	class:slSample
setBuffer	windows/include/plib/sl.h	/^  void   setBuffer ( const Uchar *buff, int leng )$/;"	f	class:slSample
setCallback	modules/graphic/ssggraph/grssgext.h	/^  void setCallback ( int cb_type, ssgCallback cb ) {$/;"	f	class:ssgBranchCb
setCallback	windows/include/plib/ssg.h	/^  virtual void setCallback ( int cb_type, ssgCallback cb )$/;"	f	class:ssgLeaf
setCarDataPtr	drivers/bt/opponent.h	/^		void setCarDataPtr(SingleCardata *cardata) { this->cardata = cardata; }$/;"	f	class:Opponent
setCarDataPtr	drivers/damned/opponent.h	/^		void setCarDataPtr(SingleCardata *cardata) { this->cardata = cardata; }$/;"	f	class:Opponent
setCarDataPtr	drivers/olethros/opponent.h	/^		void setCarDataPtr(SingleCardata *cardata) { this->cardata = cardata; }$/;"	f	class:olethros::Opponent
setCarPosition	modules/graphic/ssggraph/CarSoundData.h	/^	void setCarPosition (sgVec3 p)$/;"	f	class:CarSoundData
setCarPtr	drivers/berniw/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	drivers/berniw2/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	drivers/berniw3/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	drivers/bt/opponent.h	/^		void setCarPtr(tCarElt *car) { this->car = car; }$/;"	f	class:Opponent
setCarPtr	drivers/damned/opponent.h	/^		void setCarPtr(tCarElt *car) { this->car = car; }$/;"	f	class:Opponent
setCarPtr	drivers/human/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	drivers/inferno/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	drivers/lliaw/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	drivers/olethros/opponent.h	/^		void setCarPtr(tCarElt *car) { this->car = car; }$/;"	f	class:olethros::Opponent
setCarPtr	drivers/sparkle/opponent.h	/^		void setCarPtr(tCarElt *car) { this->car = car; }$/;"	f	class:Opponent
setCarPtr	drivers/tita/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarSpeed	modules/graphic/ssggraph/CarSoundData.h	/^	void setCarSpeed (sgVec3 u)$/;"	f	class:CarSoundData
setCenter	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void setCenter(const Point& p)  { center = p; }$/;"	f	class:BBox
setCenter	windows/include/plib/js.h	/^  void setCenter   ( float *axes ) { memcpy ( center, axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setCenter	windows/include/plib/sg.h	/^  void setCenter ( const SGDfloat x, const SGDfloat y, const SGDfloat z )$/;"	f	class:sgdSphere
setCenter	windows/include/plib/sg.h	/^  void setCenter ( const SGfloat x, const SGfloat y, const SGfloat z )$/;"	f	class:sgSphere
setCenter	windows/include/plib/sg.h	/^  void setCenter ( const sgVec3 c )$/;"	f	class:sgSphere
setCenter	windows/include/plib/sg.h	/^  void setCenter ( const sgdVec3 c )$/;"	f	class:sgdSphere
setCenter	windows/include/plib/ssgaShapes.h	/^  void setCenter  ( sgVec3 c ) { sgCopyVec3 ( center, c ) ; regenerate () ; }$/;"	f	class:ssgaShape
setClipPlane	windows/include/plib/ssg.h	/^  void setClipPlane ( int i, sgVec4 plane )$/;"	f	class:ssgContext
setColour	windows/include/plib/ssg.h	/^  void setColour   ( GLenum which, const sgVec4 col )$/;"	f	class:ssgLight
setColour	windows/include/plib/ssg.h	/^  void setColour   ( GLenum which, float r, float g, float b )$/;"	f	class:ssgLight
setColour	windows/include/plib/ssgaShapes.h	/^  void setColour  ( sgVec4 c ) { sgCopyVec4 ( colour, c ) ; regenerate () ; }$/;"	f	class:ssgaShape
setColourMaterial	windows/include/plib/ssg.h	/^  virtual void setColourMaterial ( GLenum which )$/;"	f	class:ssgSimpleState
setColours	modules/graphic/ssggraph/grcarlight.h	/^  virtual void setColours   ( ssgColourArray   *cl ) {  ssgVtxTable::setColours(cl);}$/;"	f	class:ssgVtxTableCarlight
setColours	modules/graphic/ssggraph/grshadow.h	/^  virtual void setColours   ( ssgColourArray   *cl ) {  ssgVtxTable::setColours(cl);}$/;"	f	class:ssgVtxTableShadow
setColours	modules/graphic/ssggraph/grsmoke.h	/^  virtual void setColours   ( ssgColourArray   *cl ) {  ssgVtxTable::setColours(cl);}$/;"	f	class:ssgVtxTableSmoke
setColours	modules/graphic/ssggraph/grvtxtable.h	/^  virtual void setColours   ( ssgColourArray   *cl ) {  ssgVtxTable::setColours(cl);}$/;"	f	class:grVtxTable
setComment	windows/include/plib/sl.h	/^  void   setComment ( const char *nc )$/;"	f	class:slSample
setConfidenceDistribution	libs/learning/policy.cpp	/^void DiscretePolicy::setConfidenceDistribution (enum ConfidenceDistribution cd)$/;"	f	class:DiscretePolicy
setCrashSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setCrashSound (const char* sound_name, int index)$/;"	f	class:SoundInterface
setCreationRate	windows/include/plib/ssgaParticleSystem.h	/^  void  setCreationRate ( float cr ) { create_rate = cr ; }$/;"	f	class:ssgaParticleSystem
setCullFace	windows/include/plib/ssg.h	/^  void setCullFace ( int cf ) { cull_face = cf ; }$/;"	f	class:ssgLeaf
setCullface	windows/include/plib/ssg.h	/^  void setCullface       ( int on_off )$/;"	f	class:ssgContext
setCurrentCar	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::setCurrentCar(tCarElt *newCurCar)$/;"	f	class:cGrScreen
setDamping	windows/include/plib/sg.h	/^  void setDamping    ( float d ) { damping    = d ; }$/;"	f	class:sgSpringDamper
setDeadBand	windows/include/plib/js.h	/^  void  setDeadBand ( int axis, float db )   { dead_band [ axis ] = db   ; }$/;"	f	class:jsJoystick
setDefault	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void setDefault(const Response& resp) { defaultResp = resp; }$/;"	f	class:RespTable
setDepthCallback	windows/include/plib/ssgaWaveSystem.h	/^  void  setDepthCallback ( ssgaWSDepthCallback cb ) { gridGetter  = cb ; } $/;"	f	class:ssgaWaveSystem
setDuration	windows/include/plib/ssg.h	/^  void setDuration ( float ti, int i = -1, ssgAnimTimeMode m = SSG_ANIM_FRAME )$/;"	f	class:ssgTimedSelector
setELearning	libs/learning/policy.cpp	/^void DiscretePolicy::setELearning() {$/;"	f	class:DiscretePolicy
setEdgeFlatten	windows/include/plib/ssgaWaveSystem.h	/^  void  setEdgeFlatten   ( float dist             ) { edgeFlatten = dist ; }$/;"	f	class:ssgaWaveSystem
setEmpty	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void setEmpty() { $/;"	f	class:BBox
setEngineSound	modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::setEngineSound (TorcsSound* engine_sound, float rpm_scale)$/;"	f	class:CarSoundData
setError	windows/include/plib/js.h	/^  void  setError      () { error = JS_TRUE ; }$/;"	f	class:jsJoystick
setError	windows/include/plib/sl.h	/^  void setError () { error = SL_TRUE ; }$/;"	f	class:slDSP
setEuler	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  void setEuler(Scalar yaw, Scalar pitch, Scalar roll) {$/;"	f	class:Quaternion
setExtent	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void setExtent(const Vector& v) { extent = v; }$/;"	f	class:BBox
setExternalPropertyIndex	windows/include/plib/ssg.h	/^  void setExternalPropertyIndex ( int i ) { external_property_index = i ; }$/;"	f	class:ssgState
setFOV	windows/include/plib/sg.h	/^  void setFOV ( const SGDfloat h, const SGDfloat v )$/;"	f	class:sgdFrustum
setFOV	windows/include/plib/sg.h	/^  void setFOV ( const SGfloat h, const SGfloat v )$/;"	f	class:sgFrustum
setFactor	modules/graphic/ssggraph/grcarlight.h	/^  void setFactor(double f){factor=f;}$/;"	f	class:ssgVtxTableCarlight
setFilename	windows/include/plib/ssg.h	/^  void  setFilename(const char *fname)$/;"	f	class:ssgTexture
setForce	windows/include/plib/sg.h	/^  void   setForce ( float x, float y, float z ) { sgSetVec3 ( force,x,y,z ) ; }$/;"	f	class:sgParticle
setForce	windows/include/plib/sg.h	/^  void   setForce ( sgVec3 f ) { sgCopyVec3 ( force, f ) ; }$/;"	f	class:sgParticle
setForcedLearning	libs/learning/policy.cpp	/^void DiscretePolicy::setForcedLearning(bool forced)$/;"	f	class:DiscretePolicy
setFrustum	windows/include/plib/sg.h	/^  void setFrustum ( const SGDfloat l, const SGDfloat r,$/;"	f	class:sgdFrustum
setFrustum	windows/include/plib/sg.h	/^  void setFrustum ( const SGfloat l, const SGfloat r,$/;"	f	class:sgFrustum
setFuelAtRaceStart	drivers/bt/strategy.cpp	/^void SimpleStrategy2::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s, int index)$/;"	f	class:SimpleStrategy2
setFuelAtRaceStart	drivers/bt/strategy.cpp	/^void SimpleStrategy::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s, int index)$/;"	f	class:SimpleStrategy
setFuelAtRaceStart	drivers/damned/strategy.cpp	/^void SimpleStrategy2::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s, int index)$/;"	f	class:SimpleStrategy2
setFuelAtRaceStart	drivers/damned/strategy.cpp	/^void SimpleStrategy::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s, int index)$/;"	f	class:SimpleStrategy
setFuelAtRaceStart	drivers/olethros/strategy.cpp	/^void SimpleStrategy::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s)$/;"	f	class:olethros::SimpleStrategy
setGamma	libs/learning/policy.cpp	/^void DiscretePolicy::setGamma (real gamma) $/;"	f	class:DiscretePolicy
setGearChangeSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setGearChangeSound (const char* sound_name)$/;"	f	class:SoundInterface
setGlobalGain	modules/graphic/ssggraph/SoundInterface.h	/^	virtual void setGlobalGain(float g) $/;"	f	class:SoundInterface
setGlobalGain	modules/graphic/ssggraph/SoundInterface.h	/^	virtual void setGlobalGain(float g)$/;"	f	class:OpenalSoundInterface
setGlobalGain	modules/graphic/ssggraph/SoundInterface.h	/^	virtual void setGlobalGain(float g)$/;"	f	class:PlibSoundInterface
setGrassRideSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setGrassRideSound (const char* sound_name)$/;"	f	class:SoundInterface
setGrassSkidSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setGrassSkidSound (const char* sound_name)$/;"	f	class:SoundInterface
setHeading	windows/include/plib/ssgaWaveSystem.h	/^  void  setHeading ( float h ) { heading  = h ; }$/;"	f	class:ssgaWaveTrain
setHeadlight	windows/include/plib/ssg.h	/^  void setHeadlight ( int head ) { is_headlight = head ; }$/;"	f	class:ssgLight
setHeight	windows/include/plib/ssgaFire.h	/^  void setHeight    ( float hgt )$/;"	f	class:ssgaFire
setHotColour	windows/include/plib/ssgaFire.h	/^  void setHotColour ( sgVec4 col )$/;"	f	class:ssgaFire
setID	windows/include/plib/ssg.h	/^  void setID ( int i ) { id = i ; }$/;"	f	class:ssgLight
setIdentity	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setIdentity() { setValue(1, 0, 0, 0, 1, 0, 0, 0, 1); }$/;"	f	class:Matrix
setIdentity	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void setIdentity() { curr.setIdentity(); }$/;"	f	class:Object
setIdentity	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::setIdentity() {$/;"	f	class:Transform
setInPit	drivers/bt/pit.h	/^		void setInPit(bool inpitlane) { this->inpitlane = inpitlane; }$/;"	f	class:Pit
setInPit	drivers/damned/pit.h	/^		void setInPit(bool inpitlane) { this->inpitlane = inpitlane; }$/;"	f	class:Pit
setInPit	drivers/olethros/pit.h	/^		void setInPit(bool inpitlane) { this->inpitlane = inpitlane; }$/;"	f	class:olethros::Pit
setInPit	drivers/sparkle/pit.h	/^		void setInPit(bool inpitlane) { this->inpitlane = inpitlane; }$/;"	f	class:Pit
setInf	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline void Point::setInf(const Point& p) {$/;"	f	class:Point
setKbeta	drivers/berniw/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	drivers/berniw2/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	drivers/berniw3/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	drivers/human/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	drivers/inferno/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	drivers/lliaw/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	drivers/tita/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKgamma	drivers/berniw/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	drivers/berniw2/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	drivers/berniw3/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	drivers/human/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	drivers/inferno/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	drivers/lliaw/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	drivers/tita/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKidCallback	windows/include/plib/ssgaShapes.h	/^  void setKidCallback ( int cb_type, ssgCallback cb )$/;"	f	class:ssgaShape
setKidState	windows/include/plib/ssgaShapes.h	/^  void setKidState    ( ssgState *s )$/;"	f	class:ssgaShape
setLPFilter	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setLPFilter(float lp)$/;"	f	class:OpenalTorcsSound
setLPFilter	modules/graphic/ssggraph/TorcsSound.cpp	/^void TorcsSound::setLPFilter(float lp)$/;"	f	class:TorcsSound
setLambda	windows/include/plib/ssgaWaveSystem.h	/^  void  setLambda ( float h ) { lambda  = h ; }$/;"	f	class:ssgaWaveTrain
setLatLongStyle	windows/include/plib/ssgaShapes.h	/^  void setLatLongStyle ( int ll ) { latlong_style = ll ; regenerate () ; }$/;"	f	class:ssgaSphere
setLearningRate	libs/learning/policy.h	/^	virtual void setLearningRate (real alpha) {this->alpha = alpha;}$/;"	f	class:DiscretePolicy
setLeftWidth	drivers/olethros/TrackData.cpp	/^void TrackData::setLeftWidth(float width)$/;"	f	class:TrackData
setLength	drivers/berniw/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	drivers/berniw2/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	drivers/berniw3/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	drivers/human/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	drivers/inferno/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	drivers/lliaw/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	drivers/tita/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	windows/include/plib/ssgaWaveSystem.h	/^  void  setLength ( float h ) { length  = h ; }$/;"	f	class:ssgaWaveTrain
setLimits	windows/include/plib/ssg.h	/^  void setLimits ( int st, int en )$/;"	f	class:ssgTimedSelector
setListener	modules/graphic/ssggraph/TorcsSound.cpp	/^void SoundSource::setListener (sgVec3 p, sgVec3 u)$/;"	f	class:SoundSource
setListenerPosition	modules/graphic/ssggraph/CarSoundData.h	/^	void setListenerPosition (sgVec3 p)$/;"	f	class:CarSoundData
setLoc	drivers/berniw/pathfinder.h	/^		inline void setLoc(v3d* ip) { p = (*ip); }$/;"	f	class:PathSeg
setLoc	drivers/berniw2/pathfinder.h	/^		inline void setLoc(v3d* ip) { p = (*ip); }$/;"	f	class:PathSeg
setLoc	drivers/berniw3/pathfinder.h	/^		inline void setLoc(v3d* ip) { p = (*ip); }$/;"	f	class:PathSeg
setLoc	drivers/human/pathfinder.h	/^		inline void setLoc(v3d* ip) { p = (*ip); }$/;"	f	class:PathSeg
setLoc	drivers/inferno/pathfinder.h	/^		inline void setLoc(const vec2d* ip, int segid) { ps[getid(segid)].p = (*ip); }$/;"	f	class:PathSeg
setLoc	drivers/lliaw/pathfinder.h	/^		inline void setLoc(const vec2d* ip, int segid) { ps[getid(segid)].p = (*ip); }$/;"	f	class:PathSeg
setLoc	drivers/tita/pathfinder.h	/^		inline void setLoc(const vec2d* ip, int segid) { ps[getid(segid)].p = (*ip); }$/;"	f	class:PathSeg
setLocWeighted	drivers/berniw/pathfinder.cpp	/^void Pathfinder::setLocWeighted(int id, double newweight, v3d* newp)$/;"	f	class:Pathfinder
setLocWeighted	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::setLocWeighted(int id, double newweight, v3d* newp)$/;"	f	class:Pathfinder
setLocWeighted	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::setLocWeighted(int id, double newweight, v3d* newp)$/;"	f	class:Pathfinder
setLocWeighted	drivers/human/pathfinder.cpp	/^void Pathfinder::setLocWeighted(int id, double newweight, v3d* newp)$/;"	f	class:Pathfinder
setMass	windows/include/plib/sg.h	/^  void   setMass ( float m )$/;"	f	class:sgParticle
setMaterial	windows/include/plib/ssg.h	/^  virtual void setMaterial   ( GLenum which, sgVec4 rgba )$/;"	f	class:ssgSimpleState
setMaterial	windows/include/plib/ssg.h	/^  virtual void setMaterial ( GLenum which, float r, float g,$/;"	f	class:ssgSimpleState
setMatrix	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void setMatrix(const double v[16]) { curr.setValue(v); }$/;"	f	class:Object
setMatrix	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void setMatrix(const float v[16]) { curr.setValue(v); }$/;"	f	class:Object
setMax	windows/include/plib/sg.h	/^  void setMax ( const SGDfloat x, const SGDfloat y, const SGDfloat z )$/;"	f	class:sgdBox
setMax	windows/include/plib/sg.h	/^  void setMax ( const SGfloat x, const SGfloat y, const SGfloat z )$/;"	f	class:sgBox
setMax	windows/include/plib/sg.h	/^  void setMax ( const sgVec3 src )$/;"	f	class:sgBox
setMax	windows/include/plib/sg.h	/^  void setMax ( const sgdVec3 src )$/;"	f	class:sgdBox
setMaxDelta	windows/include/plib/ul.h	/^  void   setMaxDelta  ( double maxDelta ) { max_delta = maxDelta ; }$/;"	f	class:ulClock
setMaxRange	windows/include/plib/js.h	/^  void setMaxRange ( float *axes ) { memcpy ( max   , axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setMean	libs/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:ExponentialDistribution
setMean	libs/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:LaplacianDistribution
setMean	libs/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:NormalDistribution
setMean	libs/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:UniformDistribution
setMetalSkidSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setMetalSkidSound (const char* sound_name)$/;"	f	class:SoundInterface
setMin	windows/include/plib/sg.h	/^  void setMin ( const SGDfloat x, const SGDfloat y, const SGDfloat z )$/;"	f	class:sgdBox
setMin	windows/include/plib/sg.h	/^  void setMin ( const SGfloat x, const SGfloat y, const SGfloat z )$/;"	f	class:sgBox
setMin	windows/include/plib/sg.h	/^  void setMin ( const sgVec3 src )$/;"	f	class:sgBox
setMin	windows/include/plib/sg.h	/^  void setMin ( const sgdVec3 src )$/;"	f	class:sgdBox
setMinRange	windows/include/plib/js.h	/^  void setMinRange ( float *axes ) { memcpy ( min   , axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setMode	windows/include/plib/ssg.h	/^  void  setMode ( int _mode ) { mode = _mode ; }$/;"	f	class:ssgAnimTransform
setMode	windows/include/plib/ssg.h	/^  void  setMode ( int _mode ) { mode = _mode ; }$/;"	f	class:ssgTweenController
setMode	windows/include/plib/ssg.h	/^  void setMode ( ssgAnimDirection m ) { mode = m ; }$/;"	f	class:ssgTimedSelector
setModelView	modules/graphic/ssggraph/grcam.cpp	/^void cGrOrthoCamera::setModelView(void)$/;"	f	class:cGrOrthoCamera
setModelView	modules/graphic/ssggraph/grcam.cpp	/^void cGrPerspCamera::setModelView(void)$/;"	f	class:cGrPerspCamera
setNCars	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^void OpenalSoundInterface::setNCars(int n_cars)$/;"	f	class:OpenalSoundInterface
setNCars	modules/graphic/ssggraph/PlibSoundInterface.cpp	/^void PlibSoundInterface::setNCars(int n_cars)$/;"	f	class:PlibSoundInterface
setNearFar	windows/include/plib/sg.h	/^  void setNearFar ( const SGDfloat n, const SGDfloat f )$/;"	f	class:sgdFrustum
setNearFar	windows/include/plib/sg.h	/^  void setNearFar ( const SGfloat n, const SGfloat f )$/;"	f	class:sgFrustum
setNormals	modules/graphic/ssggraph/grcarlight.h	/^  virtual void setNormals   ( ssgNormalArray   *nl ) {  ssgVtxTable::setNormals(nl);}$/;"	f	class:ssgVtxTableCarlight
setNormals	modules/graphic/ssggraph/grshadow.h	/^  virtual void setNormals   ( ssgNormalArray   *nl ) {  ssgVtxTable::setNormals(nl);}$/;"	f	class:ssgVtxTableShadow
setNormals	modules/graphic/ssggraph/grsmoke.h	/^  virtual void setNormals   ( ssgNormalArray   *nl ) {  ssgVtxTable::setNormals(nl);}$/;"	f	class:ssgVtxTableSmoke
setNormals	modules/graphic/ssggraph/grvtxtable.h	/^  virtual void setNormals   ( ssgNormalArray   *nl ) {  ssgVtxTable::setNormals(nl);}$/;"	f	class:grVtxTable
setNum	windows/include/plib/ssg.h	/^  void setNum ( unsigned int n ) { transformations.setNum( n ); }$/;"	f	class:ssgAnimTransform
setNum	windows/include/plib/ssg.h	/^  void setNum ( unsigned int n )$/;"	f	class:ssgSimpleList
setNumTris	windows/include/plib/ssgaShapes.h	/^  void setNumTris ( int ntri ) { ntriangles = ntri ; regenerate () ; }$/;"	f	class:ssgaShape
setOffset	modules/graphic/ssggraph/grshadow.cpp	/^void ssgVtxTableShadow::setOffset(float f, float u)$/;"	f	class:ssgVtxTableShadow
setOffset	windows/include/plib/ssgaWaveSystem.h	/^  void  setOffset ( sgVec2 _offset ) { sgCopyVec2 ( offset, _offset ) ; }$/;"	f	class:ssgaWaveSystem
setOnOff	modules/graphic/ssggraph/grcarlight.h	/^  void setOnOff (int s) { on=s ; }$/;"	f	class:ssgVtxTableCarlight
setOneOverMass	windows/include/plib/sg.h	/^  void   setOneOverMass ( float oom ) { ooMass = oom ; }$/;"	f	class:sgParticle
setOpaque	windows/include/plib/ssg.h	/^  virtual void setOpaque      (void) { translucent = FALSE ; }$/;"	f	class:ssgState
setOpenEntityNames	libs/txml/xmlparse.c	/^int setOpenEntityNames(XML_Parser parser, const XML_Char *openEntityNames)$/;"	f	file:
setOptLength	drivers/inferno/pathfinder.h	/^		inline void setOptLength(float l, int id) { length[id] = l; }$/;"	f	class:PathSegOpt
setOptLength	drivers/lliaw/pathfinder.h	/^		inline void setOptLength(float l, int id) { length[id] = l; }$/;"	f	class:PathSegOpt
setOptLength	drivers/tita/pathfinder.h	/^		inline void setOptLength(float l, int id) { length[id] = l; }$/;"	f	class:PathSegOpt
setOptLoc	drivers/berniw/pathfinder.h	/^		inline void setOptLoc(v3d* ip) { o = (*ip); }$/;"	f	class:PathSeg
setOptLoc	drivers/berniw2/pathfinder.h	/^		inline void setOptLoc(v3d* ip) { o = (*ip); }$/;"	f	class:PathSeg
setOptLoc	drivers/berniw3/pathfinder.h	/^		inline void setOptLoc(v3d* ip) { o = (*ip); }$/;"	f	class:PathSeg
setOptLoc	drivers/human/pathfinder.h	/^		inline void setOptLoc(v3d* ip) { o = (*ip); }$/;"	f	class:PathSeg
setOptLoc	drivers/inferno/pathfinder.h	/^		inline void setOptLoc(const vec2d* ip, int id) { o[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptLoc	drivers/lliaw/pathfinder.h	/^		inline void setOptLoc(const vec2d* ip, int id) { o[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptLoc	drivers/tita/pathfinder.h	/^		inline void setOptLoc(const vec2d* ip, int id) { o[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptToMiddle	drivers/inferno/pathfinder.h	/^		inline void setOptToMiddle(float m, int id) { disttomiddle[id] = m; }$/;"	f	class:PathSegOpt
setOptToMiddle	drivers/lliaw/pathfinder.h	/^		inline void setOptToMiddle(float m, int id) { disttomiddle[id] = m; }$/;"	f	class:PathSegOpt
setOptToMiddle	drivers/tita/pathfinder.h	/^		inline void setOptToMiddle(float m, int id) { disttomiddle[id] = m; }$/;"	f	class:PathSegOpt
setOptToRight	drivers/inferno/pathfinder.h	/^		inline void setOptToRight(const vec2d* ip, int id) { tr[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptToRight	drivers/lliaw/pathfinder.h	/^		inline void setOptToRight(const vec2d* ip, int id) { tr[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptToRight	drivers/tita/pathfinder.h	/^		inline void setOptToRight(const vec2d* ip, int id) { tr[id] = (*ip); }$/;"	f	class:PathSegOpt
setOrtho	windows/include/plib/sg.h	/^  void setOrtho   ( const SGDfloat l, const SGDfloat r,$/;"	f	class:sgdFrustum
setOrtho	windows/include/plib/sg.h	/^  void setOrtho   ( const SGfloat l, const SGfloat r,$/;"	f	class:sgFrustum
setOrtho	windows/include/plib/sg.h	/^  void setOrtho ( const SGDfloat w, const SGDfloat h )$/;"	f	class:sgdFrustum
setOrtho	windows/include/plib/sg.h	/^  void setOrtho ( const SGfloat w, const SGfloat h )$/;"	f	class:sgFrustum
setPair	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void setPair(DtObjectRef obj1, DtObjectRef obj2, const Response& resp) {$/;"	f	class:RespTable
setParticle	windows/include/plib/sg.h	/^  void setParticle  ( int which, sgParticle *p ) { if ( which == 0 ) p0 = p ; else p1 = p ; }$/;"	f	class:sgSpringDamper
setParticles	windows/include/plib/sg.h	/^  void setParticles ( sgParticle *_p0, sgParticle *_p1 ) { p0 = _p0 ; p1 = _p1 ; }$/;"	f	class:sgSpringDamper
setPitLoc	drivers/berniw/pathfinder.h	/^		inline void setPitLoc(v3d* ip) { l = ip; }$/;"	f	class:PathSeg
setPitLoc	drivers/berniw2/pathfinder.h	/^		inline void setPitLoc(v3d* ip) { l = ip; }$/;"	f	class:PathSeg
setPitLoc	drivers/berniw3/pathfinder.h	/^		inline void setPitLoc(v3d* ip) { l = ip; }$/;"	f	class:PathSeg
setPitLoc	drivers/human/pathfinder.h	/^		inline void setPitLoc(v3d* ip) { l = ip; }$/;"	f	class:PathSeg
setPitLoc	drivers/inferno/pathfinder.h	/^		inline void setPitLoc(vec2d* ip, int id) {$/;"	f	class:PathSegPit
setPitLoc	drivers/lliaw/pathfinder.h	/^		inline void setPitLoc(vec2d* ip, int id) {$/;"	f	class:PathSegPit
setPitLoc	drivers/tita/pathfinder.h	/^		inline void setPitLoc(vec2d* ip, int id) {$/;"	f	class:PathSegPit
setPitStop	drivers/berniw/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	drivers/berniw2/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	drivers/berniw3/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	drivers/human/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	drivers/inferno/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	drivers/lliaw/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	drivers/tita/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitch	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setPitch(float pitch)$/;"	f	class:OpenalTorcsSound
setPitch	modules/graphic/ssggraph/TorcsSound.cpp	/^void TorcsSound::setPitch(float pitch)$/;"	f	class:TorcsSound
setPitstop	drivers/bt/pit.cpp	/^void Pit::setPitstop(bool pitstop)$/;"	f	class:Pit
setPitstop	drivers/damned/pit.cpp	/^void Pit::setPitstop(bool pitstop)$/;"	f	class:Pit
setPitstop	drivers/olethros/pit.cpp	/^void Pit::setPitstop(bool pitstop)$/;"	f	class:olethros::Pit
setPitstop	drivers/sparkle/pit.cpp	/^void Pit::setPitstop(bool pitstop)$/;"	f	class:Pit
setPoint	tools/trackgen/track.cpp	/^void setPoint(tTexElt *curTexElt, float t1, float t2, float x, float y, float z, unsigned int &nbvert)$/;"	f
setPos	modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::setPos (int x, int y, int w, int h)$/;"	f	class:cGrCarCamMirror
setPos	windows/include/plib/sg.h	/^  void   setPos   ( float x, float y, float z ) { sgSetVec3 ( pos  ,x,y,z ) ; }$/;"	f	class:sgParticle
setPos	windows/include/plib/sg.h	/^  void   setPos   ( sgVec3 p ) { sgCopyVec3 ( pos  , p ) ; }$/;"	f	class:sgParticle
setPosition	windows/include/plib/ssg.h	/^  void setPosition ( const sgVec3 pos ) { sgCopyVec3 ( position, pos ) ; }$/;"	f	class:ssgLight
setPosition	windows/include/plib/ssg.h	/^  void setPosition ( float x, float y, float z ) { sgSetVec3 ( position, x, y, z ) ; }$/;"	f	class:ssgLight
setPrimitiveType	windows/include/plib/ssg.h	/^  virtual void setPrimitiveType ( GLenum ty ) { gltype = ty ; }$/;"	f	class:ssgLeaf
setProjection	modules/graphic/ssggraph/grcam.cpp	/^void cGrOrthoCamera::setProjection(void)$/;"	f	class:cGrOrthoCamera
setProjection	modules/graphic/ssggraph/grcam.cpp	/^void cGrPerspCamera::setProjection(void)$/;"	f	class:cGrPerspCamera
setPursuit	libs/learning/policy.cpp	/^void DiscretePolicy::setPursuit(bool pursuit)$/;"	f	class:DiscretePolicy
setQLearning	libs/learning/policy.cpp	/^void DiscretePolicy::setQLearning() {$/;"	f	class:DiscretePolicy
setRGBA	libs/tgfclient/gui.h	/^		void setRGBA(const float prgba[4]) {$/;"	f	class:ForeGroundColor
setRadius	drivers/berniw/pathfinder.h	/^		inline void setRadius(tdble r) { radius = r; }$/;"	f	class:PathSeg
setRadius	drivers/berniw2/pathfinder.h	/^		inline void setRadius(tdble r) { radius = r; }$/;"	f	class:PathSeg
setRadius	drivers/berniw3/pathfinder.h	/^		inline void setRadius(tdble r) { radius = r; }$/;"	f	class:PathSeg
setRadius	drivers/human/pathfinder.h	/^		inline void setRadius(tdble r) { radius = r; }$/;"	f	class:PathSeg
setRadius	drivers/inferno/pathfinder.h	/^		inline void setRadius(tdble r, int segid) { ps[getid(segid)].radius = r; }$/;"	f	class:PathSeg
setRadius	drivers/lliaw/pathfinder.h	/^		inline void setRadius(tdble r, int segid) { ps[getid(segid)].radius = r; }$/;"	f	class:PathSeg
setRadius	drivers/tita/pathfinder.h	/^		inline void setRadius(tdble r, int segid) { ps[getid(segid)].radius = r; }$/;"	f	class:PathSeg
setRadius	windows/include/plib/sg.h	/^  void     setRadius ( const SGDfloat r ) { radius = r ; }$/;"	f	class:sgdSphere
setRadius	windows/include/plib/sg.h	/^  void    setRadius ( const SGfloat r ) { radius = r ; }$/;"	f	class:sgSphere
setRandomSeed	libs/learning/Distribution.cpp	/^void setRandomSeed(unsigned int seed)$/;"	f
setRandomness	libs/learning/policy.cpp	/^void DiscretePolicy::setRandomness (real epsilon)$/;"	f	class:DiscretePolicy
setRange	windows/include/plib/ssg.h	/^  void setRange ( unsigned int which, float range )$/;"	f	class:ssgRangeSelector
setRanges	windows/include/plib/ssg.h	/^  void setRanges ( float *ranges, unsigned int nranges )$/;"	f	class:ssgRangeSelector
setRate	windows/include/plib/sl.h	/^  void setRate   ( int r ) { rate   = r ; }$/;"	f	class:slSample
setReferenceDistance	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setReferenceDistance(float dist)$/;"	f	class:OpenalTorcsSound
setReferenceDistance	modules/graphic/ssggraph/TorcsSound.h	/^	virtual void setReferenceDistance (float dist) {}$/;"	f	class:TorcsSound
setReplacingTraces	libs/learning/policy.cpp	/^void DiscretePolicy::setReplacingTraces (bool replacing)$/;"	f	class:DiscretePolicy
setRestLength	windows/include/plib/sg.h	/^  void setRestLength ( float l ) { restLength = l ; }$/;"	f	class:sgSpringDamper
setRestLength	windows/include/plib/sg.h	/^  void setRestLength () { restLength = sgDistanceVec3 ( p0->getPos(), p1->getPos() ) ; }$/;"	f	class:sgSpringDamper
setRightWidth	drivers/olethros/TrackData.cpp	/^void TrackData::setRightWidth(float width)$/;"	f	class:TrackData
setRoadRideSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setRoadRideSound (const char* sound_name)$/;"	f	class:SoundInterface
setRotation	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setRotation(const Quaternion& q) {$/;"	f	class:Matrix
setRotation	modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  void setRotation(const Vector& axis, Scalar angle) {$/;"	f	class:Quaternion
setSafetyMargin	windows/include/plib/sl.h	/^  void setSafetyMargin ( float seconds ) { safety_margin = seconds ; }$/;"	f	class:slScheduler
setSarsa	libs/learning/policy.cpp	/^void DiscretePolicy::setSarsa()$/;"	f	class:DiscretePolicy
setSaturation	windows/include/plib/js.h	/^  void  setSaturation ( int axis, float st ) { saturate [ axis ] = st    ; }$/;"	f	class:jsJoystick
setScaling	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setScaling(Scalar x, Scalar y, Scalar z) {$/;"	f	class:Matrix
setShadeModel	windows/include/plib/ssg.h	/^  virtual void setShadeModel ( GLenum model )$/;"	f	class:ssgSimpleState
setShininess	windows/include/plib/ssg.h	/^  virtual void setShininess ( float sh )$/;"	f	class:ssgSimpleState
setSingle	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void setSingle(DtObjectRef obj, const Response& resp) { $/;"	f	class:RespTable
setSize	modules/graphic/ssggraph/grcarlight.h	/^  int setSize (double s) { size=s ; return 0; }$/;"	f	class:ssgVtxTableCarlight
setSize	windows/include/plib/ssgaParticleSystem.h	/^  void setSize ( float sz ) { size = sz ; }$/;"	f	class:ssgaParticleSystem
setSize	windows/include/plib/ssgaShapes.h	/^  void setSize    ( float  s ) { sgSetVec3  ( size,s,s,s) ; regenerate () ; }$/;"	f	class:ssgaShape
setSize	windows/include/plib/ssgaShapes.h	/^  void setSize    ( sgVec3 s ) { sgCopyVec3 ( size  , s ) ; regenerate () ; }$/;"	f	class:ssgaShape
setSkidSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setSkidSound (const char* sound_name)$/;"	f	class:SoundInterface
setSource	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setSource (sgVec3 p, sgVec3 u)$/;"	f	class:OpenalTorcsSound
setSource	modules/graphic/ssggraph/TorcsSound.cpp	/^void SoundSource::setSource(sgVec3 p, sgVec3 u)$/;"	f	class:SoundSource
setSource	modules/graphic/ssggraph/TorcsSound.h	/^	virtual void setSource(sgVec3 p, sgVec3 u) {}$/;"	f	class:TorcsSound
setSpeed	windows/include/plib/ssgaWaveSystem.h	/^  void  setSpeed ( float h ) { speed  = h ; }$/;"	f	class:ssgaWaveTrain
setSpeedsqr	drivers/berniw/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr) { speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	drivers/berniw2/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr) { speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	drivers/berniw3/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr) { speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	drivers/human/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr) { speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	drivers/inferno/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr, int segid) { ps[getid(segid)].speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	drivers/lliaw/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr, int segid) { ps[getid(segid)].speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	drivers/tita/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr, int segid) { ps[getid(segid)].speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpotAttenuation	windows/include/plib/ssg.h	/^  void setSpotAttenuation ( float constant, float linear, float quadratic )$/;"	f	class:ssgLight
setSpotDiffusion	windows/include/plib/ssg.h	/^  void setSpotDiffusion ( float exp, float cut = 90.0f )$/;"	f	class:ssgLight
setSpotDirection	windows/include/plib/ssg.h	/^  void setSpotDirection ( const sgVec3 dir ) { sgCopyVec3 ( direction, dir ) ; }$/;"	f	class:ssgLight
setSpotDirection	windows/include/plib/ssg.h	/^  void setSpotDirection ( float x, float y, float z ) { sgSetVec3 ( direction, x, y, z ) ; }$/;"	f	class:ssgLight
setSpotlight	windows/include/plib/ssg.h	/^  void setSpotlight ( int spot ) { position[3] = ( spot ? 1.0f : 0.0f ) ; }$/;"	f	class:ssgLight
setState	drivers/olethros/pit.h	/^		void setState (enum PitState state) {pit_state = state;}$/;"	f	class:olethros::Pit
setState1	modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::setState1 (ssgState *st)$/;"	f	class:grVtxTable
setState2	modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::setState2 (ssgState *st)$/;"	f	class:grVtxTable
setState3	modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::setState3 (ssgState *st)$/;"	f	class:grVtxTable
setStateCallback	windows/include/plib/ssg.h	/^  void setStateCallback ( int cb_type, ssgStateCallback cb )$/;"	f	class:ssgState
setStep	drivers/olethros/TrackData.cpp	/^void TrackData::setStep(float step)$/;"	f	class:TrackData
setStep	windows/include/plib/sl.h	/^  void setStep ( int n, float _time, float _value )$/;"	f	class:slEnvelope
setStereo	windows/include/plib/sl.h	/^  void setStereo ( int s ) { stereo = s ; }$/;"	f	class:slSample
setStiffness	windows/include/plib/sg.h	/^  void setStiffness  ( float s ) { stiffness  = s ; }$/;"	f	class:sgSpringDamper
setSup	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline void Point::setSup(const Point& p) {$/;"	f	class:Point
setTab	libs/txml/gennmtab.c	/^void setTab(char *tab, struct range *ranges, size_t nRanges)$/;"	f
setTab	libs/txml/gennmtab/gennmtab.c	/^void setTab(char *tab, struct range *ranges, size_t nRanges)$/;"	f
setTeamMate	drivers/bt/opponent.cpp	/^void Opponents::setTeamMate(const char *teammate)$/;"	f	class:Opponents
setTeamMate	drivers/damned/opponent.cpp	/^void Opponents::setTeamMate(const char *teammate)$/;"	f	class:Opponents
setTexCoords	modules/graphic/ssggraph/grcarlight.h	/^  virtual void setTexCoords ( ssgTexCoordArray *tl ) {  ssgVtxTable::setTexCoords(tl);}$/;"	f	class:ssgVtxTableCarlight
setTexCoords	modules/graphic/ssggraph/grshadow.h	/^  virtual void setTexCoords ( ssgTexCoordArray *tl ) {  ssgVtxTable::setTexCoords(tl);}$/;"	f	class:ssgVtxTableShadow
setTexCoords	modules/graphic/ssggraph/grsmoke.h	/^  virtual void setTexCoords ( ssgTexCoordArray *tl ) {  ssgVtxTable::setTexCoords(tl);}$/;"	f	class:ssgVtxTableSmoke
setTexCoords	modules/graphic/ssggraph/grvtxtable.h	/^  virtual void setTexCoords ( ssgTexCoordArray *tl ) {  ssgVtxTable::setTexCoords(tl);}$/;"	f	class:grVtxTable
setTexScale	windows/include/plib/ssgaWaveSystem.h	/^  void  setTexScale      ( float u, float v       ) { tu = u ; tv = v ; }$/;"	f	class:ssgaWaveSystem
setTexture	modules/graphic/ssggraph/grtexture.h	/^		virtual void setTexture(GLuint tex) {$/;"	f	class:grManagedState
setTexture	modules/graphic/ssggraph/grtexture.h	/^		virtual void setTexture(const char *fname, int _wrapu = TRUE, int _wrapv = TRUE, int _mipmap = TRUE) {$/;"	f	class:grManagedState
setTexture	modules/graphic/ssggraph/grtexture.h	/^		virtual void setTexture(ssgTexture *tex) {$/;"	f	class:grManagedState
setTexture	tools/trackgen/track.cpp	/^void setTexture(tTexElt **texList, tTexElt **curTexElt, unsigned int &curTexId, const char *texname, const char *texnamebump, const char *texnameraceline)$/;"	f
setTexture	windows/include/plib/ssg.h	/^  virtual void  setTexture ( const char *fname,$/;"	f	class:ssgSimpleState
setTexture	windows/include/plib/ssg.h	/^  virtual void setTexture ( GLuint tex )$/;"	f	class:ssgSimpleState
setTexture	windows/include/plib/ssg.h	/^  virtual void setTexture ( ssgTexture *tex )$/;"	f	class:ssgSimpleState
setTextureFilename	windows/include/plib/ssg.h	/^  virtual void setTextureFilename ( const char *fname )$/;"	f	class:ssgSimpleState
setTrackPtr	drivers/bt/opponent.h	/^		static void setTrackPtr(tTrack *track) { Opponent::track = track; }$/;"	f	class:Opponent
setTrackPtr	drivers/damned/opponent.h	/^		static void setTrackPtr(tTrack *track) { Opponent::track = track; }$/;"	f	class:Opponent
setTrackPtr	drivers/olethros/opponent.h	/^		static void setTrackPtr(tTrack *track) { Opponent::track = track; }$/;"	f	class:olethros::Opponent
setTrackPtr	drivers/sparkle/opponent.h	/^		static void setTrackPtr(tTrack *track) { Opponent::track = track; }$/;"	f	class:Opponent
setTranslucent	windows/include/plib/ssg.h	/^  virtual void setTranslucent (void) { translucent = TRUE  ; }$/;"	f	class:ssgState
setTravCallback	windows/include/plib/ssg.h	/^  void setTravCallback ( int cb_type, ssgTravCallback cb )$/;"	f	class:ssgEntity
setTraversalMask	windows/include/plib/ssg.h	/^  void setTraversalMask     ( int t ) { traversal_mask  =  t ; }$/;"	f	class:ssgEntity
setTraversalMaskBits	windows/include/plib/ssg.h	/^  void setTraversalMaskBits ( int t ) { traversal_mask |=  t ; }$/;"	f	class:ssgEntity
setTurboParameters	modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::setTurboParameters (bool turbo_on, float turbo_rpm, float turbo_lag)$/;"	f	class:CarSoundData
setTurboSound	modules/graphic/ssggraph/SoundInterface.h	/^	void setTurboSound (const char* sound_name)$/;"	f	class:SoundInterface
setUpwardSpeed	windows/include/plib/ssgaFire.h	/^  void setUpwardSpeed ( float spd )$/;"	f	class:ssgaFire
setUserData	windows/include/plib/ssg.h	/^  void setUserData ( ssgBase *s )$/;"	f	class:ssgBase
setUserLocalDir	windows/main.cpp	/^static void setUserLocalDir(char* buf, const int bufsize)$/;"	f	file:
setValue	libs/racescreens/carsetupscreen.cpp	/^		void setValue(tdble value)$/;"	f	class:cGuiSetupValue	file:
setValue	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setValue(Scalar xx, Scalar xy, Scalar xz, $/;"	f	class:Matrix
setValue	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setValue(const double *m) {$/;"	f	class:Matrix
setValue	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setValue(const float *m) {$/;"	f	class:Matrix
setValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  void setValue(Scalar x, Scalar y, Scalar z) {$/;"	f	class:Tuple3
setValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  void setValue(const double v[3]) {$/;"	f	class:Tuple3
setValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  void setValue(const float v[3]) {$/;"	f	class:Tuple3
setValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  void setValue(Scalar x, Scalar y, Scalar z, Scalar w) {$/;"	f	class:Tuple4
setValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  void setValue(const double v[4]) {$/;"	f	class:Tuple4
setValue	modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  void setValue(const float v[4]) {$/;"	f	class:Tuple4
setValue	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void setValue(const Point& min, const Point& max) { $/;"	f	class:BBox
setValue	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::setValue(const double m[16]) {$/;"	f	class:Transform
setValue	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::setValue(const float m[16]) {$/;"	f	class:Transform
setVariance	libs/learning/Distribution.h	/^	virtual void setVariance (real var) $/;"	f	class:NormalDistribution
setVariance	libs/learning/Distribution.h	/^	virtual void setVariance (real var) $/;"	f	class:UniformDistribution
setVariance	libs/learning/Distribution.h	/^	virtual void setVariance (real var)$/;"	f	class:ExponentialDistribution
setVariance	libs/learning/Distribution.h	/^	virtual void setVariance (real var)$/;"	f	class:LaplacianDistribution
setVel	windows/include/plib/sg.h	/^  void   setVel   ( float x, float y, float z ) { sgSetVec3 ( vel  ,x,y,z ) ; }$/;"	f	class:sgParticle
setVel	windows/include/plib/sg.h	/^  void   setVel   ( sgVec3 v ) { sgCopyVec3 ( vel  , v ) ; }$/;"	f	class:sgParticle
setVertices	modules/graphic/ssggraph/grcarlight.h	/^  virtual void setVertices  ( ssgVertexArray   *vl ) {  ssgVtxTable::setVertices(vl);}$/;"	f	class:ssgVtxTableCarlight
setVertices	modules/graphic/ssggraph/grshadow.h	/^  virtual void setVertices  ( ssgVertexArray   *vl ) {  ssgVtxTable::setVertices(vl);}$/;"	f	class:ssgVtxTableShadow
setVertices	modules/graphic/ssggraph/grsmoke.h	/^  virtual void setVertices  ( ssgVertexArray   *vl ) {  ssgVtxTable::setVertices(vl);}$/;"	f	class:ssgVtxTableSmoke
setVertices	modules/graphic/ssggraph/grvtxtable.h	/^  virtual void setVertices  ( ssgVertexArray   *vl ) {  ssgVtxTable::setVertices(vl);}$/;"	f	class:grVtxTable
setViewMode	modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::setViewMode(int vm) {$/;"	f	class:cGrTrackMap
setViewport	modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::setViewport(int x, int y, int w, int h)$/;"	f	class:cGrCarCamMirror
setVolume	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setVolume (float vol)$/;"	f	class:OpenalTorcsSound
setVolume	modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::setVolume(float vol)$/;"	f	class:PlibTorcsSound
setVolume	modules/graphic/ssggraph/TorcsSound.cpp	/^void TorcsSound::setVolume(float vol)$/;"	f	class:TorcsSound
setWaveHeight	windows/include/plib/ssgaWaveSystem.h	/^  void  setWaveHeight ( float h ) { height  = h ; }$/;"	f	class:ssgaWaveTrain
setWaveTrain	windows/include/plib/ssgaWaveSystem.h	/^  void setWaveTrain ( int i, ssgaWaveTrain *t )$/;"	f	class:ssgaWaveSystem
setWeight	drivers/berniw/pathfinder.h	/^		inline void setWeight(tdble w) { weight = w; }$/;"	f	class:PathSeg
setWeight	drivers/berniw2/pathfinder.h	/^		inline void setWeight(tdble w) { weight = w; }$/;"	f	class:PathSeg
setWeight	drivers/berniw3/pathfinder.h	/^		inline void setWeight(tdble w) { weight = w; }$/;"	f	class:PathSeg
setWeight	drivers/human/pathfinder.h	/^		inline void setWeight(tdble w) { weight = w; }$/;"	f	class:PathSeg
setWidth	drivers/olethros/TrackData.cpp	/^void TrackData::setWidth(float width)$/;"	f	class:TrackData
setWindDirn	windows/include/plib/ssgaWaveSystem.h	/^  void  setWindDirn      ( float dirn             ) { windHeading = dirn  ; }$/;"	f	class:ssgaWaveSystem
setWindSpeed	windows/include/plib/ssgaWaveSystem.h	/^  void  setWindSpeed     ( float speed            ) { windSpeed   = speed ; }$/;"	f	class:ssgaWaveSystem
setZoom	modules/graphic/ssggraph/grcam.cpp	/^    void setZoom(int cmd) {$/;"	f	class:cGrCarCamCenter
setZoom	modules/graphic/ssggraph/grcam.cpp	/^    void setZoom(int cmd) {$/;"	f	class:cGrCarCamRoadZoom
setZoom	modules/graphic/ssggraph/grcam.cpp	/^void cGrPerspCamera::setZoom(int cmd)$/;"	f	class:cGrPerspCamera
setZoom	modules/graphic/ssggraph/grcam.h	/^    void setZoom(int cmd) { }$/;"	f	class:cGrOrthoCamera
setZoom	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::setZoom(long zoom)$/;"	f	class:cGrScreen
set_ith_column	topview/mat.hpp	/^      void set_ith_column(unsigned int i, const vec<M, T>& col)$/;"	f	class:kmuvcl::math::mat
set_ith_row	topview/mat.hpp	/^      void set_ith_row(unsigned int i, const vec<N, T>& row)$/;"	f	class:kmuvcl::math::mat
set_max	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline void set_max(Scalar& x, Scalar y) { if (x < y) x = y; }$/;"	f
set_min	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline void set_min(Scalar& x, Scalar y) { if (x > y) x = y; }$/;"	f
set_texcoord	tools/texmapper/maintexmapper.cpp	/^void set_texcoord(ssgEntity *start, sgMat4 m)$/;"	f
set_texture	topview/topview.cpp	/^void set_texture(const char* filename, GLuint* texid_) {$/;"	f
set_texture_coord	tools/texmapper/maintexmapper.cpp	/^void set_texture_coord(void)$/;"	f
set_to_zero	topview/mat.hpp	/^      void set_to_zero()$/;"	f	class:kmuvcl::math::mat
set_to_zero	topview/vec.hpp	/^      void set_to_zero()$/;"	f	class:kmuvcl::math::vec
setup	interfaces/car.h	/^	tCarPitSetup setup;$/;"	m	struct:__anon84
setup	windows/include/plib/ssg.h	/^  void setup ()$/;"	f	class:ssgLight
setupGear	modules/simu/simuv2/transmission.cpp	/^static void setupGear(void* hdle, tCar *car, tCarElt *carElt, tTransmission *trans, tdble gRatio, tdble fRatio, int i)$/;"	f	file:
setuplabel	libs/racescreens/carsetupscreen.cpp	/^static const char* setuplabel[6] = { "Practice", "Qualifying", "Race", "Backup 1", "Backup 2", "Backup 3"};$/;"	v	file:
setuptype	libs/racescreens/carsetupscreen.cpp	/^static rtCarPitSetupType setuptype[6] = { PRACTICE, QUALIFYING, RACE, BACKUP1, BACKUP2, BACKUP3};$/;"	v	file:
sg2t3	modules/simu/simuv3/sim.h	/^inline void sg2t3 (sgVec3& v, t3Dd& p)$/;"	f
sgACos	windows/include/plib/sg.h	/^inline SGfloat sgACos ( SGfloat s )$/;"	f
sgASin	windows/include/plib/sg.h	/^inline SGfloat sgASin ( SGfloat s )$/;"	f
sgATan	windows/include/plib/sg.h	/^inline SGfloat sgATan ( SGfloat s )$/;"	f
sgATan2	windows/include/plib/sg.h	/^inline SGfloat sgATan2 ( SGfloat y, SGfloat x )$/;"	f
sgAbs	windows/include/plib/sg.h	/^inline SGfloat sgAbs    ( const SGfloat a ) { return (a<SG_ZERO) ? -a : a ; }$/;"	f
sgAddScaledVec2	windows/include/plib/sg.h	/^inline void sgAddScaledVec2 ( sgVec2 dst, const sgVec2 src, const SGfloat s )$/;"	f
sgAddScaledVec2	windows/include/plib/sg.h	/^inline void sgAddScaledVec2 ( sgVec2 dst, const sgVec2 src1, const sgVec2 src2, const SGfloat s )$/;"	f
sgAddScaledVec3	windows/include/plib/sg.h	/^inline void sgAddScaledVec3 ( sgVec3 dst, const sgVec3 src, const SGfloat s )$/;"	f
sgAddScaledVec3	windows/include/plib/sg.h	/^inline void sgAddScaledVec3 ( sgVec3 dst, const sgVec3 src1, const sgVec3 src2, const SGfloat s )$/;"	f
sgAddScaledVec4	windows/include/plib/sg.h	/^inline void sgAddScaledVec4 ( sgVec4 dst, const sgVec4 src, const SGfloat s )$/;"	f
sgAddScaledVec4	windows/include/plib/sg.h	/^inline void sgAddScaledVec4 ( sgVec4 dst, const sgVec4 src1, const sgVec4 src2, const SGfloat s )$/;"	f
sgAddVec2	windows/include/plib/sg.h	/^inline void sgAddVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgAddVec2	windows/include/plib/sg.h	/^inline void sgAddVec2 ( sgVec2 dst, const sgVec2 src1, const sgVec2 src2 )$/;"	f
sgAddVec3	windows/include/plib/sg.h	/^inline void sgAddVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgAddVec3	windows/include/plib/sg.h	/^inline void sgAddVec3 ( sgVec3 dst, const sgVec3 src1, const sgVec3 src2 )$/;"	f
sgAddVec4	windows/include/plib/sg.h	/^inline void sgAddVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgAddVec4	windows/include/plib/sg.h	/^inline void sgAddVec4 ( sgVec4 dst, const sgVec4 src1, const sgVec4 src2 )$/;"	f
sgAngleBetweenNormalizedVec3	windows/include/plib/sg.h	/^inline SGfloat sgAngleBetweenNormalizedVec3 ( sgVec3 v1, sgVec3 v2 )$/;"	f
sgBox	windows/include/plib/sg.h	/^  sgBox () { empty () ; }$/;"	f	class:sgBox
sgBox	windows/include/plib/sg.h	/^class sgBox$/;"	c
sgCompareFloat	windows/include/plib/sg.h	/^inline int sgCompareFloat ( const SGfloat a, const SGfloat b, const SGfloat tol )$/;"	f
sgCompareVec2	windows/include/plib/sg.h	/^inline int sgCompareVec2 ( const sgVec2 a, const sgVec2 b, const SGfloat tol )$/;"	f
sgCompareVec3	windows/include/plib/sg.h	/^inline int sgCompareVec3 ( const sgVec3 a, const sgVec3 b, const SGfloat tol )$/;"	f
sgCompareVec4	windows/include/plib/sg.h	/^inline int sgCompareVec4 ( const sgVec4 a, const sgVec4 b, const SGfloat tol )$/;"	f
sgCoord	windows/include/plib/sg.h	/^struct sgCoord$/;"	s
sgCopyCoord	windows/include/plib/sg.h	/^inline void sgCopyCoord ( sgCoord *dst, const sgCoord *src )$/;"	f
sgCopyMat4	windows/include/plib/sg.h	/^inline void sgCopyMat4 ( sgMat4 dst, const sgMat4 src )$/;"	f
sgCopyQuat	windows/include/plib/sg.h	/^inline void sgCopyQuat ( sgQuat dst, const sgQuat src )$/;"	f
sgCopyVec2	windows/include/plib/sg.h	/^inline void sgCopyVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgCopyVec3	windows/include/plib/sg.h	/^inline void sgCopyVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgCopyVec4	windows/include/plib/sg.h	/^inline void sgCopyVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgCos	windows/include/plib/sg.h	/^inline SGfloat sgCos ( SGfloat s )$/;"	f
sgDistToLineSegmentVec3	windows/include/plib/sg.h	/^inline SGfloat sgDistToLineSegmentVec3 ( const sgLineSegment3 line,$/;"	f
sgDistToLineVec2	windows/include/plib/sg.h	/^inline SGfloat sgDistToLineVec2 ( const sgVec3 line, const sgVec2 pnt )$/;"	f
sgDistToLineVec3	windows/include/plib/sg.h	/^inline SGfloat sgDistToLineVec3 ( const sgLine3 line,$/;"	f
sgDistToPlaneVec3	windows/include/plib/sg.h	/^inline SGfloat sgDistToPlaneVec3 ( const sgVec4 plane, const sgVec3 pnt )$/;"	f
sgDistanceSquaredVec2	windows/include/plib/sg.h	/^inline SGfloat sgDistanceSquaredVec2 ( const sgVec2 a, const sgVec2 b )$/;"	f
sgDistanceSquaredVec3	windows/include/plib/sg.h	/^inline SGfloat sgDistanceSquaredVec3 ( const sgVec3 a, const sgVec3 b )$/;"	f
sgDistanceSquaredVec4	windows/include/plib/sg.h	/^inline SGfloat sgDistanceSquaredVec4 ( const sgVec4 a, const sgVec4 b )$/;"	f
sgDistanceVec2	windows/include/plib/sg.h	/^inline SGfloat sgDistanceVec2 ( const sgVec2 a, const sgVec2 b )$/;"	f
sgDistanceVec3	windows/include/plib/sg.h	/^inline SGfloat sgDistanceVec3 ( const sgVec3 a, const sgVec3 b )$/;"	f
sgDistanceVec4	windows/include/plib/sg.h	/^inline SGfloat sgDistanceVec4 ( const sgVec4 a, const sgVec4 b )$/;"	f
sgEqualVec2	windows/include/plib/sg.h	/^inline int sgEqualVec2 ( const sgVec2 a, const sgVec2 b )$/;"	f
sgEqualVec3	windows/include/plib/sg.h	/^inline int sgEqualVec3 ( const sgVec3 a, const sgVec3 b )$/;"	f
sgEqualVec4	windows/include/plib/sg.h	/^inline int sgEqualVec4 ( const sgVec4 a, const sgVec4 b )$/;"	f
sgEulerToQuat	windows/include/plib/sg.h	/^inline void sgEulerToQuat( sgQuat dst,$/;"	f
sgFloat	windows/include/plib/sg.h	31;"	d
sgFrustum	windows/include/plib/sg.h	/^  sgFrustum (void)$/;"	f	class:sgFrustum
sgFrustum	windows/include/plib/sg.h	/^class sgFrustum$/;"	c
sgFullXformPnt3	windows/include/plib/sg.h	/^inline void sgFullXformPnt3 ( sgVec3 dst, const sgMat4 mat ) { sgFullXformPnt3 ( dst, dst, mat ) ; }$/;"	f
sgFullXformPnt4	windows/include/plib/sg.h	/^inline void sgFullXformPnt4 ( sgVec4 dst, const sgMat4 mat ) { sgFullXformPnt4 ( dst, dst, mat ) ; }$/;"	f
sgGetGravity	windows/include/plib/sg.h	/^inline float  sgGetGravity     () { return - _sgGravity[2] ; }$/;"	f
sgGetGravityVec3	windows/include/plib/sg.h	/^inline float *sgGetGravityVec3 () { return   _sgGravity    ; }$/;"	f
sgHPRToQuat	windows/include/plib/sg.h	/^inline void sgHPRToQuat ( sgQuat dst, SGfloat h, SGfloat p, SGfloat r )$/;"	f
sgHPRToQuat	windows/include/plib/sg.h	/^inline void sgHPRToQuat ( sgQuat dst, const sgVec3 hpr )$/;"	f
sgHeightAbovePlaneVec3	windows/include/plib/sg.h	/^inline SGfloat sgHeightAbovePlaneVec3 ( const sgVec4 plane, const sgVec3 pnt )$/;"	f
sgHeightOfPlaneVec2	windows/include/plib/sg.h	/^inline SGfloat sgHeightOfPlaneVec2 ( const sgVec4 plane, const sgVec2 pnt )$/;"	f
sgHypot	windows/include/plib/sg.h	/^inline SGfloat sgHypot  ( const SGfloat x, const SGfloat y ) { return sgSqrt( sgSquare(x) + sgSquare(y) ); }$/;"	f
sgInvertMat4	windows/include/plib/sg.h	/^inline void sgInvertMat4 ( sgMat4 dst ) { sgInvertMat4 ( dst, dst ) ; }$/;"	f
sgInvertQuat	windows/include/plib/sg.h	/^inline void sgInvertQuat ( sgQuat dst ) { sgInvertQuat ( dst, dst ) ; }$/;"	f
sgInvertQuat	windows/include/plib/sg.h	/^inline void sgInvertQuat ( sgQuat dst, const sgQuat src )$/;"	f
sgLengthSquaredVec2	windows/include/plib/sg.h	/^inline SGfloat sgLengthSquaredVec2 ( sgVec2 const src )$/;"	f
sgLengthSquaredVec3	windows/include/plib/sg.h	/^inline SGfloat sgLengthSquaredVec3 ( sgVec3 const src )$/;"	f
sgLengthSquaredVec4	windows/include/plib/sg.h	/^inline SGfloat sgLengthSquaredVec4 ( sgVec4 const src )$/;"	f
sgLengthVec2	windows/include/plib/sg.h	/^inline SGfloat sgLengthVec2 ( const sgVec2 src )$/;"	f
sgLengthVec3	windows/include/plib/sg.h	/^inline SGfloat sgLengthVec3 ( const sgVec3 src )$/;"	f
sgLengthVec4	windows/include/plib/sg.h	/^inline SGfloat sgLengthVec4 ( const sgVec4 src )$/;"	f
sgLerp	windows/include/plib/sg.h	/^inline SGfloat sgLerp ( const SGfloat a, const SGfloat b, const SGfloat f )$/;"	f
sgLerpAnglesVec3	windows/include/plib/sg.h	/^inline void sgLerpAnglesVec3 ( sgVec3 dst, const sgVec3 a,$/;"	f
sgLerpVec2	windows/include/plib/sg.h	/^inline void sgLerpVec2 ( sgVec2 dst, const sgVec2 a, const sgVec2 b, const SGfloat f )$/;"	f
sgLerpVec3	windows/include/plib/sg.h	/^inline void sgLerpVec3 ( sgVec3 dst, const sgVec3 a, const sgVec3 b, const SGfloat f )$/;"	f
sgLerpVec4	windows/include/plib/sg.h	/^inline void sgLerpVec4 ( sgVec4 dst, const sgVec4 a, const sgVec4 b, const SGfloat f )$/;"	f
sgLine3	windows/include/plib/sg.h	/^struct sgLine3    \/* Infinite line *\/$/;"	s
sgLineSegment3	windows/include/plib/sg.h	/^struct sgLineSegment3   \/* Bounded line segment *\/$/;"	s
sgLineSegment3ToLine3	windows/include/plib/sg.h	/^inline void sgLineSegment3ToLine3 ( sgLine3 *line,$/;"	f
sgLocalRotQuat	windows/include/plib/sg.h	1368;"	d
sgMake2DLine	windows/include/plib/sg.h	/^inline void sgMake2DLine ( sgVec3 dst, const sgVec2 a, const sgVec2 b )$/;"	f
sgMakeCoordMat4	windows/include/plib/sg.h	/^inline void sgMakeCoordMat4( sgMat4 dst, const sgCoord *src )$/;"	f
sgMakeCoordMat4	windows/include/plib/sg.h	/^inline void sgMakeCoordMat4( sgMat4 dst, const sgVec3 xyz, const sgVec3 hpr )$/;"	f
sgMakeIdentMat4	windows/include/plib/sg.h	/^inline void sgMakeIdentMat4 ( sgMat4 dst )$/;"	f
sgMakeIdentQuat	windows/include/plib/sg.h	/^inline void sgMakeIdentQuat ( sgQuat dst )$/;"	f
sgMakePlane	windows/include/plib/sg.h	/^inline void sgMakePlane ( sgVec4 dst, const sgVec3 a, const sgVec3 b, const sgVec3 c )$/;"	f
sgMakePlane	windows/include/plib/sg.h	/^inline void sgMakePlane ( sgVec4 dst, const sgVec3 normal, const sgVec3 pnt )$/;"	f
sgMakeRotMat4	windows/include/plib/sg.h	/^inline void sgMakeRotMat4   ( sgMat4 dst, const sgVec3 hpr )$/;"	f
sgMakeRotMat4	windows/include/plib/sg.h	/^inline void sgMakeRotMat4   ( sgMat4 dst,const SGfloat h, const SGfloat p, const SGfloat r )$/;"	f
sgMat3	windows/include/plib/sg.h	/^typedef SGfloat sgMat3  [3][3] ;$/;"	t
sgMat4	windows/include/plib/sg.h	/^typedef SGfloat sgMat4  [4][4] ;$/;"	t
sgNegateVec2	windows/include/plib/sg.h	/^inline void sgNegateVec2 ( sgVec2 dst )$/;"	f
sgNegateVec2	windows/include/plib/sg.h	/^inline void sgNegateVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgNegateVec3	windows/include/plib/sg.h	/^inline void sgNegateVec3 ( sgVec3 dst )$/;"	f
sgNegateVec3	windows/include/plib/sg.h	/^inline void sgNegateVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgNegateVec4	windows/include/plib/sg.h	/^inline void sgNegateVec4 ( sgVec4 dst )$/;"	f
sgNegateVec4	windows/include/plib/sg.h	/^inline void sgNegateVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgNormaliseQuat	windows/include/plib/sg.h	/^inline void sgNormaliseQuat ( sgQuat dst ) { sgNormaliseQuat ( dst, dst ) ; }$/;"	f
sgNormaliseQuat	windows/include/plib/sg.h	/^inline void sgNormaliseQuat ( sgQuat dst, const sgQuat src )$/;"	f
sgNormaliseVec2	windows/include/plib/sg.h	/^inline void sgNormaliseVec2 ( sgVec2 dst )$/;"	f
sgNormaliseVec2	windows/include/plib/sg.h	/^inline void sgNormaliseVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgNormaliseVec3	windows/include/plib/sg.h	/^inline void sgNormaliseVec3 ( sgVec3 dst )$/;"	f
sgNormaliseVec3	windows/include/plib/sg.h	/^inline void sgNormaliseVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgNormaliseVec4	windows/include/plib/sg.h	/^inline void sgNormaliseVec4 ( sgVec4 dst )$/;"	f
sgNormaliseVec4	windows/include/plib/sg.h	/^inline void sgNormaliseVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgNormalizeQuat	windows/include/plib/sg.h	706;"	d
sgNormalizeVec2	windows/include/plib/sg.h	703;"	d
sgNormalizeVec3	windows/include/plib/sg.h	704;"	d
sgNormalizeVec4	windows/include/plib/sg.h	705;"	d
sgParticle	windows/include/plib/sg.h	/^  sgParticle ( float mass, float x = 0.0f, float y = 0.0f, float z = 0.0f )$/;"	f	class:sgParticle
sgParticle	windows/include/plib/sg.h	/^  sgParticle ( float mass, sgVec3 _pos )$/;"	f	class:sgParticle
sgParticle	windows/include/plib/sg.h	/^class sgParticle$/;"	c
sgPerlinNoise_1D	windows/include/plib/sg.h	/^class sgPerlinNoise_1D$/;"	c
sgPerlinNoise_2D	windows/include/plib/sg.h	/^class sgPerlinNoise_2D$/;"	c
sgPerlinNoise_3D	windows/include/plib/sg.h	/^class sgPerlinNoise_3D$/;"	c
sgPointInTriangle	windows/include/plib/sg.h	/^inline bool sgPointInTriangle ( sgVec3 point, sgVec3 tri[3] )$/;"	f
sgPostMultQuat	windows/include/plib/sg.h	/^inline void sgPostMultQuat ( sgQuat dst, const sgQuat q )$/;"	f
sgPostRotQuat	windows/include/plib/sg.h	/^inline void sgPostRotQuat ( sgQuat dst, const SGfloat angle, const sgVec3 axis )$/;"	f
sgPostRotQuat	windows/include/plib/sg.h	/^inline void sgPostRotQuat ( sgQuat dst,$/;"	f
sgPreMultQuat	windows/include/plib/sg.h	/^inline void sgPreMultQuat ( sgQuat dst, const sgQuat q )$/;"	f
sgPreRotQuat	windows/include/plib/sg.h	/^inline void sgPreRotQuat ( sgQuat dst, const SGfloat angle, const sgVec3 axis )$/;"	f
sgPreRotQuat	windows/include/plib/sg.h	/^inline void sgPreRotQuat ( sgQuat dst,$/;"	f
sgQuat	windows/include/plib/sg.h	/^typedef sgVec4 sgQuat ;$/;"	t
sgReflectInPlaneVec3	windows/include/plib/sg.h	/^inline void sgReflectInPlaneVec3 ( sgVec3 dst, const sgVec4 plane ) $/;"	f
sgRotQuat	windows/include/plib/sg.h	1371;"	d
sgScalarProductVec2	windows/include/plib/sg.h	/^inline SGfloat sgScalarProductVec2 ( const sgVec2 a, const sgVec2 b )$/;"	f
sgScalarProductVec3	windows/include/plib/sg.h	/^inline SGfloat sgScalarProductVec3 ( const sgVec3 a, const sgVec3 b )$/;"	f
sgScalarProductVec4	windows/include/plib/sg.h	/^inline SGfloat sgScalarProductVec4 ( const sgVec4 a, const sgVec4 b )$/;"	f
sgScaleMat4	windows/include/plib/sg.h	/^inline void sgScaleMat4 ( sgMat4 dst, const sgMat4 src, const SGfloat scale )$/;"	f
sgScaleVec2	windows/include/plib/sg.h	/^inline void sgScaleVec2 ( sgVec2 dst, const SGfloat s )$/;"	f
sgScaleVec2	windows/include/plib/sg.h	/^inline void sgScaleVec2 ( sgVec2 dst, const sgVec2 src, const SGfloat s )$/;"	f
sgScaleVec3	windows/include/plib/sg.h	/^inline void sgScaleVec3 ( sgVec3 dst, const SGfloat s )$/;"	f
sgScaleVec3	windows/include/plib/sg.h	/^inline void sgScaleVec3 ( sgVec3 dst, const sgVec3 src, const SGfloat s )$/;"	f
sgScaleVec4	windows/include/plib/sg.h	/^inline void sgScaleVec4 ( sgVec4 dst, const SGfloat s )$/;"	f
sgScaleVec4	windows/include/plib/sg.h	/^inline void sgScaleVec4 ( sgVec4 dst, const sgVec4 src, const SGfloat s )$/;"	f
sgSetCoord	windows/include/plib/sg.h	/^inline void sgSetCoord ( sgCoord *dst, const SGfloat x, const SGfloat y, const SGfloat z,$/;"	f
sgSetCoord	windows/include/plib/sg.h	/^inline void sgSetCoord ( sgCoord *dst, const sgVec3 xyz, const sgVec3 hpr )$/;"	f
sgSetCoord	windows/include/plib/sg.h	/^inline void sgSetCoord ( sgCoord *dst, sgdCoord *src )$/;"	f
sgSetGravity	windows/include/plib/sg.h	/^inline void   sgSetGravity     ( float  g ) { sgSetVec3 ( _sgGravity, 0.0f, 0.0f, -g ) ; }$/;"	f
sgSetGravityVec3	windows/include/plib/sg.h	/^inline void   sgSetGravityVec3 ( sgVec3 g ) { sgCopyVec3 ( _sgGravity, g ) ; }$/;"	f
sgSetMat4	windows/include/plib/sg.h	/^inline void sgSetMat4 ( sgMat4 dst, sgdMat4 src )$/;"	f
sgSetQuat	windows/include/plib/sg.h	/^inline void sgSetQuat ( sgQuat dst, sgdQuat src )$/;"	f
sgSetQuat	windows/include/plib/sg.h	/^inline void sgSetQuat ( sgQuat dst,$/;"	f
sgSetVec2	windows/include/plib/sg.h	/^inline void sgSetVec2 ( sgVec2 dst, const SGfloat x, const SGfloat y )$/;"	f
sgSetVec2	windows/include/plib/sg.h	/^inline void sgSetVec2 ( sgVec2 dst, sgdVec2 src )$/;"	f
sgSetVec3	windows/include/plib/sg.h	/^inline void sgSetVec3 ( sgVec3 dst, const SGfloat x, const SGfloat y, const SGfloat z )$/;"	f
sgSetVec3	windows/include/plib/sg.h	/^inline void sgSetVec3 ( sgVec3 dst, sgdVec3 src )$/;"	f
sgSetVec4	windows/include/plib/sg.h	/^inline void sgSetVec4 ( sgVec4 dst, const SGfloat x, const SGfloat y, const SGfloat z, const SGfloat w )$/;"	f
sgSetVec4	windows/include/plib/sg.h	/^inline void sgSetVec4 ( sgVec4 dst, sgdVec4 src )$/;"	f
sgSin	windows/include/plib/sg.h	/^inline SGfloat sgSin ( SGfloat s )$/;"	f
sgSphere	windows/include/plib/sg.h	/^  sgSphere () { empty () ; }$/;"	f	class:sgSphere
sgSphere	windows/include/plib/sg.h	/^class sgSphere$/;"	c
sgSpringDamper	windows/include/plib/sg.h	/^  sgSpringDamper ( sgParticle *_p0, sgParticle *_p1,$/;"	f	class:sgSpringDamper
sgSpringDamper	windows/include/plib/sg.h	/^  sgSpringDamper ()$/;"	f	class:sgSpringDamper
sgSpringDamper	windows/include/plib/sg.h	/^class sgSpringDamper$/;"	c
sgSqrt	windows/include/plib/sg.h	/^inline SGfloat sgSqrt   ( const SGfloat x ) { return (SGfloat) sqrt ( x ) ; }$/;"	f
sgSquare	windows/include/plib/sg.h	/^inline SGfloat sgSquare ( const SGfloat x ) { return x * x ; }$/;"	f
sgSubVec2	windows/include/plib/sg.h	/^inline void sgSubVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgSubVec2	windows/include/plib/sg.h	/^inline void sgSubVec2 ( sgVec2 dst, const sgVec2 src1, const sgVec2 src2 )$/;"	f
sgSubVec3	windows/include/plib/sg.h	/^inline void sgSubVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgSubVec3	windows/include/plib/sg.h	/^inline void sgSubVec3 ( sgVec3 dst, const sgVec3 src1, const sgVec3 src2 )$/;"	f
sgSubVec4	windows/include/plib/sg.h	/^inline void sgSubVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgSubVec4	windows/include/plib/sg.h	/^inline void sgSubVec4 ( sgVec4 dst, const sgVec4 src1, const sgVec4 src2 )$/;"	f
sgTan	windows/include/plib/sg.h	/^inline SGfloat sgTan ( SGfloat s )$/;"	f
sgVec2	windows/include/plib/sg.h	/^typedef SGfloat sgVec2 [ 2 ] ;$/;"	t
sgVec3	windows/include/plib/sg.h	/^typedef SGfloat sgVec3 [ 3 ] ;$/;"	t
sgVec4	windows/include/plib/sg.h	/^typedef SGfloat sgVec4 [ 4 ] ;$/;"	t
sgVec9	windows/include/plib/ssgaShapes.h	/^typedef float sgVec9 [ 9 ] ;  \/* Needed for ssgaPatch *\/$/;"	t
sgWorldRotQuat	windows/include/plib/sg.h	1367;"	d
sgXformPnt3	windows/include/plib/sg.h	/^inline void sgXformPnt3     ( sgVec3 dst, const sgMat4 mat ) { sgXformPnt3 ( dst, dst, mat ) ; }$/;"	f
sgXformPnt4	windows/include/plib/sg.h	/^inline void sgXformPnt4     ( sgVec4 dst, const sgMat4 mat ) { sgXformPnt4 ( dst, dst, mat ) ; }$/;"	f
sgXformVec3	windows/include/plib/sg.h	/^inline void sgXformVec3     ( sgVec3 dst, const sgMat4 mat ) { sgXformVec3 ( dst, dst, mat ) ; }$/;"	f
sgXformVec4	windows/include/plib/sg.h	/^inline void sgXformVec4     ( sgVec4 dst, const sgMat4 mat ) { sgXformVec4 ( dst, dst, mat ) ; }$/;"	f
sgZeroCoord	windows/include/plib/sg.h	/^inline void sgZeroCoord ( sgCoord *dst )$/;"	f
sgZeroVec2	windows/include/plib/sg.h	/^inline void sgZeroVec2 ( sgVec2 dst ) { dst[0]=dst[1]=SG_ZERO ; }$/;"	f
sgZeroVec3	windows/include/plib/sg.h	/^inline void sgZeroVec3 ( sgVec3 dst ) { dst[0]=dst[1]=dst[2]=SG_ZERO ; }$/;"	f
sgZeroVec4	windows/include/plib/sg.h	/^inline void sgZeroVec4 ( sgVec4 dst ) { dst[0]=dst[1]=dst[2]=dst[3]=SG_ZERO ; }$/;"	f
sgdACos	windows/include/plib/sg.h	/^inline SGDfloat sgdACos ( SGDfloat s )$/;"	f
sgdASin	windows/include/plib/sg.h	/^inline SGDfloat sgdASin ( SGDfloat s )$/;"	f
sgdATan	windows/include/plib/sg.h	/^inline SGDfloat sgdATan ( SGDfloat s )$/;"	f
sgdATan2	windows/include/plib/sg.h	/^inline SGDfloat sgdATan2 ( SGDfloat y, SGDfloat x )$/;"	f
sgdAbs	windows/include/plib/sg.h	/^inline SGDfloat sgdAbs    ( const SGDfloat a ) { return ( a < SGD_ZERO ) ? -a : a ; }$/;"	f
sgdAddScaledVec2	windows/include/plib/sg.h	/^inline void sgdAddScaledVec2 ( sgdVec2 dst, const sgdVec2 src, const SGDfloat s )$/;"	f
sgdAddScaledVec2	windows/include/plib/sg.h	/^inline void sgdAddScaledVec2 ( sgdVec2 dst, const sgdVec2 src1, const sgdVec2 src2, const SGDfloat s )$/;"	f
sgdAddScaledVec3	windows/include/plib/sg.h	/^inline void sgdAddScaledVec3 ( sgdVec3 dst, const sgdVec3 src, const SGDfloat s )$/;"	f
sgdAddScaledVec3	windows/include/plib/sg.h	/^inline void sgdAddScaledVec3 ( sgdVec3 dst, const sgdVec3 src1, const sgdVec3 src2, const SGDfloat s )$/;"	f
sgdAddScaledVec4	windows/include/plib/sg.h	/^inline void sgdAddScaledVec4 ( sgdVec4 dst, const sgdVec4 src, const SGDfloat s )$/;"	f
sgdAddScaledVec4	windows/include/plib/sg.h	/^inline void sgdAddScaledVec4 ( sgdVec4 dst, const sgdVec4 src1, const sgdVec4 src2, const SGDfloat s )$/;"	f
sgdAddVec2	windows/include/plib/sg.h	/^inline void sgdAddVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdAddVec2	windows/include/plib/sg.h	/^inline void sgdAddVec2 ( sgdVec2 dst, const sgdVec2 src1, const sgdVec2 src2 )$/;"	f
sgdAddVec3	windows/include/plib/sg.h	/^inline void sgdAddVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdAddVec3	windows/include/plib/sg.h	/^inline void sgdAddVec3 ( sgdVec3 dst, const sgdVec3 src1, const sgdVec3 src2 )$/;"	f
sgdAddVec4	windows/include/plib/sg.h	/^inline void sgdAddVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdAddVec4	windows/include/plib/sg.h	/^inline void sgdAddVec4 ( sgdVec4 dst, const sgdVec4 src1, const sgdVec4 src2 )$/;"	f
sgdAngleBetweenNormalizedVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdAngleBetweenNormalizedVec3 ( sgdVec3 v1, sgdVec3 v2 )$/;"	f
sgdBox	windows/include/plib/sg.h	/^class sgdBox$/;"	c
sgdCompareFloat	windows/include/plib/sg.h	/^inline int sgdCompareFloat ( const SGDfloat a, const SGDfloat b, const SGDfloat tol )$/;"	f
sgdCompareVec2	windows/include/plib/sg.h	/^inline int sgdCompareVec2 ( const sgdVec2 a, const sgdVec2 b, const SGDfloat tol )$/;"	f
sgdCompareVec3	windows/include/plib/sg.h	/^inline int sgdCompareVec3 ( const sgdVec3 a, const sgdVec3 b, const SGDfloat tol )$/;"	f
sgdCompareVec4	windows/include/plib/sg.h	/^inline int sgdCompareVec4 ( const sgdVec4 a, const sgdVec4 b, const SGDfloat tol )$/;"	f
sgdCoord	windows/include/plib/sg.h	/^struct sgdCoord$/;"	s
sgdCopyCoord	windows/include/plib/sg.h	/^inline void sgdCopyCoord ( sgdCoord *dst, const sgdCoord *src )$/;"	f
sgdCopyMat4	windows/include/plib/sg.h	/^inline void sgdCopyMat4 ( sgdMat4 dst, const sgdMat4 src )$/;"	f
sgdCopyQuat	windows/include/plib/sg.h	/^inline void sgdCopyQuat ( sgdQuat dst, const sgdQuat src )$/;"	f
sgdCopyVec2	windows/include/plib/sg.h	/^inline void sgdCopyVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdCopyVec3	windows/include/plib/sg.h	/^inline void sgdCopyVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdCopyVec4	windows/include/plib/sg.h	/^inline void sgdCopyVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdCos	windows/include/plib/sg.h	/^inline SGDfloat sgdCos ( SGDfloat s )$/;"	f
sgdDistToLineSegmentVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdDistToLineSegmentVec3 ( const sgdLineSegment3 line,$/;"	f
sgdDistToLineVec2	windows/include/plib/sg.h	/^inline SGDfloat sgdDistToLineVec2 ( const sgdVec3 line, const sgdVec2 pnt )$/;"	f
sgdDistToLineVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdDistToLineVec3 ( const sgdLine3 line,$/;"	f
sgdDistToPlaneVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdDistToPlaneVec3 ( const sgdVec4 plane, const sgdVec3 pnt )$/;"	f
sgdDistanceSquaredVec2	windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceSquaredVec2 ( const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdDistanceSquaredVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceSquaredVec3 ( const sgdVec3 a, const sgdVec3 b )$/;"	f
sgdDistanceSquaredVec4	windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceSquaredVec4 ( const sgdVec4 a, const sgdVec4 b )$/;"	f
sgdDistanceVec2	windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceVec2 ( const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdDistanceVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceVec3 ( const sgdVec3 a, const sgdVec3 b )$/;"	f
sgdDistanceVec4	windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceVec4 ( const sgdVec4 a, const sgdVec4 b )$/;"	f
sgdEqualVec2	windows/include/plib/sg.h	/^inline int sgdEqualVec2 ( const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdEqualVec3	windows/include/plib/sg.h	/^inline int sgdEqualVec3 ( const sgdVec3 a, const sgdVec3 b )$/;"	f
sgdEqualVec4	windows/include/plib/sg.h	/^inline int sgdEqualVec4 ( const sgdVec4 a, const sgdVec4 b )$/;"	f
sgdEulerToQuat	windows/include/plib/sg.h	/^inline void sgdEulerToQuat( sgdQuat dst,$/;"	f
sgdFloat	windows/include/plib/sg.h	1410;"	d
sgdFrustum	windows/include/plib/sg.h	/^  sgdFrustum (void)$/;"	f	class:sgdFrustum
sgdFrustum	windows/include/plib/sg.h	/^class sgdFrustum$/;"	c
sgdFullXformPnt3	windows/include/plib/sg.h	/^inline void sgdFullXformPnt3 ( sgdVec3 dst, const sgdMat4 mat ) { sgdFullXformPnt3 ( dst, dst, mat ) ; }$/;"	f
sgdFullXformPnt4	windows/include/plib/sg.h	/^inline void sgdFullXformPnt4 ( sgdVec4 dst, const sgdMat4 mat ) { sgdFullXformPnt4 ( dst, dst, mat ) ; }$/;"	f
sgdHPRToQuat	windows/include/plib/sg.h	/^inline void sgdHPRToQuat ( sgdQuat dst, SGDfloat h, SGDfloat p, SGDfloat r )$/;"	f
sgdHPRToQuat	windows/include/plib/sg.h	/^inline void sgdHPRToQuat ( sgdQuat dst, const sgdVec3 hpr )$/;"	f
sgdHeightAbovePlaneVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdHeightAbovePlaneVec3 ( const sgdVec4 plane, const sgdVec3 pnt )$/;"	f
sgdHeightOfPlaneVec2	windows/include/plib/sg.h	/^inline SGDfloat sgdHeightOfPlaneVec2 ( const sgdVec4 plane, const sgdVec2 pnt )$/;"	f
sgdInvertMat4	windows/include/plib/sg.h	/^inline void sgdInvertMat4 ( sgdMat4 dst ) { sgdInvertMat4 ( dst, dst ) ; }$/;"	f
sgdInvertQuat	windows/include/plib/sg.h	/^inline void sgdInvertQuat ( sgdQuat dst ) { sgdInvertQuat ( dst, dst ) ; }$/;"	f
sgdInvertQuat	windows/include/plib/sg.h	/^inline void sgdInvertQuat ( sgdQuat dst, const sgdQuat src )$/;"	f
sgdLengthSquaredVec2	windows/include/plib/sg.h	/^inline SGDfloat sgdLengthSquaredVec2 ( sgdVec2 const src )$/;"	f
sgdLengthSquaredVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdLengthSquaredVec3 ( sgdVec3 const src )$/;"	f
sgdLengthSquaredVec4	windows/include/plib/sg.h	/^inline SGDfloat sgdLengthSquaredVec4 ( sgdVec4 const src )$/;"	f
sgdLengthVec2	windows/include/plib/sg.h	/^inline SGDfloat sgdLengthVec2 ( sgdVec2 const src )$/;"	f
sgdLengthVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdLengthVec3 ( sgdVec3 const src )$/;"	f
sgdLengthVec4	windows/include/plib/sg.h	/^inline SGDfloat sgdLengthVec4 ( sgdVec4 const src )$/;"	f
sgdLerpAnglesVec3	windows/include/plib/sg.h	/^inline void sgdLerpAnglesVec3 ( sgdVec3 dst, const sgdVec3 a,$/;"	f
sgdLerpVec2	windows/include/plib/sg.h	/^inline void sgdLerpVec2 ( sgdVec2 dst, const sgdVec2 a, const sgdVec2 b, const SGDfloat f )$/;"	f
sgdLerpVec3	windows/include/plib/sg.h	/^inline void sgdLerpVec3 ( sgdVec3 dst, const sgdVec3 a, const sgdVec3 b, const SGDfloat f )$/;"	f
sgdLerpVec4	windows/include/plib/sg.h	/^inline void sgdLerpVec4 ( sgdVec4 dst, const sgdVec4 a, const sgdVec4 b, const SGDfloat f )$/;"	f
sgdLine3	windows/include/plib/sg.h	/^struct sgdLine3    \/* Infinite line *\/$/;"	s
sgdLineSegment3	windows/include/plib/sg.h	/^struct sgdLineSegment3   \/* Bounded line segment *\/$/;"	s
sgdLineSegment3ToLine3	windows/include/plib/sg.h	/^inline void sgdLineSegment3ToLine3 ( sgdLine3 *line,$/;"	f
sgdMake2DLine	windows/include/plib/sg.h	/^inline void sgdMake2DLine ( sgdVec3 dst, const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdMakeCoordMat4	windows/include/plib/sg.h	/^inline void sgdMakeCoordMat4( sgdMat4 dst, const sgdCoord *src )$/;"	f
sgdMakeCoordMat4	windows/include/plib/sg.h	/^inline void sgdMakeCoordMat4( sgdMat4 dst, const sgdVec3 xyz, const sgdVec3 hpr )$/;"	f
sgdMakeIdentMat4	windows/include/plib/sg.h	/^inline void sgdMakeIdentMat4 ( sgdMat4 dst )$/;"	f
sgdMakeIdentQuat	windows/include/plib/sg.h	/^inline void sgdMakeIdentQuat ( sgdQuat dst )$/;"	f
sgdMakePlane	windows/include/plib/sg.h	/^inline void sgdMakePlane ( sgdVec4 dst, const sgdVec3 a, const sgdVec3 b, const sgdVec3 c )$/;"	f
sgdMakePlane	windows/include/plib/sg.h	/^inline void sgdMakePlane ( sgdVec4 dst, const sgdVec3 normal, const sgdVec3 pnt )$/;"	f
sgdMakeRotMat4	windows/include/plib/sg.h	/^inline void sgdMakeRotMat4   ( sgdMat4 dst, const SGDfloat h, const SGDfloat p, const SGDfloat r )$/;"	f
sgdMakeRotMat4	windows/include/plib/sg.h	/^inline void sgdMakeRotMat4   ( sgdMat4 dst, const sgdVec3 hpr )$/;"	f
sgdMat3	windows/include/plib/sg.h	/^typedef SGDfloat sgdMat3  [3][3] ;$/;"	t
sgdMat4	windows/include/plib/sg.h	/^typedef SGDfloat sgdMat4  [4][4] ;$/;"	t
sgdNegateVec2	windows/include/plib/sg.h	/^inline void sgdNegateVec2 ( sgdVec2 dst )$/;"	f
sgdNegateVec2	windows/include/plib/sg.h	/^inline void sgdNegateVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdNegateVec3	windows/include/plib/sg.h	/^inline void sgdNegateVec3 ( sgdVec3 dst )$/;"	f
sgdNegateVec3	windows/include/plib/sg.h	/^inline void sgdNegateVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdNegateVec4	windows/include/plib/sg.h	/^inline void sgdNegateVec4 ( sgdVec4 dst )$/;"	f
sgdNegateVec4	windows/include/plib/sg.h	/^inline void sgdNegateVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdNormaliseQuat	windows/include/plib/sg.h	/^inline void sgdNormaliseQuat ( sgdQuat dst ) { sgdNormaliseQuat ( dst, dst ) ; }$/;"	f
sgdNormaliseQuat	windows/include/plib/sg.h	/^inline void sgdNormaliseQuat ( sgdQuat dst, const sgdQuat src )$/;"	f
sgdNormaliseVec2	windows/include/plib/sg.h	/^inline void sgdNormaliseVec2 ( sgdVec2 dst )$/;"	f
sgdNormaliseVec2	windows/include/plib/sg.h	/^inline void sgdNormaliseVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdNormaliseVec3	windows/include/plib/sg.h	/^inline void sgdNormaliseVec3 ( sgdVec3 dst )$/;"	f
sgdNormaliseVec3	windows/include/plib/sg.h	/^inline void sgdNormaliseVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdNormaliseVec4	windows/include/plib/sg.h	/^inline void sgdNormaliseVec4 ( sgdVec4 dst )$/;"	f
sgdNormaliseVec4	windows/include/plib/sg.h	/^inline void sgdNormaliseVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdNormalizeQuat	windows/include/plib/sg.h	2055;"	d
sgdNormalizeVec2	windows/include/plib/sg.h	2052;"	d
sgdNormalizeVec3	windows/include/plib/sg.h	2053;"	d
sgdNormalizeVec4	windows/include/plib/sg.h	2054;"	d
sgdPostMultQuat	windows/include/plib/sg.h	/^inline void sgdPostMultQuat ( sgdQuat dst, const sgdQuat q )$/;"	f
sgdPreMultQuat	windows/include/plib/sg.h	/^inline void sgdPreMultQuat ( sgdQuat dst, const sgdQuat q )$/;"	f
sgdQuat	windows/include/plib/sg.h	/^typedef sgdVec4 sgdQuat ;$/;"	t
sgdReflectInPlaneVec3	windows/include/plib/sg.h	/^inline void sgdReflectInPlaneVec3 ( sgdVec3 dst, const sgdVec4 plane ) $/;"	f
sgdRotQuat	windows/include/plib/sg.h	/^inline void sgdRotQuat ( sgdQuat dst, const SGDfloat angle, const sgdVec3 axis )$/;"	f
sgdRotQuat	windows/include/plib/sg.h	/^inline void sgdRotQuat ( sgdQuat dst,$/;"	f
sgdScalarProductVec2	windows/include/plib/sg.h	/^inline SGDfloat sgdScalarProductVec2 ( const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdScalarProductVec3	windows/include/plib/sg.h	/^inline SGDfloat sgdScalarProductVec3 ( const sgdVec3 a, const sgdVec3 b )$/;"	f
sgdScalarProductVec4	windows/include/plib/sg.h	/^inline SGDfloat sgdScalarProductVec4 ( const sgdVec4 a, const sgdVec4 b )$/;"	f
sgdScaleMat4	windows/include/plib/sg.h	/^inline void sgdScaleMat4 ( sgdMat4 dst, const sgdMat4 src, const SGDfloat scale )$/;"	f
sgdScaleVec2	windows/include/plib/sg.h	/^inline void sgdScaleVec2 ( sgdVec2 dst, const SGDfloat s )$/;"	f
sgdScaleVec2	windows/include/plib/sg.h	/^inline void sgdScaleVec2 ( sgdVec2 dst, const sgdVec2 src, const SGDfloat s )$/;"	f
sgdScaleVec3	windows/include/plib/sg.h	/^inline void sgdScaleVec3 ( sgdVec3 dst, const SGDfloat s )$/;"	f
sgdScaleVec3	windows/include/plib/sg.h	/^inline void sgdScaleVec3 ( sgdVec3 dst, const sgdVec3 src, const SGDfloat s )$/;"	f
sgdScaleVec4	windows/include/plib/sg.h	/^inline void sgdScaleVec4 ( sgdVec4 dst, const SGDfloat s )$/;"	f
sgdScaleVec4	windows/include/plib/sg.h	/^inline void sgdScaleVec4 ( sgdVec4 dst, const sgdVec4 src, const SGDfloat s )$/;"	f
sgdSetCoord	windows/include/plib/sg.h	/^inline void sgdSetCoord ( sgdCoord *dst, const SGDfloat x, const SGDfloat y, const SGDfloat z,$/;"	f
sgdSetCoord	windows/include/plib/sg.h	/^inline void sgdSetCoord ( sgdCoord *dst, const sgdVec3 xyz, const sgdVec3 hpr )$/;"	f
sgdSetCoord	windows/include/plib/sg.h	/^inline void sgdSetCoord ( sgdCoord *dst, sgCoord *src )$/;"	f
sgdSetMat4	windows/include/plib/sg.h	/^inline void sgdSetMat4 ( sgdMat4 dst, sgMat4 src )$/;"	f
sgdSetQuat	windows/include/plib/sg.h	/^inline void sgdSetQuat ( sgdQuat dst, sgQuat src )$/;"	f
sgdSetQuat	windows/include/plib/sg.h	/^inline void sgdSetQuat ( sgdQuat dst,$/;"	f
sgdSetVec2	windows/include/plib/sg.h	/^inline void sgdSetVec2 ( sgdVec2 dst, const SGDfloat x, const SGDfloat y )$/;"	f
sgdSetVec2	windows/include/plib/sg.h	/^inline void sgdSetVec2 ( sgdVec2 dst, sgVec2 src )$/;"	f
sgdSetVec3	windows/include/plib/sg.h	/^inline void sgdSetVec3 ( sgdVec3 dst, const SGDfloat x, const SGDfloat y, const SGDfloat z )$/;"	f
sgdSetVec3	windows/include/plib/sg.h	/^inline void sgdSetVec3 ( sgdVec3 dst, sgVec3 src )$/;"	f
sgdSetVec4	windows/include/plib/sg.h	/^inline void sgdSetVec4 ( sgdVec4 dst, const SGDfloat x, const SGDfloat y, const SGDfloat z, const SGDfloat w )$/;"	f
sgdSetVec4	windows/include/plib/sg.h	/^inline void sgdSetVec4 ( sgdVec4 dst, sgVec4 src )$/;"	f
sgdSin	windows/include/plib/sg.h	/^inline SGDfloat sgdSin ( SGDfloat s )$/;"	f
sgdSphere	windows/include/plib/sg.h	/^class sgdSphere$/;"	c
sgdSqrt	windows/include/plib/sg.h	/^inline SGDfloat sgdSqrt   ( const SGDfloat x ) { return sqrt ( x ) ; }$/;"	f
sgdSquare	windows/include/plib/sg.h	/^inline SGDfloat sgdSquare ( const SGDfloat x ) { return x * x ; }$/;"	f
sgdSubVec2	windows/include/plib/sg.h	/^inline void sgdSubVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdSubVec2	windows/include/plib/sg.h	/^inline void sgdSubVec2 ( sgdVec2 dst, const sgdVec2 src1, const sgdVec2 src2 )$/;"	f
sgdSubVec3	windows/include/plib/sg.h	/^inline void sgdSubVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdSubVec3	windows/include/plib/sg.h	/^inline void sgdSubVec3 ( sgdVec3 dst, const sgdVec3 src1, const sgdVec3 src2 )$/;"	f
sgdSubVec4	windows/include/plib/sg.h	/^inline void sgdSubVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdSubVec4	windows/include/plib/sg.h	/^inline void sgdSubVec4 ( sgdVec4 dst, const sgdVec4 src1, const sgdVec4 src2 )$/;"	f
sgdTan	windows/include/plib/sg.h	/^inline SGDfloat sgdTan ( SGDfloat s )$/;"	f
sgdVec2	windows/include/plib/sg.h	/^typedef SGDfloat sgdVec2 [ 2 ] ;$/;"	t
sgdVec3	windows/include/plib/sg.h	/^typedef SGDfloat sgdVec3 [ 3 ] ;$/;"	t
sgdVec4	windows/include/plib/sg.h	/^typedef SGDfloat sgdVec4 [ 4 ] ;$/;"	t
sgdXformPnt3	windows/include/plib/sg.h	/^inline void sgdXformPnt3     ( sgdVec3 dst, const sgdMat4 mat ) { sgdXformPnt3 ( dst, dst, mat ) ; }$/;"	f
sgdXformPnt4	windows/include/plib/sg.h	/^inline void sgdXformPnt4     ( sgdVec4 dst, const sgdMat4 mat ) { sgdXformPnt4 ( dst, dst, mat ) ; }$/;"	f
sgdXformVec3	windows/include/plib/sg.h	/^inline void sgdXformVec3     ( sgdVec3 dst, const sgdMat4 mat ) { sgdXformVec3 ( dst, dst, mat ) ; }$/;"	f
sgdXformVec4	windows/include/plib/sg.h	/^inline void sgdXformVec4     ( sgdVec4 dst, const sgdMat4 mat ) { sgdXformVec4 ( dst, dst, mat ) ; }$/;"	f
sgdZeroCoord	windows/include/plib/sg.h	/^inline void sgdZeroCoord ( sgdCoord *dst )$/;"	f
sgdZeroVec2	windows/include/plib/sg.h	/^inline void sgdZeroVec2 ( sgdVec2 dst ) { dst[0]=dst[1]=SGD_ZERO ; }$/;"	f
sgdZeroVec3	windows/include/plib/sg.h	/^inline void sgdZeroVec3 ( sgdVec3 dst ) { dst[0]=dst[1]=dst[2]=SGD_ZERO ; }$/;"	f
sgdZeroVec4	windows/include/plib/sg.h	/^inline void sgdZeroVec4 ( sgdVec4 dst ) { dst[0]=dst[1]=dst[2]=dst[3]=SGD_ZERO ; }$/;"	f
sgn	modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline int    sgn(Scalar x) { return x < 0 ? -1 : x > 0 ? 1 : 0; }$/;"	f
shad_xmax	modules/graphic/ssggraph/grloadac.cpp	/^double shad_xmax;$/;"	v
shad_xmin	modules/graphic/ssggraph/grloadac.cpp	/^double shad_xmin;$/;"	v
shad_ymax	modules/graphic/ssggraph/grloadac.cpp	/^double shad_ymax;$/;"	v
shad_ymin	modules/graphic/ssggraph/grloadac.cpp	/^double shad_ymin;$/;"	v
shade_model	windows/include/plib/ssg.h	/^  GLenum shade_model ;$/;"	m	class:ssgSimpleState
shadowAnchor	modules/graphic/ssggraph/grcar.h	/^    ssgBranch		*shadowAnchor;$/;"	m	struct:__anon5
shadowBase	modules/graphic/ssggraph/grcar.h	/^    ssgVtxTableShadow	*shadowBase;$/;"	m	struct:__anon5
shadowCurr	modules/graphic/ssggraph/grcar.h	/^    ssgVtxTableShadow	*shadowCurr;$/;"	m	struct:__anon5
shadowtexture	tools/accc/ac3dload.cpp	/^const char *shadowtexture="shadow2.rgb";$/;"	v
shape	modules/simu/simuv2/carstruct.h	/^    DtShapeRef	shape;		\/* for collision *\/$/;"	m	struct:__anon23
shape	modules/simu/simuv3/carstruct.h	/^    DtShapeRef	shape;		\/* for collision *\/$/;"	m	struct:__anon42
shapePtr	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  ShapePtr shapePtr;$/;"	m	class:Object
sharedSource	modules/graphic/ssggraph/SoundInterface.h	/^struct sharedSource {$/;"	s
shared_memory	libs/raceengineclient/racemain.cpp	/^char* shared_memory[1024];$/;"	v
shared_memory	linux/shared_memory.h	/^void *shared_memory;$/;"	v
shared_memory	topview/topview.cpp	/^char* shared_memory[1024];$/;"	v
shared_memory	yunseok/tcp_client.cpp	/^	void* shared_memory[NUM_OF_DATA];$/;"	m	class:SharedMemory_Manager	file:
shared_memory2	linux/shared_memory.h	/^void *shared_memory2;$/;"	v
shared_memory3	linux/shared_memory.h	/^void *shared_memory3;$/;"	v
shared_memory_acc	linux/shared_memory.h	/^void *shared_memory_acc;$/;"	v
shared_memory_distfcar	linux/shared_memory.h	/^void *shared_memory_distfcar;$/;"	v
shared_memory_intent	linux/shared_memory.h	/^void *shared_memory_intent;$/;"	v
shared_memory_lkas	linux/shared_memory.h	/^void *shared_memory_lkas;$/;"	v
shared_memory_recrpm	linux/shared_memory.h	/^void *shared_memory_recrpm;$/;"	v
shared_memory_recspeed	linux/shared_memory.h	/^void *shared_memory_recspeed;$/;"	v
shared_memory_recsteer	linux/shared_memory.h	/^void *shared_memory_recsteer;$/;"	v
shared_memory_speedfcar	linux/shared_memory.h	/^void *shared_memory_speedfcar;$/;"	v
shared_memory_targetspeed	linux/shared_memory.h	/^void *shared_memory_targetspeed;$/;"	v
shared_states	windows/include/plib/ssg.h	/^  ssgSimpleStateArray shared_states ;$/;"	m	class:ssgLoaderOptions
shared_textures	windows/include/plib/ssg.h	/^  ssgTextureArray shared_textures ;$/;"	m	class:ssgLoaderOptions
shi	modules/graphic/ssggraph/grloadac.cpp	/^  float  shi  ;$/;"	m	struct:_ssgMaterial	file:
shi	tools/accc/accc.h	/^  int shi;$/;"	m	struct:mat
shiftThld	drivers/inferno2/inferno2.cpp	/^tdble	shiftThld[10][MAX_GEARS+1];$/;"	v
shininess	windows/include/plib/ssg.h	/^  float  shininess ;$/;"	m	class:ssgSimpleState
shmid	libs/raceengineclient/racemain.cpp	/^int shmid = 0;$/;"	v
shmid	linux/shared_memory.h	/^int shmid,shmid2,shmid3;$/;"	v
shmid	topview/topview.cpp	/^int shmid;$/;"	v
shmid	yunseok/tcp_client.cpp	/^	int shmid[NUM_OF_DATA];$/;"	m	class:SharedMemory_Manager	file:
shmid2	linux/shared_memory.h	/^int shmid,shmid2,shmid3;$/;"	v
shmid3	linux/shared_memory.h	/^int shmid,shmid2,shmid3;$/;"	v
shmid_acc	linux/shared_memory.h	/^int shmid_acc, shmid_lkas, shmid_targetspeed;$/;"	v
shmid_distfcar	linux/shared_memory.h	/^int shmid_distfcar;$/;"	v
shmid_intent	linux/shared_memory.h	/^int shmid_intent;$/;"	v
shmid_lkas	linux/shared_memory.h	/^int shmid_acc, shmid_lkas, shmid_targetspeed;$/;"	v
shmid_recrpm	linux/shared_memory.h	/^int shmid_recrpm,shmid_recspeed,shmid_recsteer;$/;"	v
shmid_recspeed	linux/shared_memory.h	/^int shmid_recrpm,shmid_recspeed,shmid_recsteer;$/;"	v
shmid_recsteer	linux/shared_memory.h	/^int shmid_recrpm,shmid_recspeed,shmid_recsteer;$/;"	v
shmid_speedfcar	linux/shared_memory.h	/^int shmid_speedfcar;$/;"	v
shmid_targetspeed	linux/shared_memory.h	/^int shmid_acc, shmid_lkas, shmid_targetspeed;$/;"	v
shutdn	drivers/inferno2/inferno2.cpp	/^shutdn(int index)$/;"	f	file:
shutdown	drivers/berniw/berniw.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	drivers/berniw2/berniw2.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	drivers/berniw3/berniw3.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	drivers/bt/bt.cpp	/^static void shutdown(int index)$/;"	f	file:
shutdown	drivers/damned/damned.cpp	/^static void shutdown(int index)$/;"	f	file:
shutdown	drivers/human/human.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	drivers/inferno/inferno.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	drivers/lliaw/lliaw.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	drivers/olethros/olethros.cpp	/^static void shutdown(int index)$/;"	f	namespace:olethros
shutdown	drivers/sparkle/sparkle.cpp	/^static void shutdown(int index)$/;"	f	file:
shutdown	drivers/tita/tita.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	interfaces/simu.h	/^	tfSimShutdown	shutdown;$/;"	m	struct:__anon85
shutdown	interfaces/telemetry.h	/^    tftlmShutdown		shutdown;		\/* close the telemetry *\/$/;"	m	struct:__anon86
shutdown	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::shutdown(void)$/;"	f	class:cGrBoard
shutdownCars	modules/graphic/ssggraph/grmain.cpp	/^shutdownCars(void)$/;"	f
shutdownTrack	modules/graphic/ssggraph/grmain.cpp	/^shutdownTrack(void)$/;"	f
shutdowncars	interfaces/graphic.h	/^	tfGraphicShutdwnCars    shutdowncars;$/;"	m	struct:__anon61
shutdowntrack	interfaces/graphic.h	/^	tfGraphicShutdwnTrack   shutdowntrack;$/;"	m	struct:__anon61
si	tools/trackgen/easymesh.cpp	/^	int si, sj, sk;$/;"	m	struct:ele	file:
sid	tools/trackgen/easymesh.cpp	/^struct sid {$/;"	s	file:
side	interfaces/track.h	/^		struct trackSeg* side[2];$/;"	m	union:trackSeg::__anon62	typeref:struct:trackSeg::__anon62::trackSeg
side	interfaces/track.h	/^	int side;		\/**< Pits side:$/;"	m	struct:__anon65
side	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Side side;$/;"	m	class:Endpoint
side	tools/trackgen/easymesh.cpp	/^side[MAX_NODES*3];$/;"	v	typeref:struct:sid
sideBankType	modules/track/track3.cpp	/^static int sideBankType[2];$/;"	v	file:
sideBankType	modules/track/track4.cpp	/^static int sideBankType[2];$/;"	v	file:
sideEndWidth	modules/track/track3.cpp	/^static tdble sideEndWidth[2];$/;"	v	file:
sideEndWidth	modules/track/track4.cpp	/^static tdble sideEndWidth[2];$/;"	v	file:
sideMaterial	modules/track/track3.cpp	/^static const char *sideMaterial[2];$/;"	v	file:
sideMaterial	modules/track/track4.cpp	/^static const char *sideMaterial[2];$/;"	v	file:
sideStartWidth	modules/track/track3.cpp	/^static tdble sideStartWidth[2];$/;"	v	file:
sideStartWidth	modules/track/track4.cpp	/^static tdble sideStartWidth[2];$/;"	v	file:
sideSurface	modules/track/track3.cpp	/^static tTrackSurface *sideSurface[2];$/;"	v	file:
sideSurface	modules/track/track4.cpp	/^static tTrackSurface *sideSurface[2];$/;"	v	file:
sidedist	drivers/bt/opponent.h	/^		float sidedist;		\/\/ approx distance of center of gravity of the cars.$/;"	m	class:Opponent
sidedist	drivers/damned/opponent.h	/^		float sidedist;		\/\/ approx distance of center of gravity of the cars.$/;"	m	class:Opponent
sidedist	drivers/olethros/opponent.h	/^		float sidedist;		\/\/\/< approx distance of center of gravity of the cars.$/;"	m	class:olethros::Opponent
sidedist	drivers/sparkle/opponent.h	/^		float sidedist;		\/* approx distance of center of gravity of the cars *\/$/;"	m	class:Opponent
sign	drivers/berniw/berniw.h	/^inline double sign(double number)$/;"	f
sign	drivers/berniw2/berniw.h	/^inline double sign(double number)$/;"	f
sign	drivers/berniw3/berniw.h	/^inline double sign(double number)$/;"	f
sign	drivers/human/human.h	/^inline double sign(double number)$/;"	f
sign	drivers/human/linalg.h	/^inline float sign(float d) {$/;"	f
sign	drivers/inferno/berniw.h	/^inline double sign(double number)$/;"	f
sign	drivers/lliaw/berniw.h	/^inline double sign(double number)$/;"	f
sign	drivers/olethros/linalg.h	/^inline float sign(float d) {$/;"	f
sign	drivers/tita/berniw.h	/^inline double sign(double number)$/;"	f
sign	libs/learning/MathFunctions.h	/^inline const T sign(const T& x)$/;"	f
simDammageFactor	modules/simu/simuv2/categories.cpp	/^tdble simDammageFactor[] = {0.0f, 0.5f, 0.8f, 1.0f, 1.0f};$/;"	v
simDammageFactor	modules/simu/simuv3/categories.cpp	/^tdble simDammageFactor[] = {0.0, 0.5, 0.8, 1.0, 1.0};$/;"	v
simItf	interfaces/raceman.h	/^    tSimItf	simItf;$/;"	m	struct:__anon71
simSkidFactor	modules/simu/simuv2/categories.cpp	/^tdble simSkidFactor[] = {0.40f, 0.35f, 0.3f, 0.0f, 0.0f};$/;"	v
simSkidFactor	modules/simu/simuv3/categories.cpp	/^tdble simSkidFactor[] = {0.40, 0.35, 0.3, 0.0, 0.0};$/;"	v
simcollision	interfaces/car.h	/^	int simcollision; \/**< For rules etc. reflects the collision state from simu *\/$/;"	m	struct:__anon80
simuInit	modules/simu/simuv2/simuitf.cpp	/^simuInit(int \/* index *\/, void *pt)$/;"	f	file:
simuInit	modules/simu/simuv3/simuitf.cpp	/^simuInit(int \/* index *\/, void *pt)$/;"	f	file:
simuVersionList	libs/confscreens/simuconfig.cpp	/^static const char *simuVersionList[] = {"simuv2", "simuv3"};$/;"	v	file:
simu_init_time	modules/simu/simuv3/simu.cpp	/^static double simu_init_time = 0.0f;$/;"	v	file:
simu_total_time	modules/simu/simuv3/simu.cpp	/^static double simu_total_time = 0.0f;$/;"	v	file:
simuv2	modules/simu/simuv2/simuitf.cpp	/^simuv2(tModInfo *modInfo)$/;"	f
simuv3	modules/simu/simuv3/simuitf.cpp	/^simuv3(tModInfo *modInfo)$/;"	f
sinAngle	modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^  Scalar sinAngle;$/;"	m	class:Cone
singleList	modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  SingleList singleList;$/;"	m	class:RespTable
singlePLayerShutdown	libs/raceengineclient/singleplayer.cpp	/^singlePLayerShutdown(void *precMenu)$/;"	f	file:
singlePlayerHandle	libs/raceengineclient/singleplayer.cpp	/^static void *singlePlayerHandle = NULL;$/;"	v	file:
singlePlayerMenuActivate	libs/raceengineclient/singleplayer.cpp	/^singlePlayerMenuActivate(void * \/* dummy *\/)$/;"	f	file:
singleTextureMode	libs/tgf/tgf.cpp	/^static int singleTextureMode = 0;$/;"	v	file:
size	drivers/inferno/pathfinder.h	/^		int size;				\/\/ # of ps segments$/;"	m	class:PathSeg
size	drivers/lliaw/pathfinder.h	/^		int size;				\/\/ # of ps segments$/;"	m	class:PathSeg
size	drivers/olethros/TrackData.h	/^    int size()$/;"	f	class:SegmentList
size	drivers/tita/pathfinder.h	/^		int size;				\/\/ # of ps segments$/;"	m	class:PathSeg
size	libs/tgf/hash.cpp	/^	int size;$/;"	m	struct:HashElem	file:
size	libs/tgf/hash.cpp	/^	int size;$/;"	m	struct:HashHeader	file:
size	libs/tgfclient/guifont.h	/^    float	size;$/;"	m	class:GfuiFontClass
size	libs/txml/hashtable.h	/^  size_t size;$/;"	m	struct:__anon107
size	libs/txml/xmlparse.c	/^  int size;$/;"	m	struct:block	file:
size	modules/graphic/ssggraph/grcarlight.h	/^  float size;$/;"	m	class:ssgVtxTableCarlight
size	modules/graphic/ssggraph/grskidmarks.h	/^  int			*size;$/;"	m	struct:__anon1
size	modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Scalar size() const { return max(max(extent[X], extent[Y]), extent[Z]); }$/;"	f	class:BBox
size	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  int size() const { return count; }$/;"	f	class:IndexArray
size	windows/include/plib/ssgaParticleSystem.h	/^  float size ;$/;"	m	class:ssgaParticle
size	windows/include/plib/ssgaParticleSystem.h	/^  float size ;$/;"	m	class:ssgaParticleSystem
size	windows/include/plib/ssgaShapes.h	/^  sgVec3 size   ;$/;"	m	class:ssgaShape
size	windows/include/png.h	/^    png_size_t size;$/;"	m	struct:png_unknown_chunk_t
sizeChk	windows/include/plib/ssg.h	/^  void sizeChk ( unsigned int n )$/;"	f	class:ssgSimpleList
sizeTable	windows/include/plib/ssgaFire.h	/^  float *sizeTable   ;$/;"	m	class:ssgaFire
size_of	windows/include/plib/ssg.h	/^  unsigned int size_of ;  \/* The size of each thing *\/$/;"	m	class:ssgSimpleList
sizex	modules/graphic/ssggraph/grsmoke.h	/^  float sizex;$/;"	m	class:ssgVtxTableSmoke
sizey	modules/graphic/ssggraph/grsmoke.h	/^  float sizey;$/;"	m	class:ssgVtxTableSmoke
sizez	modules/graphic/ssggraph/grsmoke.h	/^  float sizez;$/;"	m	class:ssgVtxTableSmoke
sj	tools/trackgen/easymesh.cpp	/^	int si, sj, sk;$/;"	m	struct:ele	file:
sk	tools/trackgen/easymesh.cpp	/^	int si, sj, sk;$/;"	m	struct:ele	file:
skey	libs/raceengineclient/racemain.cpp	/^int skey = 1234;$/;"	v
skey	linux/shared_memory.h	/^const int skey = 5678;$/;"	v
skey	topview/topview.cpp	/^int skey = 1234;$/;"	v
skey	yunseok/tcp_client.cpp	/^	int skey[NUM_OF_DATA];$/;"	m	class:SharedMemory_Manager	file:
skey2	linux/shared_memory.h	/^const int skey2 = 1234;$/;"	v
skey3	linux/shared_memory.h	/^const int skey3 = 2345;$/;"	v
skeyInfo	drivers/human/human.cpp	/^static tKeyInfo skeyInfo[256];$/;"	v	file:
skey_acc	linux/shared_memory.h	/^const int skey_acc = 4055;$/;"	v
skey_distfcar	linux/shared_memory.h	/^const int skey_distfcar = 4539;$/;"	v
skey_intent	linux/shared_memory.h	/^const int skey_intent = 9998;$/;"	v
skey_lkas	linux/shared_memory.h	/^const int skey_lkas = 6243;$/;"	v
skey_recrpm	linux/shared_memory.h	/^const int skey_recrpm = 4567;$/;"	v
skey_recspeed	linux/shared_memory.h	/^const int skey_recspeed = 3456;$/;"	v
skey_recsteer	linux/shared_memory.h	/^const int skey_recsteer = 6789;$/;"	v
skey_speedfcar	linux/shared_memory.h	/^const int skey_speedfcar = 7712;$/;"	v
skey_targetspeed	linux/shared_memory.h	/^const int skey_targetspeed = 5136;$/;"	v
skid	interfaces/car.h	/^	tdble skid[4]; \/**< skid intensity *\/$/;"	m	struct:__anon80
skid	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar skid;$/;"	m	struct:WheelSoundData_
skidState	modules/graphic/ssggraph/grskidmarks.cpp	/^static ssgSimpleState *skidState = NULL;$/;"	v	file:
skid_full	modules/graphic/ssggraph/grskidmarks.h	/^  int			skid_full;$/;"	m	struct:__anon1
skid_metal	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar skid_metal;$/;"	m	class:CarSoundData
skid_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* skid_sound[4]; \/\/\/< set of skid sounds, one per tyre$/;"	m	class:SoundInterface
skidmarks	modules/graphic/ssggraph/grcar.h	/^    tgrSkidmarks        *skidmarks;$/;"	m	struct:__anon5
skillLevel	interfaces/car.h	/^	int skillLevel; \/**< Driver's skill level (0=rookie -> 3=pro) *\/$/;"	m	struct:__anon76
skilllevel	libs/confscreens/driverconfig.cpp	/^    int		skilllevel;$/;"	m	struct:PlayerInfo	file:
skipS	libs/txml/xmltok.h	/^  const char *(*skipS)(const ENCODING *, const char *);$/;"	m	struct:encoding
skipS	libs/txml/xmltok_impl.c	/^const char *PREFIX(skipS)(const ENCODING *enc, const char *ptr)$/;"	f	file:
skip_quotes	modules/graphic/ssggraph/grloadac.cpp	/^static void skip_quotes ( char **s )$/;"	f	file:
skip_spaces	modules/graphic/ssggraph/grloadac.cpp	/^static void skip_spaces ( char **s )$/;"	f	file:
slCallBack	windows/include/plib/sl.h	/^typedef void (*slCallBack) ( slSample *, slEvent, int ) ;$/;"	t
slDSP	windows/include/plib/sl.h	/^  slDSP ( const char *device, int _rate = SL_DEFAULT_SAMPLING_RATE,$/;"	f	class:slDSP
slDSP	windows/include/plib/sl.h	/^  slDSP ( int _rate = SL_DEFAULT_SAMPLING_RATE,$/;"	f	class:slDSP
slDSP	windows/include/plib/sl.h	/^class slDSP$/;"	c
slEnvelope	windows/include/plib/sl.h	/^  slEnvelope ( int _nsteps = 1, slReplayMode _rm = SL_SAMPLE_ONE_SHOT )$/;"	f	class:slEnvelope
slEnvelope	windows/include/plib/sl.h	/^  slEnvelope ( int _nsteps, slReplayMode _rm, float *_times, float *_values )$/;"	f	class:slEnvelope
slEnvelope	windows/include/plib/sl.h	/^class slEnvelope$/;"	c
slEnvelopeType	windows/include/plib/sl.h	/^enum slEnvelopeType$/;"	g
slEvent	windows/include/plib/sl.h	/^enum slEvent$/;"	g
slMODPlayer	windows/include/plib/sl.h	/^  slMODPlayer ( const char *fname, slReplayMode rp_mode = SL_SAMPLE_ONE_SHOT, $/;"	f	class:slMODPlayer
slMODPlayer	windows/include/plib/sl.h	/^class slMODPlayer : public slPlayer$/;"	c
slPendingCallBack	windows/include/plib/sl.h	/^struct slPendingCallBack$/;"	s
slPlayer	windows/include/plib/sl.h	/^  slPlayer ( slReplayMode  rp_mode = SL_SAMPLE_ONE_SHOT, $/;"	f	class:slPlayer
slPlayer	windows/include/plib/sl.h	/^class slPlayer$/;"	c
slPreemptMode	windows/include/plib/sl.h	/^enum slPreemptMode$/;"	g
slReplayMode	windows/include/plib/sl.h	/^enum slReplayMode$/;"	g
slSample	windows/include/plib/sl.h	/^  slSample ( const Uchar *buff, int leng )$/;"	f	class:slSample
slSample	windows/include/plib/sl.h	/^  slSample ( const char *fname, const class slDSP *dsp = NULL )$/;"	f	class:slSample
slSample	windows/include/plib/sl.h	/^  slSample () { init () ; }$/;"	f	class:slSample
slSample	windows/include/plib/sl.h	/^class slSample$/;"	c
slSamplePlayer	windows/include/plib/sl.h	/^  slSamplePlayer ( slSample *s, slReplayMode  rp_mode = SL_SAMPLE_ONE_SHOT, $/;"	f	class:slSamplePlayer
slSamplePlayer	windows/include/plib/sl.h	/^class slSamplePlayer : public slPlayer$/;"	c
slSampleStatus	windows/include/plib/sl.h	/^enum slSampleStatus$/;"	g
slScheduler	windows/include/plib/sl.h	/^  slScheduler ( const char *device,$/;"	f	class:slScheduler
slScheduler	windows/include/plib/sl.h	/^  slScheduler ( int _rate = SL_DEFAULT_SAMPLING_RATE ) : slDSP ( _rate, SL_FALSE, 8 ) { init () ; }$/;"	f	class:slScheduler
slScheduler	windows/include/plib/sl.h	/^class slScheduler : public slDSP$/;"	c
slipAccel	interfaces/car.h	/^	tdble slipAccel;$/;"	m	struct:__anon79
slipSide	interfaces/car.h	/^	tdble slipSide;$/;"	m	struct:__anon79
slopesn	drivers/berniw/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	drivers/berniw2/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	drivers/berniw3/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	drivers/human/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	drivers/inferno/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	drivers/lliaw/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	drivers/tita/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	drivers/berniw/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	drivers/berniw2/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	drivers/berniw3/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	drivers/human/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	drivers/inferno/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	drivers/lliaw/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	drivers/tita/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
smMixer	windows/include/plib/sm.h	/^class smMixer$/;"	c
smax	libs/learning/policy.h	/^ 	bool smax; \/\/\/< softmax option$/;"	m	class:DiscretePolicy
smoke	interfaces/car.h	/^	float smoke;$/;"	m	struct:__anon80
smoke	modules/graphic/ssggraph/grsmoke.h	/^  ssgVtxTableSmoke * smoke;$/;"	m	struct:tgrSmoke_st
smokeList	modules/graphic/ssggraph/grsmoke.h	/^  tgrSmoke * smokeList;$/;"	m	struct:__anon6
smokeManager	modules/graphic/ssggraph/grsmoke.cpp	/^static tgrSmokeManager *smokeManager = 0;$/;"	v	file:
smokeType	modules/graphic/ssggraph/grsmoke.h	/^  int smokeType;$/;"	m	class:ssgVtxTableSmoke
smokeTypeStep	modules/graphic/ssggraph/grsmoke.h	/^  int smokeTypeStep;$/;"	m	class:ssgVtxTableSmoke
smooth	drivers/berniw/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	drivers/berniw/pathfinder.cpp	/^void Pathfinder::smooth(int id, double delta, double w)$/;"	f	class:Pathfinder
smooth	drivers/berniw/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::smooth(int id, double delta, double w)$/;"	f	class:Pathfinder
smooth	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::smooth(int id, double delta, double w)$/;"	f	class:Pathfinder
smooth	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	drivers/human/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	drivers/human/pathfinder.cpp	/^void Pathfinder::smooth(int id, double delta, double w)$/;"	f	class:Pathfinder
smooth	drivers/human/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	drivers/inferno/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	drivers/inferno/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	drivers/tita/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	drivers/tita/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	tools/trackgen/easymesh.cpp	/^int smooth()$/;"	f
smoothFaceTriNorm	tools/accc/ac3dload.cpp	/^void smoothFaceTriNorm(ob_t *object )$/;"	f
smoothObjectTriNorm	tools/accc/ac3dload.cpp	/^void smoothObjectTriNorm(ob_t *object )$/;"	f
smoothTriNorm	tools/accc/ac3dload.cpp	/^void smoothTriNorm(ob_t *object )$/;"	f
smooth_accel	modules/graphic/ssggraph/CarSoundData.h	/^	float smooth_accel; \/\/\/< smoothed acceleration input$/;"	m	class:CarSoundData
smooth_angle	tools/accc/ac3dload.cpp	/^double smooth_angle=70.0;$/;"	v
smooth_colour	modules/graphic/ssggraph/grskidmarks.h	/^	sgVec4 smooth_colour;$/;"	m	struct:__anon1
snd	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* snd; \/\/\/< The raw sound.$/;"	m	struct:QueueSoundMap_
sndChannel	windows/include/plib/sl.h	/^  SndChannelPtr  sndChannel   ;   \/\/ sound channel we are using$/;"	m	class:slDSP
snorm	tools/accc/accc.h	/^  point_t  * snorm;$/;"	m	struct:ob
snprintf	libs/portability/portability.h	61;"	d
sock	drivers/human/human.cpp	/^int sock;$/;"	v
sock	predictor/talker.py	/^sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
sock_hanieum	drivers/human/human.cpp	/^int sock_hanieum;$/;"	v
softMax	libs/learning/policy.cpp	/^int DiscretePolicy::softMax(real* Qs) {$/;"	f	class:DiscretePolicy
sopath	libs/tgf/tgf.h	/^    char		*sopath;		\/**< path name of file *\/$/;"	m	struct:ModList
sortSndPriority	modules/graphic/ssggraph/PlibSoundInterface.cpp	/^int sortSndPriority(const void* a, const void* b) $/;"	f
sorted	windows/include/plib/ul.h	/^  bool sorted ;$/;"	m	class:ulLinkedList
soundInitialized	modules/graphic/ssggraph/grsound.cpp	/^static int soundInitialized = 0;$/;"	v	file:
soundOptionList	libs/confscreens/soundconfig.cpp	/^static const char *soundOptionList[] = {$/;"	v	file:
sound_interface	modules/graphic/ssggraph/CarSoundData.h	/^	SoundInterface* sound_interface;$/;"	m	class:CarSoundData
sound_interface	modules/graphic/ssggraph/grsound.cpp	/^static SoundInterface* sound_interface = NULL;$/;"	v	file:
sound_list	modules/graphic/ssggraph/SoundInterface.h	/^	std::vector<TorcsSound*> sound_list; \/\/\/< keeps track of sounds used$/;"	m	class:SoundInterface
sound_list	modules/graphic/ssggraph/SoundInterface.h	/^	std::vector<TorcsSound*> sound_list;$/;"	m	class:PlibSoundInterface
sound_mode	modules/graphic/ssggraph/grsound.cpp	/^static enum SoundMode sound_mode = OPENAL_MODE;$/;"	v	typeref:enum:SoundMode	file:
source	libs/musicplayer/OpenALMusicPlayer.h	/^		ALuint source;								\/\/ audio source $/;"	m	class:OpenALMusicPlayer
source	modules/graphic/ssggraph/SoundInterface.h	/^	ALuint source;$/;"	m	struct:sharedSource
source	modules/graphic/ssggraph/TorcsSound.h	/^	ALuint source; \/\/\/< source id$/;"	m	class:OpenalTorcsSound
source_position	modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat source_position[3]; \/\/\/< source position$/;"	m	class:OpenalTorcsSound
source_velocity	modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat source_velocity[3]; \/\/\/< source velocity$/;"	m	class:OpenalTorcsSound
sourcepool	modules/graphic/ssggraph/SoundInterface.h	/^	SharedSourcePool* sourcepool;$/;"	m	class:OpenalSoundInterface
spacing	tools/trackgen/easymesh.cpp	/^void spacing(int e, int n)$/;"	f
spare	windows/include/plib/ssg.h	/^  int   spare ;  \/* This spare field is used in a bunch of short-term hacks *\/$/;"	m	class:ssgBase
sparkle	drivers/sparkle/sparkle.cpp	/^extern "C" int sparkle(tModInfo *modInfo)$/;"	f
spdSens	drivers/human/pref.h	/^    tdble	spdSens;	\/* speed sensitivity *\/$/;"	m	struct:__anon185
spdSensName	drivers/human/pref.h	/^    const char	*spdSensName;	\/* Name of the speed sensitivity attribute *\/$/;"	m	struct:__anon185
spdtgt	drivers/inferno2/inferno2.cpp	/^static tdble spdtgt[10]    = {250.0f};$/;"	v	file:
spdtgt2	drivers/inferno2/inferno2.cpp	/^static tdble spdtgt2[10]   = {2.0f};$/;"	v	file:
spec	modules/graphic/ssggraph/grloadac.cpp	/^  sgVec4 spec ;$/;"	m	struct:_ssgMaterial	file:
spec	tools/accc/accc.h	/^  color_t spec;$/;"	m	struct:mat
specialkey	libs/tgfclient/gui.h	/^    int			specialkey;$/;"	m	struct:GfuiKey
specular	windows/include/plib/ssg.h	/^  sgVec4 specular ;$/;"	m	class:ssgLight
specular_colour	windows/include/plib/ssg.h	/^  sgVec4 specular_colour ;$/;"	m	class:ssgSimpleState
speed	drivers/berniw/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	drivers/berniw/pathfinder.h	/^	double speed;			\/* same, but not squared *\/$/;"	m	struct:__anon156
speed	drivers/berniw2/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	drivers/berniw2/pathfinder.h	/^	double speed;			\/* same, but not squared *\/$/;"	m	struct:__anon200
speed	drivers/berniw3/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	drivers/berniw3/pathfinder.h	/^	double speed;			\/* same, but not squared *\/$/;"	m	struct:__anon179
speed	drivers/bt/cardata.h	/^		float speed;		\/\/ speed in direction of the track.$/;"	m	class:SingleCardata
speed	drivers/damned/cardata.h	/^		float speed;		\/\/ speed in direction of the track.$/;"	m	class:SingleCardata
speed	drivers/human/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	drivers/human/pathfinder.h	/^	double speed;			\/* same, but not squared *\/$/;"	m	struct:__anon191
speed	drivers/inferno/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	drivers/inferno/pathfinder.h	/^	double speed;			\/\/ same, but not squared.$/;"	m	struct:__anon164
speed	drivers/lliaw/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	drivers/lliaw/pathfinder.h	/^	double speed;			\/\/ same, but not squared.$/;"	m	struct:__anon210
speed	drivers/olethros/cardata.h	/^	float speed;		\/\/ speed in direction of the track.$/;"	m	class:olethros::SingleCardata
speed	drivers/sparkle/driver.h	/^		float speed;			\/* speed in track direction *\/$/;"	m	class:Driver
speed	drivers/sparkle/opponent.h	/^		float speed;		\/* speed in direction of the track *\/$/;"	m	class:Opponent
speed	drivers/tita/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	drivers/tita/pathfinder.h	/^	double speed;			\/\/ same, but not squared.$/;"	m	struct:__anon171
speed	interfaces/car.h	/^	tdble speed;		\/\/ total speed, sqrt(vx*vx + vy*vy + vz*vz)$/;"	m	struct:__anon78
speed	modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 speed;$/;"	m	class:CarSoundData
speed	modules/graphic/ssggraph/grcam.h	/^    sgVec3 speed;$/;"	m	class:cGrCamera
speed	modules/simu/simuv2/carstruct.h	/^	tdble	speed;		\/\/ total speed = sqrt(vx*vx + vy*vy + vz*vz) $/;"	m	struct:__anon23
speed	windows/include/plib/ssgaWaveSystem.h	/^  float speed  ;$/;"	m	class:ssgaWaveTrain
speedLimit	interfaces/track.h	/^	tdble speedLimit;			\/**< Speed limit between pitStart and pitEnd *\/$/;"	m	struct:__anon65
speedLimiter	drivers/human/human.cpp	/^static int speedLimiter = 0;$/;"	v	file:
speed_factor	drivers/olethros/driver.h	/^	float speed_factor; \/\/\/< speed factor to use.$/;"	m	class:olethros::Driver
speed_factor	drivers/olethros/strategy.h	/^	float speed_factor;$/;"	m	class:olethros::ManagedStrategy
speed_ocar	drivers/berniw/berniw.cpp	/^static double* speed_ocar;$/;"	v	file:
speed_ocar	drivers/berniw2/berniw2.cpp	/^static double* speed_ocar;$/;"	v	file:
speed_ocar	drivers/berniw3/berniw3.cpp	/^static double* speed_ocar;$/;"	v	file:
speed_ocar	drivers/human/human.cpp	/^static double* speed_ocar;$/;"	v	file:
speedangle	drivers/bt/driver.h	/^		float speedangle;		\/\/ the angle of the speed vector relative to trackangle, > 0.0 points to right.$/;"	m	class:Driver
speedangle	drivers/damned/driver.h	/^		float speedangle;		\/\/ the angle of the speed vector relative to trackangle, > 0.0 points to right.$/;"	m	class:Driver
speedangle	drivers/olethros/driver.h	/^	float speedangle;		\/\/\/< the angle of the speed vector relative to trackangle, > 0.0 points to right.$/;"	m	class:olethros::Driver
speedlimit	drivers/bt/pit.h	/^		float speedlimit;				\/\/ Pit speed limit.$/;"	m	class:Pit
speedlimit	drivers/damned/pit.h	/^		float speedlimit;				\/\/ Pit speed limit.$/;"	m	class:Pit
speedlimit	drivers/olethros/pit.h	/^		float speedlimit;				\/\/ Pit speed limit.$/;"	m	class:olethros::Pit
speedlimit	drivers/sparkle/pit.h	/^		float speedlimit;       \/* pit speed limit *\/$/;"	m	class:Pit
speedlimitsqr	drivers/bt/pit.h	/^		float speedlimitsqr;			\/\/ Pit speed limit squared.$/;"	m	class:Pit
speedlimitsqr	drivers/damned/pit.h	/^		float speedlimitsqr;			\/\/ Pit speed limit squared.$/;"	m	class:Pit
speedlimitsqr	drivers/olethros/pit.h	/^		float speedlimitsqr;			\/\/ Pit speed limit squared.$/;"	m	class:olethros::Pit
speedlimitsqr	drivers/sparkle/pit.h	/^		float speedlimitsqr;    \/* pit speed limit squared *\/$/;"	m	class:Pit
speedsqr	drivers/berniw/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	drivers/berniw/pathfinder.h	/^		tdble speedsqr;	\/* max possible speed sqared (speed ist therefore sqrt(speedsqr) *\/$/;"	m	class:PathSeg
speedsqr	drivers/berniw/pathfinder.h	/^	double speedsqr;		\/* on track direction projected speed squared of opponent *\/$/;"	m	struct:__anon156
speedsqr	drivers/berniw2/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	drivers/berniw2/pathfinder.h	/^		tdble speedsqr;	\/* max possible speed sqared (speed ist therefore sqrt(speedsqr) *\/$/;"	m	class:PathSeg
speedsqr	drivers/berniw2/pathfinder.h	/^	double speedsqr;		\/* on track direction projected speed squared of opponent *\/$/;"	m	struct:__anon200
speedsqr	drivers/berniw3/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	drivers/berniw3/pathfinder.h	/^		tdble speedsqr;	\/* max possible speed sqared (speed ist therefore sqrt(speedsqr) *\/$/;"	m	class:PathSeg
speedsqr	drivers/berniw3/pathfinder.h	/^	double speedsqr;		\/* on track direction projected speed squared of opponent *\/$/;"	m	struct:__anon179
speedsqr	drivers/human/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	drivers/human/pathfinder.h	/^		tdble speedsqr;	\/* max possible speed sqared (speed ist therefore sqrt(speedsqr) *\/$/;"	m	class:PathSeg
speedsqr	drivers/human/pathfinder.h	/^	double speedsqr;		\/* on track direction projected speed squared of opponent *\/$/;"	m	struct:__anon191
speedsqr	drivers/inferno/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	drivers/inferno/pathfinder.h	/^				tdble speedsqr;	\/\/ Max possible speed sqared (speed ist therefore sqrt(speedsqr).$/;"	m	class:PathSeg::pseg
speedsqr	drivers/inferno/pathfinder.h	/^	double speedsqr;		\/\/ on track direction projected speed squared of opponent.$/;"	m	struct:__anon164
speedsqr	drivers/lliaw/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	drivers/lliaw/pathfinder.h	/^				tdble speedsqr;	\/\/ Max possible speed sqared (speed ist therefore sqrt(speedsqr).$/;"	m	class:PathSeg::pseg
speedsqr	drivers/lliaw/pathfinder.h	/^	double speedsqr;		\/\/ on track direction projected speed squared of opponent.$/;"	m	struct:__anon210
speedsqr	drivers/tita/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	drivers/tita/pathfinder.h	/^				tdble speedsqr;	\/\/ Max possible speed sqared (speed ist therefore sqrt(speedsqr).$/;"	m	class:PathSeg::pseg
speedsqr	drivers/tita/pathfinder.h	/^	double speedsqr;		\/\/ on track direction projected speed squared of opponent.$/;"	m	struct:__anon171
spinTq	modules/simu/simuv2/wheel.h	/^    tdble  	spinTq;		\/* spin torque feedback *\/$/;"	m	struct:__anon11
spinTq	modules/simu/simuv3/wheel.h	/^    tdble  	spinTq;		\/* spin torque feedback *\/$/;"	m	struct:__anon33
spinVel	interfaces/car.h	/^	tdble spinVel; \/**< spin velocity rad\/s *\/$/;"	m	struct:__anon79
spinVel	modules/simu/simuv2/differential.h	/^    tdble	spinVel;$/;"	m	struct:__anon9
spinVel	modules/simu/simuv2/wheel.h	/^    tdble  	spinVel;   	\/* spin velocity *\/$/;"	m	struct:__anon11
spinVel	modules/simu/simuv3/differential.h	/^    tdble	spinVel;$/;"	m	struct:__anon31
spinVel	modules/simu/simuv3/wheel.h	/^    tdble  	spinVel;   	\/* spin velocity *\/$/;"	m	struct:__anon33
splashDisplay	libs/client/splash.cpp	/^static void splashDisplay( void )$/;"	f	file:
splashKey	libs/client/splash.cpp	/^static void splashKey( unsigned char \/* key *\/, int \/* x *\/, int \/* y *\/)$/;"	f	file:
splashMouse	libs/client/splash.cpp	/^static void splashMouse(int \/* b *\/, int s, int \/* x *\/, int \/* y *\/)$/;"	f	file:
splashTimer	libs/client/splash.cpp	/^static void splashTimer(int \/* value *\/)$/;"	f	file:
spline	drivers/berniw/spline.cpp	/^double spline($/;"	f
spline	drivers/berniw2/spline.cpp	/^double spline($/;"	f
spline	drivers/berniw3/spline.cpp	/^double spline($/;"	f
spline	drivers/bt/pit.h	/^		Spline *spline;					\/\/ Spline.$/;"	m	class:Pit
spline	drivers/damned/pit.h	/^		Spline *spline;					\/\/ Spline.$/;"	m	class:Pit
spline	drivers/human/spline.cpp	/^double spline($/;"	f
spline	drivers/inferno/spline.cpp	/^double spline($/;"	f
spline	drivers/lliaw/spline.cpp	/^double spline($/;"	f
spline	drivers/olethros/pit.h	/^		Spline *spline;					\/\/ Spline.$/;"	m	class:olethros::Pit
spline	drivers/sparkle/pit.h	/^		Spline *spline;         \/* spline *\/$/;"	m	class:Pit
spline	drivers/tita/spline.cpp	/^double spline($/;"	f
splitOb	tools/accc/ac3dload.cpp	/^int splitOb (ob_t **object)$/;"	f
split_data	topview/topview.cpp	/^void split_data(int index) {$/;"	f
splited_data	topview/topview.cpp	/^char splited_data[30][10];$/;"	v
spring	modules/simu/simuv2/susp.h	/^    tSpring spring;$/;"	m	struct:Suspension
spring	modules/simu/simuv3/susp.h	/^    tSpring spring;$/;"	m	struct:Suspension
springForce	modules/simu/simuv2/susp.cpp	/^static tdble springForce(tSuspension *susp)$/;"	f	file:
springForce	modules/simu/simuv3/susp.cpp	/^springForce(tSuspension *susp)$/;"	f	file:
sqr	drivers/berniw/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	drivers/berniw/pathfinder.h	/^		inline double sqr(double a) { return a*a; };$/;"	f	class:Pathfinder
sqr	drivers/berniw/trackdesc.h	/^		inline double sqr(double a) { return a*a; }$/;"	f	class:TrackSegment
sqr	drivers/berniw2/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	drivers/berniw2/pathfinder.h	/^		inline double sqr(double a) { return a*a; };$/;"	f	class:Pathfinder
sqr	drivers/berniw2/trackdesc.h	/^		inline double sqr(double a) { return a*a; }$/;"	f	class:TrackSegment
sqr	drivers/berniw3/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	drivers/berniw3/pathfinder.h	/^		inline double sqr(double a) { return a*a; };$/;"	f	class:Pathfinder
sqr	drivers/berniw3/trackdesc.h	/^		inline double sqr(double a) { return a*a; }$/;"	f	class:TrackSegment
sqr	drivers/human/human.h	/^inline double sqr(double x)$/;"	f
sqr	drivers/human/pathfinder.h	/^		inline double sqr(double a) { return a*a; };$/;"	f	class:Pathfinder
sqr	drivers/human/trackdesc.h	/^		inline double sqr(double a) { return a*a; }$/;"	f	class:TrackSegment
sqr	drivers/inferno/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	drivers/inferno/pathfinder.h	/^		inline double sqr(const double a) const { return a*a; };$/;"	f	class:Pathfinder
sqr	drivers/inferno/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment
sqr	drivers/inferno/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment2D
sqr	drivers/lliaw/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	drivers/lliaw/pathfinder.h	/^		inline double sqr(const double a) const { return a*a; };$/;"	f	class:Pathfinder
sqr	drivers/lliaw/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment
sqr	drivers/lliaw/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment2D
sqr	drivers/tita/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	drivers/tita/pathfinder.h	/^		inline double sqr(const double a) const { return a*a; };$/;"	f	class:Pathfinder
sqr	drivers/tita/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment
sqr	drivers/tita/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment2D
src-robots-base_PKGDIR	drivers/berniw/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/berniw3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/0/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/0/practice/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/0/qualifying/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/0/race/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/1/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/1/practice/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/1/qualifying/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/1/race/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/2/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/3/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/4/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/5/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/6/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/7/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/8/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/9/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/bt/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/0/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/1/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/2/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/3/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/4/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/5/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/6/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/7/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/8/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/9/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/damned/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/1/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/10/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/2/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/3/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/4/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/5/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/6/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/7/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/8/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/9/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/inferno2/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/lliaw/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/0/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/1/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/2/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/3/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/4/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/5/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/6/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/7/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/8/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/9/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/olethros/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/sparkle/0/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/sparkle/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	drivers/tita/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGFILES	drivers/berniw/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/berniw3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/0/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/0/practice/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/0/qualifying/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/0/race/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/1/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/1/practice/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/1/qualifying/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/1/race/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/2/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/3/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/4/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/5/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/6/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/7/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/8/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/9/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/bt/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/0/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/1/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/2/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/3/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/4/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/5/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/6/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/7/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/8/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/9/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/damned/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/inferno2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/lliaw/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/0/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/1/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/2/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/3/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/4/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/5/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/6/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/7/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/8/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/9/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/olethros/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/sparkle/0/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/sparkle/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	drivers/tita/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGDIR	Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	doc/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	drivers/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	drivers/human/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	interfaces/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/client/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/confscreens/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/learning/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/math/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/musicplayer/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/portability/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/raceengineclient/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/racescreens/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/robottools/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/tgf/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/tgfclient/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/txml/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	libs/txml/gennmtab/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	linux/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/graphic/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/graphic/ssggraph/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/simu/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/simu/simuv2/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/simu/simuv2/SOLID-2.0/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/simu/simuv2/SOLID-2.0/include/3D/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/simu/simuv2/SOLID-2.0/include/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/simu/simuv2/SOLID-2.0/include/SOLID/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/simu/simuv2/SOLID-2.0/src/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/simu/simuv3/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/telemetry/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	modules/track/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	raceman/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	tools/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	tools/accc/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	tools/nfs2ac/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	tools/nfsperf/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	tools/package/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	tools/package/specfiles/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	tools/texmapper/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	tools/trackgen/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	windows/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	windows/dll/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	windows/include/AL/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	windows/include/GL/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	windows/include/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	windows/include/ogg/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	windows/include/plib/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	windows/include/vorbis/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	windows/lib/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGFILES	Makefile	/^src_PKGFILES	= Makefile$/;"	m
src_PKGFILES	doc/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	drivers/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	drivers/human/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	interfaces/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/client/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/confscreens/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/learning/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/math/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/musicplayer/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/portability/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/raceengineclient/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/racescreens/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/robottools/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/tgf/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/tgfclient/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/txml/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	libs/txml/gennmtab/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	linux/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/Makefile	/^src_PKGFILES	= Makefile$/;"	m
src_PKGFILES	modules/graphic/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/graphic/ssggraph/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/simu/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/simu/simuv2/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/simu/simuv2/SOLID-2.0/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/simu/simuv2/SOLID-2.0/include/3D/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/simu/simuv2/SOLID-2.0/include/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/simu/simuv2/SOLID-2.0/include/SOLID/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/simu/simuv2/SOLID-2.0/src/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/simu/simuv3/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/telemetry/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	modules/track/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	raceman/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	tools/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	tools/accc/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	tools/nfs2ac/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	tools/nfsperf/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	tools/package/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	tools/package/specfiles/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	tools/texmapper/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	tools/trackgen/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	windows/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	windows/dll/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	windows/include/AL/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	windows/include/GL/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	windows/include/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	windows/include/ogg/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	windows/include/plib/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	windows/include/vorbis/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	windows/lib/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
ssgAnimDirection	windows/include/plib/ssg.h	/^enum ssgAnimDirection$/;"	g
ssgAnimEnum	windows/include/plib/ssg.h	/^enum ssgAnimEnum$/;"	g
ssgAnimTimeMode	windows/include/plib/ssg.h	/^enum ssgAnimTimeMode$/;"	g
ssgAnimTransform	windows/include/plib/ssg.h	/^class ssgAnimTransform  : public ssgTransform $/;"	c
ssgAxisTransform	windows/include/plib/ssg.h	/^class ssgAxisTransform : public ssgTransform$/;"	c
ssgBase	windows/include/plib/ssg.h	/^class ssgBase $/;"	c
ssgBaseTransform	windows/include/plib/ssg.h	/^class ssgBaseTransform : public ssgBranch$/;"	c
ssgBranch	windows/include/plib/ssg.h	/^class ssgBranch : public ssgEntity$/;"	c
ssgBranchCb	modules/graphic/ssggraph/grssgext.h	/^  ssgBranchCb(void):ssgBranch() {$/;"	f	class:ssgBranchCb
ssgBranchCb	modules/graphic/ssggraph/grssgext.h	/^class ssgBranchCb : public ssgBranch$/;"	c
ssgCallback	windows/include/plib/ssg.h	/^typedef int (*ssgCallback)( ssgEntity * ) ;$/;"	t
ssgColourArray	windows/include/plib/ssg.h	/^  ssgColourArray ( int init = 3, sgVec4* things = 0 )$/;"	f	class:ssgColourArray
ssgColourArray	windows/include/plib/ssg.h	/^class ssgColourArray : public ssgSimpleList$/;"	c
ssgContext	windows/include/plib/ssg.h	/^class ssgContext$/;"	c
ssgCullResult	windows/include/plib/ssg.h	/^enum ssgCullResult$/;"	g
ssgCutout	windows/include/plib/ssg.h	/^class ssgCutout : public ssgBranch$/;"	c
ssgEntity	windows/include/plib/ssg.h	/^class ssgEntity : public ssgBase$/;"	c
ssgEntityBinding	windows/include/plib/ssg.h	/^struct ssgEntityBinding$/;"	s
ssgForceBasicState	windows/include/plib/ssg.h	/^inline void ssgForceBasicState ()$/;"	f
ssgGetCameraPosition	windows/include/plib/ssg.h	/^inline void ssgGetCameraPosition ( sgVec3 pos )$/;"	f
ssgGetCurrentContext	windows/include/plib/ssg.h	/^inline ssgContext *ssgGetCurrentContext () { return _ssgCurrentContext ; }$/;"	f
ssgGetCurrentOptions	windows/include/plib/ssg.h	/^inline ssgLoaderOptions* ssgGetCurrentOptions ()$/;"	f
ssgGetFOV	windows/include/plib/ssg.h	/^inline void ssgGetFOV ( float *w, float *h )$/;"	f
ssgGetFrustum	windows/include/plib/ssg.h	/^inline  sgFrustum *ssgGetFrustum ()$/;"	f
ssgGetModelviewMatrix	windows/include/plib/ssg.h	/^inline void ssgGetModelviewMatrix ( sgMat4 dst )$/;"	f
ssgGetNearFar	windows/include/plib/ssg.h	/^inline void ssgGetNearFar ( float *n, float *f )$/;"	f
ssgGetOrtho	windows/include/plib/ssg.h	/^inline void ssgGetOrtho ( float *w, float *h )$/;"	f
ssgGetProjectionMatrix	windows/include/plib/ssg.h	/^inline void ssgGetProjectionMatrix ( sgMat4 dst )$/;"	f
ssgGrVtxArray	modules/graphic/ssggraph/grvertexarray.h	/^class ssgGrVtxArray : public ssgVtxArray$/;"	c
ssgHandle	linux/linuxspec.cpp	/^static void * ssgHandle = NULL;$/;"	v	file:
ssgHit	windows/include/plib/ssg.h	/^  ssgHit ()$/;"	f	class:ssgHit
ssgHit	windows/include/plib/ssg.h	/^class ssgHit$/;"	c
ssgIndexArray	windows/include/plib/ssg.h	/^  ssgIndexArray ( int init = 3, short* things = 0 )$/;"	f	class:ssgIndexArray
ssgIndexArray	windows/include/plib/ssg.h	/^class ssgIndexArray : public ssgSimpleList$/;"	c
ssgInterleavedArray	windows/include/plib/ssg.h	/^  ssgInterleavedArray ( int init = 3, ssgInterleavedArrayElement* things = 0 )$/;"	f	class:ssgInterleavedArray
ssgInterleavedArray	windows/include/plib/ssg.h	/^class ssgInterleavedArray : public ssgSimpleList$/;"	c
ssgInterleavedArrayElement	windows/include/plib/ssg.h	/^struct ssgInterleavedArrayElement$/;"	s
ssgInvisible	windows/include/plib/ssg.h	/^class ssgInvisible : public ssgBranch$/;"	c
ssgKidList	windows/include/plib/ssg.h	/^class ssgKidList : public ssgList$/;"	c
ssgLeaf	windows/include/plib/ssg.h	/^class ssgLeaf : public ssgEntity$/;"	c
ssgLight	windows/include/plib/ssg.h	/^  ssgLight ()$/;"	f	class:ssgLight
ssgLight	windows/include/plib/ssg.h	/^class ssgLight$/;"	c
ssgList	windows/include/plib/ssg.h	/^class ssgList$/;"	c
ssgLoad	windows/include/plib/ssg.h	/^inline ssgEntity *ssgLoad ( char *fname, ssgBranch *(*cb)(char *))$/;"	f
ssgLoadFunc	windows/include/plib/ssg.h	/^typedef ssgEntity *ssgLoadFunc ( const char *, const ssgLoaderOptions * ) ;$/;"	t
ssgLoadModelviewMatrix	windows/include/plib/ssg.h	/^inline void ssgLoadModelviewMatrix ( sgMat4 mat )$/;"	f
ssgLoadModelviewMatrix	windows/include/plib/ssg.h	/^inline void ssgLoadModelviewMatrix ()$/;"	f
ssgLoadProjectionMatrix	windows/include/plib/ssg.h	/^inline void ssgLoadProjectionMatrix ( sgFrustum *f )$/;"	f
ssgLoadProjectionMatrix	windows/include/plib/ssg.h	/^inline void ssgLoadProjectionMatrix ()$/;"	f
ssgLoaderOptions	windows/include/plib/ssg.h	/^  ssgLoaderOptions ()$/;"	f	class:ssgLoaderOptions
ssgLoaderOptions	windows/include/plib/ssg.h	/^class ssgLoaderOptions$/;"	c
ssgLoaderOptionsEx	modules/graphic/ssggraph/grssgext.h	/^		ssgLoaderOptionsEx():ssgLoaderOptions() {}$/;"	f	class:ssgLoaderOptionsEx
ssgLoaderOptionsEx	modules/graphic/ssggraph/grssgext.h	/^class ssgLoaderOptionsEx : public ssgLoaderOptions {$/;"	c
ssgLoaderOptionsEx	tools/trackgen/util.h	/^    ssgLoaderOptionsEx()$/;"	f	class:ssgLoaderOptionsEx
ssgLoaderOptionsEx	tools/trackgen/util.h	/^class ssgLoaderOptionsEx : public ssgLoaderOptions$/;"	c
ssgModelPath	windows/include/plib/ssg.h	/^inline void ssgModelPath   ( const char *path )$/;"	f
ssgNormalArray	windows/include/plib/ssg.h	/^  ssgNormalArray ( int init = 3, sgVec3* things = 0 )$/;"	f	class:ssgNormalArray
ssgNormalArray	windows/include/plib/ssg.h	/^class ssgNormalArray : public ssgSimpleList$/;"	c
ssgOverrideCullface	windows/include/plib/ssg.h	/^inline void ssgOverrideCullface ( int on_off )$/;"	f
ssgOverrideState	windows/include/plib/ssg.h	/^inline void ssgOverrideState ( ssgState *s )$/;"	f
ssgOverrideTexture	windows/include/plib/ssg.h	/^inline void ssgOverrideTexture ( int on_off )$/;"	f
ssgRangeSelector	windows/include/plib/ssg.h	/^class ssgRangeSelector : public ssgSelector$/;"	c
ssgRoot	windows/include/plib/ssg.h	/^class ssgRoot : public ssgBranch$/;"	c
ssgSGIHeader	modules/graphic/ssggraph/grloadsgi.h	/^class ssgSGIHeader {$/;"	c
ssgSaveACInner	tools/trackgen/objects.cpp	/^ssgSaveACInner (ssgEntity *ent, FILE *save_fd)$/;"	f	file:
ssgSaveFunc	windows/include/plib/ssg.h	/^typedef int        ssgSaveFunc ( const char *, ssgEntity * ) ;$/;"	t
ssgSaveLeaf	tools/trackgen/objects.cpp	/^ssgSaveLeaf (ssgEntity *ent, FILE *save_fd)$/;"	f	file:
ssgSelector	windows/include/plib/ssg.h	/^class ssgSelector : public ssgBranch$/;"	c
ssgSetCamera	windows/include/plib/ssg.h	/^inline void ssgSetCamera ( sgCoord *coord )$/;"	f
ssgSetCamera	windows/include/plib/ssg.h	/^inline void ssgSetCamera ( sgMat4 mat )$/;"	f
ssgSetCameraLookAt	windows/include/plib/ssg.h	/^inline void ssgSetCameraLookAt ( const sgVec3 eye, const sgVec3 center )$/;"	f
ssgSetCameraLookAt	windows/include/plib/ssg.h	/^inline void ssgSetCameraLookAt ( const sgVec3 eye, const sgVec3 center, const sgVec3 up )$/;"	f
ssgSetCurrentOptions	windows/include/plib/ssg.h	/^inline void ssgSetCurrentOptions ( ssgLoaderOptions* options )$/;"	f
ssgSetFOV	windows/include/plib/ssg.h	/^inline void ssgSetFOV ( float w, float h )$/;"	f
ssgSetFrustum	windows/include/plib/ssg.h	/^inline void ssgSetFrustum ( float l, float r, float b, float t, float n, float f )$/;"	f
ssgSetNearFar	windows/include/plib/ssg.h	/^inline void ssgSetNearFar ( float n, float f )$/;"	f
ssgSetOrtho	windows/include/plib/ssg.h	/^inline void ssgSetOrtho ( float l, float r, float b, float t, float n, float f )$/;"	f
ssgSetOrtho	windows/include/plib/ssg.h	/^inline void ssgSetOrtho ( float w, float h )$/;"	f
ssgSimpleList	windows/include/plib/ssg.h	/^  ssgSimpleList ( int sz, int init = 3, char* things = 0 )$/;"	f	class:ssgSimpleList
ssgSimpleList	windows/include/plib/ssg.h	/^  ssgSimpleList ()$/;"	f	class:ssgSimpleList
ssgSimpleList	windows/include/plib/ssg.h	/^class ssgSimpleList : public ssgBase$/;"	c
ssgSimpleState	windows/include/plib/ssg.h	/^class ssgSimpleState : public ssgState$/;"	c
ssgSimpleStateArray	windows/include/plib/ssg.h	/^  ssgSimpleStateArray ( int init = 3 )$/;"	f	class:ssgSimpleStateArray
ssgSimpleStateArray	windows/include/plib/ssg.h	/^class ssgSimpleStateArray : private ssgSimpleList$/;"	c
ssgState	windows/include/plib/ssg.h	/^class ssgState : public ssgBase$/;"	c
ssgStateCallback	windows/include/plib/ssg.h	/^typedef int (*ssgStateCallback)( ssgState *entity ) ;$/;"	t
ssgStateSelector	windows/include/plib/ssg.h	/^class ssgStateSelector : public ssgSimpleState$/;"	c
ssgStatistics	windows/include/plib/ssg.h	/^  ssgStatistics ()$/;"	f	class:ssgStatistics
ssgStatistics	windows/include/plib/ssg.h	/^class ssgStatistics$/;"	c
ssgTexCoordArray	windows/include/plib/ssg.h	/^  ssgTexCoordArray ( int init = 3, sgVec2* things = 0 )$/;"	f	class:ssgTexCoordArray
ssgTexCoordArray	windows/include/plib/ssg.h	/^class ssgTexCoordArray : public ssgSimpleList$/;"	c
ssgTexTrans	windows/include/plib/ssg.h	/^class ssgTexTrans : public ssgBaseTransform$/;"	c
ssgTexture	windows/include/plib/ssg.h	/^class ssgTexture : public ssgBase$/;"	c
ssgTextureArray	windows/include/plib/ssg.h	/^  ssgTextureArray ( int init = 3 )$/;"	f	class:ssgTextureArray
ssgTextureArray	windows/include/plib/ssg.h	/^class ssgTextureArray : private ssgSimpleList$/;"	c
ssgTextureInfo	windows/include/plib/ssg.h	/^struct ssgTextureInfo$/;"	s
ssgTexturePath	windows/include/plib/ssg.h	/^inline void ssgTexturePath ( const char *path )$/;"	f
ssgTimedSelector	windows/include/plib/ssg.h	/^class ssgTimedSelector : public ssgSelector$/;"	c
ssgTransform	windows/include/plib/ssg.h	/^class ssgTransform : public ssgBaseTransform$/;"	c
ssgTransformArray	windows/include/plib/ssg.h	/^  ssgTransformArray ( int init = 3, sgMat4* things = 0 )$/;"	f	class:ssgTransformArray
ssgTransformArray	windows/include/plib/ssg.h	/^class ssgTransformArray : public ssgSimpleList$/;"	c
ssgTravCallback	windows/include/plib/ssg.h	/^typedef int (*ssgTravCallback)( ssgEntity *entity, int traversal_mask ) ;$/;"	t
ssgTween	windows/include/plib/ssg.h	/^class ssgTween : public ssgVtxTable$/;"	c
ssgTweenController	windows/include/plib/ssg.h	/^class ssgTweenController : public ssgBranch$/;"	c
ssgTypeAnimTransform	windows/include/plib/ssg.h	/^inline int ssgTypeAnimTransform() { return _SSG_TYPE_ANIMTRANSFORM  | ssgTypeTransform () ; }$/;"	f
ssgTypeAxisTransform	windows/include/plib/ssg.h	/^inline int ssgTypeAxisTransform() { return _SSG_TYPE_AXISTRANSFORM  | ssgTypeTransform () ; }$/;"	f
ssgTypeBase	windows/include/plib/ssg.h	/^inline int ssgTypeBase         () { return _SSG_TYPE_BASE ; }$/;"	f
ssgTypeBaseTransform	windows/include/plib/ssg.h	/^inline int ssgTypeBaseTransform() { return _SSG_TYPE_BASETRANSFORM | ssgTypeBranch () ; }$/;"	f
ssgTypeBranch	windows/include/plib/ssg.h	/^inline int ssgTypeBranch       () { return _SSG_TYPE_BRANCH    | ssgTypeEntity  () ; }$/;"	f
ssgTypeColourArray	windows/include/plib/ssg.h	/^inline int ssgTypeColourArray  () { return _SSG_TYPE_COLOURARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeCutout	windows/include/plib/ssg.h	/^inline int ssgTypeCutout       () { return _SSG_TYPE_CUTOUT    | ssgTypeBranch  () ; }$/;"	f
ssgTypeEntity	windows/include/plib/ssg.h	/^inline int ssgTypeEntity       () { return _SSG_TYPE_ENTITY    | ssgTypeBase    () ; }$/;"	f
ssgTypeIndexArray	windows/include/plib/ssg.h	/^inline int ssgTypeIndexArray   () { return _SSG_TYPE_INDEXARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeInterleavedArray	windows/include/plib/ssg.h	/^inline int ssgTypeInterleavedArray() { return _SSG_TYPE_INTERLEAVEDARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeInvisible	windows/include/plib/ssg.h	/^inline int ssgTypeInvisible    () { return _SSG_TYPE_INVISIBLE | ssgTypeBranch  () ; }$/;"	f
ssgTypeLeaf	windows/include/plib/ssg.h	/^inline int ssgTypeLeaf         () { return _SSG_TYPE_LEAF      | ssgTypeEntity  () ; }$/;"	f
ssgTypeNormalArray	windows/include/plib/ssg.h	/^inline int ssgTypeNormalArray  () { return _SSG_TYPE_NORMALARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeRangeSelector	windows/include/plib/ssg.h	/^inline int ssgTypeRangeSelector() { return _SSG_TYPE_RANGESELECTOR | ssgTypeSelector () ; }$/;"	f
ssgTypeRoot	windows/include/plib/ssg.h	/^inline int ssgTypeRoot         () { return _SSG_TYPE_ROOT      | ssgTypeBranch  () ; }$/;"	f
ssgTypeSelector	windows/include/plib/ssg.h	/^inline int ssgTypeSelector     () { return _SSG_TYPE_SELECTOR  | ssgTypeBranch  () ; }$/;"	f
ssgTypeSimpleList	windows/include/plib/ssg.h	/^inline int ssgTypeSimpleList   () { return _SSG_TYPE_SIMPLELIST | ssgTypeBase   () ; }$/;"	f
ssgTypeSimpleState	windows/include/plib/ssg.h	/^inline int ssgTypeSimpleState  () { return _SSG_TYPE_SIMPLESTATE | ssgTypeState () ; }$/;"	f
ssgTypeState	windows/include/plib/ssg.h	/^inline int ssgTypeState        () { return _SSG_TYPE_STATE     | ssgTypeBase    () ; }$/;"	f
ssgTypeStateSelector	windows/include/plib/ssg.h	/^inline int ssgTypeStateSelector() { return _SSG_TYPE_STATESELECTOR | ssgTypeSimpleState () ; }$/;"	f
ssgTypeTexCoordArray	windows/include/plib/ssg.h	/^inline int ssgTypeTexCoordArray() { return _SSG_TYPE_TEXCOORDARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeTexTrans	windows/include/plib/ssg.h	/^inline int ssgTypeTexTrans     () { return _SSG_TYPE_TEXTRANS  | ssgTypeBaseTransform () ; }$/;"	f
ssgTypeTexture	windows/include/plib/ssg.h	/^inline int ssgTypeTexture      () { return _SSG_TYPE_TEXTURE   | ssgTypeBase    () ; }$/;"	f
ssgTypeTimedSelector	windows/include/plib/ssg.h	/^inline int ssgTypeTimedSelector() { return _SSG_TYPE_TIMEDSELECTOR | ssgTypeSelector () ; }$/;"	f
ssgTypeTransform	windows/include/plib/ssg.h	/^inline int ssgTypeTransform    () { return _SSG_TYPE_TRANSFORM | ssgTypeBaseTransform () ; }$/;"	f
ssgTypeTransformArray	windows/include/plib/ssg.h	/^inline int ssgTypeTransformArray() { return _SSG_TYPE_TRANSFORMARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeTween	windows/include/plib/ssg.h	/^inline int ssgTypeTween        () { return _SSG_TYPE_TWEEN     | ssgTypeVtxTable() ; }$/;"	f
ssgTypeTweenController	windows/include/plib/ssg.h	/^inline int ssgTypeTweenController(){ return _SSG_TYPE_TWEENCONTROLLER | ssgTypeBranch() ; }$/;"	f
ssgTypeVTable	windows/include/plib/ssg.h	/^inline int ssgTypeVTable       () { return _SSG_TYPE_VTABLE    | ssgTypeLeaf    () ; }$/;"	f
ssgTypeVertexArray	windows/include/plib/ssg.h	/^inline int ssgTypeVertexArray  () { return _SSG_TYPE_VERTEXARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeVtxArray	windows/include/plib/ssg.h	/^inline int ssgTypeVtxArray     () { return _SSG_TYPE_VTXARRAY  | ssgTypeVtxTable() ; }$/;"	f
ssgTypeVtxTable	windows/include/plib/ssg.h	/^inline int ssgTypeVtxTable     () { return _SSG_TYPE_VTXTABLE  | ssgTypeLeaf    () ; }$/;"	f
ssgVTable	windows/include/plib/ssg.h	/^class ssgVTable : public ssgLeaf$/;"	c
ssgVertexArray	windows/include/plib/ssg.h	/^  ssgVertexArray ( int init = 3, sgVec3* things = 0 )$/;"	f	class:ssgVertexArray
ssgVertexArray	windows/include/plib/ssg.h	/^class ssgVertexArray : public ssgSimpleList$/;"	c
ssgVtxArray	windows/include/plib/ssg.h	/^class ssgVtxArray : public ssgVtxTable$/;"	c
ssgVtxTable	windows/include/plib/ssg.h	/^class ssgVtxTable : public ssgLeaf$/;"	c
ssgVtxTableCarlight	modules/graphic/ssggraph/grcarlight.cpp	/^ssgVtxTableCarlight::ssgVtxTableCarlight()$/;"	f	class:ssgVtxTableCarlight
ssgVtxTableCarlight	modules/graphic/ssggraph/grcarlight.cpp	/^ssgVtxTableCarlight::ssgVtxTableCarlight(ssgVertexArray *vtx, double s, sgVec3 p)$/;"	f	class:ssgVtxTableCarlight
ssgVtxTableCarlight	modules/graphic/ssggraph/grcarlight.h	/^class ssgVtxTableCarlight : public ssgVtxTable$/;"	c
ssgVtxTableShadow	modules/graphic/ssggraph/grshadow.cpp	/^ssgVtxTableShadow::ssgVtxTableShadow ( GLenum ty, ssgVertexArray   *vl,$/;"	f	class:ssgVtxTableShadow
ssgVtxTableShadow	modules/graphic/ssggraph/grshadow.cpp	/^ssgVtxTableShadow::ssgVtxTableShadow ()$/;"	f	class:ssgVtxTableShadow
ssgVtxTableShadow	modules/graphic/ssggraph/grshadow.cpp	/^ssgVtxTableShadow::ssgVtxTableShadow (float f, float u) : ssgVtxTable(), factor(f), unit(u)$/;"	f	class:ssgVtxTableShadow
ssgVtxTableShadow	modules/graphic/ssggraph/grshadow.h	/^class ssgVtxTableShadow : public ssgVtxTable$/;"	c
ssgVtxTableSmoke	modules/graphic/ssggraph/grsmoke.cpp	/^ssgVtxTableSmoke:: ssgVtxTableSmoke (ssgVertexArray	*shd_vtx , float initsize, int typ)$/;"	f	class:ssgVtxTableSmoke
ssgVtxTableSmoke	modules/graphic/ssggraph/grsmoke.cpp	/^ssgVtxTableSmoke::ssgVtxTableSmoke ()$/;"	f	class:ssgVtxTableSmoke
ssgVtxTableSmoke	modules/graphic/ssggraph/grsmoke.h	/^class ssgVtxTableSmoke : public ssgVtxTable$/;"	c
ssgaCube	windows/include/plib/ssgaShapes.h	/^class ssgaCube : public ssgaShape$/;"	c
ssgaCylinder	windows/include/plib/ssgaShapes.h	/^class ssgaCylinder : public ssgaShape$/;"	c
ssgaFire	windows/include/plib/ssgaFire.h	/^class ssgaFire : public ssgaParticleSystem$/;"	c
ssgaLensFlare	windows/include/plib/ssgaLensFlare.h	/^class ssgaLensFlare : public ssgaShape$/;"	c
ssgaParticle	windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticle ()$/;"	f	class:ssgaParticle
ssgaParticle	windows/include/plib/ssgaParticleSystem.h	/^class ssgaParticle$/;"	c
ssgaParticleCreateFunc	windows/include/plib/ssgaParticleSystem.h	/^typedef void (* ssgaParticleCreateFunc) ( ssgaParticleSystem *ps,$/;"	t
ssgaParticleDeleteFunc	windows/include/plib/ssgaParticleSystem.h	/^typedef void (* ssgaParticleDeleteFunc) ( ssgaParticleSystem *ps,$/;"	t
ssgaParticleSystem	windows/include/plib/ssgaParticleSystem.h	/^class ssgaParticleSystem : public ssgVtxTable$/;"	c
ssgaParticleUpdateFunc	windows/include/plib/ssgaParticleSystem.h	/^typedef void (* ssgaParticleUpdateFunc) ( float deltaTime,$/;"	t
ssgaPatch	windows/include/plib/ssgaShapes.h	/^class ssgaPatch : public ssgaShape$/;"	c
ssgaShape	windows/include/plib/ssgaShapes.h	/^class ssgaShape : public ssgBranch$/;"	c
ssgaSphere	windows/include/plib/ssgaShapes.h	/^class ssgaSphere : public ssgaShape$/;"	c
ssgaTeapot	windows/include/plib/ssgaShapes.h	/^class ssgaTeapot : public ssgaShape$/;"	c
ssgaTypeCube	windows/include/plib/ssgAux.h	/^inline int ssgaTypeCube    () { return _SSGA_TYPE_CUBE     | ssgaTypeShape ();}$/;"	f
ssgaTypeCylinder	windows/include/plib/ssgAux.h	/^inline int ssgaTypeCylinder() { return _SSGA_TYPE_CYLINDER | ssgaTypeShape ();}$/;"	f
ssgaTypeLensFlare	windows/include/plib/ssgAux.h	/^inline int ssgaTypeLensFlare ()$/;"	f
ssgaTypeParticleSystem	windows/include/plib/ssgAux.h	/^inline int ssgaTypeParticleSystem ()$/;"	f
ssgaTypePatch	windows/include/plib/ssgAux.h	/^inline int ssgaTypePatch   () { return _SSGA_TYPE_PATCH    | ssgaTypeShape ();}$/;"	f
ssgaTypeShape	windows/include/plib/ssgAux.h	/^inline int ssgaTypeShape   () { return _SSGA_TYPE_SHAPE    | ssgTypeBranch ();}$/;"	f
ssgaTypeSphere	windows/include/plib/ssgAux.h	/^inline int ssgaTypeSphere  () { return _SSGA_TYPE_SPHERE   | ssgaTypeShape ();}$/;"	f
ssgaTypeTeapot	windows/include/plib/ssgAux.h	/^inline int ssgaTypeTeapot  () { return _SSGA_TYPE_TEAPOT   | ssgaTypeShape ();}$/;"	f
ssgaTypeWaveSystem	windows/include/plib/ssgAux.h	/^inline int ssgaTypeWaveSystem ()$/;"	f
ssgaWSDepthCallback	windows/include/plib/ssgaWaveSystem.h	/^typedef float (* ssgaWSDepthCallback ) ( float x, float y ) ;$/;"	t
ssgaWaveSystem	windows/include/plib/ssgaWaveSystem.h	/^class ssgaWaveSystem : public ssgaShape$/;"	c
ssgaWaveTrain	windows/include/plib/ssgaWaveSystem.h	/^  ssgaWaveTrain ()$/;"	f	class:ssgaWaveTrain
ssgaWaveTrain	windows/include/plib/ssgaWaveSystem.h	/^class ssgaWaveTrain$/;"	c
ssggraph	modules/graphic/ssggraph/ssggraph.cpp	/^ssggraph(tModInfo *modInfo)$/;"	f
standalone	libs/txml/xmlparse.c	/^  int standalone;$/;"	m	struct:__anon116	file:
start	libs/musicplayer/OpenALMusicPlayer.cpp	/^void OpenALMusicPlayer::start()$/;"	f	class:OpenALMusicPlayer
start	libs/racescreens/miscscreens.cpp	/^    int		start;$/;"	m	struct:__anon105	file:
start	libs/racescreens/results.cpp	/^	int start;$/;"	m	struct:__anon100	file:
start	libs/txml/gennmtab.c	/^  int start;$/;"	m	struct:range	file:
start	libs/txml/gennmtab/gennmtab.c	/^  int start;$/;"	m	struct:range	file:
start	libs/txml/xmlparse.c	/^  XML_Char *start;$/;"	m	struct:__anon112	file:
start	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::start()$/;"	f	class:OpenalTorcsSound
start	modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::start()$/;"	f	class:PlibTorcsSound
start	modules/graphic/ssggraph/grloadsgi.h	/^		unsigned int  *start ;$/;"	m	class:ssgSGIHeader
start	tools/trackgen/track.cpp	/^	int start;$/;"	m	struct:dispElt	file:
start	windows/include/plib/sl.h	/^  virtual void start ()$/;"	f	class:slPlayer
start	windows/include/plib/sl.h	/^  void start ()$/;"	f	class:slSamplePlayer
start	windows/include/plib/ssg.h	/^  int   start ;$/;"	m	class:ssgTimedSelector
start	windows/include/plib/ul.h	/^  double start ;$/;"	m	class:ulClock
startElement	libs/txml/xml.cpp	/^startElement(void *userData, const char *name, const char **atts)$/;"	f	file:
startElementHandler	libs/txml/xmlparse.c	/^  XML_StartElementHandler startElementHandler;$/;"	m	struct:__anon117	file:
startElementHandler	libs/txml/xmlparse.c	261;"	d	file:
startMenuMusic	libs/musicplayer/musicplayer.cpp	/^void startMenuMusic()$/;"	f
startMonitoring	interfaces/telemetry.h	/^    tftlmStartMonitoring	startMonitoring;	\/* Start monitoring *\/$/;"	m	struct:__anon86
startPitTime	interfaces/raceman.h	/^    double	startPitTime;$/;"	m	struct:__anon72
startPlayback	libs/musicplayer/OpenALMusicPlayer.cpp	/^bool OpenALMusicPlayer::startPlayback()$/;"	f	class:OpenALMusicPlayer
startProfile	libs/tgf/profiler.cpp	/^void Profiler::startProfile(const char * name) {$/;"	f	class:Profiler
startRank	interfaces/car.h	/^	int startRank; \/**< Car's starting position *\/$/;"	m	struct:__anon76
startScr	libs/racescreens/miscscreens.cpp	/^    void	*startScr;$/;"	m	struct:__anon105	file:
startWidth	interfaces/track.h	/^    tdble startWidth;		\/**< Width of the beginning of the segment *\/$/;"	m	struct:trackSeg
start_size	windows/include/plib/ssgaFire.h	/^  float start_size   ;$/;"	m	class:ssgaFire
start_time	windows/include/plib/ssg.h	/^  double  start_time ;$/;"	m	class:ssgTimedSelector
startid	drivers/inferno/pathfinder.h	/^		int startid;		\/\/ Id of first pit segment.$/;"	m	class:PathSegPit
startid	drivers/lliaw/pathfinder.h	/^		int startid;		\/\/ Id of first pit segment.$/;"	m	class:PathSegPit
startid	drivers/tita/pathfinder.h	/^		int startid;		\/\/ Id of first pit segment.$/;"	m	class:PathSegPit
startmode	drivers/berniw/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	drivers/berniw2/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	drivers/berniw3/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	drivers/human/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	drivers/inferno/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	drivers/lliaw/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	drivers/tita/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
statGC	interfaces/car.h	/^	t3Dd statGC; \/**< Static pos of GC (should be the origin of car axis) *\/$/;"	m	struct:__anon76
statGC	modules/simu/simuv2/carstruct.h	/^    t3Dd	statGC;		\/* static pos of GC *\/$/;"	m	struct:__anon23
statGC	modules/simu/simuv3/carstruct.h	/^    t3Dd	statGC;		\/* static pos of GC *\/$/;"	m	struct:__anon42
state	drivers/bt/opponent.h	/^		int state;			\/\/ State variable to characterize the relation to the opponent, e. g. opponent is behind.$/;"	m	class:Opponent
state	drivers/damned/opponent.h	/^		int state;			\/\/ State variable to characterize the relation to the opponent, e. g. opponent is behind.$/;"	m	class:Opponent
state	drivers/human/human.cpp	/^	int state;$/;"	m	struct:__anon184	file:
state	drivers/olethros/opponent.h	/^		int state;			\/\/\/< State variable to characterize the relation to the opponent, e. g. opponent is behind.$/;"	m	class:olethros::Opponent
state	drivers/sparkle/opponent.h	/^		int state;$/;"	m	class:Opponent
state	interfaces/car.h	/^	int state; \/**< state of the car.$/;"	m	struct:__anon78
state	interfaces/car.h	/^	int state; \/**< wheel state *\/$/;"	m	struct:__anon79
state	interfaces/raceman.h	/^    int			state;$/;"	m	struct:__anon70
state	interfaces/raceman.h	/^    int			state;$/;"	m	struct:__anon73
state	interfaces/raceman.h	/^    int		state;$/;"	m	struct:RmMovieCapture
state	libs/tgf/params.cpp	/^	int state; \/**< Internal state *\/$/;"	m	struct:parmOutput	file:
state	libs/tgfclient/gui.h	/^    int			state;$/;"	m	struct:__anon145
state	libs/tgfclient/gui.h	/^    int		state;		\/* enable \/ disable *\/$/;"	m	struct:GfuiObject
state	libs/tgfclient/gui.h	/^    unsigned int	state;$/;"	m	struct:__anon141
state	libs/tgfclient/gui.h	/^    unsigned int	state;$/;"	m	struct:__anon142
state	modules/graphic/ssggraph/grskidmarks.h	/^	int			*state;$/;"	m	struct:__anon1
state	modules/graphic/ssggraph/grutil.cpp	/^    grManagedState *state;$/;"	m	struct:stlist	file:
state	modules/simu/simuv2/susp.h	/^    int    state;        \/* indicate the state of the suspension *\/$/;"	m	struct:Suspension
state	modules/simu/simuv2/transmission.h	/^    int		state;$/;"	m	struct:__anon25
state	modules/simu/simuv2/wheel.h	/^    int     	state;     	\/* wheel state *\/$/;"	m	struct:__anon11
state	modules/simu/simuv3/susp.h	/^    int    state;        \/* indicate the state of the suspension *\/$/;"	m	struct:Suspension
state	modules/simu/simuv3/transmission.h	/^    int		state;$/;"	m	struct:__anon44
state	modules/simu/simuv3/wheel.h	/^    int     	state;     	\/* wheel state *\/$/;"	m	struct:__anon33
state	modules/telemetry/telemetry.cpp	/^    int		state;$/;"	m	struct:Tlm	file:
state	tools/trackgen/easymesh.cpp	/^	int state;            \/* is it (D)one, (A)ctive or (W)aiting *\/$/;"	m	struct:ele	file:
state	windows/include/plib/ssg.h	/^  ssgState *state ;$/;"	m	class:ssgLeaf
state	windows/include/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
state1	modules/graphic/ssggraph/grvtxtable.h	/^  grMultiTexState *state1 ;$/;"	m	class:grVtxTable
state2	modules/graphic/ssggraph/grvtxtable.h	/^  grMultiTexState *state2 ;$/;"	m	class:grVtxTable
state3	modules/graphic/ssggraph/grvtxtable.h	/^  grMultiTexState *state3 ;$/;"	m	class:grVtxTable
stateList	modules/graphic/ssggraph/grutil.cpp	/^static stlist * stateList = NULL;$/;"	v	file:
stateOverridden	windows/include/plib/ssg.h	/^  int  stateOverridden    () { return ovState != NULL ; }$/;"	f	class:ssgContext
statelist	windows/include/plib/ssg.h	/^  ssgSimpleState **statelist ;$/;"	m	class:ssgStateSelector
staticPos	modules/simu/simuv2/aero.h	/^    t3Dd	staticPos;$/;"	m	struct:__anon28
staticPos	modules/simu/simuv2/wheel.h	/^    tPosd	staticPos;	\/* pos relative to the GC (z is suspension travel at rest) *\/$/;"	m	struct:__anon11
staticPos	modules/simu/simuv3/aero.h	/^    t3Dd	staticPos;$/;"	m	struct:__anon47
staticPos	modules/simu/simuv3/wheel.h	/^    tPosd	staticPos;	\/* pos relative to the GC (z is suspension$/;"	m	struct:__anon33
static_pool	modules/graphic/ssggraph/TorcsSound.h	/^	bool static_pool;	\/\/\/< dynamic or static source assignment?$/;"	m	class:OpenalTorcsSound
status	windows/include/plib/sl.h	/^  slSampleStatus status          ;$/;"	m	class:slPlayer
steer	interfaces/car.h	/^	tdble steer; \/**< Steer command [-1.0, 1.0]  *\/$/;"	m	struct:__anon81
steer	modules/simu/simuv2/carstruct.h	/^    tSteer		steer;$/;"	m	struct:__anon23
steer	modules/simu/simuv2/steer.h	/^    tdble	steer;		\/* current steer value *\/$/;"	m	struct:__anon16
steer	modules/simu/simuv2/wheel.h	/^    tdble	steer;$/;"	m	struct:__anon11
steer	modules/simu/simuv3/carstruct.h	/^    tSteer		steer;$/;"	m	struct:__anon42
steer	modules/simu/simuv3/steer.h	/^    tdble	steer;		\/* current steer value *\/$/;"	m	struct:__anon35
steer	modules/simu/simuv3/wheel.h	/^    tdble	steer;$/;"	m	struct:__anon33
steerLock	interfaces/car.h	/^	tCarPitSetupValue steerLock;$/;"	m	struct:__anon83
steerLock	interfaces/car.h	/^	tdble steerLock; \/**< Steer lock angle *\/$/;"	m	struct:__anon76
steerLock	modules/simu/simuv2/steer.h	/^    tdble	steerLock;	\/* in rad *\/$/;"	m	struct:__anon16
steerLock	modules/simu/simuv3/steer.h	/^    tdble	steerLock;	\/* in rad *\/$/;"	m	struct:__anon35
steerMult	drivers/inferno2/inferno2.cpp	/^static tdble steerMult[10] = {2.0f};$/;"	v	file:
steer_value	linux/shared_memory.h	/^int steer_value;$/;"	v
steerdecb	libs/racescreens/carsetupscreen.cpp	/^		tdble steerdecb;$/;"	m	class:cGuiSetupValue	file:
steerdecs	libs/racescreens/carsetupscreen.cpp	/^		tdble steerdecs;$/;"	m	class:cGuiSetupValue	file:
steerincb	libs/racescreens/carsetupscreen.cpp	/^		tdble steerincb;$/;"	m	class:cGuiSetupValue	file:
steerincs	libs/racescreens/carsetupscreen.cpp	/^		tdble steerincs;$/;"	m	class:cGuiSetupValue	file:
step	drivers/olethros/TrackData.h	/^    float step;$/;"	m	class:TrackData
step0_max_life	modules/graphic/ssggraph/grsmoke.h	/^  double step0_max_life;$/;"	m	class:ssgVtxTableSmoke
step1_max_life	modules/graphic/ssggraph/grsmoke.h	/^  double step1_max_life;$/;"	m	class:ssgVtxTableSmoke
step2_max_life	modules/graphic/ssggraph/grsmoke.h	/^  double step2_max_life;$/;"	m	class:ssgVtxTableSmoke
stepInterpolate	drivers/berniw/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	drivers/berniw2/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	drivers/berniw3/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	drivers/human/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	drivers/inferno/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	drivers/lliaw/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	drivers/tita/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stereo	windows/include/plib/sl.h	/^  int    stereo ;$/;"	m	class:slSample
stereo	windows/include/plib/sl.h	/^  int stereo ;$/;"	m	class:slDSP
stiffness	windows/include/plib/sg.h	/^  float stiffness  ;$/;"	m	class:sgSpringDamper
stkProfiles	libs/tgf/tgf.h	/^  std::vector<ProfileInstance *> stkProfiles;$/;"	m	class:Profiler
stlist	modules/graphic/ssggraph/grutil.cpp	/^typedef struct stlist$/;"	s	file:
stlist	modules/graphic/ssggraph/grutil.cpp	/^} stlist;$/;"	t	typeref:struct:stlist	file:
stop	libs/musicplayer/OpenALMusicPlayer.cpp	/^void OpenALMusicPlayer::stop()$/;"	f	class:OpenALMusicPlayer
stop	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::stop()$/;"	f	class:OpenalTorcsSound
stop	modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::stop()$/;"	f	class:PlibTorcsSound
stop	windows/include/plib/sl.h	/^  virtual void stop ()$/;"	f	class:slPlayer
stop	windows/include/plib/sl.h	/^  void stop ()$/;"	f	class:slSamplePlayer
stopActiveProfiles	libs/tgf/profiler.cpp	/^void Profiler::stopActiveProfiles() {$/;"	f	class:Profiler
stopMenuMusic	libs/musicplayer/musicplayer.cpp	/^void stopMenuMusic()$/;"	f
stopMonitoring	interfaces/telemetry.h	/^    tftlmStopMonitoring		stopMonitoring;		\/* Stop monitoring *\/$/;"	m	struct:__anon86
stopProfile	libs/tgf/profiler.cpp	/^void Profiler::stopProfile() {$/;"	f	class:Profiler
stopType	interfaces/car.h	/^	int stopType;$/;"	m	struct:__anon84
storage	windows/include/ogg/ogg.h	/^  int storage;$/;"	m	struct:__anon54
storage	windows/include/ogg/ogg.h	/^  long storage;$/;"	m	struct:__anon50
store	modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::store (void)$/;"	f	class:cGrCarCamMirror
storeAttributeValue	libs/txml/xmlparse.c	/^storeAttributeValue(XML_Parser parser, const ENCODING *enc, int isCdata,$/;"	f	file:
storeAtts	libs/txml/xmlparse.c	/^static enum XML_Error storeAtts(XML_Parser parser, const ENCODING *enc,$/;"	f	file:
storeEntityValue	libs/txml/xmlparse.c	/^enum XML_Error storeEntityValue(XML_Parser parser,$/;"	f	file:
strBaseName	libs/learning/string_utils.cpp	/^char *strBaseName(char *filename) {$/;"	f
strConcat	libs/learning/string_utils.cpp	/^char *strConcat(int n, ...)$/;"	f
strRemoveSuffix	libs/learning/string_utils.cpp	/^char *strRemoveSuffix(char *filename, char c)$/;"	f
straight2d	libs/math/linalg_t.h	/^typedef straight2t<double> straight2d;$/;"	t
straight2f	libs/math/linalg_t.h	/^typedef straight2t<float> straight2f;$/;"	t
straight2t	libs/math/straight2_t.h	/^		straight2t() {}$/;"	f	class:straight2t
straight2t	libs/math/straight2_t.h	/^		straight2t(T x, T y, T dx, T dy)$/;"	f	class:straight2t
straight2t	libs/math/straight2_t.h	/^		straight2t(const v2t<T> &anchor, const v2t<T> &dir)$/;"	f	class:straight2t
straight2t	libs/math/straight2_t.h	/^template<class T> class straight2t {$/;"	c
strategy	drivers/bt/driver.h	/^		AbstractStrategy *strategy;		\/\/ Pit stop strategy.$/;"	m	class:Driver
strategy	drivers/damned/driver.h	/^		AbstractStrategy *strategy;		\/\/ Pit stop strategy.$/;"	m	class:Driver
strategy	drivers/olethros/driver.h	/^	AbstractStrategy *strategy;		\/\/\/< Pit stop strategy.$/;"	m	class:olethros::Driver
strcasecmp	windows/osspec.h	41;"	d
strdup	libs/tgf/tgf.h	164;"	d
stream	libs/musicplayer/OpenALMusicPlayer.h	/^		SoundStream* stream;$/;"	m	class:OpenALMusicPlayer
streamBuffer	libs/musicplayer/OpenALMusicPlayer.cpp	/^bool OpenALMusicPlayer::streamBuffer(ALuint buffer)$/;"	f	class:OpenALMusicPlayer
streqci	libs/txml/xmltok.c	/^int streqci(const char *s1, const char *s2)$/;"	f	file:
stricmp	tools/accc/accc.h	172;"	d
string	libs/learning/string_utils.h	/^     char* string; \/\/\/<This is the string$/;"	m	struct:StringBuffer_
string_copy	libs/learning/string_utils.cpp	/^char* string_copy (char* c)$/;"	f
stripes	modules/graphic/ssggraph/grvtxtable.h	/^  ssgIndexArray      *stripes;$/;"	m	class:grVtxTable
stripifyOb	tools/accc/ac3dload.cpp	/^void stripifyOb(ob_t *object,int writeit)$/;"	f
striplist	modules/graphic/ssggraph/grloadac.cpp	/^static ssgIndexArray    *striplist=NULL;$/;"	v	file:
strips	modules/graphic/ssggraph/grskidmarks.h	/^  tgrSkidStrip	strips[4]; \/* the strips of the four wheels*\/$/;"	m	struct:__anon2
strncasecmp	windows/osspec.h	40;"	d
strndup	libs/portability/portability.h	/^static char *strndup(const char *str, int len)$/;"	f
strnicmp	tools/accc/accc.h	173;"	d
stuck	drivers/bt/driver.h	/^		int stuck;$/;"	m	class:Driver
stuck	drivers/damned/driver.h	/^		int stuck;$/;"	m	class:Driver
stuck	drivers/olethros/driver.h	/^	int stuck;$/;"	m	class:olethros::Driver
stuck	drivers/sparkle/driver.h	/^		int stuck;$/;"	m	class:Driver
style	interfaces/track.h	/^    int			style;	\/**< Barrier style *\/$/;"	m	struct:trackBarrier
style	interfaces/track.h	/^    int style;			\/**< Border and barrier segments style:$/;"	m	struct:trackSeg
stype	modules/graphic/ssggraph/grsmoke.h	/^  int stype;$/;"	m	class:ssgVtxTableSmoke
sub	libs/txml/xml.h	/^    struct xmlElement	*sub;		\/* next element at the next level (nested) *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlElement
subForce	windows/include/plib/sg.h	/^  void subForce    ( sgVec3 f ) { sgSubVec3    ( force, f ) ; }$/;"	f	class:sgParticle
subSectionList	libs/tgf/params.cpp	/^	struct sectionHead subSectionList; \/**< List of sub-sections (linked by linkSection) *\/$/;"	m	struct:section	typeref:struct:section::sectionHead	file:
subTime	libs/tgf/tgf.h	/^  double subTime;$/;"	m	class:ProfileInstance
succ	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Endpoint *succ;$/;"	m	class:Endpoint
sum_error_l	drivers/human/human.cpp	/^static double sum_error_l;$/;"	v	file:
sum_error_r	drivers/human/human.cpp	/^static double sum_error_r;$/;"	v	file:
sumx	tools/trackgen/easymesh.h	/^    double sumx, sumy;$/;"	m	struct:nod
sumy	tools/trackgen/easymesh.h	/^    double sumx, sumy;$/;"	m	struct:nod
sun_grscene	modules/graphic/ssggraph/grscene.cpp	/^ssgTransform *sun_grscene = NULL ;$/;"	v
sup	modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point sup(const Point& p1, const Point& p2) { $/;"	f
support	modules/simu/simuv2/SOLID-2.0/src/Box.cpp	/^Point Box::support(const Vector& v) const {$/;"	f	class:Box
support	modules/simu/simuv2/SOLID-2.0/src/Cone.cpp	/^Point Cone::support(const Vector& v) const {$/;"	f	class:Cone
support	modules/simu/simuv2/SOLID-2.0/src/Cylinder.cpp	/^Point Cylinder::support(const Vector& v) const {$/;"	f	class:Cylinder
support	modules/simu/simuv2/SOLID-2.0/src/Polygon.cpp	/^Point Polygon::support(const Vector& v) const {$/;"	f	class:Polygon
support	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^Point Polyhedron::support(const Vector& v) const {$/;"	f	class:Polyhedron
support	modules/simu/simuv2/SOLID-2.0/src/Simplex.cpp	/^Point Simplex::support(const Vector& v) const {$/;"	f	class:Simplex
support	modules/simu/simuv2/SOLID-2.0/src/Sphere.cpp	/^Point Sphere::support(const Vector& v) const {$/;"	f	class:Sphere
surf	tools/trackgen/easymesh.cpp	/^struct surf {$/;"	s	file:
surf_tag	modules/graphic/ssggraph/grloadac.cpp	/^static Tag surf_tag [] =$/;"	v	file:
surface	interfaces/track.h	/^    tTrackSurface	*surface; \/**< Barrier surface *\/$/;"	m	struct:trackBarrier
surface	interfaces/track.h	/^    tTrackSurface	*surface; \/**< Segment surface *\/$/;"	m	struct:trackSeg
surface_tags	modules/graphic/ssggraph/grloadac.cpp	/^static Tag surface_tags [] =$/;"	v	file:
surfaces	interfaces/track.h	/^    tTrackSurface *surfaces;	\/**< Segment surface list *\/$/;"	m	struct:__anon68
surfaces	tools/trackgen/easymesh.cpp	/^	struct surf	*surfaces;$/;"	m	struct:group	typeref:struct:group::surf	file:
surfrefs	tools/accc/accc.h	/^  int      * surfrefs;$/;"	m	struct:ob
susp	modules/simu/simuv2/wheel.h	/^    tSuspension  susp;		\/* associated suspension *\/$/;"	m	struct:__anon11
susp	modules/simu/simuv3/wheel.h	/^    tSuspension  susp;		\/* associated suspension *\/$/;"	m	struct:__anon33
suspension_damage	modules/simu/simuv3/SimulationOptions.h	/^	bool suspension_damage; \/\/\/< If true, the suspension shocks can be damaged from large bumps.$/;"	m	class:SimulationOptions
suspfastbump	interfaces/car.h	/^	tCarPitSetupValue suspfastbump[4];$/;"	m	struct:__anon83
suspfastrebound	interfaces/car.h	/^	tCarPitSetupValue suspfastrebound[4];$/;"	m	struct:__anon83
susppackers	interfaces/car.h	/^	tCarPitSetupValue susppackers[4];$/;"	m	struct:__anon83
suspslowbump	interfaces/car.h	/^	tCarPitSetupValue suspslowbump[4];$/;"	m	struct:__anon83
suspslowrebound	interfaces/car.h	/^	tCarPitSetupValue suspslowrebound[4];$/;"	m	struct:__anon83
suspspring	interfaces/car.h	/^	tCarPitSetupValue suspspring[4];$/;"	m	struct:__anon83
swap32	libs/tgfclient/guifont.cpp	/^void swap32(unsigned int *p, unsigned int size)$/;"	f
swapBase	modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  void swapBase() { swap(base, prev_base); } $/;"	f	class:Complex
swap_side	tools/trackgen/easymesh.cpp	/^void swap_side(int s)$/;"	f
switchMirror	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::switchMirror(void)$/;"	f	class:cGrScreen
sx	modules/graphic/ssggraph/grcar.h	/^    tdble               sx;$/;"	m	struct:__anon5
sx	modules/simu/simuv2/wheel.h	/^    tdble	sx;		\/* longitudinal slip value *\/$/;"	m	struct:__anon11
sx	modules/simu/simuv3/wheel.h	/^    tdble	sx;		\/* longitudinal slip value *\/$/;"	m	struct:__anon33
sy	modules/graphic/ssggraph/grcar.h	/^    tdble               sy;$/;"	m	struct:__anon5
syntaxError	libs/txml/xmlrole.c	/^int syntaxError(PROLOG_STATE *state)$/;"	f	file:
systemId	libs/txml/xmlparse.c	/^  const XML_Char *systemId;$/;"	m	struct:__anon111	file:
t	libs/learning/ANN.h	/^	real* t; \/\/\/< targets$/;"	m	struct:ANN_
t	tools/nfs2ac/mainnfs2ac.cpp	/^    int t;$/;"	m	struct:__anon57	file:
t	tools/texmapper/ssgSaveAC.cpp	/^  sgVec2 t [ 3 ] ;$/;"	m	struct:saveTriangle	file:
t	tools/trackgen/objects.cpp	/^	sgVec2 t[3];$/;"	m	struct:saveTriangle	file:
t	tools/trackgen/raceline.cpp	/^	vec2d t;	\/\/ raceline$/;"	m	struct:RacelineSegment	file:
t0	windows/include/plib/ssgaLensFlare.h	/^  ssgTexCoordArray *t0 ;$/;"	m	class:ssgaLensFlare
t0tab	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2           *t0tab = NULL;$/;"	v	file:
t1tab	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2           *t1tab = NULL;$/;"	v	file:
t2sg3	modules/simu/simuv3/sim.h	/^inline void t2sg3 (t3Dd& p, sgVec3& v)$/;"	f
t2tab	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2           *t2tab = NULL;$/;"	v	file:
t3Dd	libs/tgf/tgf.h	/^} t3Dd;$/;"	t	typeref:struct:__anon94
t3Df	libs/tgf/tgf.h	/^} t3Df;$/;"	t	typeref:struct:__anon93
t3Di	libs/tgf/tgf.h	/^} t3Di;$/;"	t	typeref:struct:__anon95
t3tab	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2           *t3tab = NULL;$/;"	v	file:
tAero	modules/simu/simuv2/aero.h	/^} tAero;$/;"	t	typeref:struct:__anon27
tAero	modules/simu/simuv3/aero.h	/^} tAero;$/;"	t	typeref:struct:__anon46
tAxle	modules/simu/simuv2/axle.h	/^} tAxle;$/;"	t	typeref:struct:__anon12
tAxle	modules/simu/simuv3/axle.h	/^} tAxle;$/;"	t	typeref:struct:__anon34
tBrake	modules/simu/simuv2/brake.h	/^} tBrake;$/;"	t	typeref:struct:__anon7
tBrake	modules/simu/simuv3/brake.h	/^} tBrake;$/;"	t	typeref:struct:__anon29
tBrakeSyst	modules/simu/simuv2/brake.h	/^} tBrakeSyst;$/;"	t	typeref:struct:__anon8
tBrakeSyst	modules/simu/simuv3/brake.h	/^} tBrakeSyst;$/;"	t	typeref:struct:__anon30
tCar	modules/simu/simuv2/carstruct.h	/^} tCar;$/;"	t	typeref:struct:__anon23
tCar	modules/simu/simuv3/carstruct.h	/^} tCar;$/;"	t	typeref:struct:__anon42
tCarCtrl	interfaces/car.h	/^} tCarCtrl;$/;"	t	typeref:struct:__anon81
tCarElt	interfaces/car.h	/^} tCarElt;$/;"	t	typeref:struct:CarElt
tCarInfo	libs/confscreens/driverconfig.cpp	/^typedef struct tCarInfo$/;"	s	file:
tCarInfo	libs/confscreens/driverconfig.cpp	/^} tCarInfo;$/;"	t	typeref:struct:tCarInfo	file:
tCarPenalty	interfaces/car.h	/^} tCarPenalty;$/;"	t	typeref:struct:CarPenalty
tCarPitCmd	interfaces/car.h	/^} tCarPitCmd;$/;"	t	typeref:struct:__anon84
tCarPitSetup	interfaces/car.h	/^} tCarPitSetup;$/;"	t	typeref:struct:__anon83
tCarPitSetupValue	interfaces/car.h	/^} tCarPitSetupValue;$/;"	t	typeref:struct:__anon82
tCarRaceInfo	interfaces/car.h	/^} tCarRaceInfo;$/;"	t	typeref:struct:__anon77
tCatInfo	libs/confscreens/driverconfig.cpp	/^typedef struct tCatInfo$/;"	s	file:
tCatInfo	libs/confscreens/driverconfig.cpp	/^} tCatInfo;$/;"	t	typeref:struct:tCatInfo	file:
tChannel	modules/telemetry/telemetry.cpp	/^} tChannel;$/;"	t	typeref:struct:Channel	file:
tClutch	modules/simu/simuv2/transmission.h	/^} tClutch;$/;"	t	typeref:struct:__anon25
tClutch	modules/simu/simuv3/transmission.h	/^} tClutch;$/;"	t	typeref:struct:__anon44
tCmdInfo	libs/confscreens/controlconfig.h	/^} tCmdInfo;$/;"	t	typeref:struct:__anon122
tCollisionState	interfaces/car.h	/^} tCollisionState;$/;"	t	typeref:struct:tCollisionState_
tCollisionState_	interfaces/car.h	/^typedef struct tCollisionState_ {$/;"	s
tColor	tools/nfs2ac/mainnfs2ac.cpp	/^} tColor;$/;"	t	typeref:struct:__anon57	file:
tControlCmd	drivers/human/pref.h	/^} tControlCmd;$/;"	t	typeref:struct:__anon185
tCtrlJoyInfo	libs/tgfclient/tgfclient.h	/^} tCtrlJoyInfo;$/;"	t	typeref:struct:__anon134
tCtrlMouseInfo	libs/tgfclient/tgfclient.h	/^} tCtrlMouseInfo;$/;"	t	typeref:struct:__anon135
tCtrlRef	libs/tgfclient/tgfclient.h	/^} tCtrlRef;$/;"	t	typeref:struct:__anon133
tDamper	modules/simu/simuv2/susp.h	/^} tDamper;$/;"	t	typeref:struct:__anon21
tDamper	modules/simu/simuv3/susp.h	/^} tDamper;$/;"	t	typeref:struct:__anon40
tDamperDef	modules/simu/simuv2/susp.h	/^} tDamperDef;$/;"	t	typeref:struct:__anon20
tDamperDef	modules/simu/simuv3/susp.h	/^} tDamperDef;$/;"	t	typeref:struct:__anon39
tDifferential	modules/simu/simuv2/differential.h	/^} tDifferential;$/;"	t	typeref:struct:__anon10
tDifferential	modules/simu/simuv3/differential.h	/^} tDifferential;$/;"	t	typeref:struct:__anon32
tDispElt	tools/trackgen/track.cpp	/^} tDispElt;$/;"	t	typeref:struct:dispElt	file:
tDrvElt	libs/racescreens/driverselect.cpp	/^} tDrvElt;$/;"	t	typeref:struct:DrvElt	file:
tDynAxis	modules/simu/simuv2/differential.h	/^} tDynAxis;$/;"	t	typeref:struct:__anon9
tDynAxis	modules/simu/simuv3/differential.h	/^} tDynAxis;$/;"	t	typeref:struct:__anon31
tDynPt	libs/tgf/tgf.h	/^} tDynPt;$/;"	t	typeref:struct:__anon97
tEngine	modules/simu/simuv2/engine.h	/^} tEngine;$/;"	t	typeref:struct:__anon19
tEngine	modules/simu/simuv3/engine.h	/^} tEngine;$/;"	t	typeref:struct:__anon38
tEngineCurve	modules/simu/simuv2/engine.h	/^} tEngineCurve;$/;"	t	typeref:struct:__anon18
tEngineCurve	modules/simu/simuv3/engine.h	/^} tEngineCurve;$/;"	t	typeref:struct:__anon37
tEngineCurveElem	modules/simu/simuv2/engine.h	/^} tEngineCurveElem;$/;"	t	typeref:struct:__anon17
tEngineCurveElem	modules/simu/simuv3/engine.h	/^} tEngineCurveElem;$/;"	t	typeref:struct:__anon36
tFList	libs/tgf/tgf.h	/^} tFList;$/;"	t	typeref:struct:FList
tFace	tools/texmapper/maintexmapper.cpp	/^} tFace;$/;"	t	typeref:struct:Face	file:
tForces	libs/tgf/tgf.h	/^} tForces;$/;"	t	typeref:struct:__anon98
tGearbox	modules/simu/simuv2/transmission.h	/^} tGearbox;$/;"	t	typeref:struct:__anon24
tGearbox	modules/simu/simuv3/transmission.h	/^} tGearbox;$/;"	t	typeref:struct:__anon43
tGfOs	libs/tgf/os.h	/^} tGfOs;$/;"	t	typeref:struct:__anon92
tGfuiButton	libs/tgfclient/gui.h	/^} tGfuiButton;$/;"	t	typeref:struct:__anon141
tGfuiEditbox	libs/tgfclient/gui.h	/^} tGfuiEditbox;$/;"	t	typeref:struct:__anon145
tGfuiGrButton	libs/tgfclient/gui.h	/^} tGfuiGrButton;$/;"	t	typeref:struct:__anon142
tGfuiImage	libs/tgfclient/gui.h	/^} tGfuiImage;$/;"	t	typeref:struct:__anon146
tGfuiKey	libs/tgfclient/gui.h	/^} tGfuiKey;$/;"	t	typeref:struct:GfuiKey
tGfuiLabel	libs/tgfclient/gui.h	/^} tGfuiLabel;$/;"	t	typeref:struct:__anon140
tGfuiListElement	libs/tgfclient/gui.h	/^} tGfuiListElement;$/;"	t	typeref:struct:GfuiListElement
tGfuiObject	libs/tgfclient/gui.h	/^} tGfuiObject;$/;"	t	typeref:struct:GfuiObject
tGfuiScreen	libs/tgfclient/gui.h	/^} tGfuiScreen;$/;"	t	typeref:struct:__anon148
tGfuiScrollBar	libs/tgfclient/gui.h	/^} tGfuiScrollBar;$/;"	t	typeref:struct:__anon144
tGfuiScrollList	libs/tgfclient/gui.h	/^} tGfuiScrollList;$/;"	t	typeref:struct:__anon143
tGraphicItf	interfaces/graphic.h	/^} tGraphicItf;$/;"	t	typeref:struct:__anon61
tGraphicMuteForMenu	interfaces/graphic.h	/^typedef void (*tGraphicMuteForMenu)(void);$/;"	t
tGroup	tools/trackgen/track.cpp	/^} tGroup;$/;"	t	typeref:struct:group	file:
tHashElem	libs/tgf/hash.cpp	/^} tHashElem;$/;"	t	typeref:struct:HashElem	file:
tHashHeader	libs/tgf/hash.cpp	/^} tHashHeader;$/;"	t	typeref:struct:HashHeader	file:
tHumanContext	drivers/human/human.h	/^} tHumanContext;$/;"	t	typeref:struct:HumanContext
tInfo	libs/confscreens/driverconfig.cpp	/^typedef struct tInfo$/;"	s	file:
tInfo	libs/confscreens/driverconfig.cpp	/^} tInfo;$/;"	t	typeref:struct:tInfo	file:
tInitCar	interfaces/car.h	/^} tInitCar;$/;"	t	typeref:struct:__anon76
tKeyInfo	drivers/human/human.cpp	/^} tKeyInfo;$/;"	t	typeref:struct:__anon184	file:
tLine	tools/trackgen/relief.cpp	/^} tLine;$/;"	t	typeref:struct:Line	file:
tMainMod	libs/raceengineclient/raceinit.cpp	/^} tMainMod;$/;"	t	typeref:struct:__anon125	file:
tMeanVal	libs/tgf/tgf.h	/^} tMeanVal;$/;"	t	typeref:struct:__anon99
tMnuCallbackInfo	libs/tgfclient/guimenu.h	/^} tMnuCallbackInfo;$/;"	t	typeref:struct:__anon150
tModInfo	libs/tgf/tgf.h	/^} tModInfo;$/;"	t	typeref:struct:ModInfo
tModList	libs/tgf/tgf.h	/^} tModList;$/;"	t	typeref:struct:ModList
tMouseInfo	libs/tgfclient/tgfclient.h	/^} tMouseInfo;$/;"	t	typeref:struct:MouseInfo
tOCar	drivers/berniw/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon156
tOCar	drivers/berniw2/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon200
tOCar	drivers/berniw3/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon179
tOCar	drivers/human/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon191
tOCar	drivers/inferno/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon164
tOCar	drivers/lliaw/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon210
tOCar	drivers/tita/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon171
tOverlapTimer	drivers/berniw/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon157
tOverlapTimer	drivers/berniw2/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon201
tOverlapTimer	drivers/berniw3/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon180
tOverlapTimer	drivers/human/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon192
tOverlapTimer	drivers/inferno/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon165
tOverlapTimer	drivers/lliaw/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon211
tOverlapTimer	drivers/tita/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon172
tParam	drivers/berniw/pathfinder.h	/^} tParam;$/;"	t	typeref:struct:__anon155
tParam	drivers/berniw2/pathfinder.h	/^} tParam;$/;"	t	typeref:struct:__anon199
tParam	drivers/berniw3/pathfinder.h	/^} tParam;$/;"	t	typeref:struct:__anon178
tParam	drivers/human/pathfinder.h	/^} tParam;$/;"	t	typeref:struct:__anon190
tPlayerInfo	libs/confscreens/driverconfig.cpp	/^} tPlayerInfo;$/;"	t	typeref:struct:PlayerInfo	file:
tPoint	tools/trackgen/track.cpp	/^} tPoint;$/;"	t	typeref:struct:__anon60	file:
tPosd	libs/tgf/tgf.h	/^} tPosd;$/;"	t	typeref:struct:__anon96
tPrivCar	interfaces/car.h	/^} tPrivCar;$/;"	t	typeref:struct:__anon80
tPublicCar	interfaces/car.h	/^} tPublicCar;$/;"	t	typeref:struct:__anon78
tRaceAdmInfo	interfaces/raceman.h	/^} tRaceAdmInfo;$/;"	t	typeref:struct:__anon70
tRaceCall	libs/racescreens/results.cpp	/^} tRaceCall;$/;"	t	typeref:struct:__anon100	file:
tRaceEngineInfo	interfaces/raceman.h	/^} tRaceEngineInfo;$/;"	t	typeref:struct:__anon73
tRaceModIft	interfaces/raceman.h	/^} tRaceModIft;$/;"	t	typeref:struct:__anon71
tReCarInfo	interfaces/raceman.h	/^} tReCarInfo;$/;"	t	typeref:struct:__anon72
tReStandings	libs/raceengineclient/raceresults.cpp	/^} tReStandings;$/;"	t	typeref:struct:__anon124	file:
tRmCarRules	interfaces/raceman.h	/^} tRmCarRules;$/;"	t	typeref:struct:RmCarRules
tRmDrvSelect	libs/racescreens/racescreens.h	/^} tRmDrvSelect;$/;"	t	typeref:struct:__anon102
tRmFileSelect	libs/racescreens/racescreens.h	/^} tRmFileSelect;$/;"	t	typeref:struct:__anon104
tRmInfo	interfaces/raceman.h	/^} tRmInfo;$/;"	t	typeref:struct:RmInfo
tRmMovieCapture	interfaces/raceman.h	/^} tRmMovieCapture;$/;"	t	typeref:struct:RmMovieCapture
tRmRaceParam	libs/racescreens/racescreens.h	/^} tRmRaceParam;$/;"	t	typeref:struct:__anon103
tRmRaceRules	interfaces/raceman.h	/^} tRmRaceRules;$/;"	t	typeref:struct:RmRaceRules
tRmTrackSelect	libs/racescreens/racescreens.h	/^} tRmTrackSelect;$/;"	t	typeref:struct:__anon101
tRoadCam	interfaces/track.h	/^} tRoadCam;$/;"	t	typeref:struct:RoadCam
tRobotItf	interfaces/robot.h	/^} tRobotItf;$/;"	t	typeref:struct:RobotItf
tRow	tools/texmapper/maintexmapper.cpp	/^} tRow;$/;"	t	typeref:struct:__anon59	file:
tSchedView	modules/graphic/ssggraph/grcam.cpp	/^} tSchedView;$/;"	t	typeref:struct:__anon3	file:
tScrollBarInfo	libs/tgfclient/tgfclient.h	/^} tScrollBarInfo;$/;"	t	typeref:struct:ScrollBarInfo
tSegExt	interfaces/track.h	/^} tSegExt;$/;"	t	typeref:struct:SegExt
tSimItf	interfaces/simu.h	/^} tSimItf;$/;"	t	typeref:struct:__anon85
tSituation	interfaces/raceman.h	/^} tSituation;$/;"	t	typeref:struct:Situation
tSpring	modules/simu/simuv2/susp.h	/^} tSpring;$/;"	t	typeref:struct:__anon22
tSpring	modules/simu/simuv3/susp.h	/^} tSpring;$/;"	t	typeref:struct:__anon41
tStartRaceCall	libs/racescreens/miscscreens.cpp	/^} tStartRaceCall;$/;"	t	typeref:struct:__anon105	file:
tSteer	modules/simu/simuv2/steer.h	/^} tSteer;$/;"	t	typeref:struct:__anon16
tSteer	modules/simu/simuv3/steer.h	/^} tSteer;$/;"	t	typeref:struct:__anon35
tSuspension	modules/simu/simuv2/susp.h	/^} tSuspension;$/;"	t	typeref:struct:Suspension
tSuspension	modules/simu/simuv3/susp.h	/^} tSuspension;$/;"	t	typeref:struct:Suspension
tTelemItf	interfaces/telemetry.h	/^} tTelemItf;$/;"	t	typeref:struct:__anon86
tTexElt	tools/trackgen/track.cpp	/^} tTexElt;$/;"	t	typeref:struct:texElt	file:
tTlm	modules/telemetry/telemetry.cpp	/^} tTlm;$/;"	t	typeref:struct:Tlm	file:
tTrack	interfaces/track.h	/^} tTrack;$/;"	t	typeref:struct:__anon68
tTrackBarrier	interfaces/track.h	/^} tTrackBarrier;$/;"	t	typeref:struct:trackBarrier
tTrackGraphicInfo	interfaces/track.h	/^} tTrackGraphicInfo;$/;"	t	typeref:struct:__anon67
tTrackItf	interfaces/track.h	/^} tTrackItf;$/;"	t	typeref:struct:__anon69
tTrackOwnPit	interfaces/track.h	/^} tTrackOwnPit;$/;"	t	typeref:struct:TrackOwnPit
tTrackPitInfo	interfaces/track.h	/^} tTrackPitInfo;$/;"	t	typeref:struct:__anon65
tTrackSeg	interfaces/track.h	/^} tTrackSeg;$/;"	t	typeref:struct:trackSeg
tTrackSurface	interfaces/track.h	/^} tTrackSurface;$/;"	t	typeref:struct:trackSurface
tTransmission	modules/simu/simuv2/transmission.h	/^} tTransmission;$/;"	t	typeref:struct:__anon26
tTransmission	modules/simu/simuv3/transmission.h	/^} tTransmission;$/;"	t	typeref:struct:__anon45
tTriangle	tools/nfs2ac/mainnfs2ac.cpp	/^} tTriangle;$/;"	t	typeref:struct:__anon58	file:
tTrkLocPos	interfaces/track.h	/^} tTrkLocPos;$/;"	t	typeref:struct:__anon64
tTurnMarksInfo	interfaces/track.h	/^} tTurnMarksInfo;$/;"	t	typeref:struct:__anon66
tVector	tools/nfs2ac/mainnfs2ac.cpp	/^} tVector;$/;"	t	typeref:struct:__anon56	file:
tVisualAttributes	interfaces/car.h	/^} tVisualAttributes;$/;"	t	typeref:struct:__anon75
tWheel	modules/simu/simuv2/wheel.h	/^} tWheel;$/;"	t	typeref:struct:__anon11
tWheel	modules/simu/simuv3/wheel.h	/^} tWheel;$/;"	t	typeref:struct:__anon33
tWheelSpec	interfaces/car.h	/^} tWheelSpec;$/;"	t	typeref:struct:__anon74
tWheelState	interfaces/car.h	/^} tWheelState;$/;"	t	typeref:struct:__anon79
tWing	modules/simu/simuv2/aero.h	/^} tWing;$/;"	t	typeref:struct:__anon28
tWing	modules/simu/simuv3/aero.h	/^} tWing;$/;"	t	typeref:struct:__anon47
t_index	windows/include/plib/ssg.h	/^  sgVec2 *texcoords ; int num_texcoords ; unsigned short *t_index ;$/;"	m	class:ssgVTable
t_xmax	modules/graphic/ssggraph/grloadac.cpp	/^static double t_xmax;$/;"	v	file:
t_xmin	modules/graphic/ssggraph/grloadac.cpp	/^static double t_xmin;$/;"	v	file:
t_ymax	modules/graphic/ssggraph/grloadac.cpp	/^static double t_ymax;$/;"	v	file:
t_ymin	modules/graphic/ssggraph/grloadac.cpp	/^static double t_ymin;$/;"	v	file:
table	modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^  Function table[NUM_TYPES][NUM_TYPES];$/;"	m	class:AlgoTable
tableSize	windows/include/plib/ssgaFire.h	/^  int    tableSize   ;$/;"	m	class:ssgaFire
tablen	modules/graphic/ssggraph/grloadsgi.h	/^		int           tablen ;$/;"	m	class:ssgSGIHeader
taccel	drivers/olethros/learn.h	/^		float taccel; \/\/\/< acceleration$/;"	m	class:olethros::SegLearn::Averages
tag	libs/txml/xmlparse.c	/^typedef struct tag {$/;"	s	file:
tag	modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  TagType tag;$/;"	m	class:BBoxNode
tagLevel	libs/txml/xmlparse.c	/^  int tagLevel;$/;"	m	struct:__anon117	file:
tagLevel	libs/txml/xmlparse.c	285;"	d	file:
tagSFG_Display	libs/tgfclient/fg_gm.cpp	/^struct tagSFG_Display$/;"	s	file:
tagSFG_State	libs/tgfclient/fg_gm.cpp	/^struct tagSFG_State$/;"	s	file:
tagSFG_XYUse	libs/tgfclient/fg_gm.cpp	/^struct tagSFG_XYUse$/;"	s	file:
tagStack	libs/txml/xmlparse.c	/^  TAG *tagStack;$/;"	m	struct:__anon117	file:
tagStack	libs/txml/xmlparse.c	302;"	d	file:
tail	libs/learning/List.h	/^	LISTITEM* tail; \/\/\/< tail item$/;"	m	struct:List
tail	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^  Endpoint tail;$/;"	m	class:EndpointList	file:
tail	windows/include/plib/ul.h	/^  ulListNode *tail ;$/;"	m	class:ulLinkedList
tand	drivers/olethros/learn.h	/^	float tand(float x)$/;"	f	class:olethros::SegLearn
tand_der	drivers/olethros/learn.h	/^	float tand_der(float x)$/;"	f	class:olethros::SegLearn
tank	interfaces/car.h	/^	tdble tank; \/**< Fuel tank capa *\/$/;"	m	struct:__anon76
tank	modules/simu/simuv2/carstruct.h	/^    tdble	tank;		\/* fuel tank capa *\/$/;"	m	struct:__anon23
tank	modules/simu/simuv3/carstruct.h	/^    tdble	tank;		\/* fuel tank capa *\/$/;"	m	struct:__anon42
target_speed	drivers/berniw2/berniw2.cpp	/^double target_speed = 12;$/;"	v
target_speed	drivers/berniw3/berniw3.cpp	/^double target_speed = 17;$/;"	v
target_speed	drivers/human/mycar.h	/^		double target_speed;$/;"	m	class:MyCar
target_speed	interfaces/car.h	/^	double target_speed;$/;"	m	struct:__anon78
target_speed	libs/raceengineclient/raceengine.cpp	/^static double target_speed = 0;$/;"	v	file:
target_speed_bn	drivers/berniw/berniw.cpp	/^static double target_speed_bn = 14;$/;"	v	file:
tcoord	tools/accc/accc.h	/^typedef struct tcoord {$/;"	s
tcoord_t	tools/accc/accc.h	/^} tcoord_t;$/;"	t	typeref:struct:tcoord
tcount	tools/texmapper/ssgSaveAC.cpp	/^static int tcount ;$/;"	v	file:
tdError	libs/learning/policy.h	/^	real tdError; \/\/\/< temporal difference error$/;"	m	class:DiscretePolicy
tdble	libs/tgf/tgf.h	/^typedef float tdble;$/;"	t
tdot	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Scalar tdot(int i, const Vector& v) const {$/;"	f	class:Matrix
teammate	drivers/bt/opponent.h	/^		bool teammate;				\/\/ Is this opponent a team mate of me (configure it in setup XML)?$/;"	m	class:Opponent
teammate	drivers/damned/opponent.h	/^		bool teammate;				\/\/ Is this opponent a team mate of me (configure it in setup XML)?$/;"	m	class:Opponent
teammate	drivers/inferno/pathfinder.h	/^		tCarElt* teammate;				\/\/ Teammate, TODO: support multiple teammates.$/;"	m	class:Pathfinder
teammate	drivers/lliaw/pathfinder.h	/^		tCarElt* teammate;				\/\/ Teammate, TODO: support multiple teammates.$/;"	m	class:Pathfinder
teammate	drivers/tita/pathfinder.h	/^		tCarElt* teammate;				\/\/ Teammate, TODO: support multiple teammates.$/;"	m	class:Pathfinder
teamname	interfaces/car.h	/^	char teamname[MAX_NAME_LEN]; \/**< Team name *\/$/;"	m	struct:__anon76
telemInit	modules/telemetry/telemetryitf.cpp	/^telemInit(int index, void *pt)$/;"	f	file:
telemetry	modules/telemetry/telemetryitf.cpp	/^telemetry(tModInfo *modInfo)$/;"	f
tell_func	windows/include/vorbis/vorbisfile.h	/^  long   (*tell_func)  (void *datasource);$/;"	m	struct:__anon48
temp	libs/learning/policy.h	/^	real temp; \/\/\/< scratch$/;"	m	class:DiscretePolicy
temp	modules/simu/simuv2/brake.h	/^    tdble	temp;$/;"	m	struct:__anon7
temp	modules/simu/simuv3/brake.h	/^    tdble	temp;$/;"	m	struct:__anon29
temp2Pool	libs/txml/xmlparse.c	/^  STRING_POOL temp2Pool;$/;"	m	struct:__anon117	file:
temp2Pool	libs/txml/xmlparse.c	306;"	d	file:
tempPool	libs/txml/xmlparse.c	/^  STRING_POOL tempPool;$/;"	m	struct:__anon117	file:
tempPool	libs/txml/xmlparse.c	305;"	d	file:
temp_in	interfaces/car.h	/^	tdble temp_in, temp_mid, temp_out;$/;"	m	struct:__anon79
temp_mid	interfaces/car.h	/^	tdble temp_in, temp_mid, temp_out;$/;"	m	struct:__anon79
temp_out	interfaces/car.h	/^	tdble temp_in, temp_mid, temp_out;$/;"	m	struct:__anon79
temp_target_speed	drivers/human/human.cpp	/^static double temp_target_speed = -1;$/;"	v	file:
terrainSplitOb	tools/accc/ac3dload.cpp	/^int terrainSplitOb (ob_t **object)$/;"	f
teu	modules/graphic/ssggraph/grcam.h	/^    float	tsu, tsv, teu, tev;	\/* texture coord *\/$/;"	m	class:cGrCarCamMirror
tev	modules/graphic/ssggraph/grcam.h	/^    float	tsu, tsv, teu, tev;	\/* texture coord *\/$/;"	m	class:cGrCarCamMirror
tex	modules/graphic/ssggraph/grcam.h	/^    GLuint	tex;			\/* texture *\/$/;"	m	class:cGrCarCamMirror
tex	modules/graphic/ssggraph/grskidmarks.h	/^  ssgTexCoordArray  **tex; $/;"	m	struct:__anon1
tex	tools/accc/ac3dload.cpp	/^char tex[256][256];$/;"	v
texCoord	windows/include/plib/ssg.h	/^  sgVec2 texCoord ;$/;"	m	struct:ssgInterleavedArrayElement
texElt	tools/trackgen/track.cpp	/^typedef struct texElt {$/;"	s	file:
texScale	tools/texmapper/maintexmapper.cpp	/^    float	texScale;$/;"	m	struct:Face	file:
tex_state	modules/graphic/ssggraph/grskidmarks.h	/^  float         tex_state;$/;"	m	struct:__anon1
texcoords	windows/include/plib/ssg.h	/^  sgVec2 *texcoords ; int num_texcoords ; unsigned short *t_index ;$/;"	m	class:ssgVTable
texcoords	windows/include/plib/ssg.h	/^  ssgTexCoordArray *texcoords ;$/;"	m	class:ssgVtxTable
texcoords	windows/include/plib/ssgaWaveSystem.h	/^  sgVec2 *texcoords ;$/;"	m	class:ssgaWaveSystem
texcoords1	modules/graphic/ssggraph/grvtxtable.h	/^  ssgTexCoordArray *texcoords1 ;$/;"	m	class:grVtxTable
texcoords2	modules/graphic/ssggraph/grvtxtable.h	/^  ssgTexCoordArray *texcoords2 ;$/;"	m	class:grVtxTable
texcoords3	modules/graphic/ssggraph/grvtxtable.h	/^  ssgTexCoordArray *texcoords3 ;$/;"	m	class:grVtxTable
texid	tools/trackgen/track.cpp	/^	unsigned int texid;$/;"	m	struct:texElt	file:
texid	topview/topview.cpp	/^GLuint texid;$/;"	v
texnum	tools/accc/ac3dload.cpp	/^int texnum=0;$/;"	v
texoff	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2 texoff ;$/;"	v	file:
texrep	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2 texrep ;$/;"	v	file:
texrep_x	tools/accc/accc.h	/^  double  texrep_x;$/;"	m	struct:ob
texrep_y	tools/accc/accc.h	/^  double  texrep_y;$/;"	m	struct:ob
text	libs/tgfclient/gui.h	/^	char *text;		\/* text *\/$/;"	m	struct:__anon140
text	windows/include/png.h	/^   png_charp text;         \/* comment, may be an empty string (ie "")$/;"	m	struct:png_text_struct
text	windows/include/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s
textLen	libs/txml/xmlparse.c	/^  int textLen;$/;"	m	struct:__anon111	file:
textPtr	libs/txml/xmlparse.c	/^  const XML_Char *textPtr;$/;"	m	struct:__anon111	file:
text_length	windows/include/png.h	/^   png_size_t text_length; \/* length of the text string *\/$/;"	m	struct:png_text_struct
textarray	tools/accc/accc.h	/^  double    * textarray;$/;"	m	struct:ob
textarray1	tools/accc/accc.h	/^  double    * textarray1;$/;"	m	struct:ob
textarray2	tools/accc/accc.h	/^  double    * textarray2;$/;"	m	struct:ob
textarray3	tools/accc/accc.h	/^  double    * textarray3;$/;"	m	struct:ob
texture	libs/tgfclient/gui.h	/^    GLuint		texture;$/;"	m	struct:__anon146
texture	modules/graphic/ssggraph/grcar.h	/^    ssgSimpleState	*texture;$/;"	m	struct:__anon4
texture	tools/accc/accc.h	/^  char * texture;$/;"	m	struct:ob
texture	tools/trackgen/track.cpp	/^	tTexElt *texture;$/;"	m	struct:dispElt	file:
texture	windows/include/plib/ssg.h	/^  ssgTexture* texture ;$/;"	m	class:ssgSimpleState
texture1	tools/accc/accc.h	/^  char * texture1;$/;"	m	struct:ob
texture2	tools/accc/accc.h	/^  char * texture2;$/;"	m	struct:ob
texture3	tools/accc/accc.h	/^  char * texture3;$/;"	m	struct:ob
textureCompressOptionList	libs/confscreens/openglconfig.cpp	/^static const char *textureCompressOptionList[] = {$/;"	v	file:
textureMe	windows/include/plib/ssg.h	/^  void textureMe(float uP, float vP) $/;"	f	class:ssgVtxTable
textureOverridden	windows/include/plib/ssg.h	/^  int  textureOverridden  () { return ovTexture  ; }$/;"	f	class:ssgContext
textureSizeOptionList	libs/confscreens/openglconfig.cpp	/^static int textureSizeOptionList[] = {8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384};$/;"	v	file:
texture_dir	windows/include/plib/ssg.h	/^  char* texture_dir ;$/;"	m	class:ssgLoaderOptions
tfDirGetList	libs/tgf/os.h	/^typedef tFList *(*tfDirGetList)(const char *);$/;"	t
tfDirGetListFiltered	libs/tgf/os.h	/^typedef tFList *(*tfDirGetListFiltered)(const char *, const char *);$/;"	t
tfDirfreeUserData	libs/tgf/tgf.h	/^typedef void (*tfDirfreeUserData)(void*);	\/**< Function to call for releasing the user data associated with file entry *\/$/;"	t
tfGraphicBendCar	interfaces/graphic.h	/^typedef void (*tfGraphicBendCar) (int \/*index*\/, sgVec3 \/*poc*\/, sgVec3 \/*force*\/, int \/*cnt*\/);$/;"	t
tfGraphicInitCars	interfaces/graphic.h	/^typedef int (*tfGraphicInitCars)(struct Situation* s); $/;"	t
tfGraphicInitTrack	interfaces/graphic.h	/^typedef int (*tfGraphicInitTrack)(tTrack* track);$/;"	t
tfGraphicInitView	interfaces/graphic.h	/^typedef int (*tfGraphicInitView)(int x, int y, int width, int height, int flag, void * screen);$/;"	t
tfGraphicRefresh	interfaces/graphic.h	/^typedef int (*tfGraphicRefresh)(struct Situation *);$/;"	t
tfGraphicShutdwnCars	interfaces/graphic.h	/^typedef void (*tfGraphicShutdwnCars)(void);$/;"	t
tfGraphicShutdwnTrack	interfaces/graphic.h	/^typedef void (*tfGraphicShutdwnTrack)(void);$/;"	t
tfHashFree	libs/tgf/tgf.h	/^typedef void (*tfHashFree)(const void*);	\/**< Function to call for releasing the user data associated with hash table *\/$/;"	t
tfModFreeInfoList	libs/tgf/os.h	/^typedef int (*tfModFreeInfoList)(tModList **);$/;"	t
tfModGetInfo	libs/tgf/os.h	/^typedef int (*tfModGetInfo)(unsigned int, char*, tModList **);$/;"	t
tfModGetInfoDir	libs/tgf/os.h	/^typedef int (*tfModGetInfoDir)(unsigned int, char*, int, tModList **);$/;"	t
tfModInfo	libs/tgf/tgf.h	/^typedef int (*tfModInfo)(tModInfo *);	\/* first function called in the module *\/$/;"	t
tfModLoad	libs/tgf/os.h	/^typedef int (*tfModLoad)(unsigned int, char*, tModList **);$/;"	t
tfModLoadDir	libs/tgf/os.h	/^typedef int (*tfModLoadDir)(unsigned int, char*, tModList **);$/;"	t
tfModPrivInit	libs/tgf/tgf.h	/^typedef int (*tfModPrivInit)(int index, void *);$/;"	t
tfModShut	libs/tgf/tgf.h	/^typedef int (*tfModShut)(void);	\/* last function called in the module *\/$/;"	t
tfModUnloadList	libs/tgf/os.h	/^typedef int (*tfModUnloadList)(tModList **);$/;"	t
tfRbDrive	interfaces/robot.h	/^typedef void (*tfRbDrive)   (int index, tCarElt *car, tSituation *s);$/;"	t
tfRbEndRace	interfaces/robot.h	/^typedef void (*tfRbEndRace) (int index, tCarElt *car, tSituation *s);$/;"	t
tfRbNewRace	interfaces/robot.h	/^typedef void (*tfRbNewRace) (int index, tCarElt *car, tSituation *s);$/;"	t
tfRbNewTrack	interfaces/robot.h	/^typedef void (*tfRbNewTrack)(int index, tTrack *track, void *carHandle, void **myCarSettings, tSituation *s);$/;"	t
tfRbPitCmd	interfaces/robot.h	/^typedef int  (*tfRbPitCmd)  (int index, tCarElt* car, tSituation *s);$/;"	t
tfRbShutdown	interfaces/robot.h	/^typedef void (*tfRbShutdown)(int index);$/;"	t
tfRmRunState	interfaces/raceman.h	/^typedef int (*tfRmRunState) (struct RmInfo *);$/;"	t
tfSelectFile	libs/racescreens/racescreens.h	/^typedef void (*tfSelectFile) (char *);$/;"	t
tfSimConfig	interfaces/simu.h	/^typedef void (*tfSimConfig)(tCarElt* carElt, struct RmInfo* reInfo);$/;"	t
tfSimInit	interfaces/simu.h	/^typedef void (*tfSimInit)(int nbCars, tTrack* track, tdble fuelFactor, tdble damageFactor);$/;"	t
tfSimReConfig	interfaces/simu.h	/^typedef void (*tfSimReConfig)(tCarElt* carElt);$/;"	t
tfSimShutdown	interfaces/simu.h	/^typedef void (*tfSimShutdown)(void);$/;"	t
tfSimUpdate	interfaces/simu.h	/^typedef void (*tfSimUpdate)(struct Situation* s, double deltaTime, int telemetry);$/;"	t
tfTimeClock	libs/tgf/os.h	/^typedef double (*tfTimeClock)(void);$/;"	t
tfTrackBuild	interfaces/track.h	/^typedef tTrack*(*tfTrackBuild)(char* filename);$/;"	t
tfTrackGlobal2Local	interfaces/track.h	/^typedef void(*tfTrackGlobal2Local)(tTrackSeg* seg, tdble X, tdble Y, tTrkLocPos* pos, int type);$/;"	t
tfTrackHeightG	interfaces/track.h	/^typedef tdble(*tfTrackHeightG)(tTrackSeg* seg, tdble X, tdble Y);$/;"	t
tfTrackHeightL	interfaces/track.h	/^typedef tdble(*tfTrackHeightL)(tTrkLocPos* pos);$/;"	t
tfTrackLocal2Global	interfaces/track.h	/^typedef void(*tfTrackLocal2Global)(tTrkLocPos* pos, tdble* X, tdble* Y);$/;"	t
tfTrackShutdown	interfaces/track.h	/^typedef void(*tfTrackShutdown)(void);$/;"	t
tfTrackSideNormal	interfaces/track.h	/^typedef void(*tfTrackSideNormal)(tTrackSeg* seg, tdble X, tdble Y, int side, t3Dd* norm);$/;"	t
tfTrackSurfaceNormal	interfaces/track.h	/^typedef void(*tfTrackSurfaceNormal)(tTrkLocPos *pos, t3Dd* norm);$/;"	t
tf_sock	predictor/talker.py	/^tf_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)$/;"	v
tftlmInit	interfaces/telemetry.h	/^typedef void(*tftlmInit)(tdble \/* ymin *\/, tdble \/* ymax *\/);$/;"	t
tftlmNewChannel	interfaces/telemetry.h	/^typedef void(*tftlmNewChannel)(const char * \/* name *\/, tdble * \/* var *\/, tdble \/* min *\/, tdble \/* max *\/);$/;"	t
tftlmShutdown	interfaces/telemetry.h	/^typedef void(*tftlmShutdown)(void);$/;"	t
tftlmStartMonitoring	interfaces/telemetry.h	/^typedef void(*tftlmStartMonitoring)(const char * \/* filename *\/);$/;"	t
tftlmStopMonitoring	interfaces/telemetry.h	/^typedef void(*tftlmStopMonitoring)(void);$/;"	t
tftlmUpdate	interfaces/telemetry.h	/^typedef void(*tftlmUpdate)(double \/* time *\/);$/;"	t
tfuiCallback	libs/tgfclient/tgfclient.h	/^typedef void (*tfuiCallback)(void * \/* userdata *\/);$/;"	t
tfuiKeyCallback	libs/tgfclient/tgfclient.h	/^typedef int (*tfuiKeyCallback)(unsigned char key, int modifier, int state); \/**< return 1 to prevent normal key computing *\/$/;"	t
tfuiSBCallback	libs/tgfclient/tgfclient.h	/^typedef void (*tfuiSBCallback)(tScrollBarInfo *);$/;"	t
tfuiSKeyCallback	libs/tgfclient/tgfclient.h	/^typedef int (*tfuiSKeyCallback)(int key, int modifier, int state);  \/**< return 1 to prevent normal key computing *\/$/;"	t
tgfKeyBinding	libs/tgfclient/control.cpp	/^} tgfKeyBinding;$/;"	t	typeref:struct:__anon149	file:
tgrCarInfo	modules/graphic/ssggraph/grcar.h	/^} tgrCarInfo;$/;"	t	typeref:struct:__anon5
tgrCarInstrument	modules/graphic/ssggraph/grcar.h	/^} tgrCarInstrument;$/;"	t	typeref:struct:__anon4
tgrCarlight	modules/graphic/ssggraph/grcarlight.h	/^}tgrCarlight;$/;"	t	typeref:struct:tgrCarlight_t
tgrCarlight_t	modules/graphic/ssggraph/grcarlight.h	/^typedef struct tgrCarlight_t$/;"	s
tgrSkidStrip	modules/graphic/ssggraph/grskidmarks.h	/^}tgrSkidStrip;$/;"	t	typeref:struct:__anon1
tgrSkidmarks	modules/graphic/ssggraph/grskidmarks.h	/^}tgrSkidmarks;$/;"	t	typeref:struct:__anon2
tgrSmoke	modules/graphic/ssggraph/grsmoke.h	/^}tgrSmoke;$/;"	t	typeref:struct:tgrSmoke_st
tgrSmokeManager	modules/graphic/ssggraph/grsmoke.h	/^}tgrSmokeManager;$/;"	t	typeref:struct:__anon6
tgrSmoke_st	modules/graphic/ssggraph/grsmoke.h	/^typedef struct tgrSmoke_st$/;"	s
th	modules/graphic/ssggraph/grcam.h	/^    int		tw, th;			\/* texture size *\/$/;"	m	class:cGrCarCamMirror
theCamList	modules/track/track.cpp	/^static tRoadCam *theCamList;$/;"	v	file:
theCarslight	modules/graphic/ssggraph/grcarlight.cpp	/^tgrCarlight * theCarslight = NULL;$/;"	v
theTrack	modules/track/track.cpp	/^static tTrack	*theTrack = NULL;$/;"	v	file:
thickness	modules/simu/simuv3/wheel.h	/^	tdble   thickness[N_THICKNESS_SEGMENTS];$/;"	m	struct:__anon33
thirdSusp	modules/simu/simuv2/axle.h	/^	tSuspension thirdSusp;	\/\/ Third element$/;"	m	struct:__anon12
thirdX0	interfaces/car.h	/^	tCarPitSetupValue thirdX0[2];$/;"	m	struct:__anon83
thirdbump	interfaces/car.h	/^	tCarPitSetupValue thirdbump[2];$/;"	m	struct:__anon83
thirdrebound	interfaces/car.h	/^	tCarPitSetupValue thirdrebound[2];$/;"	m	struct:__anon83
thirdspring	interfaces/car.h	/^	tCarPitSetupValue thirdspring[2];$/;"	m	struct:__anon83
thisCar	drivers/bt/cardata.h	/^		inline bool thisCar(tCarElt *car) { return (car == this->car); }$/;"	f	class:SingleCardata
thisCar	drivers/damned/cardata.h	/^		inline bool thisCar(tCarElt *car) { return (car == this->car); }$/;"	f	class:SingleCardata
thisCar	drivers/olethros/cardata.h	/^	inline bool thisCar(tCarElt *car) { return (car == this->car); }$/;"	f	class:olethros::SingleCardata
tickover	modules/simu/simuv2/engine.h	/^    tdble		tickover;$/;"	m	struct:__anon19
tickover	modules/simu/simuv3/engine.h	/^    tdble		tickover;$/;"	m	struct:__anon38
time	drivers/berniw/pathfinder.h	/^	double time;			\/* estimate of time to catch up the car *\/$/;"	m	struct:__anon156
time	drivers/berniw/pathfinder.h	/^	double time;			\/* how long is the opponent "in range" to overlap me *\/$/;"	m	struct:__anon157
time	drivers/berniw2/pathfinder.h	/^	double time;			\/* estimate of time to catch up the car *\/$/;"	m	struct:__anon200
time	drivers/berniw2/pathfinder.h	/^	double time;			\/* how long is the opponent "in range" to overlap me *\/$/;"	m	struct:__anon201
time	drivers/berniw3/pathfinder.h	/^	double time;			\/* estimate of time to catch up the car *\/$/;"	m	struct:__anon179
time	drivers/berniw3/pathfinder.h	/^	double time;			\/* how long is the opponent "in range" to overlap me *\/$/;"	m	struct:__anon180
time	drivers/human/pathfinder.h	/^	double time;			\/* estimate of time to catch up the car *\/$/;"	m	struct:__anon191
time	drivers/human/pathfinder.h	/^	double time;			\/* how long is the opponent "in range" to overlap me *\/$/;"	m	struct:__anon192
time	drivers/inferno/pathfinder.h	/^	double time;			\/\/ estimate of time to catch up the car.$/;"	m	struct:__anon164
time	drivers/inferno/pathfinder.h	/^	double time;			\/\/ how long is the opponent "in range" to overlap me.$/;"	m	struct:__anon165
time	drivers/lliaw/pathfinder.h	/^	double time;			\/\/ estimate of time to catch up the car.$/;"	m	struct:__anon210
time	drivers/lliaw/pathfinder.h	/^	double time;			\/\/ how long is the opponent "in range" to overlap me.$/;"	m	struct:__anon211
time	drivers/tita/pathfinder.h	/^	double time;			\/\/ estimate of time to catch up the car.$/;"	m	struct:__anon171
time	drivers/tita/pathfinder.h	/^	double time;			\/\/ how long is the opponent "in range" to overlap me.$/;"	m	struct:__anon172
time	windows/include/plib/sl.h	/^  float        *time           ;$/;"	m	class:slEnvelope
time	windows/include/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s
timeBeforeNext	interfaces/car.h	/^	double timeBeforeNext;$/;"	m	struct:__anon77
timeBehindLeader	interfaces/car.h	/^	double timeBehindLeader;$/;"	m	struct:__anon77
timeBehindPrev	interfaces/car.h	/^	double timeBehindPrev;$/;"	m	struct:__anon77
timeClock	libs/tgf/os.h	/^    tfTimeClock			timeClock;$/;"	m	struct:__anon92
timeFire	modules/graphic/ssggraph/grsmoke.cpp	/^double * timeFire = 0;$/;"	v
timeMult	interfaces/raceman.h	/^    double		timeMult;$/;"	m	struct:__anon73
timeSmoke	modules/graphic/ssggraph/grsmoke.cpp	/^double * timeSmoke = 0;$/;"	v
timeStrip	modules/graphic/ssggraph/grskidmarks.h	/^  double		timeStrip;$/;"	m	struct:__anon1
timeToRelease	modules/simu/simuv2/transmission.h	/^    tdble	timeToRelease;	\/* remaining time before releasing the clutch pedal *\/$/;"	m	struct:__anon25
timeToRelease	modules/simu/simuv3/transmission.h	/^    tdble	timeToRelease;	\/* remaining time before releasing the clutch pedal *\/$/;"	m	struct:__anon44
time_bits	windows/include/vorbis/codec.h	/^  long time_bits;$/;"	m	struct:vorbis_block
time_bits	windows/include/vorbis/codec.h	/^  ogg_int64_t time_bits;$/;"	m	struct:vorbis_dsp_state
time_mode	windows/include/plib/ssg.h	/^  ssgAnimTimeMode time_mode ;$/;"	m	class:ssgTimedSelector
time_since_accident	drivers/olethros/learn.h	/^	float time_since_accident;$/;"	m	class:olethros::SegLearn
time_since_left_turn	drivers/olethros/learn.h	/^	double time_since_left_turn;$/;"	m	class:olethros::SegLearn
time_since_right_turn	drivers/olethros/learn.h	/^	double time_since_right_turn;$/;"	m	class:olethros::SegLearn
time_to_live	windows/include/plib/ssgaParticleSystem.h	/^  float time_to_live ;$/;"	m	class:ssgaParticle
timer	modules/graphic/ssggraph/grcam.cpp	/^    float timer;$/;"	m	class:cGrCarCamRoadFly	file:
times	windows/include/plib/ssg.h	/^  float  *times      ;$/;"	m	class:ssgTimedSelector
timeval	libs/raceengineclient/raceengine.cpp	/^double timeval;$/;"	v
tireHeight	interfaces/car.h	/^	tdble tireHeight; \/**< Tire height  *\/$/;"	m	struct:__anon74
tireSpringRate	modules/simu/simuv2/wheel.h	/^    tdble	tireSpringRate;$/;"	m	struct:__anon11
tireSpringRate	modules/simu/simuv3/wheel.h	/^    tdble	tireSpringRate;$/;"	m	struct:__anon33
tireWidth	interfaces/car.h	/^	tdble tireWidth; \/**< Tire width *\/$/;"	m	struct:__anon74
tita	drivers/tita/tita.cpp	/^extern "C" int tita(tModInfo *modInfo)$/;"	f
title	libs/racescreens/racescreens.h	/^	const char *title;		\/**< Title for file selection (for screen title) *\/$/;"	m	struct:__anon104
title	libs/racescreens/racescreens.h	/^	const char *title;		\/**< Title for race parameters (for screen title) *\/$/;"	m	struct:__anon103
tkmn	tools/accc/accc.h	/^  struct ob * tkmn;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
tkmnlabel	tools/accc/accc.h	/^  int    tkmnlabel;$/;"	m	struct:ob_groups
tlist	tools/texmapper/ssgSaveAC.cpp	/^static saveTriangle *tlist ;$/;"	v	file:
tmpIndice	tools/accc/ac3dload.cpp	/^int  tmpIndice=0;$/;"	v
tmpIndice2	tools/accc/ac3dload.cpp	/^int  tmpIndice2=0;$/;"	v
tmpIndice3	tools/accc/ac3dload.cpp	/^int  tmpIndice3=0;$/;"	v
tmpPoint	tools/accc/ac3dload.cpp	/^point_t tmpPoint[100000];$/;"	v
tmpStart	libs/tgf/tgf.h	/^  double tmpStart;$/;"	m	class:ProfileInstance
tmpname	tools/accc/ac3dload.cpp	/^char tmpname[256];$/;"	v
tmpsurf	tools/accc/ac3dload.cpp	/^int     tmpsurf[100000];$/;"	v
tmptexa	tools/accc/ac3dload.cpp	/^double   tmptexa[200000];$/;"	v
tmpva	tools/accc/ac3dload.cpp	/^tcoord_t     tmpva[100000];$/;"	v
toAscii	libs/txml/xmltok.c	/^int toAscii(const ENCODING *enc, const char *ptr, const char *end)$/;"	f	file:
toLeft	interfaces/track.h	/^    tdble	toLeft;		\/**< Distance to left side of segment (+ to inside of track - to outside) *\/$/;"	m	struct:__anon64
toMiddle	interfaces/track.h	/^    tdble	toMiddle;	\/**< Distance to middle of segment (+ to left - to right) *\/$/;"	m	struct:__anon64
toRight	interfaces/track.h	/^    tdble	toRight;	\/**< Distance to right side of segment (+ to inside of track - to outside) *\/$/;"	m	struct:__anon64
toSplineCoord	drivers/bt/pit.cpp	/^float Pit::toSplineCoord(float x)$/;"	f	class:Pit
toSplineCoord	drivers/damned/pit.cpp	/^float Pit::toSplineCoord(float x)$/;"	f	class:Pit
toSplineCoord	drivers/olethros/pit.cpp	/^float Pit::toSplineCoord(float x)$/;"	f	class:olethros::Pit
toSplineCoord	drivers/sparkle/pit.cpp	/^float Pit::toSplineCoord(float x)$/;"	f	class:Pit
toStart	interfaces/track.h	/^    tdble	toStart;	\/**< Distance to start of segment (or arc if turn) *\/$/;"	m	struct:__anon64
to_string	drivers/human/human.cpp	/^string to_string(int n) {$/;"	f
to_string	libs/raceengineclient/raceengine.cpp	/^std::string to_string(int n) {$/;"	f
tobjdef	tools/trackgen/objects.cpp	/^} tobjdef;$/;"	t	typeref:struct:objdef	file:
token	modules/graphic/ssggraph/grloadac.cpp	/^  const char *token ;$/;"	m	struct:Tag	file:
top	modules/graphic/ssggraph/grcam.h	/^    float top;$/;"	m	class:cGrOrthoCamera
top	windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
top	windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
topSpd	interfaces/raceman.h	/^    tdble	topSpd;$/;"	m	struct:__anon72
topSpeed	interfaces/car.h	/^	tdble topSpeed;$/;"	m	struct:__anon77
top_tags	modules/graphic/ssggraph/grloadac.cpp	/^static Tag top_tags [] =$/;"	v	file:
torcs_steer	linux/shared_memory.h	/^int* torcs_steer;$/;"	v
torcstrack	drivers/berniw/trackdesc.h	/^		tTrack *torcstrack;$/;"	m	class:TrackDesc
torcstrack	drivers/berniw2/trackdesc.h	/^		tTrack *torcstrack;$/;"	m	class:TrackDesc
torcstrack	drivers/berniw3/trackdesc.h	/^		tTrack *torcstrack;$/;"	m	class:TrackDesc
torcstrack	drivers/human/trackdesc.h	/^		tTrack *torcstrack;$/;"	m	class:TrackDesc
torcstrack	drivers/inferno/trackdesc.h	/^		tTrack *torcstrack;		\/\/ Pointer to original TORCS  track.$/;"	m	class:TrackDesc
torcstrack	drivers/lliaw/trackdesc.h	/^		tTrack *torcstrack;		\/\/ Pointer to original TORCS  track.$/;"	m	class:TrackDesc
torcstrack	drivers/tita/trackdesc.h	/^		tTrack *torcstrack;		\/\/ Pointer to original TORCS  track.$/;"	m	class:TrackDesc
totLaps	interfaces/raceman.h	/^    int			totLaps;	\/**< total laps *\/$/;"	m	struct:__anon70
total	windows/include/plib/ssg.h	/^  unsigned int total   ;  \/* The total number of things in the list *\/$/;"	m	class:ssgSimpleList
total	windows/include/plib/ssg.h	/^  unsigned int total ;  \/* The total number of entities in the list *\/$/;"	m	class:ssgList
total	windows/include/plib/ul.h	/^  unsigned int total ;  \/* The total number of entities in the list *\/$/;"	m	class:ulList
totalPitTime	interfaces/raceman.h	/^    double	totalPitTime;$/;"	m	struct:__anon72
totalTime	libs/tgf/tgf.h	/^  double totalTime;$/;"	m	class:ProfileInstance
total_in	windows/include/zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_out	windows/include/zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s
totalnv	modules/graphic/ssggraph/grloadac.cpp	/^static int              totalnv=0;$/;"	v	file:
totalstripe	modules/graphic/ssggraph/grloadac.cpp	/^static int              totalstripe=0;$/;"	v	file:
totaluse	windows/include/vorbis/codec.h	/^  long                totaluse;$/;"	m	struct:vorbis_block
tr	drivers/berniw/trackdesc.h	/^		v3d tr;					\/* normalized direction vector to the right side *\/$/;"	m	class:TrackSegment
tr	drivers/berniw2/trackdesc.h	/^		v3d tr;					\/* normalized direction vector to the right side *\/$/;"	m	class:TrackSegment
tr	drivers/berniw3/trackdesc.h	/^		v3d tr;					\/* normalized direction vector to the right side *\/$/;"	m	class:TrackSegment
tr	drivers/human/trackdesc.h	/^		v3d tr;					\/* normalized direction vector to the right side *\/$/;"	m	class:TrackSegment
tr	drivers/inferno/pathfinder.h	/^		vec2d* tr;				\/\/ to right perpendicular to the path.$/;"	m	class:PathSegOpt
tr	drivers/inferno/trackdesc.h	/^		vec2d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment2D
tr	drivers/inferno/trackdesc.h	/^		vec3d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment
tr	drivers/lliaw/pathfinder.h	/^		vec2d* tr;				\/\/ to right perpendicular to the path.$/;"	m	class:PathSegOpt
tr	drivers/lliaw/trackdesc.h	/^		vec2d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment2D
tr	drivers/lliaw/trackdesc.h	/^		vec3d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment
tr	drivers/tita/pathfinder.h	/^		vec2d* tr;				\/\/ to right perpendicular to the path.$/;"	m	class:PathSegOpt
tr	drivers/tita/trackdesc.h	/^		vec2d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment2D
tr	drivers/tita/trackdesc.h	/^		vec3d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment
tr_mode	drivers/berniw/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	drivers/berniw2/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	drivers/berniw3/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	drivers/human/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	drivers/inferno/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	drivers/lliaw/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	drivers/tita/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
track	drivers/berniw/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	drivers/berniw/pathfinder.h	/^		TrackDesc* track;		\/* pointer to track data *\/$/;"	m	class:Pathfinder
track	drivers/berniw2/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	drivers/berniw2/pathfinder.h	/^		TrackDesc* track;		\/* pointer to track data *\/$/;"	m	class:Pathfinder
track	drivers/berniw3/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	drivers/berniw3/pathfinder.h	/^		TrackDesc* track;		\/* pointer to track data *\/$/;"	m	class:Pathfinder
track	drivers/bt/driver.h	/^		tTrack* track;$/;"	m	class:Driver
track	drivers/bt/opponent.cpp	/^tTrack* Opponent::track;$/;"	m	class:Opponent	file:
track	drivers/bt/opponent.h	/^		static tTrack *track;$/;"	m	class:Opponent
track	drivers/bt/pit.h	/^		tTrack *track;$/;"	m	class:Pit
track	drivers/damned/driver.h	/^		tTrack* track;$/;"	m	class:Driver
track	drivers/damned/opponent.cpp	/^tTrack* Opponent::track;$/;"	m	class:Opponent	file:
track	drivers/damned/opponent.h	/^		static tTrack *track;$/;"	m	class:Opponent
track	drivers/damned/pit.h	/^		tTrack *track;$/;"	m	class:Pit
track	drivers/human/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	drivers/human/pathfinder.h	/^		TrackDesc* track;		\/* pointer to track data *\/$/;"	m	class:Pathfinder
track	drivers/inferno/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	drivers/inferno/pathfinder.h	/^		TrackDesc* track;		\/\/ pointer to track data.$/;"	m	class:Pathfinder
track	drivers/lliaw/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	drivers/lliaw/pathfinder.h	/^		TrackDesc* track;		\/\/ pointer to track data.$/;"	m	class:Pathfinder
track	drivers/olethros/driver.h	/^	tTrack* track;$/;"	m	class:olethros::Driver
track	drivers/olethros/learn.h	/^	tTrack* track; \/\/\/< A pointer to the current track$/;"	m	class:olethros::SegLearn
track	drivers/olethros/opponent.cpp	/^tTrack* Opponent::track;$/;"	m	class:olethros::Opponent	file:
track	drivers/olethros/opponent.h	/^		static tTrack *track;$/;"	m	class:olethros::Opponent
track	drivers/olethros/pit.h	/^		tTrack *track;$/;"	m	class:olethros::Pit
track	drivers/sparkle/driver.h	/^		tTrack* track;$/;"	m	class:Driver
track	drivers/sparkle/opponent.cpp	/^tTrack* Opponent::track;$/;"	m	class:Opponent	file:
track	drivers/sparkle/opponent.h	/^		static tTrack *track;$/;"	m	class:Opponent
track	drivers/sparkle/pit.h	/^		tTrack *track;$/;"	m	class:Pit
track	drivers/tita/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	drivers/tita/pathfinder.h	/^		TrackDesc* track;		\/\/ pointer to track data.$/;"	m	class:Pathfinder
track	interfaces/raceman.h	/^    tTrack		*track;		\/**< Current track *\/$/;"	m	struct:RmInfo
track	modules/track/trackitf.cpp	/^track(tModInfo *modInfo)$/;"	f
trackBarrier	interfaces/track.h	/^typedef struct trackBarrier {$/;"	s
trackInit	modules/track/trackitf.cpp	/^trackInit(int \/* index *\/, void *pt)$/;"	f	file:
trackItf	interfaces/raceman.h	/^    tTrackItf	trackItf;$/;"	m	struct:__anon71
trackItf	libs/racescreens/racescreens.h	/^	tTrackItf trackItf;		\/**< Track module interface *\/$/;"	m	struct:__anon101
trackMap	modules/graphic/ssggraph/grboard.h	/^	cGrTrackMap *trackMap;$/;"	m	class:cGrBoard
trackSeg	interfaces/track.h	/^typedef struct trackSeg {$/;"	s
trackSurface	interfaces/track.h	/^typedef struct trackSurface {$/;"	s
trackWidth	tools/trackgen/raceline.cpp	/^static double trackWidth = 0.0;$/;"	v	file:
track_height	modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_height;$/;"	m	class:cGrTrackMap	file:
track_height	modules/graphic/ssggraph/grtrackmap.h	/^		static float track_height;$/;"	m	class:cGrTrackMap
track_max_x	modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_max_x;$/;"	m	class:cGrTrackMap	file:
track_max_x	modules/graphic/ssggraph/grtrackmap.h	/^		static float track_max_x;$/;"	m	class:cGrTrackMap
track_max_y	modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_max_y;$/;"	m	class:cGrTrackMap	file:
track_max_y	modules/graphic/ssggraph/grtrackmap.h	/^		static float track_max_y;$/;"	m	class:cGrTrackMap
track_min_x	modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_min_x;$/;"	m	class:cGrTrackMap	file:
track_min_x	modules/graphic/ssggraph/grtrackmap.h	/^		static float track_min_x;$/;"	m	class:cGrTrackMap
track_min_y	modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_min_y;$/;"	m	class:cGrTrackMap	file:
track_min_y	modules/graphic/ssggraph/grtrackmap.h	/^		static float track_min_y;$/;"	m	class:cGrTrackMap
track_width	modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_width;$/;"	m	class:cGrTrackMap	file:
track_width	modules/graphic/ssggraph/grtrackmap.h	/^		static float track_width;$/;"	m	class:cGrTrackMap
track_x_ratio	modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_x_ratio;$/;"	m	class:cGrTrackMap	file:
track_x_ratio	modules/graphic/ssggraph/grtrackmap.h	/^		static float track_x_ratio;$/;"	m	class:cGrTrackMap
track_y_ratio	modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_y_ratio;$/;"	m	class:cGrTrackMap	file:
track_y_ratio	modules/graphic/ssggraph/grtrackmap.h	/^		static float track_y_ratio;$/;"	m	class:cGrTrackMap
trackangle	drivers/bt/cardata.h	/^		float trackangle;	\/\/ Track angle at the opponents position.$/;"	m	class:SingleCardata
trackangle	drivers/damned/cardata.h	/^		float trackangle;	\/\/ Track angle at the opponents position.$/;"	m	class:SingleCardata
trackangle	drivers/olethros/cardata.h	/^	float trackangle;	\/\/ Track angle at the opponents position.$/;"	m	class:olethros::SingleCardata
trackangle	drivers/sparkle/driver.h	/^		float trackangle;		\/* the angle of the current track segment (global coordinates) *\/$/;"	m	class:Driver
trackindices	tools/trackgen/track.cpp	/^static unsigned int	*trackindices;$/;"	v	file:
tracktexcoord	tools/trackgen/track.cpp	/^static float *tracktexcoord;$/;"	v	file:
trackvertices	tools/trackgen/track.cpp	/^static float *trackvertices;$/;"	v	file:
train	windows/include/plib/ssgaWaveSystem.h	/^  ssgaWaveTrain *train [ SSGA_MAX_WAVETRAIN ] ;$/;"	m	class:ssgaWaveSystem
train_step	predictor/train.py	/^train_step = tf.train.AdamOptimizer(learning_rate=0.000001).minimize(cross_entropy)$/;"	v
train_step	predictor/train2.py	/^train_step = tf.train.AdamOptimizer(learning_rate=0.00001).minimize(cross_entropy)$/;"	v
trans	tools/accc/accc.h	/^  double trans;$/;"	m	struct:mat
transferValue	modules/simu/simuv2/transmission.h	/^    tdble	transferValue;	\/* 1.0 -> released, 0.0 -> applied *\/$/;"	m	struct:__anon25
transferValue	modules/simu/simuv3/transmission.h	/^    tdble	transferValue;	\/* 1.0 -> released, 0.0 -> applied *\/$/;"	m	struct:__anon44
transform	modules/graphic/ssggraph/grcarlight.h	/^  virtual void transform ( const sgMat4 m )  { ssgVtxTable::transform(m);}$/;"	f	class:ssgVtxTableCarlight
transform	modules/graphic/ssggraph/grshadow.h	/^  virtual void transform ( const sgMat4 m )  { ssgVtxTable::transform(m);}$/;"	f	class:ssgVtxTableShadow
transform	modules/graphic/ssggraph/grsmoke.h	/^  virtual void transform ( const sgMat4 m )  { ssgVtxTable::transform(m);}$/;"	f	class:ssgVtxTableSmoke
transform	modules/graphic/ssggraph/grvtxtable.h	/^  virtual void transform ( const sgMat4 m )  { ssgVtxTable::transform(m);}$/;"	f	class:grVtxTable
transform	windows/include/plib/ssg.h	/^  sgMat4 transform ;$/;"	m	class:ssgBaseTransform
transformations	windows/include/plib/ssg.h	/^  class ssgTransformArray transformations;$/;"	m	class:ssgAnimTransform	typeref:class:ssgAnimTransform::ssgTransformArray
translate	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void translate(const Vector& v) { curr.translate(v); }$/;"	f	class:Object
translate	modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::translate(const Vector& v) { $/;"	f	class:Transform
translate	topview/transform.hpp	/^        mat<4, 4, T> translate(T dx, T dy, T dz)$/;"	f	namespace:kmuvcl::math
translucent	windows/include/plib/ssg.h	/^  int translucent ;$/;"	m	class:ssgState
transmission	libs/confscreens/driverconfig.cpp	/^    const char *transmission;$/;"	m	struct:PlayerInfo	file:
transmission	modules/simu/simuv2/carstruct.h	/^    tTransmission	transmission;	\/* includes clutch, gearbox and driveshaft *\/$/;"	m	struct:__anon23
transmission	modules/simu/simuv3/carstruct.h	/^    tTransmission	transmission;	\/* includes clutch, gearbox and driveshaft *\/$/;"	m	struct:__anon42
transpose	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix Matrix::transpose() const {$/;"	f	class:Matrix
transpose	modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix transpose(const Matrix& m) { return m.transpose(); }$/;"	f
transpose	topview/mat.hpp	/^      mat<N, M, T> transpose() const$/;"	f	class:kmuvcl::math::mat
traversal_mask	windows/include/plib/ssg.h	/^  int traversal_mask ;$/;"	m	class:ssgEntity
triStateHdle	libs/racescreens/miscscreens.cpp	/^static void *triStateHdle = 0;$/;"	v	file:
triangle	windows/include/plib/ssg.h	/^  int      triangle ;$/;"	m	class:ssgHit
tridiagonal	drivers/berniw/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	drivers/berniw2/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	drivers/berniw3/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	drivers/human/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	drivers/inferno/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	drivers/lliaw/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	drivers/tita/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal2	drivers/berniw/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	drivers/berniw2/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	drivers/berniw3/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	drivers/human/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	drivers/inferno/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	drivers/lliaw/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	drivers/tita/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
triple	modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar triple(const Vector& v1, const Vector& v2, const Vector& v3) {$/;"	f
trkBuild	interfaces/track.h	/^	tfTrackBuild			trkBuild;		\/**< build track structure for simu *\/$/;"	m	struct:__anon69
trkBuildEx	interfaces/track.h	/^	tfTrackBuild			trkBuildEx;		\/**< build with graphic extensions (used by trackgen tool) *\/$/;"	m	struct:__anon69
trkGlobal2Local	interfaces/track.h	/^	tfTrackGlobal2Local		trkGlobal2Local;$/;"	m	struct:__anon69
trkHeightG	interfaces/track.h	/^	tfTrackHeightG			trkHeightG;$/;"	m	struct:__anon69
trkHeightL	interfaces/track.h	/^	tfTrackHeightL			trkHeightL;$/;"	m	struct:__anon69
trkLocal2Global	interfaces/track.h	/^	tfTrackLocal2Global		trkLocal2Global;$/;"	m	struct:__anon69
trkPos	interfaces/car.h	/^	tTrkLocPos trkPos; \/**< current track position. The segment is the track segment (not sides)*\/$/;"	m	struct:__anon78
trkPos	modules/simu/simuv2/carstruct.h	/^    tTrkLocPos	trkPos;		\/* current track position *\/$/;"	m	struct:__anon23
trkPos	modules/simu/simuv2/wheel.h	/^    tTrkLocPos	trkPos;		\/* current track position *\/$/;"	m	struct:__anon11
trkPos	modules/simu/simuv3/carstruct.h	/^    tTrkLocPos	trkPos;		\/* current track position *\/$/;"	m	struct:__anon42
trkPos	modules/simu/simuv3/wheel.h	/^    tTrkLocPos	trkPos;		\/* current track position *\/$/;"	m	struct:__anon33
trkShutdown	interfaces/track.h	/^	tfTrackShutdown			trkShutdown;$/;"	m	struct:__anon69
trkSideNormal	interfaces/track.h	/^	tfTrackSideNormal   	trkSideNormal;$/;"	m	struct:__anon69
trkSurfaceNormal	interfaces/track.h	/^	tfTrackSurfaceNormal	trkSurfaceNormal;$/;"	m	struct:__anon69
trtime	drivers/berniw/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	drivers/berniw2/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	drivers/berniw3/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	drivers/human/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	drivers/inferno/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	drivers/lliaw/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	drivers/tita/mycar.h	/^		double trtime;$/;"	m	class:MyCar
true	windows/include/plib/ul.h	/^const   int true  = 1 ;$/;"	v
tryKarmaFilename	drivers/bt/learn.cpp	/^FILE* SegLearn::tryKarmaFilename(char* buffer, int size, const char *path, int driverindex, const char *tbuf, bool storelocalfilename)$/;"	f	class:SegLearn
tryKarmaFilename	drivers/damned/learn.cpp	/^FILE* SegLearn::tryKarmaFilename(char* buffer, int size, const char *path, int driverindex, const char *tbuf, bool storelocalfilename)$/;"	f	class:SegLearn
ts	drivers/berniw/trackdesc.h	/^		TrackSegment* ts;		\/* pointer to the array of tracksegments *\/$/;"	m	class:TrackDesc
ts	drivers/berniw2/trackdesc.h	/^		TrackSegment* ts;		\/* pointer to the array of tracksegments *\/$/;"	m	class:TrackDesc
ts	drivers/berniw3/trackdesc.h	/^		TrackSegment* ts;		\/* pointer to the array of tracksegments *\/$/;"	m	class:TrackDesc
ts	drivers/human/trackdesc.h	/^		TrackSegment* ts;		\/* pointer to the array of tracksegments *\/$/;"	m	class:TrackDesc
ts	drivers/inferno/trackdesc.h	/^		TrackSegment* ts;		\/\/ Pointer to the array of tracksegments in 3D$/;"	m	class:TrackDesc
ts	drivers/lliaw/trackdesc.h	/^		TrackSegment* ts;		\/\/ Pointer to the array of tracksegments in 3D$/;"	m	class:TrackDesc
ts	drivers/tita/trackdesc.h	/^		TrackSegment* ts;		\/\/ Pointer to the array of tracksegments in 3D$/;"	m	class:TrackDesc
ts	libs/raceengineclient/racemanmenu.cpp	/^static tRmTrackSelect ts;$/;"	v	file:
ts	libs/racescreens/trackselect.cpp	/^static tRmTrackSelect *ts;$/;"	v	file:
ts2d	drivers/inferno/trackdesc.h	/^		TrackSegment2D* ts2d;	\/\/ Pointer to the array of tracksegments in 2D$/;"	m	class:TrackDesc
ts2d	drivers/lliaw/trackdesc.h	/^		TrackSegment2D* ts2d;	\/\/ Pointer to the array of tracksegments in 2D$/;"	m	class:TrackDesc
ts2d	drivers/tita/trackdesc.h	/^		TrackSegment2D* ts2d;	\/\/ Pointer to the array of tracksegments in 2D$/;"	m	class:TrackDesc
tsu	modules/graphic/ssggraph/grcam.h	/^    float	tsu, tsv, teu, tev;	\/* texture coord *\/$/;"	m	class:cGrCarCamMirror
tsv	modules/graphic/ssggraph/grcam.h	/^    float	tsu, tsv, teu, tev;	\/* texture coord *\/$/;"	m	class:cGrCarCamMirror
tu	windows/include/plib/ssgaWaveSystem.h	/^  float tu, tv ;$/;"	m	class:ssgaWaveSystem
turbo	modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar turbo;$/;"	m	class:CarSoundData
turbo	modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap turbo;$/;"	m	class:SoundInterface
turbo_ilag	modules/graphic/ssggraph/CarSoundData.h	/^	float turbo_ilag; \/\/\/< how fast turbo catches up with engine$/;"	m	class:CarSoundData
turbo_on	modules/graphic/ssggraph/CarSoundData.h	/^	bool turbo_on; \/\/\/< use turbo sound$/;"	m	class:CarSoundData
turbo_rpm	modules/graphic/ssggraph/CarSoundData.h	/^	float turbo_rpm; \/\/\/< when turbo comes in$/;"	m	class:CarSoundData
turbo_sound	modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* turbo_sound; \/\/\/< turbo spinning sound$/;"	m	class:SoundInterface
turnMarksInfo	interfaces/track.h	/^    tTurnMarksInfo	turnMarksInfo;$/;"	m	struct:__anon67
turn_lc_signal	libs/raceengineclient/raceengine.cpp	/^void turn_lc_signal(void *) {$/;"	f
turn_signal_l	libs/raceengineclient/raceengine.cpp	/^void turn_signal_l(void *num) {$/;"	f
turn_signal_r	libs/raceengineclient/raceengine.cpp	/^void turn_signal_r(void *num) {$/;"	f
turn_to_face	windows/include/plib/ssgaParticleSystem.h	/^  int turn_to_face   ;$/;"	m	class:ssgaParticleSystem
turnaround	drivers/berniw/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	drivers/berniw2/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	drivers/berniw3/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	drivers/human/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	drivers/inferno/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	drivers/lliaw/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	drivers/tita/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
tv	windows/include/plib/ssgaWaveSystem.h	/^  float tu, tv ;$/;"	m	class:ssgaWaveSystem
tw	modules/graphic/ssggraph/grcam.h	/^    int		tw, th;			\/* texture size *\/$/;"	m	class:cGrCarCamMirror
twoStateHdle	libs/racescreens/miscscreens.cpp	/^static void *twoStateHdle = 0;$/;"	v	file:
tx	tools/trackgen/track.cpp	/^	tdble tx, ty;$/;"	m	struct:__anon60	file:
tx1	libs/tgfclient/guifont.h	/^    float tx1, ty1;$/;"	m	struct:__anon136
tx2	libs/tgfclient/guifont.h	/^    float tx2, ty2;$/;"	m	struct:__anon136
txmlAttribute	libs/txml/xml.h	/^} txmlAttribute;$/;"	t	typeref:struct:xmlAttribute
txmlElement	libs/txml/xml.h	/^} txmlElement;    $/;"	t	typeref:struct:xmlElement
ty	tools/trackgen/track.cpp	/^	tdble tx, ty;$/;"	m	struct:__anon60	file:
ty1	libs/tgfclient/guifont.h	/^    float tx1, ty1;$/;"	m	struct:__anon136
ty2	libs/tgfclient/guifont.h	/^    float tx2, ty2;$/;"	m	struct:__anon136
type	drivers/berniw/trackdesc.h	/^		int type;				\/* physical type (eg. straight, left or right) *\/$/;"	m	class:TrackSegment
type	drivers/berniw2/trackdesc.h	/^		int type;				\/* physical type (eg. straight, left or right) *\/$/;"	m	class:TrackSegment
type	drivers/berniw3/trackdesc.h	/^		int type;				\/* physical type (eg. straight, left or right) *\/$/;"	m	class:TrackSegment
type	drivers/human/pref.h	/^    GfCtrlType type;		\/* Type of control (analog, joy button, keyboard) *\/$/;"	m	struct:__anon185
type	drivers/human/trackdesc.h	/^		int type;				\/* physical type (eg. straight, left or right) *\/$/;"	m	class:TrackSegment
type	interfaces/raceman.h	/^    int			type;		\/**< Race type *\/$/;"	m	struct:__anon70
type	interfaces/track.h	/^	int type;		\/**< Type of Pit:$/;"	m	struct:__anon65
type	interfaces/track.h	/^    int		type;		\/**< Type of description:$/;"	m	struct:__anon64
type	interfaces/track.h	/^    int type;			\/**< Geometrical type:$/;"	m	struct:trackSeg
type	libs/tgf/hash.cpp	/^	int type;$/;"	m	struct:HashHeader	file:
type	libs/tgf/params.cpp	/^	int type; \/**< Type, either @ref P_NUM or @ref P_STR *\/$/;"	m	struct:param	file:
type	libs/tgfclient/tgfclient.h	/^    GfCtrlType type;$/;"	m	struct:__anon133
type	libs/txml/xmltok.c	/^  unsigned char type[256];$/;"	m	struct:normal_encoding	file:
type	modules/graphic/ssggraph/grloadsgi.h	/^		char           type ;$/;"	m	class:ssgSGIHeader
type	modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  DtResponseType type;$/;"	m	class:Response
type	modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  unsigned int type;$/;"	m	class:Transform
type	modules/simu/simuv2/differential.h	/^    int		type;$/;"	m	struct:__anon10
type	modules/simu/simuv2/transmission.h	/^    int		type;$/;"	m	struct:__anon26
type	modules/simu/simuv3/differential.h	/^    int		type;$/;"	m	struct:__anon32
type	modules/simu/simuv3/susp.h	/^    eSuspensionType type;$/;"	m	struct:Suspension
type	modules/simu/simuv3/transmission.h	/^    int		type;$/;"	m	struct:__anon45
type	tools/accc/accc.h	/^  char * type ;$/;"	m	struct:ob
type	tools/trackgen/easymesh.cpp	/^	int s0, s1, type;$/;"	m	struct:chai	file:
type	windows/include/plib/ssg.h	/^  int   type  ;$/;"	m	class:ssgBase
type2	interfaces/track.h	/^    int type2;			\/**< Position type:$/;"	m	struct:trackSeg
typeConvertion	tools/accc/mainaccc.cpp	/^int typeConvertion =0;$/;"	v
tyre_damage	modules/simu/simuv3/SimulationOptions.h	/^	float tyre_damage; 	\/\/\/< Amount of tyre wear, 1.0 is normal wear, 0.0 is no wear.$/;"	m	class:SimulationOptions
tyre_src	modules/graphic/ssggraph/SoundInterface.h	/^	SoundSource tyre_src[4];$/;"	m	class:OpenalSoundInterface
tyre_src	modules/graphic/ssggraph/SoundInterface.h	/^	SoundSource tyre_src[4];$/;"	m	class:PlibSoundInterface
tyre_temperature	modules/simu/simuv3/SimulationOptions.h	/^	bool tyre_temperature; \/\/\/< Tyre temperature effects.$/;"	m	class:SimulationOptions
u	drivers/olethros/learn.h	/^	float u; \/\/\/< speed$/;"	m	class:olethros::SegLearn
u	libs/tgfclient/gui.h	/^    } u;$/;"	m	struct:GfuiObject	typeref:union:GfuiObject::__anon147
u	modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 u; \/\/\/< speed$/;"	m	struct:WheelSoundData_
u	tools/accc/accc.h	/^  double u;$/;"	m	struct:tcoord
u	tools/trackgen/easymesh.cpp	/^	double	u;$/;"	m	struct:ref	file:
uInt	windows/include/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uInt	windows/include/zconf.h	120;"	d
uIntf	windows/include/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uIntf	windows/include/zconf.h	121;"	d
uLong	windows/include/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLong	windows/include/zconf.h	122;"	d
uLongf	windows/include/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	windows/include/zconf.h	123;"	d
u_lis	modules/graphic/ssggraph/TorcsSound.h	/^	sgVec3 u_lis; \/\/\/< listener velocity for this source$/;"	m	class:SoundSource
u_src	modules/graphic/ssggraph/TorcsSound.h	/^	sgVec3 u_src; \/\/\/< source velocity;$/;"	m	class:SoundSource
u_toleft	drivers/olethros/driver.h	/^	float u_toleft; \/\/\/< speed to left side$/;"	m	class:olethros::Driver
u_toright	drivers/olethros/driver.h	/^	float u_toright; \/\/\/< speed to right side$/;"	m	class:olethros::Driver
uchar	windows/osspec.h	38;"	d
ugly	tools/trackgen/easymesh.cpp	/^int ugly;                       \/* mora li biti globalna ??? *\/$/;"	v
uint	modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	63;"	d	file:
uint	windows/osspec.h	37;"	d
ulClock	windows/include/plib/ul.h	/^  ulClock () { reset () ; }$/;"	f	class:ulClock
ulClock	windows/include/plib/ul.h	/^class ulClock$/;"	c
ulCompareFunc	windows/include/plib/ul.h	/^typedef int  (*ulCompareFunc)( const void *data1, const void *data2 ) ;$/;"	t
ulDir	windows/include/plib/ul.h	/^typedef struct _ulDir ulDir ;$/;"	t	typeref:struct:_ulDir
ulDirEnt	windows/include/plib/ul.h	/^struct ulDirEnt$/;"	s
ulDynamicLibrary	windows/include/plib/ul.h	/^    ulDynamicLibrary ( const char *libname )$/;"	f	class:ulDynamicLibrary
ulDynamicLibrary	windows/include/plib/ul.h	/^  ulDynamicLibrary ( const char *libname )$/;"	f	class:ulDynamicLibrary
ulDynamicLibrary	windows/include/plib/ul.h	/^class ulDynamicLibrary$/;"	c
ulEndianBig16	windows/include/plib/ul.h	/^inline unsigned short ulEndianBig16(unsigned short x) {$/;"	f
ulEndianBig32	windows/include/plib/ul.h	/^inline unsigned int ulEndianBig32(unsigned int x) {$/;"	f
ulEndianBigArray16	windows/include/plib/ul.h	/^inline void ulEndianBigArray16(unsigned short *x, int length) {$/;"	f
ulEndianBigArray32	windows/include/plib/ul.h	/^inline void ulEndianBigArray32(unsigned int *x, int length) {$/;"	f
ulEndianBigArrayFloat	windows/include/plib/ul.h	/^inline void ulEndianBigArrayFloat(float *x, int length) {$/;"	f
ulEndianBigFloat	windows/include/plib/ul.h	/^inline float ulEndianBigFloat(float x) {$/;"	f
ulEndianLittle16	windows/include/plib/ul.h	/^inline unsigned short ulEndianLittle16(unsigned short x) {$/;"	f
ulEndianLittle32	windows/include/plib/ul.h	/^inline unsigned int ulEndianLittle32(unsigned int x) {$/;"	f
ulEndianLittleArray16	windows/include/plib/ul.h	/^inline void ulEndianLittleArray16(unsigned short *x, int length) {$/;"	f
ulEndianLittleArray32	windows/include/plib/ul.h	/^inline void ulEndianLittleArray32(unsigned int *x, int length) {$/;"	f
ulEndianLittleArrayFloat	windows/include/plib/ul.h	/^inline void ulEndianLittleArrayFloat(float *x, int length) {$/;"	f
ulEndianLittleFloat	windows/include/plib/ul.h	/^inline float ulEndianLittleFloat(float x) {$/;"	f
ulEndianReadBig16	windows/include/plib/ul.h	/^inline unsigned short ulEndianReadBig16(FILE *f) {$/;"	f
ulEndianReadBig32	windows/include/plib/ul.h	/^inline unsigned int ulEndianReadBig32(FILE *f) {$/;"	f
ulEndianReadBigFloat	windows/include/plib/ul.h	/^inline float ulEndianReadBigFloat(FILE *f) {$/;"	f
ulEndianReadLittle16	windows/include/plib/ul.h	/^inline unsigned short ulEndianReadLittle16(FILE *f) {$/;"	f
ulEndianReadLittle32	windows/include/plib/ul.h	/^inline unsigned int ulEndianReadLittle32(FILE *f) {$/;"	f
ulEndianReadLittleFloat	windows/include/plib/ul.h	/^inline float ulEndianReadLittleFloat(FILE *f) {$/;"	f
ulEndianSwap	windows/include/plib/ul.h	/^inline void ulEndianSwap(float *x) { ulEndianSwap((unsigned int   *)x); }$/;"	f
ulEndianSwap	windows/include/plib/ul.h	/^inline void ulEndianSwap(int   *x) { ulEndianSwap((unsigned int   *)x); }$/;"	f
ulEndianSwap	windows/include/plib/ul.h	/^inline void ulEndianSwap(short *x) { ulEndianSwap((unsigned short *)x); }$/;"	f
ulEndianSwap	windows/include/plib/ul.h	/^inline void ulEndianSwap(unsigned int *x)$/;"	f
ulEndianSwap	windows/include/plib/ul.h	/^inline void ulEndianSwap(unsigned short *x)$/;"	f
ulEndianWriteBig16	windows/include/plib/ul.h	/^inline size_t ulEndianWriteBig16(FILE *f, unsigned short x) {$/;"	f
ulEndianWriteBig32	windows/include/plib/ul.h	/^inline size_t ulEndianWriteBig32(FILE *f, unsigned int x) {$/;"	f
ulEndianWriteBigFloat	windows/include/plib/ul.h	/^inline size_t ulEndianWriteBigFloat(FILE *f, float x) {$/;"	f
ulEndianWriteLittle16	windows/include/plib/ul.h	/^inline size_t ulEndianWriteLittle16(FILE *f, unsigned short x) {$/;"	f
ulEndianWriteLittle32	windows/include/plib/ul.h	/^inline size_t ulEndianWriteLittle32(FILE *f, unsigned int x) {$/;"	f
ulEndianWriteLittleFloat	windows/include/plib/ul.h	/^inline size_t ulEndianWriteLittleFloat(FILE *f, float x) {$/;"	f
ulErrorCallback	windows/include/plib/ul.h	/^typedef void (*ulErrorCallback) ( enum ulSeverity severity, char* msg ) ;$/;"	t
ulIsBigEndian	windows/include/plib/ul.h	332;"	d
ulIsLittleEndian	windows/include/plib/ul.h	331;"	d
ulIterateFunc	windows/include/plib/ul.h	/^typedef bool (*ulIterateFunc)( const void *data, void *user_data ) ;$/;"	t
ulLinkedList	windows/include/plib/ul.h	/^  ulLinkedList ()$/;"	f	class:ulLinkedList
ulLinkedList	windows/include/plib/ul.h	/^class ulLinkedList$/;"	c
ulList	windows/include/plib/ul.h	/^class ulList$/;"	c
ulMax	windows/include/plib/ul.h	189;"	d
ulMilliSecondSleep	windows/include/plib/ul.h	/^inline void ulMilliSecondSleep ( int milliseconds )$/;"	f
ulMin	windows/include/plib/ul.h	190;"	d
ulSeverity	windows/include/plib/ul.h	/^enum ulSeverity$/;"	g
ulSleep	windows/include/plib/ul.h	/^inline void ulSleep ( int seconds )$/;"	f
unRef	windows/include/plib/sl.h	/^  void unRef () { ref_count-- ; }$/;"	f	class:slEnvelope
unRef	windows/include/plib/sl.h	/^  void unRef () { ref_count-- ; }$/;"	f	class:slSample
uncompress	windows/include/zconf.h	101;"	d
undamaged	drivers/berniw/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	drivers/berniw2/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	drivers/berniw3/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	drivers/human/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	drivers/inferno/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	drivers/lliaw/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	drivers/tita/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
unicode_byte_type	libs/txml/xmltok.c	/^static int unicode_byte_type(char hi, char lo)$/;"	f	file:
unique	windows/include/plib/ssg.h	/^  int   unique ;  \/* A unique number for this node *\/$/;"	m	class:ssgBase
unit	libs/racescreens/carsetupscreen.cpp	/^		const char* unit;$/;"	m	class:cGuiSetupValue	file:
unit	libs/tgf/params.cpp	/^	char *unit; \/**< Unit, see @ref GfParmUnit2SI for supported units *\/$/;"	m	struct:param	file:
unit	modules/graphic/ssggraph/grshadow.h	/^  float unit;$/;"	m	class:ssgVtxTableShadow
unitNm	libs/racescreens/carsetupscreen.cpp	/^static const char* unitNm = "N.m";$/;"	v	file:
unitdeg	libs/racescreens/carsetupscreen.cpp	/^static const char* unitdeg = "deg";$/;"	v	file:
unitkpa	libs/racescreens/carsetupscreen.cpp	/^static const char* unitkpa = "kPa";$/;"	v	file:
unitlbfin	libs/racescreens/carsetupscreen.cpp	/^static const char* unitlbfin = "lbf\/in";$/;"	v	file:
unitlbfins	libs/racescreens/carsetupscreen.cpp	/^static const char* unitlbfins = "lbf\/in\/s";$/;"	v	file:
unitmm	libs/racescreens/carsetupscreen.cpp	/^static const char* unitmm = "mm";$/;"	v	file:
unknown	tools/nfs2ac/mainnfs2ac.cpp	/^    char  unknown [12];$/;"	m	struct:__anon58	file:
unknownEncodingData	libs/txml/xmlparse.c	/^  void *unknownEncodingData;$/;"	m	struct:__anon117	file:
unknownEncodingData	libs/txml/xmlparse.c	273;"	d	file:
unknownEncodingHandler	libs/txml/xmlparse.c	/^  XML_UnknownEncodingHandler unknownEncodingHandler;$/;"	m	struct:__anon117	file:
unknownEncodingHandler	libs/txml/xmlparse.c	269;"	d	file:
unknownEncodingHandlerData	libs/txml/xmlparse.c	/^  void *unknownEncodingHandlerData;$/;"	m	struct:__anon117	file:
unknownEncodingHandlerData	libs/txml/xmlparse.c	274;"	d	file:
unknownEncodingMem	libs/txml/xmlparse.c	/^  void *unknownEncodingMem;$/;"	m	struct:__anon117	file:
unknownEncodingMem	libs/txml/xmlparse.c	272;"	d	file:
unknownEncodingRelease	libs/txml/xmlparse.c	/^  void (*unknownEncodingRelease)(void *);$/;"	m	struct:__anon117	file:
unknownEncodingRelease	libs/txml/xmlparse.c	276;"	d	file:
unknown_encoding	libs/txml/xmltok.c	/^struct unknown_encoding {$/;"	s	file:
unknown_isInvalid	libs/txml/xmltok.c	/^int unknown_isInvalid(const ENCODING *enc, const char *p)$/;"	f	file:
unknown_isName	libs/txml/xmltok.c	/^int unknown_isName(const ENCODING *enc, const char *p)$/;"	f	file:
unknown_isNmstrt	libs/txml/xmltok.c	/^int unknown_isNmstrt(const ENCODING *enc, const char *p)$/;"	f	file:
unknown_toUtf16	libs/txml/xmltok.c	/^void unknown_toUtf16(const ENCODING *enc,$/;"	f	file:
unknown_toUtf8	libs/txml/xmltok.c	/^void unknown_toUtf8(const ENCODING *enc,$/;"	f	file:
unparsedEntityDeclHandler	libs/txml/xmlparse.c	/^  XML_UnparsedEntityDeclHandler unparsedEntityDeclHandler;$/;"	m	struct:__anon117	file:
unparsedEntityDeclHandler	libs/txml/xmlparse.c	266;"	d	file:
unselectedScrollList	libs/racescreens/driverselect.cpp	/^static int selectedScrollList, unselectedScrollList;$/;"	v	file:
unsynced	windows/include/ogg/ogg.h	/^  int unsynced;$/;"	m	struct:__anon54
up	libs/txml/xml.h	/^    struct xmlElement	*up;		\/* upper element *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlElement
up	modules/graphic/ssggraph/grcam.h	/^    sgVec3 up;$/;"	m	class:cGrCamera
up	topview/Camera.hpp	/^	kmuvcl::math::vec3f up() {$/;"	f	class:kmuvcl::Camera
update	drivers/berniw/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	drivers/berniw/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	drivers/berniw2/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	drivers/berniw2/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	drivers/berniw3/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	drivers/berniw3/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	drivers/bt/cardata.cpp	/^void Cardata::update()$/;"	f	class:Cardata
update	drivers/bt/cardata.cpp	/^void SingleCardata::update()$/;"	f	class:SingleCardata
update	drivers/bt/driver.cpp	/^void Driver::update(tSituation *s)$/;"	f	class:Driver
update	drivers/bt/learn.cpp	/^void SegLearn::update(tSituation *s, tTrack *t, tCarElt *car, int alone, float offset, float outside, float *r)$/;"	f	class:SegLearn
update	drivers/bt/opponent.cpp	/^void Opponent::update(tSituation *s, Driver *driver)$/;"	f	class:Opponent
update	drivers/bt/opponent.cpp	/^void Opponents::update(tSituation *s, Driver *driver)$/;"	f	class:Opponents
update	drivers/bt/pit.cpp	/^void Pit::update()$/;"	f	class:Pit
update	drivers/bt/strategy.cpp	/^void SimpleStrategy2::update(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
update	drivers/bt/strategy.cpp	/^void SimpleStrategy::update(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
update	drivers/damned/cardata.cpp	/^void Cardata::update()$/;"	f	class:Cardata
update	drivers/damned/cardata.cpp	/^void SingleCardata::update()$/;"	f	class:SingleCardata
update	drivers/damned/driver.cpp	/^void Driver::update(tSituation *s)$/;"	f	class:Driver
update	drivers/damned/learn.cpp	/^void SegLearn::update(tSituation *s, tTrack *t, tCarElt *car, int alone, float offset, float outside, float *r)$/;"	f	class:SegLearn
update	drivers/damned/opponent.cpp	/^void Opponent::update(tSituation *s, Driver *driver)$/;"	f	class:Opponent
update	drivers/damned/opponent.cpp	/^void Opponents::update(tSituation *s, Driver *driver)$/;"	f	class:Opponents
update	drivers/damned/pit.cpp	/^void Pit::update()$/;"	f	class:Pit
update	drivers/damned/strategy.cpp	/^void SimpleStrategy2::update(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
update	drivers/damned/strategy.cpp	/^void SimpleStrategy::update(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
update	drivers/human/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	drivers/human/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	drivers/inferno/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	drivers/inferno/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	drivers/lliaw/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	drivers/lliaw/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	drivers/olethros/cardata.cpp	/^void Cardata::update()$/;"	f	class:olethros::Cardata
update	drivers/olethros/cardata.cpp	/^void SingleCardata::update()$/;"	f	class:olethros::SingleCardata
update	drivers/olethros/driver.cpp	/^    void Driver::update(tSituation *s)$/;"	f	class:olethros::Driver
update	drivers/olethros/learn.cpp	/^void SegLearn::update(tSituation *s, tTrack *t, tCarElt *car, int alone, float offset, float outside, float *r, float alpha, float speed, float limit)$/;"	f	class:SegLearn
update	drivers/olethros/opponent.cpp	/^void Opponent::update(tSituation *s, Driver *driver)$/;"	f	class:olethros::Opponent
update	drivers/olethros/opponent.cpp	/^void Opponents::update(tSituation *s, Driver *driver)$/;"	f	class:olethros::Opponents
update	drivers/olethros/pit.cpp	/^void Pit::update()$/;"	f	class:olethros::Pit
update	drivers/olethros/strategy.cpp	/^void SimpleStrategy::update(tCarElt* car, tSituation *s)$/;"	f	class:olethros::SimpleStrategy
update	drivers/sparkle/driver.cpp	/^void Driver::update(tSituation *s)$/;"	f	class:Driver
update	drivers/sparkle/opponent.cpp	/^void Opponent::update(tSituation *s, Driver *driver)$/;"	f	class:Opponent
update	drivers/sparkle/opponent.cpp	/^void Opponents::update(tSituation *s, Driver *driver)$/;"	f	class:Opponents
update	drivers/sparkle/pit.cpp	/^void Pit::update()$/;"	f	class:Pit
update	drivers/tita/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	drivers/tita/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	interfaces/simu.h	/^	tfSimUpdate		update;$/;"	m	struct:__anon85
update	interfaces/telemetry.h	/^    tftlmUpdate			update;			\/* Update telemetry *\/$/;"	m	struct:__anon86
update	libs/racescreens/carsetupscreen.cpp	/^		void update(tdble delta)$/;"	f	class:cGuiSetupValue
update	modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::update (tCarElt* car)$/;"	f	class:CarSoundData
update	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^void OpenalSoundInterface::update(CarSoundData** car_sound_data, int n_cars, sgVec3 p_obs, sgVec3 u_obs, sgVec3 c_obs, sgVec3 a_obs)$/;"	f	class:OpenalSoundInterface
update	modules/graphic/ssggraph/PlibSoundInterface.cpp	/^void PlibSoundInterface::update(CarSoundData** car_sound_data, int n_cars, sgVec3 p_obs, sgVec3 u_obs, sgVec3 c_obs, sgVec3 a_obs)$/;"	f	class:PlibSoundInterface
update	modules/graphic/ssggraph/SoundInterface.h	/^	virtual void update(CarSoundData** car_sound_data,$/;"	f	class:SoundInterface
update	modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::update ()$/;"	f	class:OpenalTorcsSound
update	modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::update()$/;"	f	class:PlibTorcsSound
update	modules/graphic/ssggraph/TorcsSound.cpp	/^void SoundSource::update()$/;"	f	class:SoundSource
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamBehind
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamBehind2
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamCenter
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamFront
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamInside
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamInsideFixedCar
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamLookAt
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamRoadFly
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamRoadNoZoom
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamRoadZoom
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamRoadZoomTVD
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamSide
update	modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamUp
update	modules/graphic/ssggraph/grcam.cpp	/^void cGrBackgroundCam::update(cGrCamera *curCam)$/;"	f	class:cGrBackgroundCam
update	modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::update(tCarElt *car, tSituation * \/* s *\/)$/;"	f	class:cGrCarCamMirror
update	modules/graphic/ssggraph/grcam.h	/^    void update(tCarElt *car, tSituation *s) { }$/;"	f	class:cGrOrthoCamera
update	modules/graphic/ssggraph/grcam.h	/^    void update(tCarElt *car, tSituation *s) {}$/;"	f	class:cGrBackgroundCam
update	modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::update(tSituation *s, float Fps)$/;"	f	class:cGrScreen
update	modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^inline void update(const Endpoint& a, const Endpoint& b) {$/;"	f
update	windows/include/plib/sg.h	/^  void update ( float dt )$/;"	f	class:sgParticle
update	windows/include/plib/sg.h	/^  void update ()$/;"	f	class:sgSpringDamper
update	windows/include/plib/sl.h	/^  void update     () { realUpdate ( SL_FALSE ) ; }$/;"	f	class:slScheduler
update	windows/include/plib/ssgaParticleSystem.h	/^  void update ( float dt )$/;"	f	class:ssgaParticle
updateAccel	drivers/olethros/learn.cpp	/^float SegLearn::updateAccel (tSituation* s, tCarElt* car, float taccel, float derr, float dtm)$/;"	f	class:SegLearn
updateButtonText	libs/confscreens/controlconfig.cpp	/^static void updateButtonText(void)$/;"	f	file:
updateCa	drivers/berniw/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	drivers/berniw2/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	drivers/berniw3/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	drivers/human/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	drivers/inferno/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	drivers/lliaw/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	drivers/tita/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCompressARBEnabled	libs/tgfclient/glfeatures.cpp	/^void updateCompressARBEnabled(void)$/;"	f
updateDError	drivers/berniw/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	drivers/berniw2/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	drivers/berniw3/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	drivers/human/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	drivers/inferno/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	drivers/lliaw/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	drivers/tita/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDir	drivers/berniw/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); dir.z = 0.0; }$/;"	f	class:AbstractCar
updateDir	drivers/berniw2/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); dir.z = 0.0; }$/;"	f	class:AbstractCar
updateDir	drivers/berniw3/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); dir.z = 0.0; }$/;"	f	class:AbstractCar
updateDir	drivers/human/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); dir.z = 0.0; }$/;"	f	class:AbstractCar
updateDir	drivers/inferno/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); }$/;"	f	class:AbstractCar
updateDir	drivers/lliaw/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); }$/;"	f	class:AbstractCar
updateDir	drivers/tita/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); }$/;"	f	class:AbstractCar
updateFuelStrategy	drivers/bt/strategy.cpp	/^void SimpleStrategy2::updateFuelStrategy(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
updateFuelStrategy	drivers/damned/strategy.cpp	/^void SimpleStrategy2::updateFuelStrategy(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
updateKeys	drivers/human/human.cpp	/^static void updateKeys(void) {$/;"	f	file:
updateLabelText	libs/tgfclient/screen.cpp	/^updateLabelText(void)$/;"	f	file:
updateM	libs/racescreens/carsetupscreen.cpp	/^		void updateM()	{ update(steerdecs); }$/;"	f	class:cGuiSetupValue
updateMM	libs/racescreens/carsetupscreen.cpp	/^		void updateMM() { update(steerdecb); }$/;"	f	class:cGuiSetupValue
updateMinMaxForTurn	modules/track/track4.cpp	/^static void updateMinMaxForTurn(const tTrackSeg* const curBorder, const tdble radius, const tdble sign, const tdble z)$/;"	f	file:
updateOCar	drivers/berniw/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	drivers/berniw2/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	drivers/berniw3/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	drivers/human/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	drivers/inferno/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	drivers/lliaw/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	drivers/tita/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOverlapTimer	drivers/berniw/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	drivers/berniw2/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	drivers/berniw3/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	drivers/bt/opponent.cpp	/^void Opponent::updateOverlapTimer(tSituation *s, tCarElt *mycar)$/;"	f	class:Opponent
updateOverlapTimer	drivers/damned/opponent.cpp	/^void Opponent::updateOverlapTimer(tSituation *s, tCarElt *mycar)$/;"	f	class:Opponent
updateOverlapTimer	drivers/human/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	drivers/inferno/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	drivers/lliaw/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	drivers/olethros/opponent.cpp	/^void Opponent::updateOverlapTimer(tSituation *s, tCarElt *mycar)$/;"	f	class:olethros::Opponent
updateOverlapTimer	drivers/tita/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateP	libs/racescreens/carsetupscreen.cpp	/^		void updateP()	{ update(steerincs); }$/;"	f	class:cGuiSetupValue
updatePP	libs/racescreens/carsetupscreen.cpp	/^		void updatePP() { update(steerincb); }$/;"	f	class:cGuiSetupValue
updatePos	drivers/berniw/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; currentpos.z = me->_pos_Z - cgh; }$/;"	f	class:AbstractCar
updatePos	drivers/berniw2/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; currentpos.z = me->_pos_Z - cgh; }$/;"	f	class:AbstractCar
updatePos	drivers/berniw3/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; currentpos.z = me->_pos_Z - cgh; }$/;"	f	class:AbstractCar
updatePos	drivers/human/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; currentpos.z = me->_pos_Z - cgh; }$/;"	f	class:AbstractCar
updatePos	drivers/inferno/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; }$/;"	f	class:AbstractCar
updatePos	drivers/lliaw/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; }$/;"	f	class:AbstractCar
updatePos	drivers/tita/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; }$/;"	f	class:AbstractCar
updatePosition	libs/txml/xmltok.h	/^  void (*updatePosition)(const ENCODING *,$/;"	m	struct:encoding
updatePosition	libs/txml/xmltok_impl.c	/^void PREFIX(updatePosition)(const ENCODING *enc,$/;"	f	file:
updateSpeed	drivers/berniw/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	drivers/berniw2/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	drivers/berniw3/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	drivers/human/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	drivers/inferno/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	drivers/lliaw/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	drivers/tita/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeedSqr	drivers/berniw/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	drivers/berniw2/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	drivers/berniw3/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	drivers/human/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	drivers/inferno/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	drivers/lliaw/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	drivers/tita/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpool	modules/simu/simuv2/differential.cpp	/^static void updateSpool(tCar *car, tDifferential *differential, int first)$/;"	f	file:
updateSpool	modules/simu/simuv3/differential.cpp	/^updateSpool(tCar *car, tDifferential *differential, int first)$/;"	f	file:
updateTransform	windows/include/plib/ssg.h	/^  void updateTransform ()$/;"	f	class:ssgBaseTransform
updateUserTextureMaxSize	libs/tgfclient/glfeatures.cpp	/^void updateUserTextureMaxSize(void)$/;"	f
updateid	drivers/bt/learn.h	/^		int *updateid;$/;"	m	class:SegLearn
updateid	drivers/damned/learn.h	/^		int *updateid;$/;"	m	class:SegLearn
updateid	drivers/olethros/learn.h	/^	int *updateid; \/\/\/< Array holding the segments to be update$/;"	m	class:olethros::SegLearn
updt_bbox	tools/texmapper/maintexmapper.cpp	/^void updt_bbox(ssgEntity *start, sgVec3 min, sgVec3 max)$/;"	f
upper	modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  Endpoint upper[3];$/;"	m	class:Object
upside_down_timer	modules/simu/simuv3/carstruct.h	/^    tdble       upside_down_timer;$/;"	m	struct:__anon42
upward_speed	windows/include/plib/ssgaFire.h	/^  float upward_speed ;$/;"	m	class:ssgaFire
upx	topview/topview.cpp	/^		centerz = 0.0f, upx = 0.0f, upy = 1.0f, upz = 0.0f;$/;"	v
upy	topview/topview.cpp	/^		centerz = 0.0f, upx = 0.0f, upy = 1.0f, upz = 0.0f;$/;"	v
upz	topview/topview.cpp	/^		centerz = 0.0f, upx = 0.0f, upy = 1.0f, upz = 0.0f;$/;"	v
urandom	libs/learning/Distribution.cpp	/^real urandom()$/;"	f
urandom	libs/learning/Distribution.cpp	/^real urandom(real min, real max)$/;"	f
urandom	modules/graphic/ssggraph/grmain.h	/^inline float urandom() {$/;"	f
urandom	modules/simu/simuv2/sim.h	/^inline float urandom() {$/;"	f
urandom	modules/simu/simuv3/sim.h	/^inline float urandom() {$/;"	f
usage	misc/png2jpg/png2jpg.c	/^static void usage(void)$/;"	f	file:
usage	tools/accc/mainaccc.cpp	/^void usage(void)$/;"	f
usage	tools/nfsperf/mainnfsperf.cpp	/^void usage(void)$/;"	f
usage	tools/texmapper/maintexmapper.cpp	/^void usage(void)$/;"	f
usage	tools/trackgen/maintrackgen.cpp	/^void usage(void)$/;"	f
useConfidenceEstimates	libs/learning/ann_policy.cpp	/^bool ANN_Policy::useConfidenceEstimates (bool confidence, real zeta) {$/;"	f	class:ANN_Policy
useConfidenceEstimates	libs/learning/policy.cpp	/^bool DiscretePolicy::useConfidenceEstimates (bool confidence, real zeta, bool confidence_eligibility) {$/;"	f	class:DiscretePolicy
useGibbsConfidence	libs/learning/policy.cpp	/^void DiscretePolicy::useGibbsConfidence (bool gibbs)$/;"	f	class:DiscretePolicy
useReliabilityEstimate	libs/learning/policy.cpp	/^void DiscretePolicy::useReliabilityEstimate (bool ri)$/;"	f	class:DiscretePolicy
useSoftmax	libs/learning/policy.cpp	/^void DiscretePolicy::useSoftmax (bool softmax) $/;"	f	class:DiscretePolicy
useStrip	tools/accc/mainaccc.cpp	/^int useStrip=0;$/;"	v
use_tex	topview/topview.cpp	/^	int use_tex;$/;"	m	struct:Particle	file:
used	libs/txml/hashtable.h	/^  size_t used;$/;"	m	struct:__anon107
usedFG	libs/tgfclient/screen.cpp	/^static int usedFG = 0;$/;"	v	file:
usedGM	libs/tgfclient/screen.cpp	/^static int usedGM = 0;$/;"	v	file:
usedLim	libs/txml/hashtable.h	/^  size_t usedLim;$/;"	m	struct:__anon107
usegroup	modules/graphic/ssggraph/grloadac.cpp	/^static int              usegroup=TRUE;$/;"	v	file:
usenormal	modules/graphic/ssggraph/grloadac.cpp	/^static int		usenormal = 0;$/;"	v	file:
userActData	libs/tgfclient/gui.h	/^    void		*userActData;$/;"	m	struct:__anon148
userData	libs/tgf/tgf.h	/^	void *userData;			\/**< User data *\/$/;"	m	struct:FList
userData	libs/tgfclient/gui.h	/^    void			*userData;$/;"	m	struct:GfuiListElement
userData	libs/tgfclient/gui.h	/^    void		*userData;$/;"	m	struct:GfuiKey
userData	libs/tgfclient/gui.h	/^    void		*userData;$/;"	m	struct:__anon144
userData	libs/tgfclient/tgfclient.h	/^    void	*userData;	\/**< Associated user data *\/$/;"	m	struct:ScrollBarInfo
userData	libs/txml/xmlparse.c	/^  void *userData;$/;"	m	struct:__anon117	file:
userData	libs/txml/xmlparse.c	259;"	d	file:
userData	libs/txml/xmltok.c	/^  void *userData;$/;"	m	struct:unknown_encoding	file:
userData	windows/include/plib/ssgaParticleSystem.h	/^  void *userData ;$/;"	m	class:ssgaParticle
userDataOnFocus	libs/tgfclient/gui.h	/^    void		*userDataOnFocus;$/;"	m	struct:__anon141
userDataOnFocus	libs/tgfclient/gui.h	/^    void		*userDataOnFocus;$/;"	m	struct:__anon142
userDataOnFocus	libs/tgfclient/gui.h	/^    void		*userDataOnFocus;$/;"	m	struct:__anon145
userDataOnPush	libs/tgfclient/gui.h	/^    void		*userDataOnPush;$/;"	m	struct:__anon141
userDataOnPush	libs/tgfclient/gui.h	/^    void		*userDataOnPush;$/;"	m	struct:__anon142
userDataOnSelect	libs/tgfclient/gui.h	/^    void		*userDataOnSelect;$/;"	m	struct:__anon143
userDeactData	libs/tgfclient/gui.h	/^    void		*userDeactData;$/;"	m	struct:__anon148
userKeys	libs/tgfclient/gui.h	/^    tGfuiKey		*userKeys;$/;"	m	struct:__anon148
userSpecKeys	libs/tgfclient/gui.h	/^    tGfuiKey		*userSpecKeys;$/;"	m	struct:__anon148
userTextureMaxSize	libs/tgfclient/glfeatures.cpp	/^static int userTextureMaxSize;$/;"	v	file:
user_comments	windows/include/vorbis/codec.h	/^  char **user_comments;$/;"	m	struct:vorbis_comment
user_data	windows/include/plib/ssg.h	/^  ssgBase *user_data ;$/;"	m	class:ssgBase
usestrip	modules/graphic/ssggraph/grloadac.cpp	/^static int              usestrip=TRUE;$/;"	v	file:
utf16	libs/txml/xmltok.c	/^  unsigned short utf16[256];$/;"	m	struct:unknown_encoding	file:
utf16Convert	libs/txml/xmltok.h	/^  void (*utf16Convert)(const ENCODING *enc,$/;"	m	struct:encoding
utf8	libs/txml/xmltok.c	/^  char utf8[256][4];$/;"	m	struct:unknown_encoding	file:
utf8Convert	libs/txml/xmltok.h	/^  void (*utf8Convert)(const ENCODING *enc,$/;"	m	struct:encoding
utf8_encoding	libs/txml/xmltok.c	/^static const struct normal_encoding utf8_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
utf8_isInvalid2	libs/txml/xmltok.c	116;"	d	file:
utf8_isInvalid3	libs/txml/xmltok.c	/^int utf8_isInvalid3(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isInvalid4	libs/txml/xmltok.c	/^int utf8_isInvalid4(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isName2	libs/txml/xmltok.c	/^int utf8_isName2(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isName3	libs/txml/xmltok.c	/^int utf8_isName3(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isName4	libs/txml/xmltok.c	100;"	d	file:
utf8_isNmstrt2	libs/txml/xmltok.c	/^int utf8_isNmstrt2(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isNmstrt3	libs/txml/xmltok.c	/^int utf8_isNmstrt3(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isNmstrt4	libs/txml/xmltok.c	114;"	d	file:
utf8_toUtf16	libs/txml/xmltok.c	/^void utf8_toUtf16(const ENCODING *enc,$/;"	f	file:
utf8_toUtf8	libs/txml/xmltok.c	/^void utf8_toUtf8(const ENCODING *enc,$/;"	f	file:
v	libs/learning/ANN.h	/^	real v; \/\/\/<variance estimate$/;"	m	struct:Connection_
v	libs/racescreens/carsetupscreen.cpp	/^		tCarPitSetupValue* v;$/;"	m	class:cGuiSetupValue	file:
v	libs/txml/hashtable.h	/^  NAMED **v;$/;"	m	struct:__anon107
v	modules/simu/simuv2/susp.h	/^    tdble v; \/* suspension travel speed *\/$/;"	m	struct:Suspension
v	modules/simu/simuv3/susp.h	/^    tdble v; \/* suspension travel speed *\/$/;"	m	struct:Suspension
v	tools/accc/accc.h	/^  double v;$/;"	m	struct:tcoord
v	tools/texmapper/ssgSaveAC.cpp	/^  int    v [ 3 ] ;$/;"	m	struct:saveTriangle	file:
v	tools/trackgen/easymesh.cpp	/^	double	v;$/;"	m	struct:ref	file:
v	tools/trackgen/objects.cpp	/^	int    v[3];$/;"	m	struct:saveTriangle	file:
v0	windows/include/plib/ssgaLensFlare.h	/^  ssgVertexArray   *v0 ;$/;"	m	class:ssgaLensFlare
v1	modules/simu/simuv2/susp.h	/^    tdble C1, v1;	\/* coefs for slow *\/$/;"	m	struct:__anon20
v1	modules/simu/simuv3/susp.h	/^    tdble C1, b1, v1; \/* coefs for slow *\/$/;"	m	struct:__anon39
v2d	drivers/berniw/linalg.h	/^		v2d() {}$/;"	f	class:v2d
v2d	drivers/berniw/linalg.h	/^		v2d(const v2d &src) { this->x = src.x; this->y = src.y; }$/;"	f	class:v2d
v2d	drivers/berniw/linalg.h	/^		v2d(float x, float y) { this->x = x; this->y = y; }$/;"	f	class:v2d
v2d	drivers/berniw/linalg.h	/^class v2d {$/;"	c
v2d	drivers/berniw2/linalg.h	/^		v2d() {}$/;"	f	class:v2d
v2d	drivers/berniw2/linalg.h	/^		v2d(const v2d &src) { this->x = src.x; this->y = src.y; }$/;"	f	class:v2d
v2d	drivers/berniw2/linalg.h	/^		v2d(float x, float y) { this->x = x; this->y = y; }$/;"	f	class:v2d
v2d	drivers/berniw2/linalg.h	/^class v2d {$/;"	c
v2d	drivers/berniw3/linalg.h	/^		v2d() {}$/;"	f	class:v2d
v2d	drivers/berniw3/linalg.h	/^		v2d(const v2d &src) { this->x = src.x; this->y = src.y; }$/;"	f	class:v2d
v2d	drivers/berniw3/linalg.h	/^		v2d(float x, float y) { this->x = x; this->y = y; }$/;"	f	class:v2d
v2d	drivers/berniw3/linalg.h	/^class v2d {$/;"	c
v2d	drivers/human/linalg.h	/^		v2d() {}$/;"	f	class:v2d
v2d	drivers/human/linalg.h	/^		v2d(const v2d &src) { this->x = src.x; this->y = src.y; }$/;"	f	class:v2d
v2d	drivers/human/linalg.h	/^		v2d(float x, float y) { this->x = x; this->y = y; }$/;"	f	class:v2d
v2d	drivers/human/linalg.h	/^class v2d {$/;"	c
v2d	drivers/olethros/linalg.h	/^		v2d() {}$/;"	f	class:v2d
v2d	drivers/olethros/linalg.h	/^		v2d(const v2d &src) { this->x = src.x; this->y = src.y; }$/;"	f	class:v2d
v2d	drivers/olethros/linalg.h	/^		v2d(float x, float y) { this->x = x; this->y = y; }$/;"	f	class:v2d
v2d	drivers/olethros/linalg.h	/^class v2d {$/;"	c
v2d	drivers/sparkle/linalg.h	/^        v2d() {}$/;"	f	class:v2d
v2d	drivers/sparkle/linalg.h	/^        v2d(const v2d &src) { this->x = src.x; this->y = src.y; }$/;"	f	class:v2d
v2d	drivers/sparkle/linalg.h	/^        v2d(float x, float y) { this->x = x; this->y = y; }$/;"	f	class:v2d
v2d	drivers/sparkle/linalg.h	/^class v2d {$/;"	c
v2t	libs/math/v2_t.h	/^		v2t() {}$/;"	f	class:v2t
v2t	libs/math/v2_t.h	/^		v2t(const T s):x(s), y(s) {}$/;"	f	class:v2t
v2t	libs/math/v2_t.h	/^		v2t(const T x, const T y):x(x), y(y) {}$/;"	f	class:v2t
v2t	libs/math/v2_t.h	/^		v2t(const v2t<T> &src):x(src.x), y(src.y) {}$/;"	f	class:v2t
v2t	libs/math/v2_t.h	/^template<class T> class v2t {$/;"	c
v3d	drivers/berniw/linalg.h	/^		v3d() {}$/;"	f	class:v3d
v3d	drivers/berniw/linalg.h	/^		v3d(const v3d &src) { this->x = src.x; this->y = src.y; this->z = src.z; }$/;"	f	class:v3d
v3d	drivers/berniw/linalg.h	/^		v3d(double x, double y, double z) { this->x = x; this->y = y; this->z = z; }$/;"	f	class:v3d
v3d	drivers/berniw/linalg.h	/^class v3d {$/;"	c
v3d	drivers/berniw2/linalg.h	/^		v3d() {}$/;"	f	class:v3d
v3d	drivers/berniw2/linalg.h	/^		v3d(const v3d &src) { this->x = src.x; this->y = src.y; this->z = src.z; }$/;"	f	class:v3d
v3d	drivers/berniw2/linalg.h	/^		v3d(double x, double y, double z) { this->x = x; this->y = y; this->z = z; }$/;"	f	class:v3d
v3d	drivers/berniw2/linalg.h	/^class v3d {$/;"	c
v3d	drivers/berniw3/linalg.h	/^		v3d() {}$/;"	f	class:v3d
v3d	drivers/berniw3/linalg.h	/^		v3d(const v3d &src) { this->x = src.x; this->y = src.y; this->z = src.z; }$/;"	f	class:v3d
v3d	drivers/berniw3/linalg.h	/^		v3d(double x, double y, double z) { this->x = x; this->y = y; this->z = z; }$/;"	f	class:v3d
v3d	drivers/berniw3/linalg.h	/^class v3d {$/;"	c
v3t	libs/math/v3_t.h	/^		v3t() {}$/;"	f	class:v3t
v3t	libs/math/v3_t.h	/^		v3t(const T s):x(s), y(s), z(s) {}$/;"	f	class:v3t
v3t	libs/math/v3_t.h	/^		v3t(const T x, const T y, const T z):x(x), y(y), z(z) {}$/;"	f	class:v3t
v3t	libs/math/v3_t.h	/^		v3t(const v3t<T> &src):x(src.x), y(src.y), z(src.z) {}$/;"	f	class:v3t
v3t	libs/math/v3_t.h	/^template<class T> class v3t {$/;"	c
v4t	libs/math/v4_t.h	/^		v4t() {}$/;"	f	class:v4t
v4t	libs/math/v4_t.h	/^		v4t(const T s):x(s), y(s), z(s), w(s) {}$/;"	f	class:v4t
v4t	libs/math/v4_t.h	/^		v4t(const T x, const T y, const T z, const T w):x(x), y(y), z(z), w(w) {}$/;"	f	class:v4t
v4t	libs/math/v4_t.h	/^		v4t(const v4t<T> &src):x(src.x), y(src.y), z(src.z), w(src.w) {}$/;"	f	class:v4t
v4t	libs/math/v4_t.h	/^template<class T> class v4t {$/;"	c
vQ	libs/learning/policy.h	/^	real** vQ; \/\/\/< variance estimate for Q$/;"	m	class:DiscretePolicy
vSpace	interfaces/track.h	/^    tdble	vSpace;$/;"	m	struct:__anon66
v_index	windows/include/plib/ssg.h	/^  sgVec3 *vertices  ; int num_vertices  ; unsigned short *v_index ;$/;"	m	class:ssgVTable
va	tools/accc/accc.h	/^  int      * va;$/;"	m	struct:ob
val	drivers/human/pref.h	/^    int		val;		\/* control index *\/$/;"	m	struct:__anon185
val	labview/socket.cpp	/^	int val;$/;"	m	union:semun	file:
val	libs/raceengineclient/racemain.h	/^	int val;$/;"	m	union:semun
val	libs/tgf/params.cpp	/^	char *val; \/**< Value of within option *\/$/;"	m	struct:within	file:
val	libs/tgf/tgf.h	/^    tdble	val[GF_MEAN_MAX_VAL+1];$/;"	m	struct:__anon99
val	libs/tgfclient/control.cpp	/^    int		val;$/;"	m	struct:__anon149	file:
val	modules/telemetry/telemetry.cpp	/^    tdble		*val;	\/* monitored value *\/$/;"	m	struct:Channel	file:
val	predictor/main.cpp	/^	int val;$/;"	m	union:semun	file:
val	topview/mat.hpp	/^      T val[M*N];   \/\/ column major$/;"	m	class:kmuvcl::math::mat
val	topview/topview.cpp	/^	int val;$/;"	m	union:semun	file:
val	topview/vec.hpp	/^      T val[N];$/;"	m	class:kmuvcl::math::vec
val	yunseok/tcp_client_2.cpp	/^	int val;$/;"	m	union:semun	file:
valid	libs/musicplayer/OggSoundStream.h	/^		bool			valid;$/;"	m	class:OggSoundStream
valid	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline bool valid(int s) {  $/;"	f
valnum	libs/tgf/params.cpp	/^	tdble valnum; \/**< Numeric value of the parameter *\/$/;"	m	struct:param	file:
value	interfaces/car.h	/^	tdble value;$/;"	m	struct:__anon82
value	libs/confscreens/controlconfig.cpp	/^	float value;$/;"	m	struct:__anon123	file:
value	libs/tgf/params.cpp	/^	char *value; \/**< String value of the parameter *\/$/;"	m	struct:param	file:
value	libs/txml/xml.h	/^    char		*value;$/;"	m	struct:xmlAttribute
value	libs/txml/xmlparse.c	/^  const XML_Char *value;$/;"	m	struct:__anon114	file:
value	modules/simu/simuv3/Options.h	/^    T* value; \/\/\/< Actual value of option$/;"	m	class:Option
value	windows/include/plib/sl.h	/^  float        *value          ;$/;"	m	class:slEnvelope
value	yunseok/tcp_client.cpp	/^	int* value[NUM_OF_DATA];$/;"	m	class:SharedMemory_Manager	file:
valueEnd	libs/txml/xmltok.h	/^  const char *valueEnd;$/;"	m	struct:__anon118
valuePtr	libs/txml/xmltok.h	/^  const char *valuePtr;$/;"	m	struct:__anon118
values	libs/racescreens/carsetupscreen.cpp	/^static std::vector<cGuiSetupValue*> values;$/;"	v	file:
varbuf	libs/raceengineclient/racemanmenu.cpp	/^char varbuf[VARBUFSIZE];$/;"	v
vb	windows/include/vorbis/vorbisfile.h	/^  vorbis_block     vb; \/* local working space for packet->PCM decode *\/$/;"	m	struct:OggVorbis_File
vc	windows/include/vorbis/vorbisfile.h	/^  vorbis_comment  *vc;$/;"	m	struct:OggVorbis_File
vcount	tools/texmapper/ssgSaveAC.cpp	/^static int vcount ;$/;"	v	file:
vd	windows/include/vorbis/codec.h	/^  vorbis_dsp_state *vd; \/* For read-only access of configuration *\/$/;"	m	struct:vorbis_block
vd	windows/include/vorbis/vorbisfile.h	/^  vorbis_dsp_state vd; \/* central working state for the packet->PCM decoder *\/$/;"	m	struct:OggVorbis_File
vec	libs/math/v2_t.h	/^			T vec[2];$/;"	m	union:v2t::__anon128
vec	libs/math/v3_t.h	/^			T vec[3];$/;"	m	union:v3t::__anon130
vec	libs/math/v4_t.h	/^			T vec[4];$/;"	m	union:v4t::__anon126
vec	topview/vec.hpp	/^      vec()$/;"	f	class:kmuvcl::math::vec
vec	topview/vec.hpp	/^      vec(const T elem)$/;"	f	class:kmuvcl::math::vec
vec	topview/vec.hpp	/^      vec(const T s, const T t) : vec()$/;"	f	class:kmuvcl::math::vec
vec	topview/vec.hpp	/^      vec(const T s, const T t, const T u) : vec()$/;"	f	class:kmuvcl::math::vec
vec	topview/vec.hpp	/^      vec(const T s, const T t, const T u, const T v) : vec()$/;"	f	class:kmuvcl::math::vec
vec	topview/vec.hpp	/^      vec(const vec<N, T>& other)$/;"	f	class:kmuvcl::math::vec
vec	topview/vec.hpp	/^    class vec$/;"	c	namespace:kmuvcl::math
vec2d	libs/math/linalg_t.h	/^typedef v2t<double> vec2d;$/;"	t
vec2d	topview/vec.hpp	/^    typedef vec<2, double>  vec2d;$/;"	t	namespace:kmuvcl::math
vec2f	libs/math/linalg_t.h	/^typedef v2t<float> vec2f;$/;"	t
vec2f	topview/vec.hpp	/^    typedef vec<2, float>   vec2f;$/;"	t	namespace:kmuvcl::math
vec2i	topview/vec.hpp	/^    typedef vec<2, int>		vec2i;$/;"	t	namespace:kmuvcl::math
vec3d	libs/math/linalg_t.h	/^typedef v3t<double> vec3d;$/;"	t
vec3d	topview/vec.hpp	/^    typedef vec<3, double>  vec3d;$/;"	t	namespace:kmuvcl::math
vec3f	libs/math/linalg_t.h	/^typedef v3t<float> vec3f;$/;"	t
vec3f	topview/vec.hpp	/^    typedef vec<3, float>   vec3f;$/;"	t	namespace:kmuvcl::math
vec3i	topview/vec.hpp	/^    typedef vec<3, int>		vec3i;$/;"	t	namespace:kmuvcl::math
vec4d	libs/math/linalg_t.h	/^typedef v4t<double> vec4d;$/;"	t
vec4d	topview/vec.hpp	/^    typedef vec<4, double>  vec4d;$/;"	t	namespace:kmuvcl::math
vec4f	libs/math/linalg_t.h	/^typedef v4t<float> vec4f;$/;"	t
vec4f	topview/vec.hpp	/^    typedef vec<4, float>   vec4f;$/;"	t	namespace:kmuvcl::math
vec4i	topview/vec.hpp	/^    typedef vec<4, int>		vec4i;$/;"	t	namespace:kmuvcl::math
vecProfiles	libs/tgf/tgf.h	/^  std::vector<ProfileInstance *> vecProfiles;$/;"	m	class:Profiler
vectEnd	modules/simu/simuv3/simu.cpp	/^t3Dd vectEnd[16];$/;"	v
vectStart	modules/simu/simuv3/simu.cpp	/^t3Dd vectStart[16];$/;"	v
vel	libs/tgf/tgf.h	/^    tPosd vel; \/**< velocity *\/$/;"	m	struct:__anon97
vel	windows/include/plib/sg.h	/^  sgVec3 vel   ;$/;"	m	class:sgParticle
vel	windows/include/plib/ssgaParticleSystem.h	/^  sgVec3 vel ;$/;"	m	class:ssgaParticle
vendor	windows/include/vorbis/codec.h	/^  char  *vendor;$/;"	m	struct:vorbis_comment
verb	tools/accc/ac3dload.cpp	/^	const char *verb;$/;"	m	struct:verbaction	file:
verbTab	tools/accc/ac3dload.cpp	/^verbaction_t verbTab[]= {$/;"	v
verbaction	tools/accc/ac3dload.cpp	/^typedef struct verbaction {$/;"	s	file:
verbaction_t	tools/accc/ac3dload.cpp	/^} verbaction_t;$/;"	t	typeref:struct:verbaction	file:
version	interfaces/track.h	/^    int		  version;	\/**< Version of the track type *\/$/;"	m	struct:__anon68
version	windows/include/vorbis/codec.h	/^  int version;$/;"	m	struct:vorbis_info
vert	tools/accc/ac3dload.cpp	/^int  vert;$/;"	v
vertex	interfaces/track.h	/^    t3Dd vertex[4];		\/**< Coord of the 4 corners of the segment.$/;"	m	struct:trackSeg
vertex	tools/accc/accc.h	/^  point_t  * vertex;$/;"	m	struct:ob
vertex	windows/include/plib/ssg.h	/^  sgVec3 vertex ;$/;"	m	struct:ssgInterleavedArrayElement
vertex_count	windows/include/plib/ssg.h	/^  int vertex_count ;$/;"	m	class:ssgStatistics
vertexarray	tools/accc/accc.h	/^  tcoord_t      * vertexarray;$/;"	m	struct:ob
vertexarray1	tools/accc/accc.h	/^  tcoord_t      * vertexarray1;$/;"	m	struct:ob
vertexarray2	tools/accc/accc.h	/^  tcoord_t      * vertexarray2;$/;"	m	struct:ob
vertexarray3	tools/accc/accc.h	/^  tcoord_t      * vertexarray3;$/;"	m	struct:ob
vertical_drag	modules/simu/simuv3/aero.h	/^    tdble   vertical_drag; \/* drag force along car z axis *\/$/;"	m	struct:__anon46
vertices	tools/trackgen/easymesh.cpp	/^	struct vtx	*vertices;$/;"	m	struct:group	typeref:struct:group::vtx	file:
vertices	windows/include/plib/ssg.h	/^  sgVec3 *vertices  ; int num_vertices  ; unsigned short *v_index ;$/;"	m	class:ssgVTable
vertices	windows/include/plib/ssg.h	/^  ssgVertexArray   *vertices  ;$/;"	m	class:ssgVtxTable
vertices	windows/include/plib/ssgaWaveSystem.h	/^  sgVec3 *vertices  ;$/;"	m	class:ssgaWaveSystem
vertlist	modules/graphic/ssggraph/grloadac.cpp	/^static ssgIndexArray    *vertlist=NULL;$/;"	v	file:
vexp	modules/graphic/ssggraph/grsmoke.h	/^  tdble vexp;$/;"	m	class:ssgVtxTableSmoke
vfov	windows/include/plib/sg.h	/^  SGDfloat vfov ;    \/* Vertical   Field of View  -or-  Orthographic Height *\/$/;"	m	class:sgdFrustum
vfov	windows/include/plib/sg.h	/^  SGfloat vfov ;    \/* Vertical   Field of View  -or-  Orthographic Height *\/$/;"	m	class:sgFrustum
vi	windows/include/vorbis/codec.h	/^  vorbis_info *vi;$/;"	m	struct:vorbis_dsp_state
vi	windows/include/vorbis/vorbisfile.h	/^  vorbis_info     *vi;$/;"	m	struct:OggVorbis_File
viewCam	modules/graphic/ssggraph/grcam.h	/^    cGrOrthoCamera *viewCam;$/;"	m	class:cGrCarCamMirror
viewDirection	topview/Camera.hpp	/^	kmuvcl::math::vec3f viewDirection() {$/;"	f	class:kmuvcl::Camera
viewRatio	modules/graphic/ssggraph/grscreen.h	/^		float viewRatio;$/;"	m	class:cGrScreen
viewable	modules/graphic/ssggraph/grcam.cpp	/^    int		viewable;$/;"	m	struct:__anon3	file:
viewmode	modules/graphic/ssggraph/grtrackmap.h	/^		int viewmode;$/;"	m	class:cGrTrackMap
viscomax	modules/simu/simuv3/differential.h	/^    tdble	viscomax;$/;"	m	struct:__anon32
viscosity	modules/simu/simuv2/differential.h	/^    tdble	viscosity;$/;"	m	struct:__anon10
viscosity	modules/simu/simuv3/differential.h	/^    tdble	viscosity;$/;"	m	struct:__anon32
visible	libs/tgfclient/gui.h	/^    int		visible;$/;"	m	struct:GfuiObject
visualAttr	interfaces/car.h	/^	tVisualAttributes visualAttr; \/**< Visual attributes *\/$/;"	m	struct:__anon76
vlist	tools/texmapper/ssgSaveAC.cpp	/^static sgVec3       *vlist ;$/;"	v	file:
voidp	windows/include/zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	windows/include/zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	windows/include/zconf.h	124;"	d
voidpc	windows/include/zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	windows/include/zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpc	windows/include/zconf.h	125;"	d
voidpf	windows/include/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	windows/include/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	windows/include/zconf.h	126;"	d
volume	modules/graphic/ssggraph/TorcsSound.h	/^	float volume; \/\/\/< Current volume$/;"	m	class:TorcsSound
volume_env	modules/graphic/ssggraph/TorcsSound.h	/^	slEnvelope* volume_env; \/\/\/< volume envelope$/;"	m	class:PlibTorcsSound
vorbis_block	windows/include/vorbis/codec.h	/^typedef struct vorbis_block{$/;"	s
vorbis_block	windows/include/vorbis/codec.h	/^} vorbis_block;$/;"	t	typeref:struct:vorbis_block
vorbis_comment	windows/include/vorbis/codec.h	/^typedef struct vorbis_comment{$/;"	s
vorbis_comment	windows/include/vorbis/codec.h	/^} vorbis_comment;$/;"	t	typeref:struct:vorbis_comment
vorbis_dsp_state	windows/include/vorbis/codec.h	/^typedef struct vorbis_dsp_state{$/;"	s
vorbis_dsp_state	windows/include/vorbis/codec.h	/^} vorbis_dsp_state;$/;"	t	typeref:struct:vorbis_dsp_state
vorbis_info	windows/include/vorbis/codec.h	/^typedef struct vorbis_info{$/;"	s
vorbis_info	windows/include/vorbis/codec.h	/^} vorbis_info;$/;"	t	typeref:struct:vorbis_info
vph	modules/graphic/ssggraph/grcam.h	/^    int		vpx, vpy, vpw, vph;	\/* viewport size *\/$/;"	m	class:cGrCarCamMirror
vpw	modules/graphic/ssggraph/grcam.h	/^    int		vpx, vpy, vpw, vph;	\/* viewport size *\/$/;"	m	class:cGrCarCamMirror
vpx	modules/graphic/ssggraph/grcam.h	/^    int		vpx, vpy, vpw, vph;	\/* viewport size *\/$/;"	m	class:cGrCarCamMirror
vpy	modules/graphic/ssggraph/grcam.h	/^    int		vpx, vpy, vpw, vph;	\/* viewport size *\/$/;"	m	class:cGrCarCamMirror
vsnprintf	libs/portability/portability.h	63;"	d
vt	modules/simu/simuv2/wheel.h	/^    tdble	vt;$/;"	m	struct:__anon11
vt	modules/simu/simuv3/wheel.h	/^    tdble	vt;$/;"	m	struct:__anon33
vt	windows/include/plib/ssgaLensFlare.h	/^  ssgVtxTable      *vt ;$/;"	m	class:ssgaLensFlare
vta	modules/graphic/ssggraph/grskidmarks.h	/^  ssgVtxTableShadow	**vta;$/;"	m	struct:__anon1
vtab	modules/graphic/ssggraph/grloadac.cpp	/^static sgVec3		*vtab  = NULL ;$/;"	v	file:
vtx	modules/graphic/ssggraph/grskidmarks.h	/^  ssgVertexArray	**vtx; \/* the strips *\/$/;"	m	struct:__anon1
vtx	tools/trackgen/easymesh.cpp	/^struct vtx {$/;"	s	file:
vtxidx	tools/trackgen/easymesh.cpp	/^	int		vtxidx;$/;"	m	struct:ref	file:
vvx	modules/graphic/ssggraph/grsmoke.h	/^  tdble vvx, vvy,vvz;$/;"	m	class:ssgVtxTableSmoke
vvy	modules/graphic/ssggraph/grsmoke.h	/^  tdble vvx, vvy,vvz;$/;"	m	class:ssgVtxTableSmoke
vvz	modules/graphic/ssggraph/grsmoke.h	/^  tdble vvx, vvy,vvz;$/;"	m	class:ssgVtxTableSmoke
w	drivers/olethros/Trajectory.h	/^    std::vector<float> w; \/\/\/< parameters$/;"	m	class:Trajectory
w	libs/learning/ANN.h	/^	real w; \/\/\/< weight (=\\f$1\/\\sigma\\f$)$/;"	m	struct:RBFConnection_
w	libs/learning/ANN.h	/^	real w; \/\/\/< weight$/;"	m	struct:Connection_
w	libs/math/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon126::__anon127
waitToTurn	drivers/berniw/berniw.cpp	/^static const tdble waitToTurn = 1.0; \/* how long should i wait till i try to turn backwards *\/$/;"	v	file:
waitToTurn	drivers/berniw2/berniw2.cpp	/^static const tdble waitToTurn = 1.0; \/* how long should i wait till i try to turn backwards *\/$/;"	v	file:
waitToTurn	drivers/berniw3/berniw3.cpp	/^static const tdble waitToTurn = 1.0; \/* how long should i wait till i try to turn backwards *\/$/;"	v	file:
waitToTurn	drivers/human/human.cpp	/^static const tdble waitToTurn = 1.0; \/* how long should i wait till i try to turn backwards *\/$/;"	v	file:
waitToTurn	drivers/inferno/inferno.cpp	/^static const tdble waitToTurn = 1.0; \/\/ How long should i wait till i try to turn backwards.$/;"	v	file:
waitToTurn	drivers/lliaw/lliaw.cpp	/^static const tdble waitToTurn = 1.0; \/\/ How long should i wait till i try to turn backwards.$/;"	v	file:
waitToTurn	drivers/tita/tita.cpp	/^static const tdble waitToTurn = 1.0; \/\/ How long should i wait till i try to turn backwards.$/;"	v	file:
wavehdr	windows/include/plib/sl.h	/^   WAVEHDR       *wavehdr[ BUFFER_COUNT ];  \/\/ for round robin ..$/;"	m	class:slDSP
weight	drivers/berniw/pathfinder.h	/^		tdble weight;	\/* weight function value for superposition *\/$/;"	m	class:PathSeg
weight	drivers/berniw2/pathfinder.h	/^		tdble weight;	\/* weight function value for superposition *\/$/;"	m	class:PathSeg
weight	drivers/berniw3/pathfinder.h	/^		tdble weight;	\/* weight function value for superposition *\/$/;"	m	class:PathSeg
weight	drivers/human/pathfinder.h	/^		tdble weight;	\/* weight function value for superposition *\/$/;"	m	class:PathSeg
weight0	modules/simu/simuv2/wheel.h	/^    tdble  	weight0;	\/* initial weight on this wheel *\/$/;"	m	struct:__anon11
weight0	modules/simu/simuv3/wheel.h	/^    tdble  	weight0;	\/* initial weight on this wheel *\/$/;"	m	struct:__anon33
weight_variable	predictor/predict.py	/^def weight_variable(shape) :$/;"	f
weight_variable	predictor/train.py	/^def weight_variable(shape) :$/;"	f
weight_variable	predictor/train2.py	/^def weight_variable(shape) :$/;"	f
wheel	interfaces/car.h	/^	tWheelSpec wheel[4]; \/**< Wheels specifications *\/$/;"	m	struct:__anon76
wheel	interfaces/car.h	/^	tWheelState wheel[4];$/;"	m	struct:__anon80
wheel	modules/graphic/ssggraph/CarSoundData.h	/^	WheelSoundData wheel[4];$/;"	m	class:CarSoundData
wheel	modules/simu/simuv2/carstruct.h	/^    tWheel		wheel[4];$/;"	m	struct:__anon23
wheel	modules/simu/simuv3/carstruct.h	/^    tWheel		wheel[4];$/;"	m	struct:__anon42
wheelDetailOptionList	libs/confscreens/graphconfig.cpp	/^static const char *wheelDetailOptionList[] = {$/;"	v	file:
wheelPos	modules/graphic/ssggraph/grcar.h	/^    ssgTransform	*wheelPos[4];$/;"	m	struct:__anon5
wheelRadius	interfaces/car.h	/^	tdble wheelRadius; \/**< Overall wheel radius *\/$/;"	m	struct:__anon74
wheelRot	modules/graphic/ssggraph/grcar.h	/^    ssgTransform	*wheelRot[4];$/;"	m	struct:__anon5
wheelTexture	modules/graphic/ssggraph/grcar.h	/^    ssgState		*wheelTexture;$/;"	m	struct:__anon5
wheelbase	drivers/berniw/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	drivers/berniw2/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	drivers/berniw3/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	drivers/human/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	drivers/inferno/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	drivers/lliaw/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	drivers/tita/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	modules/simu/simuv2/carstruct.h	/^    tdble	wheelbase;$/;"	m	struct:__anon23
wheelbase	modules/simu/simuv3/carstruct.h	/^    tdble	wheelbase;$/;"	m	struct:__anon42
wheelcamber	interfaces/car.h	/^	tCarPitSetupValue wheelcamber[4];$/;"	m	struct:__anon83
wheelrideheight	interfaces/car.h	/^	tCarPitSetupValue wheelrideheight[4];$/;"	m	struct:__anon83
wheelselector	modules/graphic/ssggraph/grcar.h	/^    ssgSelector		*wheelselector[4];$/;"	m	struct:__anon5
wheeltoe	interfaces/car.h	/^	tCarPitSetupValue wheeltoe[4];$/;"	m	struct:__anon83
wheeltrack	drivers/berniw/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	drivers/berniw2/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	drivers/berniw3/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	drivers/human/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	drivers/inferno/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	drivers/lliaw/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	drivers/tita/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	modules/simu/simuv2/carstruct.h	/^    tdble	wheeltrack;$/;"	m	struct:__anon23
wheeltrack	modules/simu/simuv3/carstruct.h	/^    tdble	wheeltrack;$/;"	m	struct:__anon42
wheight0	modules/simu/simuv2/axle.h	/^    tdble	wheight0;$/;"	m	struct:__anon12
wheight0	modules/simu/simuv3/axle.h	/^    tdble	wheight0;$/;"	m	struct:__anon34
white	libs/raceengineclient/racegl.cpp	/^static float white[4] = { 1.0, 1.0, 1.0, 1.0 };$/;"	v	file:
white	libs/racescreens/loadingscreen.cpp	/^float white[TEXTLINES][4];$/;"	v
widget	libs/tgfclient/gui.h	/^    int		widget;$/;"	m	struct:GfuiObject
width	drivers/berniw/trackdesc.h	/^		tdble width;			\/* width of the track segment*\/$/;"	m	class:TrackSegment
width	drivers/berniw2/trackdesc.h	/^		tdble width;			\/* width of the track segment*\/$/;"	m	class:TrackSegment
width	drivers/berniw3/trackdesc.h	/^		tdble width;			\/* width of the track segment*\/$/;"	m	class:TrackSegment
width	drivers/bt/cardata.h	/^		float width;		\/\/ the cars needed width on the track.$/;"	m	class:SingleCardata
width	drivers/damned/cardata.h	/^		float width;		\/\/ the cars needed width on the track.$/;"	m	class:SingleCardata
width	drivers/human/trackdesc.h	/^		tdble width;			\/* width of the track segment*\/$/;"	m	class:TrackSegment
width	drivers/inferno/pathfinder.h	/^	double width;			\/\/ Width of the car in track direction.$/;"	m	struct:__anon164
width	drivers/inferno/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment
width	drivers/inferno/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment2D
width	drivers/lliaw/pathfinder.h	/^	double width;			\/\/ Width of the car in track direction.$/;"	m	struct:__anon210
width	drivers/lliaw/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment
width	drivers/lliaw/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment2D
width	drivers/olethros/cardata.h	/^	float width;		\/\/ the cars needed width on the track.$/;"	m	class:olethros::SingleCardata
width	drivers/sparkle/opponent.h	/^		float width;		\/* the cars needed width on the track *\/$/;"	m	class:Opponent
width	drivers/tita/pathfinder.h	/^	double width;			\/\/ Width of the car in track direction.$/;"	m	struct:__anon171
width	drivers/tita/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment
width	drivers/tita/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment2D
width	interfaces/track.h	/^	tdble width;				\/**< Width of each pit stop *\/$/;"	m	struct:__anon65
width	interfaces/track.h	/^    tdble		width;	\/**< Barrier width *\/$/;"	m	struct:trackBarrier
width	interfaces/track.h	/^    tdble	  width;	\/**< main track width *\/$/;"	m	struct:__anon68
width	interfaces/track.h	/^    tdble	width;$/;"	m	struct:__anon66
width	interfaces/track.h	/^    tdble width;		\/**< Width of the segment (if constant width) *\/$/;"	m	struct:trackSeg
width	libs/tgfclient/gui.h	/^    float		width, height;$/;"	m	struct:__anon148
width	libs/tgfclient/gui.h	/^    int			width, height;$/;"	m	struct:__anon142
width	modules/simu/simuv3/wheel.h	/^    tdble   width;$/;"	m	struct:__anon33
width	tools/trackgen/elevation.cpp	/^static int	width, height;$/;"	v	file:
width	windows/include/plib/ssg.h	/^	unsigned int width ;$/;"	m	struct:ssgTextureInfo
width	windows/include/png.h	/^   png_uint_32 width;    \/* width of row *\/$/;"	m	struct:png_row_info_struct
width_l	drivers/olethros/TrackData.h	/^    float width_l;$/;"	m	class:TrackData
width_r	drivers/olethros/TrackData.h	/^    float width_r;$/;"	m	class:TrackData
windHeading	windows/include/plib/ssgaWaveSystem.h	/^  float windHeading ;$/;"	m	class:ssgaWaveSystem
windSpeed	windows/include/plib/ssgaWaveSystem.h	/^  float windSpeed   ;$/;"	m	class:ssgaWaveSystem
windowsDirGetList	windows/windowsspec.cpp	/^static tFList* windowsDirGetList(const char *dir)$/;"	f	file:
windowsDirGetListFiltered	windows/windowsspec.cpp	/^static tFList *windowsDirGetListFiltered(const char *dir, const char *suffix)$/;"	f	file:
windowsModFreeInfoList	windows/windowsspec.cpp	/^static int windowsModFreeInfoList(tModList **modlist)$/;"	f	file:
windowsModInfo	windows/windowsspec.cpp	/^static int windowsModInfo(unsigned int gfid, char *sopath, tModList **modlist)$/;"	f	file:
windowsModInfoDir	windows/windowsspec.cpp	/^static int windowsModInfoDir(unsigned int gfid, char *dir, int level, tModList **modlist)$/;"	f	file:
windowsModLoad	windows/windowsspec.cpp	/^static int windowsModLoad(unsigned int gfid, char *sopath, tModList **modlist)$/;"	f	file:
windowsModLoadDir	windows/windowsspec.cpp	/^static int windowsModLoadDir(unsigned int gfid, char *dir, tModList **modlist)$/;"	f	file:
windowsModUnloadList	windows/windowsspec.cpp	/^static int windowsModUnloadList(tModList **modlist)$/;"	f	file:
windowsTimeClock	windows/windowsspec.cpp	/^static double windowsTimeClock(void)$/;"	f	file:
wing	modules/simu/simuv2/carstruct.h	/^    tWing		wing[2];$/;"	m	struct:__anon23
wing	modules/simu/simuv3/carstruct.h	/^    tWing		wing[2];$/;"	m	struct:__anon42
wingangle	interfaces/car.h	/^	tCarPitSetupValue wingangle[2];$/;"	m	struct:__anon83
within	libs/tgf/params.cpp	/^struct within {$/;"	s	file:
withinList	libs/tgf/params.cpp	/^	struct withinHead withinList; \/**< Linked list containing the options for legal string values *\/$/;"	m	struct:param	typeref:struct:param::withinHead	file:
wpos	windows/include/plib/sl.h	/^  char           *wpos ;          \/\/ write position for buffer$/;"	m	class:slDSP
wr	libs/txml/xml.cpp	/^wr(int indent, const char *buf, FILE *out)$/;"	f	file:
wrapu	windows/include/plib/ssg.h	/^	int wrapu, wrapv, mipmap ;$/;"	m	class:ssgTexture
wrapv	windows/include/plib/ssg.h	/^	int wrapu, wrapv, mipmap ;$/;"	m	class:ssgTexture
writeKarma	drivers/bt/learn.cpp	/^void SegLearn::writeKarma()$/;"	f	class:SegLearn
writeKarma	drivers/damned/learn.cpp	/^void SegLearn::writeKarma()$/;"	f	class:SegLearn
writeTextureWithoutPath	tools/trackgen/objects.cpp	/^static const int writeTextureWithoutPath = TRUE;$/;"	v	file:
write_JPEG_file	misc/png2jpg/png2jpg.c	/^write_JPEG_file (FILE *outfile, unsigned char *image_buffer, int image_width, int image_height, int quality)$/;"	f
written	windows/include/plib/sl.h	/^   DWORD          written;       \/\/ counter-written samples$/;"	m	class:slDSP
wrrec	libs/txml/xml.cpp	/^wrrec(txmlElement *startElt, FILE *out)$/;"	f	file:
x	drivers/berniw/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
x	drivers/berniw/linalg.h	/^		float x;$/;"	m	class:v2d
x	drivers/berniw/pathfinder.h	/^	double x;$/;"	m	struct:__anon155
x	drivers/berniw2/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
x	drivers/berniw2/linalg.h	/^		float x;$/;"	m	class:v2d
x	drivers/berniw2/pathfinder.h	/^	double x;$/;"	m	struct:__anon199
x	drivers/berniw3/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
x	drivers/berniw3/linalg.h	/^		float x;$/;"	m	class:v2d
x	drivers/berniw3/pathfinder.h	/^	double x;$/;"	m	struct:__anon178
x	drivers/bt/spline.h	/^		float x;	\/\/ x coordinate.$/;"	m	class:SplinePoint
x	drivers/damned/spline.h	/^		float x;	\/\/ x coordinate.$/;"	m	class:SplinePoint
x	drivers/human/linalg.h	/^		float x;$/;"	m	class:v2d
x	drivers/human/pathfinder.h	/^	double x;$/;"	m	struct:__anon190
x	drivers/olethros/TrackData.h	/^    float x;$/;"	m	class:Point
x	drivers/olethros/geometry.h	/^	float* x;$/;"	m	class:Vector
x	drivers/olethros/linalg.h	/^		float x;$/;"	m	class:v2d
x	drivers/olethros/spline.h	/^		float x;	\/\/ x coordinate.$/;"	m	class:SplinePoint
x	drivers/sparkle/linalg.h	/^        float x;$/;"	m	class:v2d
x	drivers/sparkle/spline.h	/^		float x;	\/* x coordinate *\/$/;"	m	class:SplinePoint
x	libs/learning/ANN.h	/^	real* x; \/\/\/< inputs;$/;"	m	struct:Layer_
x	libs/learning/ANN.h	/^	real* x; \/\/\/< unit inputs$/;"	m	struct:ANN_
x	libs/math/v2_t.h	/^			struct { T x, y; };$/;"	m	struct:v2t::__anon128::__anon129
x	libs/math/v3_t.h	/^			struct { T x, y, z; };$/;"	m	struct:v3t::__anon130::__anon131
x	libs/math/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon126::__anon127
x	libs/tgf/tgf.h	/^    float	x;$/;"	m	struct:__anon93
x	libs/tgf/tgf.h	/^    int		x;$/;"	m	struct:__anon95
x	libs/tgf/tgf.h	/^    tdble	x;		\/**< x coordinate *\/$/;"	m	struct:__anon94
x	libs/tgf/tgf.h	/^    tdble	x;		\/**< x coordinate *\/$/;"	m	struct:__anon96
x	libs/tgfclient/gui.h	/^	int x, y;		\/* label position *\/$/;"	m	struct:__anon140
x	modules/simu/simuv2/susp.h	/^    tdble x; \/* suspension travel *\/$/;"	m	struct:Suspension
x	modules/simu/simuv3/susp.h	/^    tdble x; \/* suspension travel *\/$/;"	m	struct:Suspension
x	predictor/predict.py	/^x = tf.placeholder(tf.float32, shape=[1, 3, 30])$/;"	v
x	predictor/train.py	/^x = tf.placeholder(tf.float32, shape=[None, 3, 30])$/;"	v
x	predictor/train2.py	/^x = tf.placeholder(tf.float32, shape=[None, 3, 30])$/;"	v
x	tools/accc/accc.h	/^  double x;$/;"	m	struct:point
x	tools/nfs2ac/mainnfs2ac.cpp	/^    float x;$/;"	m	struct:__anon56	file:
x	tools/trackgen/easymesh.cpp	/^	double	x;$/;"	m	struct:vtx	file:
x	tools/trackgen/easymesh.h	/^    double x, y, z, F;$/;"	m	struct:nod
x	tools/trackgen/track.cpp	/^	tdble x, y, z;$/;"	m	struct:__anon60	file:
x0	modules/simu/simuv2/susp.h	/^    tdble x0;         \/* initial suspension travel *\/$/;"	m	struct:__anon22
x0	modules/simu/simuv3/susp.h	/^    tdble x0;         \/* initial suspension travel *\/$/;"	m	struct:__anon41
x1	drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon154
x1	drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon198
x1	drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon177
x1	drivers/human/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon189
x1	drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon163
x1	drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon209
x1	drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon170
x2	drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon154
x2	drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon198
x2	drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon177
x2	drivers/human/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon189
x2	drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon163
x2	drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon209
x2	drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon170
xMax	modules/simu/simuv2/susp.h	/^    tdble xMax;       \/* maxi suspension travel *\/$/;"	m	struct:__anon22
xMax	modules/simu/simuv3/susp.h	/^    tdble xMax;       \/* maxi suspension travel *\/$/;"	m	struct:__anon41
x_axis	topview/Camera.hpp	/^	kmuvcl::math::vec3f x_axis; \/\/ right$/;"	m	class:kmuvcl::Camera
x_data	predictor/predict.py	/^x_data = []$/;"	v
x_data	predictor/train.py	/^x_data = dataSet[:, 0:90]$/;"	v
x_data	predictor/train2.py	/^x_data = dataSet[:, 0:90]$/;"	v
x_data_	predictor/train.py	/^x_data_ = np.reshape(x_data, (-1, 3, 30))$/;"	v
x_data_	predictor/train2.py	/^x_data_ = np.reshape(x_data, (-1, 3, 30))$/;"	v
x_image	predictor/predict.py	/^x_image = tf.reshape(x, [-1,3,30,1])$/;"	v
x_image	predictor/train.py	/^x_image = tf.reshape(x, [-1,3,30,1])$/;"	v
x_image	predictor/train2.py	/^x_image = tf.reshape(x, [-1,3,30,1])$/;"	v
x_max	tools/accc/accc.h	/^  double x_max;$/;"	m	struct:ob
x_min	tools/accc/accc.h	/^  double x_min;$/;"	m	struct:ob
xflags	windows/include/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s
xform	tools/texmapper/maintexmapper.cpp	/^    sgCoord	xform;$/;"	m	struct:Face	file:
xin	tools/trackgen/easymesh.cpp	/^	double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
xmax	libs/tgfclient/gui.h	/^    int		xmax, ymax;$/;"	m	struct:GfuiObject
xmax	modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmax	modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmax	tools/trackgen/easymesh.cpp	/^double xmax, xmin, ymax, ymin;$/;"	v
xmin	libs/tgfclient/gui.h	/^    int		xmin, ymin;	\/* bounding box for focus *\/$/;"	m	struct:GfuiObject
xmin	modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmin	modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmin	tools/trackgen/easymesh.cpp	/^double xmax, xmin, ymax, ymin;$/;"	v
xmlAttribute	libs/txml/xml.h	/^typedef struct xmlAttribute {$/;"	s
xmlElement	libs/txml/xml.h	/^typedef struct xmlElement {$/;"	s
xmlEndElement	libs/tgf/params.cpp	/^static void xmlEndElement(void *userData, const XML_Char *name) {$/;"	f	file:
xmlExternalEntityRefHandler	libs/tgf/params.cpp	/^static int xmlExternalEntityRefHandler(XML_Parser mainparser,$/;"	f	file:
xmlFindEltAttr	libs/txml/xml.cpp	/^xmlFindEltAttr(txmlElement *startElt, char *name, char *attrname, char *attrvalue)$/;"	f
xmlFindNextElt	libs/txml/xml.cpp	/^xmlFindNextElt(txmlElement *startElt, char *name)$/;"	f
xmlGetAttr	libs/txml/xml.cpp	/^xmlGetAttr(txmlElement *curElt, char *attrname)$/;"	f
xmlGetOuputLine	libs/tgf/params.cpp	/^static int xmlGetOuputLine(struct parmHandle *parmHandle, char *buffer,$/;"	f	file:
xmlInsertElt	libs/txml/xml.cpp	/^xmlInsertElt(txmlElement *curElt, const char *name, const char **atts)$/;"	f
xmlNextElt	libs/txml/xml.cpp	/^xmlNextElt(txmlElement *startElt)$/;"	f
xmlReadFile	libs/txml/xml.cpp	/^xmlReadFile(const char *file)$/;"	f
xmlStartElement	libs/tgf/params.cpp	/^static void xmlStartElement(void *userData, const char *name,$/;"	f	file:
xmlSubElt	libs/txml/xml.cpp	/^xmlSubElt(txmlElement *startElt)$/;"	f
xmlWalkElt	libs/txml/xml.cpp	/^xmlWalkElt(txmlElement *startElt)$/;"	f
xmlWalkSubElt	libs/txml/xml.cpp	/^xmlWalkSubElt(txmlElement *startElt, txmlElement *topElt)$/;"	f
xmlWriteFile	libs/txml/xml.cpp	/^xmlWriteFile(const char *file, txmlElement *startElt, char *dtd)$/;"	f
xpos	modules/simu/simuv2/axle.h	/^    tdble xpos;$/;"	m	struct:__anon12
xpos	modules/simu/simuv3/axle.h	/^    tdble xpos;$/;"	m	struct:__anon34
xsize	modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short xsize ;$/;"	m	class:ssgSGIHeader
xv	tools/trackgen/easymesh.cpp	/^	double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
xyz	windows/include/plib/sg.h	/^  sgVec3 xyz ;$/;"	m	struct:sgCoord
xyz	windows/include/plib/sg.h	/^  sgdVec3 xyz ;$/;"	m	struct:sgdCoord
y	drivers/berniw/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
y	drivers/berniw/linalg.h	/^		float y;$/;"	m	class:v2d
y	drivers/berniw2/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
y	drivers/berniw2/linalg.h	/^		float y;$/;"	m	class:v2d
y	drivers/berniw3/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
y	drivers/berniw3/linalg.h	/^		float y;$/;"	m	class:v2d
y	drivers/bt/spline.h	/^		float y;	\/\/ y coordinate.$/;"	m	class:SplinePoint
y	drivers/damned/spline.h	/^		float y;	\/\/ y coordinate.$/;"	m	class:SplinePoint
y	drivers/human/linalg.h	/^		float y;$/;"	m	class:v2d
y	drivers/olethros/TrackData.h	/^    float y;$/;"	m	class:Point
y	drivers/olethros/linalg.h	/^		float y;$/;"	m	class:v2d
y	drivers/olethros/spline.h	/^		float y;	\/\/ y coordinate.$/;"	m	class:SplinePoint
y	drivers/sparkle/linalg.h	/^        float y;$/;"	m	class:v2d
y	drivers/sparkle/spline.h	/^		float y;	\/* y coordinate *\/$/;"	m	class:SplinePoint
y	libs/learning/ANN.h	/^	real* y; \/\/\/< outputs$/;"	m	struct:Layer_
y	libs/learning/ANN.h	/^	real* y; \/\/\/< unit activations$/;"	m	struct:ANN_
y	libs/math/v2_t.h	/^			struct { T x, y; };$/;"	m	struct:v2t::__anon128::__anon129
y	libs/math/v3_t.h	/^			struct { T x, y, z; };$/;"	m	struct:v3t::__anon130::__anon131
y	libs/math/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon126::__anon127
y	libs/tgf/tgf.h	/^    float	y;$/;"	m	struct:__anon93
y	libs/tgf/tgf.h	/^    int		y;$/;"	m	struct:__anon95
y	libs/tgf/tgf.h	/^    tdble	y;		\/**< y coordinate *\/$/;"	m	struct:__anon94
y	libs/tgf/tgf.h	/^    tdble	y;		\/**< y coordinate *\/$/;"	m	struct:__anon96
y	libs/tgfclient/gui.h	/^	int x, y;		\/* label position *\/$/;"	m	struct:__anon140
y	modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static Vector y[4];   \/\/ support points of A - B in world coordinates$/;"	v	file:
y	tools/accc/accc.h	/^  double y;$/;"	m	struct:point
y	tools/nfs2ac/mainnfs2ac.cpp	/^    float y;$/;"	m	struct:__anon56	file:
y	tools/trackgen/easymesh.cpp	/^	double	y;$/;"	m	struct:vtx	file:
y	tools/trackgen/easymesh.h	/^    double x, y, z, F;$/;"	m	struct:nod
y	tools/trackgen/track.cpp	/^	tdble x, y, z;$/;"	m	struct:__anon60	file:
y_	predictor/predict.py	/^y_ = tf.placeholder(tf.float32, shape=[1, LABEL_NUM])$/;"	v
y_	predictor/train.py	/^y_ = tf.placeholder(tf.float32, shape=[None, LABEL_NUM])$/;"	v
y_	predictor/train2.py	/^y_ = tf.placeholder(tf.float32, shape=[None, LABEL_NUM])$/;"	v
y_axis	topview/Camera.hpp	/^	kmuvcl::math::vec3f y_axis; \/\/ up$/;"	m	class:kmuvcl::Camera
y_conv	predictor/predict.py	/^y_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)$/;"	v
y_conv	predictor/train.py	/^y_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)$/;"	v
y_conv	predictor/train2.py	/^y_conv = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)$/;"	v
y_data	predictor/train.py	/^y_data = dataSet[:, [-1]]$/;"	v
y_data	predictor/train.py	/^y_data = y_data.astype(int)$/;"	v
y_data	predictor/train2.py	/^y_data = dataSet[:, -1]$/;"	v
y_data	predictor/train2.py	/^y_data = y_data.astype(int)$/;"	v
y_max	tools/accc/accc.h	/^  double y_max;$/;"	m	struct:ob
y_min	tools/accc/accc.h	/^  double y_min;$/;"	m	struct:ob
year	windows/include/png.h	/^   png_uint_16 year; \/* full year, as in, 1995 *\/$/;"	m	struct:png_time_struct
yin	tools/trackgen/easymesh.cpp	/^	double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
ymax	libs/tgfclient/gui.h	/^    int		xmax, ymax;$/;"	m	struct:GfuiObject
ymax	modules/telemetry/telemetry.cpp	/^    tdble	ymax;$/;"	m	struct:Tlm	file:
ymax	modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymax	modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymax	tools/trackgen/easymesh.cpp	/^double xmax, xmin, ymax, ymin;$/;"	v
ymin	libs/tgfclient/gui.h	/^    int		xmin, ymin;	\/* bounding box for focus *\/$/;"	m	struct:GfuiObject
ymin	modules/telemetry/telemetry.cpp	/^    tdble	ymin;$/;"	m	struct:Tlm	file:
ymin	modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymin	modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymin	tools/trackgen/easymesh.cpp	/^double xmax, xmin, ymax, ymin;$/;"	v
ysize	modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short ysize ;$/;"	m	class:ssgSGIHeader
yv	tools/trackgen/easymesh.cpp	/^	double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
z	drivers/berniw/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
z	drivers/berniw2/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
z	drivers/berniw3/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
z	drivers/olethros/TrackData.h	/^    float z;$/;"	m	class:Point
z	libs/learning/ANN.h	/^	real* z; \/\/\/< activation$/;"	m	struct:Layer_
z	libs/math/v3_t.h	/^			struct { T x, y, z; };$/;"	m	struct:v3t::__anon130::__anon131
z	libs/math/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon126::__anon127
z	libs/tgf/tgf.h	/^    float	z;$/;"	m	struct:__anon93
z	libs/tgf/tgf.h	/^    int		z;$/;"	m	struct:__anon95
z	libs/tgf/tgf.h	/^    tdble	z;		\/**< z coordinate *\/$/;"	m	struct:__anon94
z	libs/tgf/tgf.h	/^    tdble	z;		\/**< z coordinate *\/$/;"	m	struct:__anon96
z	tools/accc/accc.h	/^  double z;$/;"	m	struct:point
z	tools/nfs2ac/mainnfs2ac.cpp	/^    float z;$/;"	m	struct:__anon56	file:
z	tools/trackgen/easymesh.cpp	/^	double	z;$/;"	m	struct:vtx	file:
z	tools/trackgen/easymesh.h	/^    double x, y, z, F;$/;"	m	struct:nod
z	tools/trackgen/track.cpp	/^	tdble x, y, z;$/;"	m	struct:__anon60	file:
zError	windows/include/zconf.h	102;"	d
zOffset	modules/graphic/ssggraph/grcam.cpp	/^    float zOffset;$/;"	m	class:cGrCarCamRoadFly	file:
zRoad	modules/simu/simuv2/wheel.h	/^    tdble	zRoad;		\/* z of the road *\/$/;"	m	struct:__anon11
zRoad	modules/simu/simuv3/wheel.h	/^    tdble	zRoad;		\/* z of the road *\/$/;"	m	struct:__anon33
z_axis	topview/Camera.hpp	/^	kmuvcl::math::vec3f z_axis; \/\/ view direction$/;"	m	class:kmuvcl::Camera
z_max	tools/accc/accc.h	/^  double z_max;$/;"	m	struct:ob
z_min	tools/accc/accc.h	/^  double z_min;$/;"	m	struct:ob
z_off64_t	windows/include/zconf.h	398;"	d
z_off64_t	windows/include/zconf.h	400;"	d
z_off_t	windows/include/zconf.h	383;"	d
z_off_t	windows/include/zconf.h	394;"	d
z_stream	windows/include/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	windows/include/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	windows/include/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
zalloc	windows/include/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zcalloc	windows/include/zconf.h	103;"	d
zcfree	windows/include/zconf.h	104;"	d
zeroForce	windows/include/plib/sg.h	/^  void zeroForce   ()           { sgZeroVec3   ( force ) ; }$/;"	f	class:sgParticle
zeroes	modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat zeroes[3]; \/\/\/< just a vector of 0s$/;"	m	class:OpenalTorcsSound
zeta	libs/learning/ANN.h	/^	real zeta; \/\/\/< variance update smoothness$/;"	m	struct:ANN_
zeta	libs/learning/ANN.h	/^	real zeta; \/\/\/< variance update smoothness.$/;"	m	struct:Layer_
zeta	libs/learning/policy.h	/^	real zeta; \/\/\/< Confidence smoothing$/;"	m	class:DiscretePolicy
zfree	windows/include/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zlibCompileFlags	windows/include/zconf.h	105;"	d
zlibVersion	windows/include/zconf.h	106;"	d
zlib_version	windows/include/zlib.h	210;"	d
zmax	modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmax	modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmin	modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmin	modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zoom	topview/Camera.hpp	/^	float zoom = 100.0f;$/;"	m	class:kmuvcl::Camera
zsize	modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short zsize ;$/;"	m	class:ssgSGIHeader
~ANN_Policy	libs/learning/ann_policy.cpp	/^ANN_Policy::~ANN_Policy()$/;"	f	class:ANN_Policy
~AbstractCar	drivers/berniw/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	drivers/berniw2/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	drivers/berniw3/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	drivers/human/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	drivers/inferno/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	drivers/lliaw/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	drivers/tita/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractOption	modules/simu/simuv3/Options.h	/^    virtual ~AbstractOption()$/;"	f	class:AbstractOption
~AbstractStrategy	drivers/bt/strategy.h	/^		virtual ~AbstractStrategy() {}$/;"	f	class:AbstractStrategy
~AbstractStrategy	drivers/damned/strategy.h	/^		virtual ~AbstractStrategy() {}$/;"	f	class:AbstractStrategy
~AbstractStrategy	drivers/olethros/strategy.h	/^	virtual ~AbstractStrategy() {};$/;"	f	class:olethros::AbstractStrategy
~Cardata	drivers/bt/cardata.cpp	/^Cardata::~Cardata()$/;"	f	class:Cardata
~Cardata	drivers/damned/cardata.cpp	/^Cardata::~Cardata()$/;"	f	class:Cardata
~Cardata	drivers/olethros/cardata.cpp	/^Cardata::~Cardata()$/;"	f	class:olethros::Cardata
~Complex	modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^Complex::~Complex() {$/;"	f	class:Complex
~Convex	modules/simu/simuv2/SOLID-2.0/src/Convex.h	/^  virtual ~Convex() {}$/;"	f	class:Convex
~DiscreteDistribution	libs/learning/Distribution.cpp	/^DiscreteDistribution::~DiscreteDistribution() {$/;"	f	class:DiscreteDistribution
~DiscretePolicy	libs/learning/policy.cpp	/^DiscretePolicy::~DiscretePolicy()$/;"	f	class:DiscretePolicy
~Distribution	libs/learning/Distribution.h	/^	virtual ~Distribution() {}$/;"	f	class:Distribution
~Driver	drivers/bt/driver.cpp	/^Driver::~Driver()$/;"	f	class:Driver
~Driver	drivers/damned/driver.cpp	/^Driver::~Driver()$/;"	f	class:Driver
~Driver	drivers/olethros/driver.cpp	/^    Driver::~Driver()$/;"	f	class:olethros::Driver
~Driver	drivers/sparkle/driver.cpp	/^Driver::~Driver()$/;"	f	class:Driver
~Endpoint	modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  ~Endpoint() { if (objPtr) remove(); }$/;"	f	class:Endpoint
~ExponentialDistribution	libs/learning/Distribution.h	/^	virtual ~ExponentialDistribution() {}$/;"	f	class:ExponentialDistribution
~GfuiFontClass	libs/tgfclient/guifont.cpp	/^GfuiFontClass::~GfuiFontClass()$/;"	f	class:GfuiFontClass
~IndexArray	modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  ~IndexArray() { delete [] indices; }$/;"	f	class:IndexArray
~LaplacianDistribution	libs/learning/Distribution.h	/^	virtual ~LaplacianDistribution() {}$/;"	f	class:LaplacianDistribution
~ManagedStrategy	drivers/olethros/strategy.cpp	/^ManagedStrategy::~ManagedStrategy()$/;"	f	class:olethros::ManagedStrategy
~MultinomialGaussian	libs/learning/Distribution.h	/^	virtual ~MultinomialGaussian() {}$/;"	f	class:MultinomialGaussian
~MyCar	drivers/berniw/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	drivers/berniw2/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	drivers/berniw3/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	drivers/human/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	drivers/inferno/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	drivers/lliaw/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	drivers/tita/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~NormalDistribution	libs/learning/Distribution.h	/^	virtual ~NormalDistribution() { }$/;"	f	class:NormalDistribution
~OggSoundStream	libs/musicplayer/OggSoundStream.cpp	/^OggSoundStream::~OggSoundStream()$/;"	f	class:OggSoundStream
~OpenALMusicPlayer	libs/musicplayer/OpenALMusicPlayer.cpp	/^OpenALMusicPlayer::~OpenALMusicPlayer()$/;"	f	class:OpenALMusicPlayer
~OpenalSoundInterface	modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^OpenalSoundInterface::~OpenalSoundInterface()$/;"	f	class:OpenalSoundInterface
~OpenalTorcsSound	modules/graphic/ssggraph/TorcsSound.cpp	/^OpenalTorcsSound::~OpenalTorcsSound()$/;"	f	class:OpenalTorcsSound
~Opponents	drivers/bt/opponent.cpp	/^Opponents::~Opponents()$/;"	f	class:Opponents
~Opponents	drivers/damned/opponent.cpp	/^Opponents::~Opponents()$/;"	f	class:Opponents
~Opponents	drivers/olethros/opponent.cpp	/^Opponents::~Opponents()$/;"	f	class:olethros::Opponents
~Opponents	drivers/sparkle/opponent.cpp	/^Opponents::~Opponents()$/;"	f	class:Opponents
~Option	modules/simu/simuv3/Options.h	/^    virtual ~Option()$/;"	f	class:Option
~OptionList	modules/simu/simuv3/Options.h	/^    ~OptionList()$/;"	f	class:OptionList
~ParametricDistribution	libs/learning/Distribution.h	/^	virtual ~ParametricDistribution() {}$/;"	f	class:ParametricDistribution
~ParametricLine	drivers/olethros/geometry.cpp	/^ParametricLine::~ParametricLine()$/;"	f	class:ParametricLine
~ParametricSphere	drivers/olethros/geometry.cpp	/^ParametricSphere::~ParametricSphere()$/;"	f	class:ParametricSphere
~PathSeg	drivers/inferno/pathfinder.h	/^		~PathSeg() { delete [] ps; }$/;"	f	class:PathSeg
~PathSeg	drivers/lliaw/pathfinder.h	/^		~PathSeg() { delete [] ps; }$/;"	f	class:PathSeg
~PathSeg	drivers/tita/pathfinder.h	/^		~PathSeg() { delete [] ps; }$/;"	f	class:PathSeg
~PathSegOpt	drivers/inferno/pathfinder.h	/^		~PathSegOpt() { delete [] o; delete [] tr; delete [] length; delete [] disttomiddle; delete [] nextborderseg; }$/;"	f	class:PathSegOpt
~PathSegOpt	drivers/lliaw/pathfinder.h	/^		~PathSegOpt() { delete [] o; delete [] tr; delete [] length; delete [] disttomiddle; delete [] nextborderseg; }$/;"	f	class:PathSegOpt
~PathSegOpt	drivers/tita/pathfinder.h	/^		~PathSegOpt() { delete [] o; delete [] tr; delete [] length; delete [] disttomiddle; delete [] nextborderseg; }$/;"	f	class:PathSegOpt
~PathSegPit	drivers/inferno/pathfinder.h	/^		~PathSegPit() { delete [] l; }$/;"	f	class:PathSegPit
~PathSegPit	drivers/lliaw/pathfinder.h	/^		~PathSegPit() { delete [] l; }$/;"	f	class:PathSegPit
~PathSegPit	drivers/tita/pathfinder.h	/^		~PathSegPit() { delete [] l; }$/;"	f	class:PathSegPit
~Pathfinder	drivers/berniw/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	drivers/berniw2/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	drivers/berniw3/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	drivers/human/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	drivers/inferno/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	drivers/lliaw/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	drivers/tita/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pit	drivers/bt/pit.cpp	/^Pit::~Pit()$/;"	f	class:Pit
~Pit	drivers/damned/pit.cpp	/^Pit::~Pit()$/;"	f	class:Pit
~Pit	drivers/olethros/pit.cpp	/^Pit::~Pit()$/;"	f	class:olethros::Pit
~Pit	drivers/sparkle/pit.cpp	/^Pit::~Pit()$/;"	f	class:Pit
~PlibSoundInterface	modules/graphic/ssggraph/PlibSoundInterface.cpp	/^PlibSoundInterface::~PlibSoundInterface()$/;"	f	class:PlibSoundInterface
~PlibTorcsSound	modules/graphic/ssggraph/TorcsSound.cpp	/^PlibTorcsSound::~PlibTorcsSound()$/;"	f	class:PlibTorcsSound
~Polyhedron	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^Polyhedron::~Polyhedron() {$/;"	f	class:Polyhedron
~Polyhedron	modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^Polyhedron::~Polyhedron() {}$/;"	f	class:Polyhedron
~Polytope	modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  virtual ~Polytope() {}$/;"	f	class:Polytope
~Profiler	libs/tgf/profiler.cpp	/^Profiler::~Profiler() {$/;"	f	class:Profiler
~SegLearn	drivers/bt/learn.cpp	/^SegLearn::~SegLearn()$/;"	f	class:SegLearn
~SegLearn	drivers/damned/learn.cpp	/^SegLearn::~SegLearn()$/;"	f	class:SegLearn
~SegLearn	drivers/olethros/learn.cpp	/^SegLearn::~SegLearn()$/;"	f	class:SegLearn
~Shape	modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^  virtual ~Shape() {}$/;"	f	class:Shape
~SharedSourcePool	modules/graphic/ssggraph/SoundInterface.h	/^		virtual ~SharedSourcePool() {$/;"	f	class:SharedSourcePool
~SimpleStrategy	drivers/bt/strategy.cpp	/^SimpleStrategy::~SimpleStrategy()$/;"	f	class:SimpleStrategy
~SimpleStrategy	drivers/damned/strategy.cpp	/^SimpleStrategy::~SimpleStrategy()$/;"	f	class:SimpleStrategy
~SimpleStrategy	drivers/olethros/strategy.cpp	/^SimpleStrategy::~SimpleStrategy()$/;"	f	class:olethros::SimpleStrategy
~SimpleStrategy2	drivers/bt/strategy.cpp	/^SimpleStrategy2::~SimpleStrategy2()$/;"	f	class:SimpleStrategy2
~SimpleStrategy2	drivers/damned/strategy.cpp	/^SimpleStrategy2::~SimpleStrategy2()$/;"	f	class:SimpleStrategy2
~SoundInterface	modules/graphic/ssggraph/SoundInterface.h	/^	virtual ~SoundInterface() {}$/;"	f	class:SoundInterface
~SoundStream	libs/musicplayer/SoundStream.h	/^		virtual ~SoundStream() {};$/;"	f	class:SoundStream
~TorcsSound	modules/graphic/ssggraph/TorcsSound.h	/^	virtual ~TorcsSound() {}$/;"	f	class:TorcsSound
~TrackDesc	drivers/berniw/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	drivers/berniw2/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	drivers/berniw3/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	drivers/human/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	drivers/inferno/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	drivers/lliaw/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	drivers/tita/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackSegment	drivers/berniw/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	drivers/berniw2/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	drivers/berniw3/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	drivers/human/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	drivers/inferno/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	drivers/lliaw/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	drivers/tita/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment2D	drivers/inferno/trackdesc.cpp	/^TrackSegment2D::~TrackSegment2D()$/;"	f	class:TrackSegment2D
~TrackSegment2D	drivers/lliaw/trackdesc.cpp	/^TrackSegment2D::~TrackSegment2D()$/;"	f	class:TrackSegment2D
~TrackSegment2D	drivers/tita/trackdesc.cpp	/^TrackSegment2D::~TrackSegment2D()$/;"	f	class:TrackSegment2D
~UniformDistribution	libs/learning/Distribution.h	/^	virtual ~UniformDistribution() {}$/;"	f	class:UniformDistribution
~Vector	drivers/olethros/geometry.cpp	/^Vector::~Vector()$/;"	f	class:Vector
~cGrBoard	modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::~cGrBoard () {$/;"	f	class:cGrBoard
~cGrCamera	modules/graphic/ssggraph/grcam.h	/^    virtual ~cGrCamera() {};$/;"	f	class:cGrCamera
~cGrCarCamMirror	modules/graphic/ssggraph/grcam.cpp	/^cGrCarCamMirror::~cGrCarCamMirror ()$/;"	f	class:cGrCarCamMirror
~cGrCarCamRoadZoomTVD	modules/graphic/ssggraph/grcam.cpp	/^    ~cGrCarCamRoadZoomTVD() { free(schedView); }$/;"	f	class:cGrCarCamRoadZoomTVD
~cGrScreen	modules/graphic/ssggraph/grscreen.cpp	/^cGrScreen::~cGrScreen()$/;"	f	class:cGrScreen
~cGrTrackMap	modules/graphic/ssggraph/grtrackmap.cpp	/^cGrTrackMap::~cGrTrackMap()$/;"	f	class:cGrTrackMap
~grManagedState	modules/graphic/ssggraph/grtexture.h	/^		virtual ~grManagedState() {$/;"	f	class:grManagedState
~grMultiTexState	modules/graphic/ssggraph/grmultitexstate.h	/^		~grMultiTexState() {}$/;"	f	class:grMultiTexState
~grVtxTable	modules/graphic/ssggraph/grvtxtable.cpp	/^grVtxTable::~grVtxTable ()$/;"	f	class:grVtxTable
~jsJoystick	windows/include/plib/js.h	/^  ~jsJoystick () { close () ; }$/;"	f	class:jsJoystick
~slDSP	windows/include/plib/sl.h	/^ ~slDSP () { close () ; }$/;"	f	class:slDSP
~slEnvelope	windows/include/plib/sl.h	/^ ~slEnvelope ()$/;"	f	class:slEnvelope
~slSample	windows/include/plib/sl.h	/^ ~slSample ()$/;"	f	class:slSample
~ssgLoaderOptions	windows/include/plib/ssg.h	/^  virtual ~ssgLoaderOptions()$/;"	f	class:ssgLoaderOptions
~ssgSimpleList	windows/include/plib/ssg.h	/^  virtual ~ssgSimpleList (void)$/;"	f	class:ssgSimpleList
~ssgVtxTableCarlight	modules/graphic/ssggraph/grcarlight.cpp	/^ssgVtxTableCarlight::~ssgVtxTableCarlight ()$/;"	f	class:ssgVtxTableCarlight
~ssgVtxTableShadow	modules/graphic/ssggraph/grshadow.cpp	/^ssgVtxTableShadow::~ssgVtxTableShadow ()$/;"	f	class:ssgVtxTableShadow
~ssgVtxTableSmoke	modules/graphic/ssggraph/grsmoke.cpp	/^ssgVtxTableSmoke::~ssgVtxTableSmoke ()$/;"	f	class:ssgVtxTableSmoke
~ulDynamicLibrary	windows/include/plib/ul.h	/^    ~ulDynamicLibrary ()$/;"	f	class:ulDynamicLibrary
~ulDynamicLibrary	windows/include/plib/ul.h	/^  ~ulDynamicLibrary ()$/;"	f	class:ulDynamicLibrary
~ulLinkedList	windows/include/plib/ul.h	/^  ~ulLinkedList () { empty () ; }$/;"	f	class:ulLinkedList
